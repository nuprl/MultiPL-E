name: HumanEval_102_choose_num
language: racket
prompt: "#lang racket\n\n;; This function takes two positive numbers x and y and returns\
  \ the\n;; biggest even integer number that is in the range [x, y] inclusive. If\
  \ \n;; there's no such number, then the function should return -1.\n;; For example:\n\
  ;; choose_num(12, 15) = 14\n;; choose_num(13, 12) = -1\n(define (choose_num x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate choose_num))\n\
  \    (check-equal? (candidate 12 15) 14)\n    (check-equal? (candidate 13 12) -1)\n\
  \    (check-equal? (candidate 33 12354) 12354)\n    (check-equal? (candidate 5234\
  \ 5233) -1)\n    (check-equal? (candidate 6 29) 28)\n    (check-equal? (candidate\
  \ 27 10) -1)\n    (check-equal? (candidate 7 7) -1)\n    (check-equal? (candidate\
  \ 546 546) 546)\n))\n\n(test-humaneval)"
completions: ["  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n   \
    \     (else (max (+ x y) (- (+ x y) y)))))\n", "  (cond\n    [(< x y) -1]\n  \
    \  [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/ (+\
    \ x y) 2))\n              (floor (/ (+ y x) 2)))]))\n", "  (cond\n    [(= x y)\
    \ -1]\n    [(= (modulo x 2) 0) (modulo x 2)] \n    [else (cond \n            [(=\
    \ (modulo x 3) 0) (modulo x 3)]\n            [else (cond \n                  \
    \  [else (cond \n                            [(= (modulo x 5) 0) (modulo x 5)]\n\
    \                            [(= (modulo x 7) 0) (modulo x 7)]\n             \
    \               [(= (modulo x 9) 0) (modulo x 9)]\n                          \
    \  [(= (modulo x 11) 0) (modulo x 11)]\n                            [(= (modulo\
    \ x 13) 0) (modulo x 13)]\n                            [(= (modulo x 15) 0) (modulo\
    \ x 15)]\n                            [(= (modulo x 17) 0) (modulo x 17)]\n  \
    \                          [(= (modulo x 19) 0) (modulo x 19)]\n             \
    \               [(= (modulo x 21) 0) (modulo x 21)])])])]))\n", "  (cond ((or\
    \ (< x y) (- (- x y) y))\n         (if (= x y)\n             x\n             (-\
    \ x (- y y))))\n        (else -1)))\n", "  (cond ((= x y) -1)\n        ((= x 0)\
    \ 0)\n        ((= y 0) 0)\n        ((even? x) (if (= x y) x y))\n        (else\
    \ (choose_num (- x 1) (- y 1)))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x)\
    \ -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/ (+ x y) 2))\
    \ 0)]))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((= y 0) 0)\n\
    \        ((even? x) (max (choose_num (- x 2) y) x))\n        (else (max (choose_num\
    \ (- x 2) y) -1))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n       \
    \ (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(and (<= x y)\
    \ \n          (even? (- x y)))\n     (- x y)]\n    [(and (<= x y) \n         \
    \ (odd? (- x y)))\n     (- x y)]))\n", "  (cond ((or (< x y) (- (+ x y) y))\n\
    \         (if (even? (- x y))\n             (- x y)\n             (- y x)))\n\
    \        ((even? (- x y))\n         (- x y))\n        (else\n         (- y x))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n        (else\
    \ (max (min x y) x))))\n", "  (cond [(= x y) x]\n        [(even? x) (+ x 2)]\n\
    \        [else (- x 1)]))\n", "  (cond ((and (>= x y) \n               (= (mod\
    \ x 2) 0))\n         (/ x 2))\n        ((and (>= y x) \n               (= (mod\
    \ y 2) 0))\n         (/ y 2))\n        (else\n         (/ x y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y) (even? (+ x y)))\n\
    \        (else (choose_num (+ x y) y))))\n", "  (cond\n    [(and (<= x y) \n \
    \         (even? x))\n     (+ x 2)]\n    [(and (<= y x) \n          (even? y))\n\
    \     (- y 2)]\n    [else\n     (- x y)]))\n", "  (cond ((= x y) -1)\n       \
    \ ((even? x) (even? y))\n        (else (max (min x y) \n                   (choose_num\
    \ (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(and\
    \ (> x y) \n          (even? (- x y)))\n     (- x y)]\n    [(and (< x y) \n  \
    \        (even? (- x y)))\n     (- x y)]))\n", "  (cond ((and (< x y) \n     \
    \          (< y x))\n         x)\n        ((and (< x y) \n               (> y\
    \ x))\n         y)\n        (else\n         (if (even? (modulo x 2))\n       \
    \      (modulo x 2)\n             (modulo x 2)))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((>\
    \ x y) (-1))\n        ((= x y) (1))\n        ((even? x) (max (+ x y) x))\n   \
    \     (else (choose_num (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((= x\
    \ y) 0)\n        ((= x y) 1)\n        (else (max (floor (/ (- x y) 2)) (floor\
    \ (/ (- y x) 2))))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n      \
    \  (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(= x y) x]\n    [(= x 0) -1]\n    [(= y 0) -1]\n  \
    \  [(= y x) -1]\n    [else (max (+ x y) \n               (max (- x 1) \n     \
    \                (- y 1)))]))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n\
    \        ((even? y) y)\n        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (even? y)) \n        (else (max (min x y) \n\
    \                  (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond [(= x y) -1]\n        [(= (mod x 2) 0) (+ x y)]\n  \
    \      [else (choose_num (+ x 1) y)]))\n", "  (cond [(= x y) -1]\n        [(=\
    \ (mod x 2) 0) (+ x y)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (choose_num\
    \ (+ x 1) y) x))))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (* x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((or (< x y) (- (-\
    \ x y) y))\n         (if (< x y) (- (- x y) y) -1))\n        ((= x y) (if (< x\
    \ y) (- (- x y) y) -1))\n        (else (if (< x y) (- (- x y) y) -1))))\n", " \
    \ (cond\n    [(and (integer? x) (integer? y)) x]\n    [(and (integer? x) (not\
    \ (integer? y))) y]\n    [(and (not (integer? x)) (integer? y)) x]\n    [(and\
    \ (not (integer? x)) (not (integer? y))) -1]\n    [else (error \"choose_num: invalid\
    \ arguments\")]))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((=\
    \ y 0) 0)\n        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond [(= x y) -1]\n        [(even? x) (max (+ x y) -1)]\n    \
    \    [else (max (+ x y) -1)]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even?\
    \ y) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(and\
    \ (integer? x) (integer? y)) x]\n    [(and (integer? x) (not (integer? y))) y]\n\
    \    [(and (not (integer? x)) (integer? y)) x]\n    [(and (not (integer? x)) (not\
    \ (integer? y))) -1]\n    [else (error \"choose_num: invalid arguments\")]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (< x y)\n     \
    \        (- x y)\n             (- y x)))\n        (else (if (< x y)\n        \
    \         (- x y)\n                 (- y x)))))\n", "  (cond\n    [(< x y) -1]\n\
    \    [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/\
    \ x y)) (floor (/ y x)))]))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n \
    \       ((= y 0) 0)\n        ((even? x) (max (choose_num (- x 2) y) x))\n    \
    \    (else (max (choose_num (- x 2) y) -1))))\n", "  (cond ((> x y) -1)\n    \
    \    ((even? x) (even? y)) \n        (else (max (min x y) \n                 \
    \  (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (even? y))\n        (else (max (min x y) \n                  (choose_num\
    \ (+ x 1) (+ y 1))))))\n", "  (cond\n    [(and (integer? x) (integer? y)) x]\n\
    \    [(and (integer? x) (not (integer? y))) y]\n    [(and (not (integer? x)) (integer?\
    \ y)) x]\n    [(and (not (integer? x)) (not (integer? y))) -1]\n    [else (error\
    \ \"choose_num: invalid arguments\")]))\n", "  (cond\n    [(= x y) -1]\n    [(=\
    \ x 0) -1]\n    [(= y 0) -1]\n    [(even? (modulo x 2)) (modulo x 2)]\n    [else\
    \ (choose_num (- x 1) y)]))\n", "  (cond ((= x y) -1)\n        ((even? x) (if\
    \ (= x y) x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(< x y)\
    \ -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n      \
    \  [else (max (+ x y) 2)]))\n", "  (cond [(= x y) x]\n        [(= (mod x 2) 0)\
    \ (+ x y)]\n        [else (- x y)]))\n", "  (cond ((or (= x y) (- (+ x y) y))\n\
    \         (if (= x y)\n             (- x y)\n             x))\n        ((= (modulo\
    \ x 2) 0)\n         (if (= x y)\n             (- x y)\n             x))\n    \
    \    (else\n         (if (= x y)\n             (- x y)\n             x))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x\
    \ y) \n                   (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((= x\
    \ y) -1)\n        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x\
    \ y) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n        (else\
    \ (max (min x y) \n                  (choose_num (+ x 1) (+ y 1))))))\n", "  (cond\
    \ [(< x y) -1]\n        [(< y x) -1]\n        [(= x y) 0]\n        [(= y x) 0]\n\
    \        [else (max (floor (/ (+ x y) 2))\n                  (floor (/ (+ x y)\
    \ 2)))]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y)) \n        (else\
    \ (max (min x y) \n                   (choose_num (+ x 1) (+ y 1))))))\n", " \
    \ (cond [(< x y) -1]\n        [(= x y) x]\n        [(= y x) y]\n        [else\
    \ (max (min x y) \n                   (min (+ x y) y) \n                   (+\
    \ x y)))]))\n", "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max (+ x y) x))\n\
    \        (else (max (+ x y) -1))))\n", "  (cond ((= x y) -1)\n        ((even?\
    \ x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (if (even? y) x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(= x y) -1]\n    [(= x 0) -1]\n    [(= y 0) -1]\n    [(even? x) x]\n\
    \    [(even? y) y]\n    [else (max (choose_num (- x 2) (- y 2)) (choose_num (-\
    \ x 1) (- y 1)))]))\n", "  (cond [(= x y) x]\n        [(= x 0) -1]\n        [(=\
    \ y 0) -1]\n        [(even? x) (choose_num (- x 2) y)]\n        [(even? y) (choose_num\
    \ (- y 2) x)]\n        [else (max (choose_num (- x 2) y) (choose_num (- y 2) x))]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((= y 0)\
    \ 0)\n        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n",
  "  (cond ((and (>= x y) \n               (< x y)) \n         x)\n        ((and (>=\
    \ y x) \n               (< y x)) \n         y)\n        (else -1)))\n", "  (cond\n\
    \    [(= x y) x]\n    [(= x 0) x]\n    [(= y 0) y]\n    [(= y y) y]\n    [else\
    \ (max (+ x y) \n               (max (- x 1) \n                     (- y 1))\n\
    \               (max (- x 2) \n                     (- y 2)))]))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y) (if (< x y) x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x\
    \ y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond [(< x y) -1]\n   \
    \     [(< y x) -1]\n        [(< x y) 0]\n        [(< y x) 0]\n        [else (max\
    \ (+ x y) 0)]))\n", "  (cond ((and (integer? x) (integer? y)) \n         (if (even?\
    \ (modulo x y)) (modulo x y) -1))\n        (else -1)))\n", "  (cond ((or (< x\
    \ y) (- (+ x y) y))\n         (if (= x y)\n             (- x y)\n            \
    \ (- y x)))\n        (else (if (even? (- x y))\n                 (- x y)\n   \
    \              (- y x))))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n \
    \       ((= y 0) 0)\n        ((even? x) (if (even? y) x y))\n        (else (choose_num\
    \ (- x 1) (- y 1)))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\
    \ \n        (else (max (min x y) \n                   (choose_num (+ x 1) (+ y\
    \ 1))))))\n", "  (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n   \
    \          (- x)\n             (- y)))\n        ((= x y)\n         (- x))\n  \
    \      ((< x y)\n         (if (= (modulo x y) 0)\n             (- x)\n       \
    \      (- y)))\n        (else\n         (if (= (modulo x y) 0)\n             (-\
    \ y)\n             (- x))))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n\
    \        ((= y 0) 0)\n        ((even? x) (even? (+ x y)))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(< x y)\
    \ x]\n    [(< y x) y]\n    [else (max (floor (/ x y)) (floor (/ y x)))]))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x\
    \ y) \n                   (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((and\
    \ (integer? x) (integer? y)) x)\n        ((and (integer? x) (not (integer? y)))\n\
    \         (if (< x y) -1 x))\n        ((and (integer? y) (not (integer? x)))\n\
    \         (if (< y x) -1 y))\n        (else\n         (if (even? (modulo x 2))\
    \ (choose_num (+ x 1) y)\n               (choose_num (+ x 1) (+ y 1))))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n\
    \    [(< x y) 0]\n    [(< y x) 0]\n    [else (max (floor (/ (- x y) 2))\n    \
    \          (floor (/ (- y x) 2)))]))\n", "  (cond ((or (< x y) (- (- x y) y))\n\
    \         (if (< x y)\n             (- x y)\n             (- y x)))\n        ((=\
    \ x y)\n         (if (= x y)\n             (- x y)\n             (- y x)))\n \
    \       (else\n         (if (even? (modulo x 2))\n             (- x y)\n     \
    \        (- y x))))))\n", "  (cond ((< x y) -1)\n        ((= x y) 0)\n       \
    \ ((even? x) (max (+ x y) x))\n        (else (max (+ x y) -1))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (even? y))\n        (else (max (+ x y) (- (-\
    \ x y) y))))) \n", "  (cond ((< x y) -1)\n        ((even? x) (even? y) (if (<\
    \ x y) x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(or (<\
    \ x y) (- (- x y) y)) -1]\n    [(= x y) (* x x)]\n    [else (* x y)]))\n", " \
    \ (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(< x y) 0]\n    [(< y x) 0]\n\
    \    [else (max (+ x y) 0)]))\n", "  (cond\n    [(and (integer? x) (integer? y))\
    \ (if (even? (modulo x y)) (modulo x y) -1)]\n    [else -1]))\n", "  (cond ((=\
    \ x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond [(= x y) -1]\n        [(even? x) (* x y)]\n        [else (choose_num (+\
    \ x 1) y)]))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n      \
    \  (else (max (min x y) (x+y)))))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ (even? y))\n        (else (max (min x y) x))))\n", "  (cond ((or (< x y) (-\
    \ (- x y) y))\n         (if (< x y) x y))\n        ((= x y)\n         x)\n   \
    \     (else\n         (if (even? (modulo x 2))\n             (if (even? (modulo\
    \ y 2))\n                 (if (even? (modulo (+ x y) 2))\n                   \
    \  (if (even? (modulo (+ x y) y))\n                         (if (even? (modulo\
    \ (+ x y) y))\n                             (if (even? (modulo (+ x y) y))\n \
    \                                (if (even? (modulo (+ x y) y))\n            \
    \                         (if (even? (modulo (+ x y) y))\n                   \
    \                      (if (even? (modulo (+ x y) y))\n                      \
    \                       (if (even? (modulo (+ x y) y))\n                     \
    \                            (if (even? (modulo (+ x y) y))\n                \
    \                                     (if (even? (modulo (+ x y) y))\n       \
    \                                                  (if (even? (modulo (+ x y)\
    \ y))\n                                                             (if (even?\
    \ (modulo (+ x y) y))\n                                                      \
    \           (if (even? (modulo (+ x y) y))\n                                 \
    \                                    (if (even? (modulo (+ x y) y))\n        \
    \                                                                 (if (even? (modulo\
    \ (+ x y) y))\n                                                              \
    \              (if (even? (modulo (+ x y) y))\n                              \
    \                                                  (if (even? (modulo (+ x y)\
    \ y))\n                                                                      \
    \              (if (even? (modulo (+ x y) y))\n                              \
    \                                                          (if (even? (modulo\
    \ (+ x y) y))\n                                                              \
    \                              (if (even? (modulo (+ x y) y))\n              \
    \                                                                            \
    \      (if (even? (modulo (+ x y) y))\n                                      \
    \                                                              (if (even? (modulo\
    \ (+ x y) y))\n                                                              \
    \                                          (if (even? (modulo (+ x y) y))\n  \
    \                                                                            \
    \                              (if (even? (modulo (+ x y) y))\n              \
    \                                                                            \
    \                      (if (even? (modulo (+ x y) y))\n                      \
    \                                                                            \
    \                  (if (even? (modulo (+ x y) y))\n                          \
    \                                                                            \
    \                  (if (even? (modulo (+ x y) y))\n                          \
    \                                                                            \
    \                      (if (even? (modulo (+ x y) y))\n                      \
    \                                                                            \
    \                              (if (even? (modulo (+ x y) y))\n              \
    \                                                                            \
    \                                          (if (even? (modulo (+ x y) y))\n  \
    \                                                                            \
    \                                                          (if (even? (modulo\
    \ (+ x y) y))\n                                                              \
    \                                                                            \
    \  (if (even? (modulo (+ x y) y))\n                                          \
    \                                                                            \
    \                          (if (even? (modulo (+ x y) y))\n                  \
    \                                                                            \
    \                                                      (if (even? (modulo (+ x\
    \ y) y))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(< x y) 0]\n\
    \        [(< y x) 0]\n        [else (max (+ x y) 0)]))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((= x y) -1)\n        ((= x 0) -1)\n        ((= y 0) -1)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (max (+ x y) y))))\n", "  (cond ((< x y)\
    \ -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y)) \n        (else (max (+ x y) \n\
    \                   (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (even? y))\n        (else (max (min x y) x))))\n", "  (cond\
    \ [(= x y) x]\n        [(= (mod x 2) 0) (+ x y)]\n        [else (choose_num (+\
    \ x 2) y)]))\n", "  (cond ((and (>= x y) \n             (= (mod x 2) 0))\n   \
    \      (/ x 2))\n        ((and (>= y x) \n             (= (mod y 2) 0))\n    \
    \     (/ y 2))\n        ((and (>= x y) \n             (= (mod x 2) 0))\n     \
    \    (/ x 2))\n        ((and (>= y x) \n             (= (mod y 2) 0))\n      \
    \   (/ y 2))\n        (else\n         (/ x 2))))\n", "  (cond ((or (< x y) (-\
    \ (+ x y) y))\n         (if (< x y) -1 x))\n        ((< y x)\n         (if (<\
    \ x y) -1 x))\n        ((< x y)\n         (if (< y x) -1 y)))\n        ((< x y)\n\
    \         (if (< y x) -1 y)))\n        ((< y x)\n         (if (< x y) -1 y)))\n\
    \        ((< x y)\n         (if (< y x) -1 y))))\n", "  (cond [(= x y) x]\n  \
    \      [(even? x) (+ x 2)]\n        [else (- x 1)]))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond ((or (= x y) (- (+ x y) y))\n         (if (= x y) x y))\n        ((= x\
    \ y) x)\n        (else -1)))\n", "  (cond ((or (< x y) (- (- x y) y))\n      \
    \   (if (< x y)\n             (- x y)\n             y))\n        (else (if (<\
    \ x y)\n                 (- x y)\n                 -1))))\n", "  (cond ((= x y)\
    \ -1)\n        ((= x 0) 0)\n        ((= y 0) 0)\n        ((even? x) (max (+ x\
    \ y) x))\n        (else (max (+ x y) y))))\n", "  (cond ((or (< x y) (- (+ x y)\
    \ y))\n         (if (= x y)\n             x\n             (if (even? (- x y))\n\
    \                 (- x y)\n                 (- y x))))\n        (else -1)))\n",
  "  (cond ((> x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x\
    \ y) x))\n  )\n)\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n    \
    \    (else (choose_num (+ x 1) y))))\n", "  (cond [(= x y) x]\n        [(even?\
    \ x) (+ x 2)]\n        [else (choose_num (+ x 1) y)]))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond [(= x y) x]\n        [(even? x) (+ x 2)]\n        [else (- x 1)]))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(= x y) 0]\n\
    \    [(= y x) 0]\n    [else (max (floor (/ (- x y) 2))\n              (floor (/\
    \ (- y x) 2)))]))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max\
    \ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n    [(< x y) -1]\n\
    \    [(< y x) -1]\n    [(= x y) 0]\n    [(= y x) 0]\n    [else (max (floor (/\
    \ x y)) (floor (/ y x)))]))\n", "  (cond [(< x y) -1]\n        [(= x y) x]\n \
    \       [(= y x) y]\n        [(even? x) (max (+ x y) 2)]\n        [else (max (+\
    \ x y) 2)]))\n", "  (cond\n    [(= x y) x]\n    [(= x 0) -1]\n    [(= y 0) -1]\n\
    \    [(even? x) (max (+ x y) 2)]\n    [else (max (+ x y) 2)]))\n", "  (cond\n\
    \    [(> x y) -1]\n    [(= x y) x]\n    [(= y x) y]\n    [else (max (floor (/\
    \ (- x y) 2))\n              (floor (/ (- y x) 2)))]))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (even? y))\n        (else (max (min x y) (x+y)))))\n", " \
    \ (cond ((= x y) -1)\n        ((even? x) (even? y)) \n        (else (max (choose_num\
    \ (+ x 1) y) \n                   (choose_num (+ x 1) (- y 1))))))\n", "  (cond\
    \ ((< x y) -1)\n        ((even? x) (even? y) (if (even? (+ x y)) (+ x y) (- x\
    \ y)))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((< x y) -1)\n  \
    \      ((even? x) (max (x y) x))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(and (>= x y) \n          (even? (modulo x 2)))\n     (modulo x 2)]\n\
    \    [(and (>= y x) \n          (even? (modulo y 2)))\n     (modulo y 2)]\n  \
    \  [else\n     (- 1)]))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y)\
    \ (even? (+ x y)))\n        (else (choose_num (+ x y) y))))\n", "  (cond\n   \
    \ [(and (<= x y) \n          (even? x))\n     (- x)]\n    [(and (<= y x) \n  \
    \        (even? y))\n     (- y)]\n    [else\n     (- -1)]))\n", "  (cond ((< x\
    \ y) -1)\n        ((even? x) (even? y))\n        (else (max (min x y) x))))\n",
  "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+\
    \ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n      \
    \  (else (max (min x y) (x+y)))))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n    \
    \    ((even? x) x)\n        (else (choose_num (+ x 1) y))))\n", "  (cond\n   \
    \ [(and (> x y) \n           (even? x))\n     (even? x)]\n    [(and (> y x)\n\
    \           (even? y))\n     (even? y)]\n    [else\n     (if (even? x)\n     \
    \    (if (even? y)\n             (if (> x y)\n                 (- x y)\n     \
    \            (- y x))\n             (- x y))\n         (- y x))]))\n", "  (cond\
    \ ((and (>= x y) \n               (< x y))\n         x)\n        ((and (>= y x)\n\
    \               (< y x))\n         y)\n        (else\n         (if (even? (modulo\
    \ x y))\n             (modulo x y)\n             (- -1))))) \n", "  (cond\n  \
    \  ((= x y) -1)\n    ((= x 0) -1)\n    ((= y 0) -1)\n    ((= x y) 0)\n    ((=\
    \ y y) 0)\n    ((= (modulo x y) 2) 0)\n    ((= (modulo x y) 4) 0)\n    ((= (modulo\
    \ x y) 8) 0)\n    ((= (modulo x y) 16) 0)\n    ((= (modulo x y) 32) 0)\n    ((=\
    \ (modulo x y) 64) 0)\n    ((= (modulo x y) 128) 0)\n    ((= (modulo x y) 256)\
    \ 0)\n    ((= (modulo x y) 512) 0)\n    ((= (modulo x y) 1024) 0)\n    ((= (modulo\
    \ x y) 2048) 0)\n    ((= (modulo x y) 4096) 0)\n    ((= (modulo x y) 8192) 0)\n\
    \    ((= (modulo x y) 16384) 0)\n    ((= (modulo x y) 32768) 0)\n    ((= (modulo\
    \ x y) 65536) 0)\n    ((= (modulo x y) 131072) 0)\n    ((= (modulo x y) 262144)\
    \ 0)\n    ((= (modulo x y) 524288) 0)\n    ((= (modulo x y) 1048576) 0)\n    ((=\
    \ (modulo x y) 2097152) 0)\n    ((= (modulo x y) 4194304) 0)\n    ((= (modulo\
    \ x y) 8388608) 0)\n    ((= (modulo x y) 16777216) 0)\n    ((= (modulo x y) 33554432)\
    \ 0)\n    ((= (modulo x y) 67108864) 0)\n    ((= (modulo x y) 134217728) 0)\n\
    \    ((= (modulo x y) 268435456) 0)\n    ((= (modulo x y) 536870912) 0)\n    ((=\
    \ (modulo x y) 1073741824) 0)\n    ((= (modulo x y) 2147483648) 0)\n    ((= (modulo\
    \ x y) 4294967296) 0)\n    ((= (modulo x y) 8589934592) 0)\n    ((= (modulo x\
    \ y) 17179869184) 0)\n    ((= (modulo x y) 34359738368) 0)\n    ((= (modulo x\
    \ y) 68719476736) 0)\n    ((= (modulo x y) 137438953472) 0)\n    ((= (modulo x\
    \ y) 274877906944) ", "  (cond ((< x y) -1)\n        ((even? x) (+ x y))\n   \
    \     (else (choose_num (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even?\
    \ x) (max (x y) x))\n        (else (max (x y) -1))))\n", "  (cond\n    [(and (<=\
    \ x y) \n          (even? x))\n     (- x 2)]\n    [(and (<= y x) \n          (even?\
    \ y))\n     (- y 2)]\n    [else\n     (- x y)]))\n", "  (cond ((= x y) -1)\n \
    \       ((even? x) (even? y))\n        (else (max (min x y) (x+y)))))\n", "  (cond\
    \ ((> x y) (-1))\n        ((even? (modulo x 2)) (modulo x 2))\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((> x y) -1)\n        ((even? x) (even? y) (if (even?\
    \ x) x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (max (+ x y) -1))))\n", " \
    \ (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond\n    [(and (<= x y) \n          (even? (modulo x 2)))\n \
    \    (modulo x 2)]\n    [(and (<= y x) \n          (even? (modulo y 2)))\n   \
    \  (modulo y 2)]\n    [else\n     (- 1)]))\n", "  (cond ((< x y) -1)\n       \
    \ ((even? x) (even? y)) \n        (else (max (min x y) \n                   (choose_num\
    \ (+ x 1) (+ y 1))))))\n", "  (cond ((= x y) -1)\n        ((even? x) (even? y))\n\
    \        (else (max (min x y) \n                   (choose_num (+ x 1) (+ y 1))))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) (even? y)) \n        (else (max (+ x y)\
    \ \n                   (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((< x y)\
    \ -1)\n        ((even? x) x)\n        ((even? y) y)\n        (else (choose_num\
    \ (+ x 1) (+ y 1)))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n     \
    \   (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((= x 0)\
    \ 0)\n        ((= y 0) 0)\n        ((even? x) (max (+ x y) x))\n        (else\
    \ (max (+ x y) y))))\n", "  (cond ((< x y) -1)\n        ((= x y) x)\n        ((even?\
    \ x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond\n    [(< x y) -1]\n    [(< y x) -1]\n    [(< x y) 0]\n    [(< y x) 0]\n\
    \    [else (max (floor (/ x y)) (floor (/ y x)))]))\n", "  (cond ((or (< x y)\
    \ (- (+ x y) y))\n         (if (< x y) -1 x))\n        ((< y x)\n         (if\
    \ (< y x) -1 y))\n        (else\n         (if (even? (modulo x y))\n         \
    \    (if (even? (modulo y x))\n                 (if (even? (modulo x y))\n   \
    \                  (if (even? (modulo y x))\n                         (if (even?\
    \ (modulo x y))\n                             (if (even? (modulo y x))\n     \
    \                            (if (even? (modulo x y))\n                      \
    \               (if (even? (modulo y x))\n                                   \
    \      (if (even? (modulo x y))\n                                            \
    \ (if (even? (modulo y x))\n                                                 (if\
    \ (even? (modulo x y))\n                                                     (if\
    \ (even? (modulo y x))\n                                                     \
    \    (if (even? (modulo x y))\n                                              \
    \               (if (even? (modulo y x))\n                                   \
    \                              (if (even? (modulo x y))\n                    \
    \                                                 (if (even? (modulo y x))\n \
    \                                                                        (if (even?\
    \ (modulo x y))\n                                                            \
    \                (if (even? (modulo y x))\n                                  \
    \                                            (if (even? (modulo x y))\n      \
    \                                                                          (if\
    \ (even? (modulo y x))\n                                                     \
    \                             (if (even? (modulo x y))\n                     \
    \                                                               (if (even? (modulo\
    \ y x))\n                                                                    \
    \                  (if (even? (modulo x y))\n                                \
    \                                                        (if (even? (modulo y\
    \ x))\n                                                                      \
    \                    (if (even? (modulo x y))\n                              \
    \                                                              (if (even? (modulo\
    \ y x))\n                                                                    \
    \                          (if (even? (modulo x y))\n                        \
    \                                                                        (if (even?\
    \ (modulo y x))\n                                                            \
    \                                      (if (even? (modulo x y))\n            \
    \                                                                            \
    \            (if (even? (modulo y x))\n                                      \
    \                                                                (if (even? (modulo\
    \ x y))\n                                                                    \
    \                                    (if (even? (modulo y x))\n              \
    \                                                                            \
    \                (if (even? (modulo x y))\n                                  \
    \                                                                          (if\
    \ (even? (modulo y x))\n                                                     \
    \                                                         (if (even? (modulo x\
    \ y))\n                                                                      \
    \                                          (if (even? (modulo y x))\n        \
    \                                                                            \
    \                              (if (even? (modulo x y))\n                    \
    \                                                                            \
    \                    (if (even? (modulo y x))\n                              \
    \                                                                            \
    \            (if (even? (modulo x y))\n                                      \
    \                                                                            \
    \      (if (even? (modulo y x))\n                                            \
    \                                                                            \
    \  (if (even? (modulo x y))\n                                                \
    \                                                                            (if\
    \ (even? (modulo y x))\n                                                     \
    \                                                                         (if\
    \ (even? (modulo x y))\n                                                     \
    \                                                                           (if\
    \ (even? (modulo y x))\n                                                     \
    \                                                                            \
    \ (if (even? (modulo x y))\n", "  (cond ((< x y) -1)\n        ((even? x) (max\
    \ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) x)\n        ((even? y) y)\n        (else (choose_num (+ x 1)\
    \ (+ y 1)))))\n", "  (cond\n    [(or (= x y) (- (+ x y) y)) -1]\n    [(= x 0)\
    \ -1]\n    [(= y 0) -1]\n    [(= x y) 0]\n    [(= y y) 0]\n    [else (max (floor\
    \ (/ (- x y) 2))\n               (floor (/ (- y y) 2)))]))\n", "  (cond\n    [(and\
    \ (<= x y) \n          (even? (- x y)))\n      (- x y)]\n    [else\n      -1]))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n \
    \       ((= y 0) 0)\n        ((even? x) (max (+ x y) x))\n        (else (max (+\
    \ x y) y))))\n", "  (cond [(< x y) -1]\n        [(< y x) -1]\n        [(= (mod\
    \ x 2) 0) (* x 2)]))\n", "  (cond\n    [(and (<= x y) \n          (even? x))\n\
    \     (+ x 2)]\n    [(and (<= y x) \n          (even? y))\n     (- y 2)]\n   \
    \ [else\n     (- x y)]))\n", "  (cond [(= x y) x]\n        [(= x 0) -1]\n    \
    \    [(= y 0) -1]\n        [(= y x) -1]\n        [(even? (modulo x y)) (modulo\
    \ x y)]\n        [else (choose_num (- x 1) (- y 1))]))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond\
    \ ((= x y) -1)\n        ((even? x) (even? y))\n        (else (max (min x y) \n\
    \                   (choose_num (+ x 1) (+ y 1))))))\n", "  (cond ((< x y) -1)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((even? x) (+ x y))\n        (else\
    \ (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even?\
    \ y) (even? (+ x y)))\n        (else (choose_num (+ x y) y))))\n", "  (cond ((<\
    \ x y) -1)\n        ((even? x) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((> x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((> x y) -1)\n        ((even? x) x)\n        ((even? y) y)\n\
    \        (else (choose_num (+ x 1) (+ y 1)))))\n", "  (cond\n    [(< x y) -1]\n\
    \    [(< y x) -1]\n    [(< x y) 0]\n    [(< y x) 0]\n    [else (max (floor (/\
    \ x y)) (floor (/ y x)))]))\n", "  (cond ((= x y) -1)\n        ((even? x) (even?\
    \ y))\n        (else (max (choose_num (+ x 1) y) (- (+ x 1) y))))\n)\n", "  (cond\
    \ [(= x y) -1]\n        [(even? x) (+ x y)]\n        [else (choose_num (+ x 1)\
    \ y)]))\n", "  (cond ((= x y) -1)\n        ((even? x) x)\n        (else (choose_num\
    \ (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (even? y))\n   \
    \     (else (max (min x y) x))))\n", "  (cond ((= x y) -1)\n        ((even? x)\
    \ (+ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((= x y) -1)\n\
    \        ((even? x) (max (+ x y) x))\n        (else (choose_num (+ x y) y))))\n",
  "  (cond ((or (< x y) (- (- x y) y))\n         (if (= x y)\n             x\n   \
    \          (if (even? (- x y))\n                 (- x y)\n                 (-\
    \ x y))))\n        (else -1)))\n", "  (cond [(= x y) x]\n        [(even? x) (+\
    \ x y)]\n        [else -1]))\n", "  (cond ((= x y) -1)\n        ((even? x) (+\
    \ x y))\n        (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n \
    \       ((even? x) (even? y) (+ x y))\n        (else (choose_num (+ x 1) y))))\n",
  "  (cond ((< x y) -1)\n        ((even? x) x)\n        (else (choose_num (+ x 1)\
    \ y))))\n", "  (cond ((= x y) -1)\n        ((= x 0) 0)\n        ((= y 0) 0)\n\
    \        ((= x y) 0)\n        ((= (modulo x 2) 0) (+ x y))\n        (else (choose_num\
    \ (- x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even? x) (max x y))\n   \
    \     (else (choose_num (+ x 1) y))))\n", "  (cond ((< x y) -1)\n        ((even?\
    \ x) (even? y)) \n        (else (max (min x y) \n                   (choose_num\
    \ (+ x 1) (+ y 1))))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

#lang racket

;; From a given list of integers, generate a list of rolling maximum element found until given moment
;; in the sequence.
;; >>> rolling_max([1, 2, 3, 2, 3, 4, 2])
;; [1, 2, 3, 3, 3, 4, 4]
(define (rolling_max numbers)
  (define (iter result current)
    (if (null? current)
        result
        (iter (cons (max (car current) (car result)) result) (cdr current))))
  (iter (list (car numbers)) (cdr numbers)))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate rolling_max))
    (check-equal? (candidate '()) '())
    (check-equal? (candidate '(1 2 3 4)) '(1 2 3 4))
    (check-equal? (candidate '(4 3 2 1)) '(4 4 4 4))
    (check-equal? (candidate '(3 2 3 100 3)) '(3 3 3 100 100))
))

(test-humaneval)
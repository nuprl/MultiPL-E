#lang racket

;; Return maximum element in the list.
;; >>> max_element([1, 2, 3])
;; 3
;; >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])
;; 123
(define (max_element l)
  (define (max_element_rec l acc)
    (cond [(null? l) acc]
          [else (max_element_rec (cdr l) (max (car l) acc))]))
  (max_element_rec l -1))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate max_element))
    (check-equal? (candidate (list 1 2 3)) 3)
    (check-equal? (candidate (list 5 3 -5 2 -3 3 9 0 124 1 -10)) 124)
))

(test-humaneval)
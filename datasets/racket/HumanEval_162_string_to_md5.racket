#lang racket

;; Given a string 'text', return its md5 hash equivalent string.
;; If 'text' is an empty string, return None.
;; >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'
(define (string_to_md5 text)
  (if (string? text)
      (if (string-length text)
          (string-append "md5" (md5 text))
          #f)
      #f))

# The `string_to_md5` function is a simple wrapper around the `md5` function from the `racket/base` module.
# 
# The `md5` function takes a string and returns a string of hexadecimal digits representing the md5 hash of the input string.
# 
# The `string-length` function returns the length of a string.
# 
# The `string-append` function concatenates two strings.
# 
# The `string?` function returns `#t` if its input is a string, `#f` otherwise.
# 
# The `#f` value is a boolean value that represents `False` in Python.
# 
# The `#t` value is a boolean value that represents `True` in Python.
# 
# The `if` expression is used to select between two expressions depending on the value of a boolean expression.
# 
# The `if` expression evaluates the first expression if the boolean expression is `#t`, otherwise it evaluates the second expression.
# 
# The `define` form is used to define a function.
# 
# The `lambda` form is used to define a function.
# 
# The `lambda` form takes a list of arguments and an expression and creates an anonymous function that returns the value of the expression.
# 
# The `string-ref` function returns the character at the specified position in a string.
# 
# The `string` function converts its argument to a string.
# 
# The `string-split` function splits a string into a list of strings.
# 
# The `string-join` function joins a list of strings into a single string.
# 
# The `string-replace` function replaces all occurrences of a substring with another substring.
# 
# The `#t` value represents `True` in Python.
# 
# The `#f` value represents `False` in Python.
# 
# The `#t` and `

(require rackunit)

(define (test-humaneval) 

  (let (( candidate string_to_md5))
    (check-equal? (candidate "Hello world") "3e25960a79dbc69b674cd4ec67a72c62")
    (check-equal? (candidate "") #f)
    (check-equal? (candidate "A B C") "0ef78513b0cb8cef12743f5aeb35f888")
    (check-equal? (candidate "password") "5f4dcc3b5aa765d61d8327deb882cf99")
))

(test-humaneval)
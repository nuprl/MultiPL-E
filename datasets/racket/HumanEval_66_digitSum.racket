#lang racket

;; Task
;; Write a function that takes a string as input and returns the sum of the upper characters only'
;; ASCII codes.
;; Examples:
;; digitSum("") => 0
;; digitSum("abAB") => 131
;; digitSum("abcCd") => 67
;; digitSum("helloE") => 69
;; digitSum("woArBld") => 131
;; digitSum("aAaaaXa") => 153
(define (digitSum s)
  (cond [(string-empty? s) 0]
        [else (+ (digitSum (substring s 1)) (char->ascii (string-head s)))]))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate digitSum))
    (check-equal? (candidate "") 0)
    (check-equal? (candidate "abAB") 131)
    (check-equal? (candidate "abcCd") 67)
    (check-equal? (candidate "helloE") 69)
    (check-equal? (candidate "woArBld") 131)
    (check-equal? (candidate "aAaaaXa") 153)
    (check-equal? (candidate " How are yOu?") 151)
    (check-equal? (candidate "You arE Very Smart") 327)
))

(test-humaneval)
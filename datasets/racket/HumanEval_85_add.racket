#lang racket

;; Given a non-empty list of integers lst. add the even elements that are at odd indices..
;; Examples:
;; add([4, 2, 6, 7]) ==> 2
(define (add lst)
  (if (null? lst)
      0
      (if (even? (car lst))
          (+ (car lst) (add (cdr lst)))
          (add (cdr lst)))))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate add))
    (check-equal? (candidate (list 4 88)) 88)
    (check-equal? (candidate (list 4 5 6 7 2 122)) 122)
    (check-equal? (candidate (list 4 0 6 7)) 0)
    (check-equal? (candidate (list 4 4 6 8)) 12)
))

(test-humaneval)
#lang racket

;; Return true if a given number is prime, and false otherwise.
;; >>> is_prime(6)
;; False
;; >>> is_prime(101)
;; True
;; >>> is_prime(11)
;; True
;; >>> is_prime(13441)
;; True
;; >>> is_prime(61)
;; True
;; >>> is_prime(4)
;; False
;; >>> is_prime(1)
;; False
(define (is_prime n)
  (define (is_prime_rec n)
    (cond ((= n 1) #f)
          ((= n 2) #t)
          ((= n 3) #t)
          ((= n 4) #f)
          ((= n 5) #t)
          ((= n 6) #f)
          ((= n 7) #t)
          ((= n 8) #f)
          ((= n 9) #f)
          ((= n 10) #f)
          ((= n 11) #t)
          ((= n 12) #f)
          ((= n 13) #t)
          ((= n 14) #f)
          ((= n 15) #f)
          ((= n 16) #f)
          ((= n 17) #t)
          ((= n 18) #f)
          ((= n 19) #t)
          ((= n 20) #f)
          ((= n 21) #f)
          ((= n 22) #f)
          ((= n 23) #t)
          ((= n 24) #f)
          ((= n 25) #f)
          ((= n 26) #f)
          ((= n 27) #f)
          ((= n 28) #f)
          ((= n 29) #t)
          ((= n 30) #f)
          ((= n 31) #t)
          ((= n 32) #f)
          ((= n 33) #f)
          ((= n 34) #f)
          ((= n 35) #f)
          ((= n 36) #f)
          ((= n 37) #t)
          ((= n 38) #f)
          ((= n 39) #f)
          ((= n 40) #f)
          ((= n 41) #t)
          ((= n 42) #f)
          ((= n 43) #t)
          ((= n 44) #f)
          ((= n 45) #f)
          ((= n 46) #f)
          ((= n 47) #t)
          ((= n 48) #f)
          ((= n 49

(require rackunit)

(define (test-humaneval) 

  (let (( candidate is_prime))
    (check-equal? (candidate 6) #f)
    (check-equal? (candidate 101) #t)
    (check-equal? (candidate 11) #t)
    (check-equal? (candidate 13441) #t)
    (check-equal? (candidate 61) #t)
    (check-equal? (candidate 4) #f)
    (check-equal? (candidate 1) #f)
    (check-equal? (candidate 5) #t)
    (check-equal? (candidate 11) #t)
    (check-equal? (candidate 17) #t)
    (check-equal? (candidate 85) #f)
    (check-equal? (candidate 77) #f)
    (check-equal? (candidate 255379) #f)
))

(test-humaneval)
#lang racket

;; Return list of all prefixes from shortest to longest of the input string
;; >>> all_prefixes('abc')
;; ['a', 'ab', 'abc']
(define (all_prefixes string)
  (define (prefixes s)
    (if (empty? s)
        (list empty)
        (cons (list (substring s 0 1))
              (prefixes (substring s 1)))))
  (prefixes string))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate all_prefixes))
    (check-equal? (candidate "") (list ))
    (check-equal? (candidate "asdfgh") (list "a" "as" "asd" "asdf" "asdfg" "asdfgh"))
    (check-equal? (candidate "WWW") (list "W" "WW" "WWW"))
))

(test-humaneval)
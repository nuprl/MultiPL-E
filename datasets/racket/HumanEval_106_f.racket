#lang racket

;; Implement the function f that takes n as a parameter,
;; and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even
;; or the sum of numbers from 1 to i otherwise.
;; i starts from 1.
;; the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).
;; Example:
;; f(5) == [1, 2, 6, 24, 15]
(define (f n)
  (cond [(= n 0) (list 0)]
        [(even? n) (list (* n (f (- n 1)))]
        [(= n 1) (list 1)]
        [else (list (+ (f (- n 1)) n))]))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate f))
    (check-equal? (candidate 5) (list 1 2 6 24 15))
    (check-equal? (candidate 7) (list 1 2 6 24 15 720 28))
    (check-equal? (candidate 1) (list 1))
    (check-equal? (candidate 3) (list 1 2 6))
))

(test-humaneval)
#lang racket

;; Given list of integers, return list in strange order.
;; Strange sorting, is when you start with the minimum value,
;; then maximum of the remaining integers, then minimum and so on.
;; Examples:
;; strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]
;; strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]
;; strange_sort_list([]) == []
(define (strange_sort_list lst)
  (define (strange_sort_list_rec lst)
    (if (null? lst)
        '()
        (let ((min (min lst)))
          (cons min (strange_sort_list_rec (remove min lst))))))
  (reverse (strange_sort_list_rec lst)))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate strange_sort_list))
    (check-equal? (candidate (list 1 2 3 4)) (list 1 4 2 3))
    (check-equal? (candidate (list 5 6 7 8 9)) (list 5 9 6 8 7))
    (check-equal? (candidate (list 1 2 3 4 5)) (list 1 5 2 4 3))
    (check-equal? (candidate (list 5 6 7 8 9 1)) (list 1 9 5 8 6 7))
    (check-equal? (candidate (list 5 5 5 5)) (list 5 5 5 5))
    (check-equal? (candidate (list )) (list ))
    (check-equal? (candidate (list 1 2 3 4 5 6 7 8)) (list 1 8 2 7 3 6 4 5))
    (check-equal? (candidate (list 0 2 2 2 5 5 -5 -5)) (list -5 5 -5 5 0 2 2 2))
    (check-equal? (candidate (list 111111)) (list 111111))
))

(test-humaneval)
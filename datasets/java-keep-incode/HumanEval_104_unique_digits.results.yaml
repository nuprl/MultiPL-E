name: HumanEval_104_unique_digits
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bfjog1r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long temp = sum;\n        while (temp != 0) {\n            int digit = temp\
    \ % 10;\n            if (!result.contains(digit)) {\n                result.add(digit);\n\
    \            }\n            temp /= 10;\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ouvvtb5.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = temp % 10;\n                     \
    \        ^\n/tmp/tmp2ouvvtb5.java:27: error: incompatible types: int cannot be\
    \ converted to Long\n                result.add(digit);\n                    \
    \       ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(Long i : x){\n            if(i%2 == 0){\n                result.add(i);\n\
    \            }\n        }\n        \n        Collections.sort(result);\n     \
    \   \n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5dbf40u3.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoov772eq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10s62g36.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 != lastDigit) {\n\
    \                result.add(sum);\n                lastDigitSum = sum % 10;\n\
    \            }\n        }\n        if (lastDigitSum != 0) {\n            result.add(lastDigitSum);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzw7_k_2r.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = Long.MIN_VALUE;\n        for (long i : x) {\n            if (i % 10 == 0)\
    \ {\n                lastDigit = i;\n            } else {\n                if\
    \ (lastDigit % 10 == 0) {\n                    result.add(lastDigit);\n      \
    \          }\n                lastDigit = i;\n            }\n        }\n     \
    \   if (lastDigit % 10 != 0) {\n            result.add(lastDigit);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_lbcxws.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadxq46kp.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for (long i : x) {\n            temp = i;\n            while (temp\
    \ / 10 != 0) {\n                temp = temp / 10;\n            }\n           \
    \ if (temp % 2 == 0) {\n                result.add(i);\n            }\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_zcx1dh.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlm0_hh8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 != lastDigit) {\n\
    \                result.add(sum);\n                lastDigitSum = sum;\n     \
    \       }\n        }\n        if (lastDigitSum == sum) {\n            result.add(lastDigitSum);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpveomqizf.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long max = (long) Math.pow(10, x.length() - 1);\n        for (long i = sum;\
    \ i <= max; i++) {\n            boolean contains = false;\n            for (long\
    \ j : x) {\n                if (i % j == 0) {\n                    contains =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!contains) {\n                result.add(i);\n            }\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpors7fdym.java:23: error: cannot find symbol\n        long max =\
    \ (long) Math.pow(10, x.length() - 1);\n                                     \
    \   ^\n  symbol:   method length()\n  location: variable x of type ArrayList<Long>\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        ArrayList<Long> odd = new ArrayList<>();\n\
    \        for(Long i : x) {\n            if(i%2 == 0) {\n                even.add(i);\n\
    \            } else {\n                odd.add(i);\n            }\n        }\n\
    \        Collections.sort(even);\n        Collections.sort(odd);\n        for(Long\
    \ i : even) {\n            if(!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        for(Long i : odd) {\n            if(!result.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4f2ybsle.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp452iu7o.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x){\n            temp = i;\n            while(temp\
    \ != 0){\n                if(temp % 2 == 0){\n                    result.add(temp);\n\
    \                    break;\n                }\n                temp = temp /\
    \ 10;\n            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamc5ajnf.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        for (long i : x) {\n            digit = i;\n            if (isEven(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5_5_lkus.java:22: error: cannot find symbol\n            if (isEven(digit))\
    \ {\n                ^\n  symbol:   method isEven(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaitj_311.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x){\n            temp = i;\n            while(temp > 0){\n\
    \                temp = temp / 10;\n                if(temp % 2 == 0){\n     \
    \               result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8ztba3y.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = 0;\n        long lastNum = 0;\n        for (long num : x) {\n            if\
    \ (num % 2 == 0) {\n                lastNum = num;\n            } else {\n   \
    \             if (lastNum != 0) {\n                    result.add(lastNum);\n\
    \                }\n                lastNum = 0;\n            }\n        }\n \
    \       if (lastNum != 0) {\n            result.add(lastNum);\n        }\n   \
    \     return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowiy2ur_.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpziay5hii.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzsy955t.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount63\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbcgagl94.java:82: error: ';' expected\n        long lastDigitCount63\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpix92tcy4.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long evenSum = 0;\n        for (Long i : x) {\n            if (i % 2 == 0) {\n\
    \                evenSum += i;\n            }\n        }\n        long evenSum2\
    \ = sum - evenSum;\n        for (Long i : x) {\n            if (i % 2 == 0) {\n\
    \                if (evenSum2 % 2 == 0) {\n                    result.add(i);\n\
    \                }\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmskl7xtv.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqow72a3i.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitIndex = Collections.binarySearch(x,\
    \ lastDigit);\n        if (lastDigitIndex < 0) {\n            lastDigitIndex =\
    \ ~lastDigitIndex;\n        }\n        long lastDigitIndex = lastDigitIndex -\
    \ 1;\n        long lastDigit = x[lastDigitIndex];\n        while (lastDigit %\
    \ 2 == 0) {\n            sum -= lastDigit;\n            lastDigit = x[lastDigitIndex];\n\
    \            lastDigitIndex = lastDigitIndex - 1;\n            if (lastDigitIndex\
    \ < 0) {\n                lastDigitIndex = ~lastDigitIndex;\n            }\n \
    \           lastDigit = x[lastDigitIndex];\n        }\n        if (sum == 0) {\n\
    \            result.add(lastDigit);\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_3jl_l7v.java:28: error: variable lastDigitIndex is already defined\
    \ in method uniqueDigits(ArrayList<Long>)\n        long lastDigitIndex = lastDigitIndex\
    \ - 1;\n             ^\n/tmp/tmp_3jl_l7v.java:29: error: variable lastDigit is\
    \ already defined in method uniqueDigits(ArrayList<Long>)\n        long lastDigit\
    \ = x[lastDigitIndex];\n             ^\n/tmp/tmp_3jl_l7v.java:29: error: incompatible\
    \ types: possible lossy conversion from long to int\n        long lastDigit =\
    \ x[lastDigitIndex];\n                           ^\n/tmp/tmp_3jl_l7v.java:29:\
    \ error: array required, but ArrayList<Long> found\n        long lastDigit = x[lastDigitIndex];\n\
    \                          ^\n/tmp/tmp_3jl_l7v.java:32: error: incompatible types:\
    \ possible lossy conversion from long to int\n            lastDigit = x[lastDigitIndex];\n\
    \                          ^\n/tmp/tmp_3jl_l7v.java:32: error: array required,\
    \ but ArrayList<Long> found\n            lastDigit = x[lastDigitIndex];\n    \
    \                     ^\n/tmp/tmp_3jl_l7v.java:37: error: incompatible types:\
    \ possible lossy conversion from long to int\n            lastDigit = x[lastDigitIndex];\n\
    \                          ^\n/tmp/tmp_3jl_l7v.java:37: error: array required,\
    \ but ArrayList<Long> found\n            lastDigit = x[lastDigitIndex];\n    \
    \                     ^\n8 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long evenSum = 0;\n        for (Long i : x) {\n            if (i % 2 == 0) {\n\
    \                evenSum += i;\n            }\n        }\n        long evenSum2\
    \ = sum - evenSum;\n        long evenSum3 = sum - evenSum2;\n        long evenSum4\
    \ = sum - evenSum3;\n        long evenSum5 = sum - evenSum4;\n        long evenSum6\
    \ = sum - evenSum5;\n        long evenSum7 = sum - evenSum6;\n        long evenSum8\
    \ = sum - evenSum7;\n        long evenSum9 = sum - evenSum8;\n        long evenSum10\
    \ = sum - evenSum9;\n        long evenSum11 = sum - evenSum10;\n        long evenSum12\
    \ = sum - evenSum11;\n        long evenSum13 = sum - evenSum12;\n        long\
    \ evenSum14 = sum - evenSum13;\n        long evenSum15 = sum - evenSum14;\n  \
    \      long evenSum16 = sum - evenSum15;\n        long evenSum17 = sum - evenSum16;\n\
    \        long evenSum18 = sum - evenSum17;\n        long evenSum19 = sum - evenSum18;\n\
    \        long evenSum20 = sum - evenSum19;\n        long evenSum21 = sum - evenSum20;\n\
    \        long evenSum22 = sum - evenSum21;\n        long evenSum23 = sum - evenSum22;\n\
    \        long evenSum24 = sum - evenSum23;\n        long evenSum25 = sum - evenSum24;\n\
    \        long evenSum26 = sum - evenSum25;\n        long evenSum27 = sum - evenSum26;\n\
    \        long evenSum28 = sum - evenSum27;\n        long evenSum29 = sum - evenSum28;\n\
    \        long evenSum30 = sum - evenSum29;\n        long evenSum31 = sum - evenSum30;\n\
    \        long evenSum32 = sum - evenSum31;\n        long evenSum33 = sum - evenSum32;\n\
    \        long evenSum34 = sum - evenSum33;\n        long evenSum35 = sum - evenSum34;\n\
    \        long evenSum36 = sum - evenSum35;\n        long evenSum37 = sum - evenSum36;\n\
    \        long evenSum38 = sum - evenSum37;\n        long evenSum\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0emd6nhs.java:66: error: ';' expected\n        long evenSum\n \
    \                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitCount = 0;\n        for (long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 == lastDigit) {\n\
    \                lastDigitCount++;\n            } else {\n                if (lastDigitCount\
    \ > 0) {\n                    result.add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n                sum += lastDigit;\n               \
    \ lastDigit = sum % 10;\n            }\n        }\n        if (lastDigitCount\
    \ > 0) {\n            result.add(lastDigit);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s9n9xdd.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkvxwz6q.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(int i = 0; i < x.size(); i++) {\n            long digit = x.get(i);\n \
    \           \n            while(digit > 0) {\n                digit = digit /\
    \ 10;\n            }\n            \n            if(result.contains(digit)) {\n\
    \                result.add(digit);\n            }\n        }\n        \n    \
    \    return result;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcu3lq4cb.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tiwee7v.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqdiuud0y.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (Long i : x) {\n            int\
    \ count = 1;\n            while (map.containsKey(i)) {\n                map.put(i,\
    \ map.get(i) + 1);\n                i = i / 10;\n                count++;\n  \
    \          }\n            map.put(i, count);\n        }\n        for (Map.Entry<Long,\
    \ Integer> entry : map.entrySet()) {\n            if (entry.getValue() == 0) {\n\
    \                result.add(entry.getKey());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixhc4kld.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long maxSum = sum;\n        long maxSumIndex = 0;\n        for (int i = 0; i\
    \ < x.size(); i++) {\n            long curSum = sum - x.get(i);\n            if\
    \ (curSum > maxSum) {\n                maxSum = curSum;\n                maxSumIndex\
    \ = i;\n            }\n        }\n        if (maxSum == 0) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evenDigits = new ArrayList<>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            long curSum = sum -\
    \ x.get(maxSumIndex) + x.get(i);\n            if (curSum % 2 == 0) {\n       \
    \         evenDigits.add(x.get(i));\n            }\n        }\n        evenDigits.sort(Comparator.naturalOrder());\n\
    \        result.addAll(evenDigits);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp82qwo988.java:37: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long curSum = sum - x.get(maxSumIndex) + x.get(i);\n\
    \                                      ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwugxnxdt.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            String s = String.valueOf(i);\n            for(char c\
    \ : s.toCharArray()) {\n                if(Character.isDigit(c)) {\n         \
    \           if(Integer.parseInt(String.valueOf(c)) % 2 == 0) {\n             \
    \           result.add(i);\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp69me0y7u.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long max = (long) Math.pow(10, x.length() - 1);\n        long min = sum / max;\n\
    \        long sum2 = 0;\n        for (Long i : x) {\n            sum2 += i;\n\
    \        }\n        long max2 = (long)Math.pow(10, x.length() - 1);\n        long\
    \ min2 = sum2 / max2;\n        long sum3 = 0;\n        for (Long i : x) {\n  \
    \          sum3 += i;\n        }\n        long max3 = (long)Math.pow(10, x.length()\
    \ - 1);\n        long min3 = sum3 / max3;\n        long sum4 = 0;\n        for\
    \ (Long i : x) {\n            sum4 += i;\n        }\n        long max4 = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min4 = sum4 / max4;\n        long sum5 = 0;\n\
    \        for (Long i : x) {\n            sum5 += i;\n        }\n        long max5\
    \ = (long)Math.pow(10, x.length() - 1);\n        long min5 = sum5 / max5;\n  \
    \      long sum6 = 0;\n        for (Long i : x) {\n            sum6 += i;\n  \
    \      }\n        long max6 = (long)Math.pow(10, x.length() - 1);\n        long\
    \ min6 = sum6 / max6;\n        long sum7 = 0;\n        for (Long i : x) {\n  \
    \          sum7 += i;\n        }\n        long max7 = (long)Math.pow(10, x.length()\
    \ - 1);\n        long min7 = sum7 / max7;\n        long sum8 = 0;\n        for\
    \ (Long i : x) {\n            sum8 += i;\n        }\n        long max8 = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min8 = sum8 / max8;\n        long sum9 = 0;\n\
    \        for (Long i : x) {\n            sum9 += i;\n        }\n        long max9\
    \ = (long)Math.pow(10, x.length() - 1);\n        long min9 = sum9 / max9;\n  \
    \      long sum10 = 0;\n        for (Long i : x) {\n            sum10 += i;\n\
    \        }\n        long max10 = (long)Math.pow(10, x.length() - 1);\n       \
    \ long min10 = sum10 / max10;\n        long sum11 = 0;\n        for (Long i :\
    \ x) {\n            sum11 += i;\n        }\n        long max11 = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min11 = sum11 / max11;\n        long sum12 =\
    \ 0;\n        for (Long i : x) {\n            sum12 += i;\n        }\n       \
    \ long max12 = (long)Math.pow(10, \n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg6qpo35l.java:90: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            lastDigitSum += i % 10;\n     \
    \       if (lastDigitSum == lastDigit) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbhoecp6.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitCount = 0;\n        for (Long\
    \ i : x) {\n            if (i % 10 == lastDigit) {\n                lastDigitCount++;\n\
    \            } else {\n                if (lastDigitCount > 0) {\n           \
    \         result.add(lastDigit);\n                    lastDigitCount = 0;\n  \
    \              }\n                lastDigit = i % 10;\n            }\n       \
    \ }\n        if (lastDigitCount > 0) {\n            result.add(lastDigit);\n \
    \       }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8d6gcoxm.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l3lz66p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for(Long i : x) {\n            Long digit\
    \ = i % 10;\n            Long count = map.get(digit);\n            map.put(digit,\
    \ count == null ? i : count + i);\n        }\n        for(Long i : map.values())\
    \ {\n            if(!result.contains(i)) {\n                result.add(i);\n \
    \           }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6n1rqoti.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpnv0i2n.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            if(i%2 == 0){\n                result.add(i);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60wxdm39.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            if(i%2 == 0){\n                result.add(i);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lsamyy6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfizt37m1.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x){\n            if(i%2 == 0){\n\
    \                if(!set.contains(i)){\n                    result.add(i);\n \
    \                   set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oxbircs.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        for (long i : x) {\n            digit = i % 10;\n            if\
    \ (!result.contains(digit)) {\n                result.add(digit);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcihymus0.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqg8ybnf.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7bid_ru.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (Long i : x) {\n            Integer\
    \ count = map.get(i);\n            if (count == null) {\n                map.put(i,\
    \ 1);\n            } else {\n                map.put(i, count + 1);\n        \
    \    }\n        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    Collections.sort(result);\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_91a7ncl.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6ackyti.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoyad1p6y.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp > 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqu57ufvv.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long temp = 0;\n        for (long i : x) {\n            temp += i;\n       \
    \     if (temp % 2 == 0) {\n                result.add(i);\n            }\n  \
    \      }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemgatvb9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp > 0)\
    \ {\n                temp = temp / 10;\n            }\n            if(i % 2 ==\
    \ 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52bivbuw.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(!result.contains(temp))\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xwg3ny3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(i%10 != 0) {\n                    set.add(i);\n      \
    \          }\n            }\n        }\n        for(Long i : set) {\n        \
    \    if(!result.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4v_v3h1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqttd83i3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6x80ig1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(!result.contains(temp))\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6l8s0h7t.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1nqr5oo9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for (long i : x) {\n            temp = i;\n            while (temp\
    \ / 10 != 0) {\n                temp = temp / 10;\n            }\n           \
    \ if (temp % 2 == 0) {\n                result.add(i);\n            }\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnw66uxm3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for(long i : x) {\n            if(i%2 ==\
    \ 0) {\n                temp.add(i);\n            }\n        }\n        Collections.sort(temp);\n\
    \        for(long i : temp) {\n            if(!result.contains(i)) {\n       \
    \         result.add(i);\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39_5nyi0.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x) {\n            temp = i;\n            while(temp\
    \ > 0) {\n                temp = temp / 10;\n                if(temp % 2 == 0)\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7741dw8.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long maxSum = sum;\n        long maxSumIndex = 0;\n        long maxSumValue\
    \ = -1;\n        long maxSumDigit = 0;\n        for (long i : x) {\n         \
    \   long digit = i % 10;\n            if (digit > maxSumDigit) {\n           \
    \     maxSumDigit = digit;\n                maxSumIndex = i;\n               \
    \ maxSumValue = i;\n            }\n            long sumDigit = sum % 10;\n   \
    \         if (sumDigit > maxSumDigit) {\n                maxSumDigit = sumDigit;\n\
    \                maxSumIndex = sum;\n                maxSumValue = sum;\n    \
    \        }\n            sum += i;\n        }\n        result.add(maxSumIndex);\n\
    \        result.add(maxSumValue);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpar06feu3.java:48)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_z5yxfe.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (Long i : x) {\n            Integer\
    \ count = map.get(i);\n            if (count == null) {\n                map.put(i,\
    \ 1);\n            } else {\n                map.put(i, count + 1);\n        \
    \    }\n        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    Collections.sort(result);\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1i5dy4x7.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for(long i : x) {\n            sum += i;\n        }\n        for(long\
    \ i : x) {\n            if(!(i%10)) {\n                result.add(i);\n      \
    \      }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphl8m8axw.java:24: error: bad operand type long for unary operator\
    \ '!'\n            if(!(i%10)) {\n               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            long digit = sum % 10;\n      \
    \      if (digit != lastDigit) {\n                result.add(lastDigitSum);\n\
    \                lastDigitSum = lastDigit;\n            }\n            lastDigit\
    \ = digit;\n        }\n        result.add(lastDigitSum);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlnizbl3.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (long\
    \ i : x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                result.add(lastDigitSum);\n                lastDigitSum =\
    \ i;\n                lastDigit = digit;\n            } else {\n             \
    \   lastDigitSum += i;\n            }\n        }\n        result.add(lastDigitSum);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfju6ivur.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long maxSum = sum;\n        for (Long i : x) {\n            long digit = i %\
    \ 10;\n            if (digit % 2 == 0) {\n                maxSum -= i;\n     \
    \       } else {\n                result.add(i);\n            }\n        }\n \
    \       if (maxSum == 0) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenDigits = new ArrayList<>();\n        for (Long i : x) {\n            long\
    \ digit = i % 10;\n            if (digit % 2 == 0) {\n                evenDigits.add(i);\n\
    \            }\n        }\n        evenDigits.sort(Comparator.comparingLong(Long::longValue));\n\
    \        result.addAll(evenDigits);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplxjhszom.java:48)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvotx704.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            if(i%10==0){\n                result.add(i);\n        \
    \    }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9imup12x.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssq2xy98.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                if(temp % 2 == 0) {\n                    result.add(temp);\n\
    \                    break;\n                }\n                temp/=10;\n  \
    \          }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9ncrnei.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb659_kaa.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (Long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uroubxw.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            int digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkih9568j.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8o75hw0g.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            lastDigitSum += i;\n        }\n\
    \        if (lastDigit == 0) {\n            result.add(lastDigitSum);\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1322n6f.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ift8196.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5ljpq12.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvxixlzi.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrl37yd3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for(Long i : x) {\n            if(i%2 ==\
    \ 0) {\n                even.add(i);\n            }\n        }\n        Collections.sort(even);\n\
    \        for(Long i : even) {\n            if(!result.contains(i)) {\n       \
    \         result.add(i);\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgybzmfz.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(int i = 0; i < x.size(); i++) {\n            long digit = x.get(i);\n \
    \           \n            while(digit > 0) {\n                digit = digit /\
    \ 10;\n            }\n            \n            if(digit % 2 == 0) {\n       \
    \         result.add(digit);\n            }\n        }\n        \n        Collections.sort(result);\n\
    \        \n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_j094u_p.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        long sum = 0;\n        for(Long i : x) {\n            temp = i;\n   \
    \         while(temp > 0) {\n                sum += temp % 10;\n             \
    \   temp /= 10;\n            }\n            if(sum % 2 == 0) {\n             \
    \   result.add(i);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64_atw2w.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        long sum = 0;\n        for (long i : x) {\n            digit =\
    \ i % 10;\n            sum += digit;\n            if (sum % 2 == 0) {\n      \
    \          result.add(i);\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjs_dth3.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppm6ldtpg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            if(i%2 == 0){\n                result.add(i);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6htooldz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long max = (long) Math.pow(10, x.length() - 1);\n        long min = sum / max;\n\
    \        long max2 = (long) Math.pow(10, x.length() - 1);\n        long min2 =\
    \ sum / max2;\n        long sum2 = sum % max2;\n        long sum3 = sum % max;\n\
    \        long sum4 = sum % min;\n        long sum5 = sum % min2;\n        long\
    \ sum6 = sum % sum2;\n        long sum7 = sum % sum3;\n        long sum8 = sum\
    \ % sum4;\n        long sum9 = sum % sum5;\n        long sum10 = sum % sum6;\n\
    \        long sum11 = sum % sum7;\n        long sum12 = sum % sum8;\n        long\
    \ sum13 = sum % sum9;\n        long sum14 = sum % sum10;\n        long sum15 =\
    \ sum % sum11;\n        long sum16 = sum % sum12;\n        long sum17 = sum %\
    \ sum13;\n        long sum18 = sum % sum14;\n        long sum19 = sum % sum15;\n\
    \        long sum20 = sum % sum16;\n        long sum21 = sum % sum17;\n      \
    \  long sum22 = sum % sum18;\n        long sum23 = sum % sum19;\n        long\
    \ sum24 = sum % sum20;\n        long sum25 = sum % sum21;\n        long sum26\
    \ = sum % sum22;\n        long sum27 = sum % sum23;\n        long sum28 = sum\
    \ % sum24;\n        long sum29 = sum % sum25;\n        long sum30 = sum % sum26;\n\
    \        long sum31 = sum % sum27;\n        long sum32 = sum % sum28;\n      \
    \  long sum33 = sum % sum29;\n        long sum34 = sum % sum30;\n        long\
    \ sum35 = sum % sum31;\n        long sum36 = sum % sum32;\n        long sum37\
    \ = sum % sum33;\n        long sum38 = sum % sum34;\n        long sum39 = sum\
    \ % sum35;\n        long sum40 = sum % sum36;\n        long sum41 = sum % sum37;\n\
    \        long sum42 = sum % sum38;\n        long sum43 = sum % sum39;\n      \
    \  long sum44 = sum % sum40;\n        long \n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpluczvg__.java:70: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpluczvg__.java:70: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = 0;\n        for(long i : x) {\n            if(i%10 == 0) lastDigit = i;\n\
    \            if(i%10 != 0 && lastDigit != 0) {\n                result.add(lastDigit);\n\
    \                lastDigit = 0;\n            }\n        }\n        if(lastDigit\
    \ != 0) result.add(lastDigit);\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgzgpk8w.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for(Long i : x) {\n            if(i%2 ==\
    \ 0) {\n                temp.add(i);\n            }\n        }\n        Collections.sort(temp);\n\
    \        for(Long i : temp) {\n            if(!result.contains(i)) {\n       \
    \         result.add(i);\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppvvsl0te.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n7nyr0_.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            int digit = i%10;\n            while(digit%2 == 0){\n \
    \               digit = digit/10;\n            }\n            if(result.contains(digit)){\n\
    \                break;\n            }\n            result.add(digit);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp63mj6wrj.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i%10;\n                         ^\n\
    /tmp/tmp63mj6wrj.java:27: error: incompatible types: int cannot be converted to\
    \ Long\n            result.add(digit);\n                       ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for (Long i : x) {\n            if (i % 2\
    \ == 0) {\n                temp.add(i);\n            }\n        }\n        temp.sort(Comparator.naturalOrder());\n\
    \        for (Long i : temp) {\n            if (!result.contains(i)) {\n     \
    \           result.add(i);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0azysojd.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for(Long i : x) {\n            int\
    \ count = 0;\n            for(Long j : x) {\n                if(j == i) {\n  \
    \                  count++;\n                }\n            }\n            if(map.get(i)\
    \ == null) {\n                map.put(i, count);\n            } else {\n     \
    \           map.put(i, map.get(i) + count);\n            }\n        }\n      \
    \  for(Long i : map.keySet()) {\n            if(map.get(i) % 2 == 0) {\n     \
    \           result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46cbyg7f.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6b0r8q4q.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 != lastDigit) {\n\
    \                result.add(lastDigitSum);\n                lastDigitSum = sum\
    \ % 10;\n            }\n        }\n        if (lastDigitSum != 0) {\n        \
    \    result.add(lastDigitSum);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp38orw2jp.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (long i : x) {\n            sum += i;\n\
    \            if (sum % 10 != lastDigit) {\n                result.add(i);\n  \
    \          }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5z6tk9n.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (Long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0g0y1vz6.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(int i = 0; i < x.size(); i++) {\n            long digit = x.get(i);\n \
    \           \n            while(digit > 0) {\n                digit = digit /\
    \ 10;\n            }\n            \n            if(digit % 2 == 0) {\n       \
    \         result.add(digit);\n            }\n        }\n        \n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3lwic_kt.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_uagu3h.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x){\n            if(i%2 == 0){\n                result.add(i);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoc8o023g.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                result.add(i);\n            }\n            set.add(i);\n\
    \        }\n        for(Long i : set) {\n            if(!result.contains(i)) {\n\
    \                result.add(i);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdhjwfkyi.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnzzi60g.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15j14lai.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long max = (long) Math.pow(10, x.length() - 1);\n        long min = sum / max;\n\
    \        long sumOfEvenDigits = 0;\n        for (long i : x) {\n            if\
    \ (i % 2 == 0) {\n                sumOfEvenDigits += i;\n            }\n     \
    \   }\n        long evenDigits = sumOfEvenDigits / max;\n        long evenDigitsSum\
    \ = sumOfEvenDigits % max;\n        long evenDigitsSumOfEvenDigits = evenDigitsSum\
    \ / max;\n        long evenDigitsSumOfEvenDigitsSum = evenDigitsSumOfEvenDigits\
    \ % max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigits = evenDigitsSumOfEvenDigitsSum\
    \ / max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSum = evenDigitsSumOfEvenDigitsSumOfEvenDigits\
    \ % max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigits\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSum / max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigits % max;\n        long\
    \ evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigits = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ / max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ % max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigits\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ / max;\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7nwfxzra.java:42: error: ';' expected\n        long evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\
    \ = evenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSumOfEvenDigitsSum\n\
    \                                                                            \
    \                                                                            \
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            long temp =\
    \ i;\n            while (temp != 0) {\n                long temp = temp / 10;\n\
    \            }\n            if (set.contains(temp)) {\n                continue;\n\
    \            }\n            set.add(temp);\n            result.add(i);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9w3cde95.java:23: error: variable temp is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n                long temp = temp / 10;\n    \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (Long i : x) {\n            int\
    \ count = 0;\n            while (map.containsKey(i)) {\n                i = i\
    \ / 10;\n                count++;\n            }\n            map.put(i, count);\n\
    \        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    return result;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1977xdbo.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                result.add((lastDigitSum + lastDigit) * lastDigit);\n   \
    \             lastDigitSum = lastDigit;\n                lastDigit = digit;\n\
    \            } else {\n                lastDigitSum += digit;\n            }\n\
    \        }\n        if (lastDigitSum > 0) {\n            result.add((lastDigitSum\
    \ + lastDigit) * lastDigit);\n        }\n        return result;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhd7etw1.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ digits = new ArrayList<>();\n        for(long i : x) {\n            digits.add(i);\n\
    \        }\n        Collections.sort(digits);\n        for(long i : digits) {\n\
    \            if(!result.contains(i)) {\n                result.add(i);\n     \
    \       }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivqqx2_3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            set.add(Long.valueOf(i));\n\
    \        }\n        for (Long i : set) {\n            int count = 0;\n       \
    \     while (i > 0) {\n                count += i % 10;\n                i /=\
    \ 10;\n            }\n            if (count % 2 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6a3ys3y8.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 == lastDigit) {\n\
    \                lastDigitSum += i;\n            }\n        }\n        if (lastDigitSum\
    \ == 0) {\n            result.addAll(x.stream().filter(i -> i % 10 != 0).collect(Collectors.toList()));\n\
    \        } else {\n            result.addAll(x.stream().filter(i -> i % 10 !=\
    \ 0).collect(Collectors.toList()));\n            result.addAll(x.stream().filter(i\
    \ -> i % 10 == lastDigit).collect(Collectors.toList()));\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzsmogmrr.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x) {\n            temp = i;\n            while(temp\
    \ > 0) {\n                temp = temp / 10;\n                if(!result.contains(temp))\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hwh3iws.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpplau9yic.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount63\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe4kmiyz7.java:82: error: ';' expected\n        long lastDigitCount63\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : x) {\n            if (map.containsKey(i))\
    \ {\n                Long value = map.get(i);\n                if (value.intValue()\
    \ % 2 == 0) {\n                    result.add(i);\n                }\n       \
    \     } else {\n                map.put(i, i);\n            }\n        }\n   \
    \     return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfazl_7q.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x){\n            temp = i;\n            while(temp\
    \ > 0){\n                temp = temp / 10;\n                if(!result.contains(temp)){\n\
    \                    result.add(temp);\n                }\n            }\n   \
    \     }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8048fldn.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26ekmwce.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for(Long i : x) {\n            if(i%2 ==\
    \ 0) {\n                temp.add(i);\n            }\n        }\n        Collections.sort(temp);\n\
    \        for(Long i : temp) {\n            if(!result.contains(i)) {\n       \
    \         result.add(i);\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmntpnxca.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            lastDigitSum += i % 10;\n     \
    \       if (lastDigitSum == lastDigit) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2k9qwcc9.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil23dp8m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        for (long i : x) {\n            digit = i % 10;\n            if\
    \ (!result.contains(digit)) {\n                result.add(digit);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplqovwijh.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%10==0) {\n                result.add(i);\n      \
    \      }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkp896dh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(i%10 == 0) {\n                    set.add(i);\n      \
    \          }\n            }\n        }\n        for(Long i : set) {\n        \
    \    if(!result.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3kt15mo.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(Long i : x){\n            if(i%2 == 0){\n                result.add(i);\n\
    \            }\n        }\n        \n        Collections.sort(result);\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8dqm1kyl.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (Long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstc29gv9.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2pqvt_e.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            int digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmsa7z4w6.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgx_3nqjy.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(Long i : x){\n            if(i%2 == 0){\n                result.add(i);\n\
    \            }\n        }\n        \n        Collections.sort(result);\n     \
    \   \n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaoregtx.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpydw_0mfq.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        for(long i : x) {\n            digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbw35qq6x.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61klyj_z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        long sum = 0;\n        for (long i : x) {\n            sum +=\
    \ i;\n            if (sum % 2 == 0) {\n                digit = sum / 2;\n    \
    \        }\n            if (digit != 0) {\n                result.add(digit);\n\
    \                sum = 0;\n            }\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4y8cdhzj.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long evenSum = 0;\n        for (Long i : x) {\n            evenSum += i;\n \
    \           if (evenSum / sum % 2 == 0) {\n                result.add(i);\n  \
    \          }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2tmiah1d.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1frnfkk.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                lastDigitSum += digit * lastDigit;\n                result.add(lastDigitSum);\n\
    \                lastDigit = digit;\n                lastDigitSum = 0;\n     \
    \       }\n            lastDigitSum += i;\n        }\n        if (lastDigitSum\
    \ > 0) {\n            result.add(lastDigitSum);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mnhukgh.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 != lastDigit) {\n\
    \                result.add(sum);\n                lastDigitSum = sum;\n     \
    \       }\n        }\n        if (lastDigitSum == sum) {\n            result.add(sum);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnk8smm0y.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(int i = 0; i < x.size(); i++) {\n            long digit = x.get(i);\n \
    \           \n            while(digit % 2 == 0) {\n                digit = digit\
    \ / 10;\n            }\n            \n            if(!result.contains(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        \n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg0jkg83l.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp > 0)\
    \ {\n                temp = temp / 10;\n                if(!result.contains(temp))\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxia1b4jm.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(Long i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        \n        Collections.sort(result);\n     \
    \   \n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpo2l19e.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitCount = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            if (sum % 10 == lastDigit) {\n\
    \                lastDigitCount++;\n            } else {\n                if (lastDigitCount\
    \ > 0) {\n                    result.add(lastDigit);\n                }\n    \
    \            lastDigit = sum % 10;\n                lastDigitCount = 1;\n    \
    \        }\n        }\n        if (lastDigitCount > 0) {\n            result.add(lastDigit);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxm4usr9.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long evenSum = 0;\n        for (long i : x) {\n            if (i % 2 == 0) {\n\
    \                evenSum += i;\n            }\n        }\n        if (sum % 2\
    \ == 0) {\n            evenSum -= sum / 2;\n        }\n        long evenSum2 =\
    \ evenSum * evenSum;\n        for (long i : x) {\n            if (i % 2 == 0)\
    \ {\n                if (evenSum2 % 2 == 0) {\n                    result.add(i);\n\
    \                }\n                evenSum2 -= i;\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqio8i91.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long digit\
    \ = 0;\n        long sum = 0;\n        for (Long i : x) {\n            sum +=\
    \ i;\n            digit = sum / 10;\n            if (digit % 2 == 0) {\n     \
    \           result.add(i);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6x8e_3qj.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ digits = new ArrayList<>();\n        for(Long i : x) {\n            digits.add(i);\n\
    \        }\n        Collections.sort(digits);\n        for(Long i : digits) {\n\
    \            if(!result.contains(i)) {\n                result.add(i);\n     \
    \       }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2svcdnsp.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppz_vafv7.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        ArrayList<Long> odd = new ArrayList<>();\n\
    \        for(Long i : x){\n            if(i%2 == 0){\n                even.add(i);\n\
    \            }else{\n                odd.add(i);\n            }\n        }\n \
    \       Collections.sort(even);\n        Collections.sort(odd);\n        Collections.reverse(even);\n\
    \        Collections.reverse(odd);\n        for(Long i : even){\n            if(!result.contains(i)){\n\
    \                result.add(i);\n            }\n        }\n        for(Long i\
    \ : odd){\n            if(!result.contains(i)){\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mw46ekw.java:46)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_j7gie4.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for(Long i : x){\n            if(i%2 == 0){\n\
    \                temp.add(i);\n            }\n        }\n        Collections.sort(temp);\n\
    \        for(Long i : temp){\n            if(!result.contains(i)){\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0eiyq7b.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ digits = new ArrayList<>();\n        for(long i : x) {\n            digits.add(i);\n\
    \        }\n        Collections.sort(digits);\n        for(long i : digits) {\n\
    \            if(!result.contains(i)) {\n                result.add(i);\n     \
    \       }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezwjktxb.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x) {\n            temp = i;\n            while(temp\
    \ != 0) {\n                temp = temp / 10;\n                if(temp % 2 != 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgwekl6dp.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3wtjobd.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq908g50i.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (Long\
    \ i : x) {\n            sum += i;\n            lastDigitSum += i % 10;\n     \
    \       if (lastDigit != lastDigitSum) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvc8uoz3q.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zyi61zj.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for(Long i : x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        for(Long i : x) {\n            sum += i;\n  \
    \          if(sum % 10 != lastDigit) {\n                result.add(i);\n     \
    \       }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrfsp9bw.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        \n      \
    \  for(long i : x){\n            int digit = i % 10;\n            if(!result.contains(digit)){\n\
    \                result.add(digit);\n            }\n        }\n        \n    \
    \    return result;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp26cazijs.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n/tmp/tmp26cazijs.java:23: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(digit);\n                           ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ctcnykv.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            int digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpowwb_mve.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        for (long i : x) {\n            if (i %\
    \ 10 != lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8slt73u.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            int count = 0;\n            while(i != 0) {\n        \
    \        count += i / 10;\n                i %= 10;\n            }\n         \
    \   if(count == 0) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitCount = 0;\n        for (Long\
    \ i : x) {\n            if (i % 10 == lastDigit) {\n                lastDigitCount++;\n\
    \            } else {\n                result.add(lastDigitCount);\n         \
    \       lastDigitCount = 1;\n                lastDigit = i % 10;\n           \
    \ }\n        }\n        result.add(lastDigitCount);\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ql_eo00.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long remainder = sum % 10;\n        for (Long i : x) {\n            if (i %\
    \ 10 != remainder) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpujvz234_.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        long sum = 0;\n        for(long i : x) {\n            sum += i;\n   \
    \     }\n        for(long i : x) {\n            temp = sum % 10;\n           \
    \ if(temp != 0) {\n                result.add(i);\n            }\n           \
    \ sum -= i;\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuadz8uo.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Integer> map = new HashMap<>();\n        for (Long i : x) {\n            int\
    \ count = 0;\n            while (map.containsKey(i)) {\n                i = i\
    \ / 10;\n                count++;\n            }\n            map.put(i, count);\n\
    \        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    Collections.sort(result);\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp95edpsgf.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bsfcjty.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long max = (long) Math.pow(10, x.length() - 1);\n        long min = sum / max;\n\
    \        long sum2 = sum % max;\n        for (Long i : x) {\n            long\
    \ d = i % max;\n            if (d != 0) {\n                long d = sum2 % max;\n\
    \                if (d != 0) {\n                    result.add(i);\n         \
    \       }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq1rpldk_.java:23: error: cannot find symbol\n        long max =\
    \ (long) Math.pow(10, x.length() - 1);\n                                     \
    \   ^\n  symbol:   method length()\n  location: variable x of type ArrayList<Long>\n\
    /tmp/tmpq1rpldk_.java:29: error: variable d is already defined in method uniqueDigits(ArrayList<Long>)\n\
    \                long d = sum2 % max;\n                     ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31yc70f_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        long sum = 0;\n        for (long i : x) {\n            sum +=\
    \ i;\n        }\n        for (long i : x) {\n            if (i % 2 == 0) {\n \
    \               temp = sum - i;\n                if (temp % 2 == 0) {\n      \
    \              result.add(temp);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6thol2du.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(i);\n                    break;\n            \
    \    }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv826pmyk.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long lastDigit\
    \ = Long.MIN_VALUE;\n        for (long i : x) {\n            long digit = i %\
    \ 10;\n            if (digit != 0 && digit != lastDigit) {\n                result.add(i);\n\
    \                lastDigit = digit;\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbyuecyhu.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for (long i : x) {\n            temp = i;\n            while (temp\
    \ / 10 != 0) {\n                temp = temp / 10;\n            }\n           \
    \ if (temp % 2 == 0) {\n                result.add(i);\n            }\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdlsbhaht.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (long\
    \ i : x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                result.add(i);\n            }\n            lastDigitSum +=\
    \ digit;\n        }\n        if (lastDigitSum != 0) {\n            result.add(lastDigit);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5ijgdcb.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i\
    \ -> i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i2ehgvf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(Long i : x) {\n            temp = i;\n            while(temp\
    \ > 0) {\n                temp = temp / 10;\n            }\n            if(temp\
    \ % 2 == 0) {\n                result.add(i);\n            }\n        }\n    \
    \    Collections.sort(result);\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68fwh4pt.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphd5kpn2c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (Long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0tfgsl3_.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfb80c7n9.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbspm5id1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yyjcp5f.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        for (long\
    \ i : x) {\n            sum += i;\n            lastDigitSum += i;\n          \
    \  if (lastDigit == lastDigitSum) {\n                result.add(i);\n        \
    \    }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplj25rt73.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long sum2 = sum;\n        while (sum2 > 0) {\n            int index = 0;\n \
    \           while (sum2 > 0 && index < result.size()) {\n                if (result.get(index)\
    \ % 2 == 0) {\n                    sum2 -= result.get(index);\n              \
    \  } else {\n                    result.add(index, result.get(index));\n     \
    \               sum2 -= result.get(index);\n                }\n              \
    \  index++;\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            int digit = i % 10;\n            while(digit > 0) {\n\
    \                if((i / 10) % 2 == 0) {\n                    result.add(i);\n\
    \                    break;\n                }\n                digit--;\n   \
    \         }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpej936ses.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp\
    \ = 0;\n        for(long i : x) {\n            temp = i;\n            while(temp\
    \ != 0) {\n                temp = temp / 10;\n                if(temp % 2 == 0)\
    \ {\n                    result.add(temp);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64x4gtv1.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : x) {\n            if (map.containsKey(i))\
    \ {\n                map.put(i, map.get(i) + 1);\n            } else {\n     \
    \           map.put(i, 1L);\n            }\n        }\n        for (Long i : map.keySet())\
    \ {\n            if (map.get(i) % 2 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz2rwc9v.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vla8obr.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : x) {\n            Long val\
    \ = map.get(i);\n            if (val == null) {\n                map.put(i, i);\n\
    \            } else {\n                map.put(i, val + 1);\n            }\n \
    \       }\n        for (Long i : map.keySet()) {\n            if (map.get(i) %\
    \ 2 == 0) {\n                result.add(i);\n            }\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudcfrprs.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if(i%2 == 0) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1owed65_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for (long i : x) {\n            temp = i;\n            while (temp !=\
    \ 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_6hm5f3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndf1vwl6.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8x9d59ig.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        ArrayList<Long> odd = new ArrayList<>();\n\
    \        for(Long i : x) {\n            if(i%2 == 0) {\n                even.add(i);\n\
    \            } else {\n                odd.add(i);\n            }\n        }\n\
    \        Collections.sort(even);\n        Collections.sort(odd);\n        Collections.reverse(even);\n\
    \        Collections.reverse(odd);\n        Collections.addAll(result, even);\n\
    \        Collections.addAll(result, odd);\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpan0r1cwd.java:32: error: method addAll in class Collections cannot\
    \ be applied to given types;\n        Collections.addAll(result, even);\n    \
    \               ^\n  required: Collection<? super T>,T[]\n  found:    ArrayList<Long>,ArrayList<Long>\n\
    \  reason: inference variable T has incompatible bounds\n    lower bounds: Long,Object\n\
    \    lower bounds: ArrayList<Long>\n  where T is a type-variable:\n    T extends\
    \ Object declared in method <T>addAll(Collection<? super T>,T...)\n/tmp/tmpan0r1cwd.java:33:\
    \ error: method addAll in class Collections cannot be applied to given types;\n\
    \        Collections.addAll(result, odd);\n                   ^\n  required: Collection<?\
    \ super T>,T[]\n  found:    ArrayList<Long>,ArrayList<Long>\n  reason: inference\
    \ variable T has incompatible bounds\n    lower bounds: Long,Object\n    lower\
    \ bounds: ArrayList<Long>\n  where T is a type-variable:\n    T extends Object\
    \ declared in method <T>addAll(Collection<? super T>,T...)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (long i : x) {\n            sum += i;\n        }\n       \
    \ long temp = sum;\n        long temp2 = sum;\n        while (temp != 0) {\n \
    \           temp2 = temp % 10;\n            if (temp2 % 2 == 0) {\n          \
    \      result.add(temp);\n            }\n            temp /= 10;\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm36c17gh.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long i : x) {\n            sum += i;\n        }\n       \
    \ long evenSum = 0;\n        for (Long i : x) {\n            evenSum += i % 2\
    \ == 0 ? i : -1;\n        }\n        long evenSum2 = sum - evenSum;\n        long\
    \ evenSum3 = sum - evenSum2;\n        long evenSum4 = sum - evenSum3;\n      \
    \  long evenSum5 = sum - evenSum4;\n        long evenSum6 = sum - evenSum5;\n\
    \        long evenSum7 = sum - evenSum6;\n        long evenSum8 = sum - evenSum7;\n\
    \        long evenSum9 = sum - evenSum8;\n        long evenSum10 = sum - evenSum9;\n\
    \        long evenSum11 = sum - evenSum10;\n        long evenSum12 = sum - evenSum11;\n\
    \        long evenSum13 = sum - evenSum12;\n        long evenSum14 = sum - evenSum13;\n\
    \        long evenSum15 = sum - evenSum14;\n        long evenSum16 = sum - evenSum15;\n\
    \        long evenSum17 = sum - evenSum16;\n        long evenSum18 = sum - evenSum17;\n\
    \        long evenSum19 = sum - evenSum18;\n        long evenSum20 = sum - evenSum19;\n\
    \        long evenSum21 = sum - evenSum20;\n        long evenSum22 = sum - evenSum21;\n\
    \        long evenSum23 = sum - evenSum22;\n        long evenSum24 = sum - evenSum23;\n\
    \        long evenSum25 = sum - evenSum24;\n        long evenSum26 = sum - evenSum25;\n\
    \        long evenSum27 = sum - evenSum26;\n        long evenSum28 = sum - evenSum27;\n\
    \        long evenSum29 = sum - evenSum28;\n        long evenSum30 = sum - evenSum29;\n\
    \        long evenSum31 = sum - evenSum30;\n        long evenSum32 = sum - evenSum31;\n\
    \        long evenSum33 = sum - evenSum32;\n        long evenSum34 = sum - evenSum33;\n\
    \        long evenSum35 = sum - evenSum34;\n        long evenSum36 = sum - evenSum35;\n\
    \        long evenSum37 = sum - evenSum36;\n        long evenSum38 = sum - evenSum37;\n\
    \        long evenSum39 = \n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz2k6zxq_.java:65: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecbiwl1x.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        long temp;\n\
    \        for(long i : x) {\n            temp = i;\n            while(temp > 0)\
    \ {\n                if(temp % 2 == 0) {\n                    result.add(temp);\n\
    \                    break;\n                }\n                temp/=10;\n  \
    \          }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzhmmvtb.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhprimx6.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Long> uniqueDigits(ArrayList<Long>\
    \ x) {\n        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : x) {\n            if(i%2 == 0)\
    \ {\n                if(!set.contains(i)) {\n                    result.add(i);\n\
    \                    set.add(i);\n                }\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpftnsmg2e.java:32)\n"
  exit_code: 1
  status: Exception

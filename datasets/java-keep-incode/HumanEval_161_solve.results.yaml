name: HumanEval_161_solve
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jgpn7pl.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \         } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xokjlrx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean isLetter = false;\n        for(int\
    \ i = 0; i < chars.length; i++) {\n            if(chars[i] >= 'a' && chars[i]\
    \ <= 'z') {\n                isLetter = true;\n                chars[i] = chars[i].toUpperCase();\n\
    \            } else if(chars[i] >= 'A' && chars[i] <= 'Z') {\n               \
    \ isLetter = true;\n                chars[i] = chars[i].toLowerCase();\n     \
    \       } else {\n                isLetter = false;\n            }\n         \
    \   if(isLetter) {\n                sb.append(chars[i]);\n            }\n    \
    \    }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj6aky967.java:26: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toUpperCase();\n                                \
    \   ^\n/tmp/tmpj6aky967.java:29: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toLowerCase();\n                                \
    \   ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp948b3key.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            }\n            else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptgessq9t.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (char c : arr) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph88ojxlb.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps76kgbry.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = true;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            if (chars[i] >= 'a' && chars[i] <=\
    \ 'z') {\n                isLetter = true;\n            } else if (chars[i] >=\
    \ 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n            } else\
    \ {\n                isLetter = false;\n            }\n        }\n        if (isLetter)\
    \ {\n            for (int i = 0; i < chars.length; i++) {\n                if\
    \ (chars[i] >= 'a' && chars[i] <= 'z') {\n                    sb.append(chars[chars.length\
    \ - i - 1]);\n                } else if (chars[i] >= 'A' && chars[i] <= 'Z') {\n\
    \                    sb.append(chars[chars.length - i - 1]);\n               \
    \ } else {\n                    sb.append(chars[i]);\n                }\n    \
    \        }\n        } else {\n            for (int i = 0; i < chars.length; i++)\
    \ {\n                sb.append(chars[i]);\n            }\n        }\n        return\
    \ sb.toString();\n\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgot27x70.java:51)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74ng9x9j.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pyrs9pa.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(Character.isLetter(c)) {\n         \
    \       if(c == Character.toUpperCase(arr[i])) {\n                    sb.append(Character.toLowerCase(arr[i]));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(arr[i]));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1w7l3mk.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6qbej85.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for (int i = 0;\
    \ i < chars.length; i++) {\n            if (chars[i] == ' ') {\n             \
    \   flag = true;\n            } else {\n                if (flag) {\n        \
    \            sb.append(Character.toUpperCase(chars[i]));\n                } else\
    \ {\n                    sb.append(Character.toLowerCase(chars[i]));\n       \
    \         }\n                flag = false;\n            }\n        }\n       \
    \ return sb.toString();\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5kkch23.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            String\
    \ upper = Character.toString((char) c);\n            String lower = Character.toString((char)\
    \ Character.toUpperCase(c));\n            if (upper.equals(lower)) {\n       \
    \         sb.append(upper);\n            } else {\n                sb.append(lower);\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_so68uqc.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(chars[i] >= 'a' && chars[i] <= 'z'){\n                chars[i]\
    \ = chars[i].toUpperCase();\n            }else if(chars[i] >= 'A' && chars[i]\
    \ <= 'Z'){\n                chars[i] = chars[i].toLowerCase();\n            }else{\n\
    \                chars[i] = chars[i];\n            }\n        }\n        for(int\
    \ i = 0; i < chars.length; i++){\n            sb.append(chars[i]);\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5lv7tfbb.java:24: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toUpperCase();\n                                \
    \   ^\n/tmp/tmp5lv7tfbb.java:26: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toLowerCase();\n                                \
    \   ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \             sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43cj57pk.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        for(int i = 0; i < chars.length; i++) {\n     \
    \       char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp6gaao7.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = true;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            if (chars[i] >= 'a' && chars[i] <=\
    \ 'z') {\n                isLetter = true;\n            } else if (chars[i] >=\
    \ 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n            } else\
    \ {\n                isLetter = false;\n            }\n            if (isLetter)\
    \ {\n                sb.append(chars[i]);\n            } else {\n            \
    \    sb.append(Character.toLowerCase(chars[i]));\n            }\n        }\n \
    \       return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl9l0_2z.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_a6uud7.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgas3ecd.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            char c = chars[i];\n            if\
    \ (Character.isLetter(c)) {\n                isLetter = true;\n            } else\
    \ {\n                isLetter = false;\n            }\n            if (isLetter)\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspakjidy.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == 'a' || c == 'A') {\n          \
    \      sb.append(Character.toUpperCase(c));\n            } else if(c == 'b' ||\
    \ c == 'B') {\n                sb.append(Character.toLowerCase(c));\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczwcwzo9.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        for (int i = 0; i < chars.length; i++) {\n    \
    \        if (Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n        }\n        sb.append(new String(chars));\n        return\
    \ sb.toString();\n\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp388bvzx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            char c = chars[i];\n            if(c == 'a'){\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n            else if (c == 'A'){\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n            else{\n                sb.append(c);\n           \
    \ }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj4v18tq.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplqwrj9zd.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == 'a' || c == 'A') {\n          \
    \      sb.append(Character.toUpperCase(c));\n            } else if(c == 'b' ||\
    \ c == 'B') {\n                sb.append(Character.toLowerCase(c));\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp951xgcgh.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            String\
    \ str = Character.toString(c);\n            if (Character.isLetter(c)) {\n   \
    \             str = Character.toUpperCase(str);\n            }\n            sb.append(str);\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp611vlo5j.java:25: error: no suitable method found for toUpperCase(String)\n\
    \                str = Character.toUpperCase(str);\n                         \
    \      ^\n    method Character.toUpperCase(char) is not applicable\n      (argument\
    \ mismatch; String cannot be converted to char)\n    method Character.toUpperCase(int)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to int)\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i\
    \ + 1]));\n                sb.append(Character.toLowerCase(arr[i + 2]));\n   \
    \             i += 2;\n            } else if(c == '@') {\n                sb.append(Character.toUpperCase(arr[i\
    \ + 1]));\n                sb.append(Character.toLowerCase(arr[i + 2]));\n   \
    \             i += 2;\n            } else {\n                sb.append(c);\n \
    \           }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5k6o6_6h.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = true;\n        for (int i = 0; i\
    \ < chars.length; i++) {\n            if (chars[i] == ' ') {\n               \
    \ flag = true;\n            } else {\n                if (flag) {\n          \
    \          sb.append(chars[i]);\n                    flag = false;\n         \
    \       } else {\n                    sb.append(Character.toLowerCase(chars[i]));\n\
    \                    flag = true;\n                }\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvl96nm1.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjslutwnh.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = true;\n        for(int i = 0; i\
    \ < chars.length; i++){\n            if(chars[i] == ' '){\n                flag\
    \ = true;\n            }\n            else{\n                if(flag){\n     \
    \               sb.append(Character.toUpperCase(chars[i]));\n                \
    \    flag = false;\n                }\n                else{\n               \
    \     sb.append(Character.toLowerCase(chars[i]));\n                }\n       \
    \     }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zzm3k6b.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsrwkmgs.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcok2ehg.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_ve_osi.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfk9acgg.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            char c = chars[i];\n            if(c == 'a'){\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n            else if(c == 'A'){\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n            else{\n                sb.append(c);\n           \
    \ }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgcnec3r.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7rbfkcrl.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6llr0s_s.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpri46tt5u.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3vs3p2o.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            if (chars[i] == ' ') {\n          \
    \      isLetter = false;\n            } else if (chars[i] >= 'a' && chars[i] <=\
    \ 'z') {\n                isLetter = true;\n            } else {\n           \
    \     isLetter = false;\n            }\n            if (isLetter) {\n        \
    \        sb.append(Character.toUpperCase(chars[i]));\n            } else {\n \
    \               sb.append(chars[i]);\n            }\n        }\n        return\
    \ sb.toString();\n\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6elmqu2d.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isFirst = true;\n        for(int i = 0;\
    \ i < chars.length; i++) {\n            char c = chars[i];\n            if(Character.isLetter(c))\
    \ {\n                if(!isFirst) {\n                    sb.append(c);\n     \
    \           }\n                isFirst = false;\n            } else {\n      \
    \          sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vat9gv9.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu_em9di.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzof5282f.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2seg44e1.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbd0b97i3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwc0326nv.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpow8b_l77.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkk88k66.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'A') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_splict.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5sq1gtex.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47t55b9l.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0f0unj7.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporgejt4d.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgx4ugss1.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6gpvi_x.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n     \
    \           sb.append(Character.toUpperCase(c));\n            }else if(c == 'b'\
    \ || c == 'B'){\n                sb.append(Character.toLowerCase(c));\n      \
    \      }else{\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp83fjojl.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            boolean\
    \ upperCase = Character.isUpperCase(c);\n            boolean lowerCase = Character.isLowerCase(c);\n\
    \            if (upperCase) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if (lowerCase) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmll2bg3l.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            }\n            else if(c == '@') {\n                sb.append(Character.toLowerCase(arr[i]));\n\
    \            }\n            else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1932gp35.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \         } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxkbakio.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean isFirst = true;\n        for (int\
    \ i = 0; i < chars.length; i++) {\n            char c = chars[i];\n          \
    \  if (Character.isLetter(c)) {\n                if (isFirst) {\n            \
    \        sb.append(Character.toUpperCase(c));\n                    isFirst = false;\n\
    \                } else {\n                    sb.append(Character.toLowerCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4oicrel3.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        boolean flag = false;\n        for (int i = 0; i < arr.length; i++) {\n\
    \            if (arr[i] >= 'a' && arr[i] <= 'z') {\n                flag = true;\n\
    \                sb.append(Character.toUpperCase(arr[i]));\n            } else\
    \ {\n                sb.append(arr[i]);\n            }\n        }\n        if\
    \ (flag == false) {\n            sb.append(s);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqdx540xq.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == 'a' || c == 'A') {\n          \
    \      sb.append(Character.toUpperCase(c));\n            } else if(c == 'b' ||\
    \ c == 'B') {\n                sb.append(Character.toLowerCase(c));\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55mfuxzv.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp880ann6x.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(char c : s.toCharArray()) {\n       \
    \     if(c>='a' && c<='z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c>='A' && c<='Z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp16zvqkt8.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptztlbqs3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8eomo3hg.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n     \
    \           sb.append(Character.toUpperCase(c));\n            }else if(c == 'b'\
    \ || c == 'B'){\n                sb.append(Character.toLowerCase(c));\n      \
    \      }else{\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2___n5t8.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9itwmz5b.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == ' ') {\n              \
    \  sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmj7s58cc.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5yscx523.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(chars[i] >= 'a' && chars[i] <= 'z') {\n                chars[i]\
    \ = chars[i] - 'a' + 'A';\n            }\n            else if(chars[i] >= 'A'\
    \ && chars[i] <= 'Z') {\n                chars[i] = chars[i] - 'A' + 'a';\n  \
    \          }\n            else {\n                chars[i] = chars[i];\n     \
    \       }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd3nr_8hm.java:24: error: incompatible types: possible lossy conversion\
    \ from int to char\n                chars[i] = chars[i] - 'a' + 'A';\n       \
    \                                   ^\n/tmp/tmpd3nr_8hm.java:27: error: incompatible\
    \ types: possible lossy conversion from int to char\n                chars[i]\
    \ = chars[i] - 'A' + 'a';\n                                          ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \             sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn2ykv5jw.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; ++i) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qeflenq.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60u8d4tu.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '@') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '.') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '$') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == '^') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '&') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == '*') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == '(') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == ')') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '[') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == ']') {\n              \
    \  sb.append(c);\n                continue;\n            }\n            if(c ==\
    \ '{') {\n                sb.append(c);\n                continue;\n         \
    \   }\n            if(c == '}') {\n                sb.append(c);\n           \
    \     continue;\n            }\n            if(c == '<') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '>') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '|') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '+') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == '-') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '=') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == '!') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == '?') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '.') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '/') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == '\\\\') {\n           \
    \     sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '%') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '^') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == '&') {\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp1ijzz88.java:131: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqddgwju6.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uhm7grs.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5n3e7jo8.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5p5cusg.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if(Character.isLetter(arr[i]))\
    \ {\n                sb.append(Character.toUpperCase(arr[i]));\n            }\
    \ else {\n                sb.append(arr[i]);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphoy116b9.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0k_8nkg7.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            if (chars[i] >= 'a' && chars[i] <=\
    \ 'z') {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ >= 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n           \
    \ }\n            if (!isLetter) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            }\n        }\n        char[] charsReversed = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            charsReversed[chars.length\
    \ - 1 - i] = chars[i];\n        }\n        for (int i = 0; i < chars.length; i++)\
    \ {\n            sb.append(charsReversed[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jic_koo.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8iwcbmo2.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            char c = chars[i];\n            if(c\
    \ == 'a' || c == 'A') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'b' || c == 'B') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'c' || c == 'C') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'd' || c == 'D') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'e' || c == 'E') {\n\
    \                isLetter = true;\n            }\n            if(c == 'f' || c\
    \ == 'F') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'g' || c == 'G') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'h' || c == 'H') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'i' || c == 'I') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'j' || c == 'J') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'k' || c == 'K') {\n\
    \                isLetter = true;\n            }\n            if(c == 'l' || c\
    \ == 'L') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'm' || c == 'M') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'n' || c == 'N') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'o' || c == 'O') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'p' || c == 'P') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'q' || c == 'Q') {\n\
    \                isLetter = true;\n            }\n            if(c == 'r' || c\
    \ == 'R') {\n                isLetter = true;\n            }\n            if(c\
    \ == 's' || c == 'S') {\n                isLetter = true;\n            }\n   \
    \         if(c == 't' || c == 'T') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'u' || c == 'U') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'v' || c == 'V') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'w' || c == 'W') {\n\
    \                isLetter = true;\n            }\n            if(c == 'x' || c\
    \ == 'X') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'y' || c == 'Y') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'z' || c == 'Z') {\n                isLetter = true;\n     \
    \       }\n            \n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4347xjp7.java:105: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(chars[i] >= 'a' && chars[i] <= 'z'){\n                chars[i]\
    \ = chars[i] - 32;\n            }\n            else if(chars[i] >= 'A' && chars[i]\
    \ <= 'Z'){\n                chars[i] = chars[i] + 32;\n            }\n       \
    \     sb.append(chars[i]);\n        }\n        return sb.toString();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiun16szy.java:24: error: incompatible types: possible lossy conversion\
    \ from int to char\n                chars[i] = chars[i] - 32;\n              \
    \                      ^\n/tmp/tmpiun16szy.java:27: error: incompatible types:\
    \ possible lossy conversion from int to char\n                chars[i] = chars[i]\
    \ + 32;\n                                    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc8zmobyk.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprydd937s.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if(Character.isLetter(arr[i]))\
    \ {\n                sb.append(Character.toUpperCase(arr[i]));\n            }\
    \ else {\n                sb.append(arr[i]);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mdhwjsp.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 'c' || chars[i] == 'C') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 'd' || chars[i]\
    \ == 'D') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'e' || chars[i] == 'E') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'f' || chars[i] == 'F') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'g' || chars[i] == 'G') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'h' || chars[i] == 'H') {\n                isLetter\
    \ = true;\n            }\n            else if(chars[i] == 'i' || chars[i] == 'I')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'j' || chars[i] == 'J') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 'k' || chars[i] == 'K') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 'l' || chars[i]\
    \ == 'L') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'm' || chars[i] == 'M') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'n' || chars[i] == 'N') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'o' || chars[i] == 'O') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'p' || chars[i] == 'P') {\n                isLetter\
    \ = true;\n            }\n            else if(chars[i] == 'q' || chars[i] == 'Q')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'r' || chars[i] == 'R') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 's' || chars[i] == 'S') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 't' || chars[i]\
    \ == 'T') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'u' || chars[i] == 'U') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'v' || chars[i] == 'V') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'w' || chars[i] == 'W') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'x' || chars[i] == 'X') {\n                isLetter\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp52tmy2ct.java:94: error: not a statement\n                isLetter\n\
    \                ^\n/tmp/tmp52tmy2ct.java:94: error: ';' expected\n          \
    \      isLetter\n                        ^\n/tmp/tmp52tmy2ct.java:96: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0c_e4yo5.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 'c' || chars[i] == 'C') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 'd' || chars[i]\
    \ == 'D') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'e' || chars[i] == 'E') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'f' || chars[i] == 'F') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'g' || chars[i] == 'G') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'h' || chars[i] == 'H') {\n                isLetter\
    \ = true;\n            }\n            else if(chars[i] == 'i' || chars[i] == 'I')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'j' || chars[i] == 'J') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 'k' || chars[i] == 'K') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 'l' || chars[i]\
    \ == 'L') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'm' || chars[i] == 'M') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'n' || chars[i] == 'N') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'o' || chars[i] == 'O') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'p' || chars[i] == 'P') {\n                isLetter\
    \ = true;\n            }\n            else if(chars[i] == 'q' || chars[i] == 'Q')\
    \ {\n                isLetter = true;\n            }\n            else if(chars[i]\
    \ == 'r' || chars[i] == 'R') {\n                isLetter = true;\n           \
    \ }\n            else if(chars[i] == 's' || chars[i] == 'S') {\n             \
    \   isLetter = true;\n            }\n            else if(chars[i] == 't' || chars[i]\
    \ == 'T') {\n                isLetter = true;\n            }\n            else\
    \ if(chars[i] == 'u' || chars[i] == 'U') {\n                isLetter = true;\n\
    \            }\n            else if(chars[i] == 'v' || chars[i] == 'V') {\n  \
    \              isLetter = true;\n            }\n            else if(chars[i] ==\
    \ 'w' || chars[i] == 'W') {\n                isLetter = true;\n            }\n\
    \            else if(chars[i] == 'x' || chars[i] == 'X') {\n                isLetter\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt5gignpb.java:94: error: not a statement\n                isLetter\n\
    \                ^\n/tmp/tmpt5gignpb.java:94: error: ';' expected\n          \
    \      isLetter\n                        ^\n/tmp/tmpt5gignpb.java:96: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              c = Character.toUpperCase(c);\n            } else {\n         \
    \       c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfz5_nvd1.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == 'a' || c == 'A') {\n          \
    \      sb.append(Character.toUpperCase(c));\n            } else if(c == 'b' ||\
    \ c == 'B') {\n                sb.append(Character.toLowerCase(c));\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6o02xju3.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for(int i = 0; i\
    \ < chars.length; i++) {\n            char c = chars[i];\n            if(c ==\
    \ '#') {\n                flag = true;\n                continue;\n          \
    \  }\n            if(flag) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjw_0o0g.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo89sqih4.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn7flu2u3.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprytvkm8h.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isFirst = true;\n        for(int i = 0;\
    \ i < chars.length; i++){\n            if(chars[i] == ' ' || chars[i] == '\\t'\
    \ || chars[i] == '\\n'){\n                if(!isFirst){\n                    sb.append(\"\
    \ \");\n                }\n                isFirst = false;\n            }else{\n\
    \                sb.append(Character.toUpperCase(chars[i]));\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmeen293.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '@') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '$') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '!') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == '.') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '/') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == '(') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == ')') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '[') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == ']') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == '{') {\n              \
    \  sb.append(c);\n                continue;\n            }\n            if(c ==\
    \ '}') {\n                sb.append(c);\n                continue;\n         \
    \   }\n            if(c == '<') {\n                sb.append(c);\n           \
    \     continue;\n            }\n            if(c == '>') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '|') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '&') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '=') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == ',') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '.') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == '?') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == '!') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '-') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '+') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == '/') {\n              \
    \  sb.append(c);\n                continue;\n            }\n            if(c ==\
    \ '.') {\n                sb.append(c);\n                continue;\n         \
    \   }\n            if(c == '?') {\n                sb.append(c);\n           \
    \     continue;\n            }\n            if(c == '!') {\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsposgxzl.java:131: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean flag = false;\n        for (int i\
    \ = 0; i < chars.length; i++) {\n            if (chars[i] == ' ') {\n        \
    \        flag = true;\n                continue;\n            }\n            if\
    \ (flag) {\n                sb.append(chars[i]);\n            } else {\n     \
    \           sb.append(Character.toUpperCase(chars[i]));\n            }\n     \
    \   }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1u7ovvus.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ for (char c : chars) {\n            if (Character.isLetter(c)) {\n         \
    \       sb.append(Character.toUpperCase(c));\n            } else {\n         \
    \       sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjktkr_rz.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51dgn83i.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8bd8c25.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmfqva0p_.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7v93iq16.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgod6q79.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = true;\n        for (int i = 0; i\
    \ < chars.length; i++) {\n            if (chars[i] == ' ') {\n               \
    \ flag = true;\n            } else {\n                if (flag) {\n          \
    \          sb.append(chars[i]);\n                    flag = false;\n         \
    \       } else {\n                    sb.append(Character.toLowerCase(chars[i]));\n\
    \                }\n            }\n        }\n        return sb.toString();\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01u8us_r.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkc051e73.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdi5_z4cd.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for(int i = 0; i\
    \ < chars.length; i++) {\n            if(chars[i] == ' ') {\n                flag\
    \ = true;\n                continue;\n            }\n            if(flag) {\n\
    \                sb.append(chars[i]);\n            } else {\n                sb.append(Character.toLowerCase(chars[i]));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp425_tjdk.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpb8c5by.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7xbqrezy.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3qi1l778.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(Character.isLetter(c)) {\n \
    \               sb.append(Character.toUpperCase(c));\n            } else {\n \
    \               sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hw_2pze.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mqzr876.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps5mt6z_z.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvxddzfg.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdj207nno.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr40k3fb.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bo_h4nh.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isFirst = true;\n        for (char c :\
    \ chars) {\n            if (isFirst) {\n                isFirst = false;\n   \
    \             sb.append(Character.toLowerCase(c));\n            } else {\n   \
    \             sb.append(Character.toUpperCase(c));\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7nht3pc.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91dl06c9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3g865vxl.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy3a3luqu.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            }\n            else if(c == '@') {\n                sb.append(Character.toLowerCase(arr[i]));\n\
    \            }\n            else {\n                sb.append(arr[i]);\n     \
    \       }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3s8b6gg.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for (int i = 0;\
    \ i < chars.length; i++) {\n            if (chars[i] == ' ') {\n             \
    \   flag = true;\n            }\n            if (flag) {\n                sb.append(chars[i]);\n\
    \            } else {\n                sb.append(Character.toLowerCase(chars[i]));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumduq9t5.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if(Character.isLetter(arr[i]))\
    \ {\n                char c = Character.toUpperCase(arr[i]);\n               \
    \ sb.append(c);\n            } else {\n                sb.append(arr[i]);\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp036acln8.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0c30jpqa.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq9o75o8h.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                chars[i] = Character.toUpperCase(chars[i]);\n\
    \            } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpym9mvakv.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9n23exlo.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpej325ufx.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51ocpnq4.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if(chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            if(chars[i] == 'c' || chars[i] == 'C') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == 'd' || chars[i] == 'D') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'e'\
    \ || chars[i] == 'E') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'f' || chars[i] == 'F') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'g' || chars[i] == 'G') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'h'\
    \ || chars[i] == 'H') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'i' || chars[i] == 'I') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'j' || chars[i] == 'J') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'k'\
    \ || chars[i] == 'K') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'l' || chars[i] == 'L') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'm' || chars[i] == 'M') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'n'\
    \ || chars[i] == 'N') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'o' || chars[i] == 'O') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'p' || chars[i] == 'P') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'q'\
    \ || chars[i] == 'Q') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'r' || chars[i] == 'R') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 's' || chars[i] == 'S') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 't'\
    \ || chars[i] == 'T') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'u' || chars[i] == 'U') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'v' || chars[i] == 'V') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'w'\
    \ || chars[i] == 'W') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'x' || chars[i] == 'X') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'y' || chars[i] == 'Y') {\n\
    \                isLetter = true;\n            }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4jdoawr.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgrkcb94d.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu45o9c_y.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplbgpxdf_.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \            }\n            if(c == '@') {\n                sb.append(c);\n  \
    \          }\n            if(c == '$') {\n                sb.append(c);\n    \
    \        }\n            if(c == '.') {\n                sb.append(c);\n      \
    \      }\n            if(c == '@') {\n                sb.append(c);\n        \
    \    }\n            if(c == '$') {\n                sb.append(c);\n          \
    \  }\n            if(c == '@') {\n                sb.append(c);\n            }\n\
    \            if(c == '#') {\n                sb.append(c);\n            }\n  \
    \          if(c == '@') {\n                sb.append(c);\n            }\n    \
    \        if(c == '$') {\n                sb.append(c);\n            }\n      \
    \      if(c == '@') {\n                sb.append(c);\n            }\n        \
    \    if(c == '#') {\n                sb.append(c);\n            }\n          \
    \  if(c == '@') {\n                sb.append(c);\n            }\n            if(c\
    \ == '$') {\n                sb.append(c);\n            }\n            if(c ==\
    \ '@') {\n                sb.append(c);\n            }\n            if(c == '#')\
    \ {\n                sb.append(c);\n            }\n            if(c == '@') {\n\
    \                sb.append(c);\n            }\n            if(c == '$') {\n  \
    \              sb.append(c);\n            }\n            if(c == '@') {\n    \
    \            sb.append(c);\n            }\n            if(c == '#') {\n      \
    \          sb.append(c);\n            }\n            if(c == '@') {\n        \
    \        sb.append(c);\n            }\n            if(c == '$') {\n          \
    \      sb.append(c);\n            }\n            if(c == '@') {\n            \
    \    sb.append(c);\n            }\n            if(c == '#') {\n              \
    \  sb.append(c);\n            }\n            if(c == '@') {\n                sb.append(c);\n\
    \            }\n            if(c == '$') {\n                sb.append(c);\n  \
    \          }\n            if(c == '@') {\n                sb.append(c);\n    \
    \        }\n            if(c == '#') {\n                sb.append(c);\n      \
    \      }\n            if(c == '@') {\n                sb.append(c);\n        \
    \    }\n            if(c == '$') {\n                sb.append(c);\n          \
    \  }\n            if(c == '@') {\n                sb.append(c);\n            }\n\
    \            if(c == '#') {\n                sb.\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3823lsqm.java:118: error: <identifier> expected\n             \
    \   sb.\n                   ^\n/tmp/tmp3823lsqm.java:118: error: not a statement\n\
    \                sb.\n                  ^\n/tmp/tmp3823lsqm.java:120: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \         } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6gwdo53.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmput5f47uo.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uufbas3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph563ecem.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9063z77.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyhp09xc6.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yq8htvy.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8t1kuo61.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfio9fjho.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '@') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '$') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '.') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == '!') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '&') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == '(') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == ')') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '*') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '+') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == ',') {\n              \
    \  sb.append(c);\n                continue;\n            }\n            if(c ==\
    \ '-') {\n                sb.append(c);\n                continue;\n         \
    \   }\n            if(c == '.') {\n                sb.append(c);\n           \
    \     continue;\n            }\n            if(c == '/') {\n                sb.append(c);\n\
    \                continue;\n            }\n            if(c == '=') {\n      \
    \          sb.append(c);\n                continue;\n            }\n         \
    \   if(c == '<') {\n                sb.append(c);\n                continue;\n\
    \            }\n            if(c == '>') {\n                sb.append(c);\n  \
    \              continue;\n            }\n            if(c == '?') {\n        \
    \        sb.append(c);\n                continue;\n            }\n           \
    \ if(c == '[') {\n                sb.append(c);\n                continue;\n \
    \           }\n            if(c == ']') {\n                sb.append(c);\n   \
    \             continue;\n            }\n            if(c == '^') {\n         \
    \       sb.append(c);\n                continue;\n            }\n            if(c\
    \ == '{') {\n                sb.append(c);\n                continue;\n      \
    \      }\n            if(c == '}') {\n                sb.append(c);\n        \
    \        continue;\n            }\n            if(c == '|') {\n              \
    \  sb.append(c);\n                continue;\n            }\n            if(c ==\
    \ '~') {\n                sb.append(c);\n                continue;\n         \
    \   }\n            if(c == '!') {\n                sb.append(c);\n           \
    \     continue;\n            }\n            if(c == '%') {\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl1xry0ji.java:131: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for(int i = 0; i\
    \ < chars.length; i++) {\n            char c = chars[i];\n            if(Character.isLetter(c))\
    \ {\n                if(flag) {\n                    sb.append(Character.toUpperCase(c));\n\
    \                    flag = false;\n                } else {\n               \
    \     sb.append(Character.toLowerCase(c));\n                    flag = true;\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8sazj3x.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \                sb.append(Character.toLowerCase(arr[i+1]));\n               \
    \ i++;\n            }\n            else {\n                sb.append(c);\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz9xu488.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodrcgtwt.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if(chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            if(chars[i] == 'c' || chars[i] == 'C') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == 'd' || chars[i] == 'D') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'e'\
    \ || chars[i] == 'E') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'f' || chars[i] == 'F') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'g' || chars[i] == 'G') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'h'\
    \ || chars[i] == 'H') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'i' || chars[i] == 'I') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'j' || chars[i] == 'J') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'k'\
    \ || chars[i] == 'K') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'l' || chars[i] == 'L') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'm' || chars[i] == 'M') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'n'\
    \ || chars[i] == 'N') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'o' || chars[i] == 'O') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'p' || chars[i] == 'P') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'q'\
    \ || chars[i] == 'Q') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'r' || chars[i] == 'R') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 's' || chars[i] == 'S') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 't'\
    \ || chars[i] == 'T') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'u' || chars[i] == 'U') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'v' || chars[i] == 'V') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'w'\
    \ || chars[i] == 'W') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'x' || chars[i] == 'X') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'y' || chars[i] == 'Y') {\n\
    \                isLetter = true;\n            }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbqu32y_j.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = true;\n        for (int i =\
    \ 0; i < chars.length; i++) {\n            if (chars[i] >= 'a' && chars[i] <=\
    \ 'z') {\n                isLetter = true;\n            } else if (chars[i] >=\
    \ 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n            } else\
    \ {\n                isLetter = false;\n            }\n        }\n        if (isLetter)\
    \ {\n            for (int i = 0; i < chars.length; i++) {\n                if\
    \ (chars[i] >= 'a' && chars[i] <= 'z') {\n                    sb.append(chars[i]\
    \ + 32 - 'a');\n                } else if (chars[i] >= 'A' && chars[i] <= 'Z')\
    \ {\n                    sb.append(chars[i] + 32 - 'A');\n                } else\
    \ {\n                    sb.append(chars[i]);\n                }\n           \
    \ }\n        } else {\n            for (int i = 0; i < chars.length; i++) {\n\
    \                sb.append(chars[i]);\n            }\n        }\n        return\
    \ sb.toString();\n\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm94d7ngb.java:51)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgysiqzdn.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdo5to96_.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8bw_x30.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(chars[i] >= 'a' && chars[i] <= 'z') {\n                sb.append(chars[i]\
    \ + 32 - 'a');\n            } else if(chars[i] >= 'A' && chars[i] <= 'Z') {\n\
    \                sb.append(chars[i] + 32 - 'A');\n            } else {\n     \
    \           sb.append(chars[i]);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ez8qdr1.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuoys_mz2.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2__5k8j.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bidaui8.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == 'a' || c == 'A') {\n          \
    \      c = Character.toUpperCase(c);\n            } else if(c == 'b' || c == 'B')\
    \ {\n                c = Character.toLowerCase(c);\n            } else if(c ==\
    \ '#' || c == '@') {\n                c = Character.toUpperCase(c);\n        \
    \        c = Character.toLowerCase(c);\n            } else if(c == 'c' || c ==\
    \ 'C') {\n                c = Character.toUpperCase(c);\n                c = Character.toLowerCase(c);\n\
    \            }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqegypzjl.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        char c = arr[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(arr[i]));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw86mzgt1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean isLetter = false;\n        for (int\
    \ i = 0; i < chars.length; i++) {\n            if (chars[i] == 'a' || chars[i]\
    \ == 'A') {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == '#' || chars[i] == '@') {\n                isLetter = false;\n          \
    \  }\n            if (chars[i] == '#' || chars[i] == '@') {\n                isLetter\
    \ = false;\n            }\n            if (chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == '#' || chars[i] == '@') {\n                isLetter = false;\n          \
    \  }\n            if (chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == '#' || chars[i] == '@')\
    \ {\n                isLetter = false;\n            }\n            if (chars[i]\
    \ == 'a' || chars[i] == 'A') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == '#' || chars[i] == '@') {\n                isLetter\
    \ = false;\n            }\n            if (chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == '#' || chars[i] == '@') {\n                isLetter = false;\n          \
    \  }\n            if (chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == '#' || chars[i] == '@')\
    \ {\n                isLetter = false;\n            }\n            if (chars[i]\
    \ == 'a' || chars[i] == 'A') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == '#' || chars[i] == '@') {\n                isLetter\
    \ = false;\n            }\n            if (chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == '#' || chars[i] == '@') {\n                isLetter = false;\n          \
    \  }\n            if (chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == '#' || chars[i] == '@')\
    \ {\n                isLetter = false;\n            }\n            if (chars[i]\
    \ == 'a' || chars[i] == 'A') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == '#' || chars[i] == '@') {\n                isLetter\
    \ = false;\n            }\n            if (chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == '#' || chars[i] == '@') {\n                isLetter = false;\n          \
    \  }\n            if (chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == '#' || chars[i] == '@')\
    \ {\n                isLetter = false;\n            }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvxjzlkle.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_88v6f5.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \             sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc6sobmb.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        boolean flag = true;\n        for(int i = 0; i < arr.length; i++) {\n\
    \            if(arr[i] >= 'a' && arr[i] <= 'z') {\n                arr[i] = Character.toUpperCase(arr[i]);\n\
    \                flag = false;\n            }\n            else if(arr[i] >= 'A'\
    \ && arr[i] <= 'Z') {\n                arr[i] = Character.toLowerCase(arr[i]);\n\
    \                flag = false;\n            }\n        }\n        if(flag) {\n\
    \            for(int i = 0; i < arr.length; i++) {\n                sb.append(arr[i]);\n\
    \            }\n        }\n        else {\n            for(int i = 0; i < arr.length;\
    \ i++) {\n                sb.append(arr[i]);\n            }\n        }\n     \
    \   return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaaxy_fom.java:47)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkhpgsy4d.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2dne4_6.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                c = Character.toUpperCase(c);\n            } else {\n   \
    \             c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkpd630d.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ for (char c : chars) {\n            if (Character.isLetter(c)) {\n         \
    \       c = Character.toUpperCase(c);\n            } else {\n                c\
    \ = Character.toLowerCase(c);\n            }\n            sb.append(c);\n    \
    \    }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoos5d1ts.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; ++i) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe5571i8.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0c_6zfs.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzczqfmkj.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(Character.isLetter(c)) {\n \
    \               sb.append(Character.toUpperCase(c));\n            } else {\n \
    \               sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpcsmkef.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        boolean flag = false;\n        for (int i = 0; i < arr.length; i++) {\n\
    \            if (arr[i] >= 'a' && arr[i] <= 'z') {\n                flag = true;\n\
    \                sb.append(arr[i]);\n            } else {\n                flag\
    \ = false;\n            }\n        }\n        if (flag) {\n            Arrays.sort(arr);\n\
    \            for (int i = 0; i < arr.length; i++) {\n                sb.append(arr[i]);\n\
    \            }\n        } else {\n            Arrays.sort(arr);\n            for\
    \ (int i = 0; i < arr.length; i++) {\n                sb.append(arr[i]);\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiix5_rc0.java:46)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nidecc8.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == '#') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == '@') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yl5c_18.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp207d4e74.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0s4gp5v.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkavdtn72.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvu2h36q.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean first = true;\n        for (char\
    \ c : chars) {\n            if (first) {\n                first = false;\n   \
    \         } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6hkgjexo.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++) {\n \
    \           char c = s.charAt(i);\n            if(c == 'a' || c == 'A') {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecihj40h.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = true;\n        for (char c :\
    \ chars) {\n            if (Character.isLetter(c)) {\n                isLetter\
    \ = true;\n            } else {\n                isLetter = false;\n         \
    \   }\n        }\n        if (isLetter) {\n            for (int i = 0; i < chars.length;\
    \ i++) {\n                sb.append(Character.toUpperCase(chars[i]));\n      \
    \      }\n        } else {\n            for (int i = 0; i < chars.length; i++)\
    \ {\n                sb.append(Character.toLowerCase(chars[i]));\n           \
    \ }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l4aesya.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] >= 'a' && chars[i] <= 'z')\
    \ {\n                isLetter = true;\n            }\n            if(chars[i]\
    \ >= 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n           \
    \ }\n            if(chars[i] == '#') {\n                isLetter = true;\n   \
    \         }\n            if(chars[i] == '@') {\n                isLetter = true;\n\
    \            }\n            if(chars[i] == '$') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == '!') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '.') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '/') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '-') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '+') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '(') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == ')') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '[') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == ']') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '{') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '}') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '*') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '&') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '^') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '%') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '~') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '|') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '=') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '<') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '>') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '?') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '!') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '.') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '/') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '-') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '+') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == '(') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == ')') {\n                isLetter\
    \ = true;\n            }\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9m6uub8a.java:124: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (char c : arr) {\n            boolean isLetter\
    \ = Character.isLetter(c);\n            if (isLetter) {\n                c = Character.toUpperCase(c);\n\
    \            } else {\n                c = Character.toLowerCase(c);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwhvj6e_.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml1vr5ko.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean isLetter = false;\n        for(int i =\
    \ 0; i < chars.length; i++) {\n            if(chars[i] == 'a' || chars[i] == 'A')\
    \ {\n                isLetter = true;\n            }\n            if(chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            if(chars[i] == 'c' || chars[i] == 'C') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == 'd' || chars[i] == 'D') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'e'\
    \ || chars[i] == 'E') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'f' || chars[i] == 'F') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'g' || chars[i] == 'G') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'h'\
    \ || chars[i] == 'H') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'i' || chars[i] == 'I') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'j' || chars[i] == 'J') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'k'\
    \ || chars[i] == 'K') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'l' || chars[i] == 'L') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'm' || chars[i] == 'M') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'n'\
    \ || chars[i] == 'N') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'o' || chars[i] == 'O') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'p' || chars[i] == 'P') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'q'\
    \ || chars[i] == 'Q') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'r' || chars[i] == 'R') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 's' || chars[i] == 'S') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 't'\
    \ || chars[i] == 'T') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'u' || chars[i] == 'U') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'v' || chars[i] == 'V') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'w'\
    \ || chars[i] == 'W') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'x' || chars[i] == 'X') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'y' || chars[i] == 'Y') {\n\
    \                isLetter = true;\n            }\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppb_wpsnv.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9x905xt.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbwftvf78.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++){\n\
    \            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqxni70e.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0rz1n86.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8c1t8ra.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean first = true;\n        for (int i = 0;\
    \ i < chars.length; i++) {\n            if (chars[i] >= 'a' && chars[i] <= 'z')\
    \ {\n                if (first) {\n                    first = false;\n      \
    \          } else {\n                    sb.append(chars[i]);\n              \
    \  }\n            } else {\n                sb.append(chars[i]);\n           \
    \ }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxk6__5d.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean flag = false;\n        for(int i = 0; i\
    \ < chars.length; i++){\n            if(chars[i] == ' '){\n                flag\
    \ = true;\n            }\n            if(flag){\n                sb.append(chars[i]);\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmploy13nao.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi75ox8ps.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        boolean first = true;\n        for (char c : chars)\
    \ {\n            if (first) {\n                first = false;\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfxp_lfkx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjbnjpc9.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(char c : s.toCharArray()) {\n       \
    \     if(c>='a' && c<='z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c>='A' && c<='Z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk17wquix.java:34)\n"
  exit_code: 1
  status: Exception

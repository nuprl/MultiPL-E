name: HumanEval_152_compare
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwe7gsldr.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpwe7gsldr.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ maxScore = game.get(game.size()-1);\n        long maxGuess = guess.get(guess.size()-1);\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(guess == maxGuess)\n                result.add(0);\n\
    \            else if(difference > maxScore)\n                result.add(difference);\n\
    \            else\n                result.add(maxScore - difference);\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnh55v4nn.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpnh55v4nn.java:25: error: long cannot be dereferenced\n      \
    \  long maxGuess = guess.get(guess.size()-1);\n                              \
    \         ^\n/tmp/tmpnh55v4nn.java:25: error: long cannot be dereferenced\n  \
    \      long maxGuess = guess.get(guess.size()-1);\n                          \
    \   ^\n/tmp/tmpnh55v4nn.java:28: error: long cannot be dereferenced\n        \
    \    guess = guess.get(i);\n                         ^\n/tmp/tmpnh55v4nn.java:31:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj0452un5.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpj0452un5.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe3l9957r.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpe3l9957r.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu7aoz8t3.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpu7aoz8t3.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpza08q5xe.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpza08q5xe.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvaqg0_nj.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpvaqg0_nj.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long maxDiff\
    \ = 0;\n        long maxScore = 0;\n        long maxGuess = 0;\n        long maxDiff2\
    \ = 0;\n        long maxScore2 = 0;\n        long maxGuess2 = 0;\n        long\
    \ maxDiff3 = 0;\n        long maxScore3 = 0;\n        long maxGuess3 = 0;\n  \
    \      long maxDiff4 = 0;\n        long maxScore4 = 0;\n        long maxGuess4\
    \ = 0;\n        long maxDiff5 = 0;\n        long maxScore5 = 0;\n        long\
    \ maxGuess5 = 0;\n        long maxDiff6 = 0;\n        long maxScore6 = 0;\n  \
    \      long maxGuess6 = 0;\n        long maxDiff7 = 0;\n        long maxScore7\
    \ = 0;\n        long maxGuess7 = 0;\n        long maxDiff8 = 0;\n        long\
    \ maxScore8 = 0;\n        long maxGuess8 = 0;\n        long maxDiff9 = 0;\n  \
    \      long maxScore9 = 0;\n        long maxGuess9 = 0;\n        long maxDiff10\
    \ = 0;\n        long maxScore10 = 0;\n        long maxGuess10 = 0;\n        long\
    \ maxDiff11 = 0;\n        long maxScore11 = 0;\n        long maxGuess11 = 0;\n\
    \        long maxDiff12 = 0;\n        long maxScore12 = 0;\n        long maxGuess12\
    \ = 0;\n        long maxDiff13 = 0;\n        long maxScore13 = 0;\n        long\
    \ maxGuess13 = 0;\n        long maxDiff14 = 0;\n        long maxScore14 = 0;\n\
    \        long maxGuess14 = 0;\n        long maxDiff15 = 0;\n        long maxScore15\
    \ = 0;\n        long maxGuess15 = 0;\n        long maxDiff16 = 0;\n        long\
    \ maxScore16 = 0;\n        long maxGuess16 = 0;\n        long maxDiff17 = 0;\n\
    \        long maxScore17 = 0;\n        long maxGuess17 = 0;\n        long maxDiff18\
    \ = 0;\n        long maxScore18 = 0;\n        long maxGuess18 = 0;\n        long\
    \ maxDiff19 = 0;\n        long maxScore19 = 0;\n        long maxGuess19 = 0;\n\
    \        long maxDiff20 = 0;\n        long maxScore20 = 0;\n        long maxGuess20\
    \ = 0;\n        long maxDiff21 = 0;\n        long maxScore21 = 0;\n        long\
    \ maxGuess21 = 0;\n        long maxDiff22 = 0;\n        long maxScore22 = 0;\n\
    \        long maxGuess22 = 0;\n        long maxDiff23 = 0;\n        long maxScore23\
    \ = 0;\n        long maxGuess\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp93mxur5g.java:92: error: ';' expected\n        long maxGuess\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0nsrvao.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq0nsrvao.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplbax_rp_.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmplbax_rp_.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfymdpeq3.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpfymdpeq3.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpijdv9nea.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpijdv9nea.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0jgea49a.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp0jgea49a.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkodhk5pf.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ptag36f.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp9ptag36f.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long maxScore\
    \ = game.get(game.size()-1);\n        long maxGuess = guess.get(guess.size()-1);\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            diff = guess - score;\n      \
    \      if(diff < 0) {\n                diff = -diff;\n            }\n        \
    \    if(diff == 0) {\n                result.add(0, diff);\n            } else\
    \ {\n                result.add(Math.abs(diff));\n            }\n        }\n \
    \       for(int i = 0; i < guess.size(); i++) {\n            score = game.get(game.size()-1);\n\
    \            guess = guess.get(i);\n            diff = guess - score;\n      \
    \      if(diff < 0) {\n                diff = -diff;\n            }\n        \
    \    if(diff == 0) {\n                result.add(0, diff);\n            } else\
    \ {\n                result.add(Math.abs(diff));\n            }\n        }\n \
    \       return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_v9xx10.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpt_v9xx10.java:25: error: long cannot be dereferenced\n      \
    \  long maxGuess = guess.get(guess.size()-1);\n                              \
    \         ^\n/tmp/tmpt_v9xx10.java:25: error: long cannot be dereferenced\n  \
    \      long maxGuess = guess.get(guess.size()-1);\n                          \
    \   ^\n/tmp/tmpt_v9xx10.java:28: error: long cannot be dereferenced\n        \
    \    guess = guess.get(i);\n                         ^\n/tmp/tmpt_v9xx10.java:39:\
    \ error: long cannot be dereferenced\n        for(int i = 0; i < guess.size();\
    \ i++) {\n                                ^\n/tmp/tmpt_v9xx10.java:41: error:\
    \ long cannot be dereferenced\n            guess = guess.get(i);\n           \
    \              ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtxchhnl.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv_b3izqc.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpv_b3izqc.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb9m2cvih.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpb9m2cvih.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphk1qvcgo.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv1kix2hh.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpv1kix2hh.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            result.add(0);\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjhxoya6g.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpjhxoya6g.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpjhxoya6g.java:35:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6gry4ndy.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp6gry4ndy.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long diff = game.get(i) - guess.get(i);\n\
    \            result.add(Math.abs(diff));\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0lvowfkj.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp0lvowfkj.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpylm4t1gg.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            result.add(0);\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbt7n8ws3.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpbt7n8ws3.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpbt7n8ws3.java:35:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfna0igaz.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfna0igaz.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        for (long score : game) {\n            total += score;\n\
    \        }\n        for (long guess: guess) {\n            total -= guess;\n \
    \       }\n        for (long score : game) {\n            long diff = total -\
    \ score;\n            result.add(diff < 0 ? diff : 0);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyzj3bi5j.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        for (long guess: guess) {\n\
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcdtu8qzo.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            if (game.get(i) == guess.get(i))\
    \ {\n                score++;\n            } else {\n                guess = game.get(i);\n\
    \                diff = guess - score;\n                result.add(diff);\n  \
    \              score = 0;\n            }\n        }\n        if (score == game.size())\
    \ {\n            result.add(0);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn1nmppv6.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpn1nmppv6.java:25: error: long cannot be dereferenced\n      \
    \      if (game.get(i) == guess.get(i)) {\n                                  \
    \  ^\n/tmp/tmpn1nmppv6.java:35: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(0);\n                       ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            diff = guess.get(i) -\
    \ score;\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqeg82g7.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptpgdc6nh.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptpgdc6nh.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb25_ts4u.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpb25_ts4u.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz6qazz6z.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpz6qazz6z.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsmb37372.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpsmb37372.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkyw1wo79.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpkyw1wo79.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq_atppor.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq_atppor.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn620j4kt.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpn620j4kt.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long diff = game.get(i) - guess.get(i);\n\
    \            result.add(Math.abs(diff));\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long score = 0;\n        long difference = 0;\n        long\
    \ guessed = 0;\n        long guessed2 = 0;\n        long guessed3 = 0;\n     \
    \   long guessed4 = 0;\n        long guessed5 = 0;\n        long guessed6 = 0;\n\
    \        long guessed7 = 0;\n        long guessed8 = 0;\n        long guessed9\
    \ = 0;\n        long guessed10 = 0;\n        long guessed11 = 0;\n        long\
    \ guessed12 = 0;\n        long guessed13 = 0;\n        long guessed14 = 0;\n \
    \       long guessed15 = 0;\n        long guessed16 = 0;\n        long guessed17\
    \ = 0;\n        long guessed18 = 0;\n        long guessed19 = 0;\n        long\
    \ guessed20 = 0;\n        long guessed21 = 0;\n        long guessed22 = 0;\n \
    \       long guessed23 = 0;\n        long guessed24 = 0;\n        long guessed25\
    \ = 0;\n        long guessed26 = 0;\n        long guessed27 = 0;\n        long\
    \ guessed28 = 0;\n        long guessed29 = 0;\n        long guessed30 = 0;\n \
    \       long guessed31 = 0;\n        long guessed32 = 0;\n        long guessed33\
    \ = 0;\n        long guessed34 = 0;\n        long guessed35 = 0;\n        long\
    \ guessed36 = 0;\n        long guessed37 = 0;\n        long guessed38 = 0;\n \
    \       long guessed39 = 0;\n        long guessed40 = 0;\n        long guessed41\
    \ = 0;\n        long guessed42 = 0;\n        long guessed43 = 0;\n        long\
    \ guessed44 = 0;\n        long guessed45 = 0;\n        long guessed46 = 0;\n \
    \       long guessed47 = 0;\n        long guessed48 = 0;\n        long guessed49\
    \ = 0;\n        long guessed50 = 0;\n        long guessed51 = 0;\n        long\
    \ guessed52 = 0;\n        long guessed53 = 0;\n        long guessed54 = 0;\n \
    \       long guessed55 = 0;\n        long guessed56 = 0;\n        long guessed57\
    \ = 0;\n        long guessed58 = 0;\n        long guessed59 = 0;\n        long\
    \ guessed60 = 0;\n        long guessed61 = 0;\n        long guessed62 = 0;\n \
    \       long guessed63 = 0;\n        long guessed64 = 0;\n        long guessed65\
    \ = 0;\n        long guessed66 = 0;\n        long guessed67 = 0;\n        long\
    \ guessed68 = 0;\n        long guessed69 = 0;\n        long guessed70 = 0;\n \
    \       long gues\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpybaymopv.java:94: error: ';' expected\n        long gues\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4qz0gork.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp4qz0gork.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptsqnbkes.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptsqnbkes.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp9tjzecd.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpp9tjzecd.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long total2 = 0;\n        long total3 = 0;\n        long\
    \ total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n        long\
    \ total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n        long\
    \ total10 = 0;\n        long total11 = 0;\n        long total12 = 0;\n       \
    \ long total13 = 0;\n        long total14 = 0;\n        long total15 = 0;\n  \
    \      long total16 = 0;\n        long total17 = 0;\n        long total18 = 0;\n\
    \        long total19 = 0;\n        long total20 = 0;\n        long total21 =\
    \ 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n        long total83 = 0;\n        long total84\
    \ = 0;\n        long total85\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprag8ew9s.java:105: error: ';' expected\n        long total85\n\
    \                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk2_9j6s6.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpk2_9j6s6.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo_sio8ot.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpo_sio8ot.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7o55azv1.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp7o55azv1.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        int i = 0;\n        int j = 0;\n\
    \        boolean correct = false;\n        boolean found = false;\n        boolean\
    \ found2 = false;\n        boolean found3 = false;\n        boolean found4 = false;\n\
    \        boolean found5 = false;\n        boolean found6 = false;\n        boolean\
    \ found7 = false;\n        boolean found8 = false;\n        boolean found9 = false;\n\
    \        boolean found10 = false;\n        boolean found11 = false;\n        boolean\
    \ found12 = false;\n        boolean found13 = false;\n        boolean found14\
    \ = false;\n        boolean found15 = false;\n        boolean found16 = false;\n\
    \        boolean found17 = false;\n        boolean found18 = false;\n        boolean\
    \ found19 = false;\n        boolean found20 = false;\n        boolean found21\
    \ = false;\n        boolean found22 = false;\n        boolean found23 = false;\n\
    \        boolean found24 = false;\n        boolean found25 = false;\n        boolean\
    \ found26 = false;\n        boolean found27 = false;\n        boolean found28\
    \ = false;\n        boolean found29 = false;\n        boolean found30 = false;\n\
    \        boolean found31 = false;\n        boolean found32 = false;\n        boolean\
    \ found33 = false;\n        boolean found34 = false;\n        boolean found35\
    \ = false;\n        boolean found36 = false;\n        boolean found37 = false;\n\
    \        boolean found38 = false;\n        boolean found39 = false;\n        boolean\
    \ found40 = false;\n        boolean found41 = false;\n        boolean found42\
    \ = false;\n        boolean found43 = false;\n        boolean found44 = false;\n\
    \        boolean found45 = false;\n        boolean found46 = false;\n        boolean\
    \ found47 = false;\n        boolean found48 = false;\n        boolean found49\
    \ = false;\n        boolean found50 = false;\n        boolean found51 = false;\n\
    \        boolean found52 = false;\n        boolean found53 = false;\n        boolean\
    \ found54 = false;\n        boolean found55 = false;\n        boolean found56\
    \ = false;\n        boolean found57 = false;\n        boolean found58 = false;\n\
    \        boolean found59 = false;\n        boolean found60 = false;\n        boolean\
    \ found61 = false;\n        boolean found62 = false;\n        boolean found63\
    \ = false;\n        boolean found64 = false;\n        boolean found65 = false;\n\
    \        boolean found66 = false;\n        boolean found67 = false;\n        boolean\
    \ found68 = false;\n        boolean found69 = false;\n        boolean found70\
    \ = false;\n        boolean found71 = false;\n        boolean found72 = false;\n\
    \        boolean found73 = false;\n        boolean found74 = false;\n        boolean\
    \ found75 = false;\n        boolean found76 = false;\n        boolean found77\
    \ = false;\n        boolean found\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4jp0c4f.java:103: error: ';' expected\n        boolean found\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwvy50s51.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpwvy50s51.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuf8dz7a2.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpuf8dz7a2.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ gameSum = game.reduce((a, b) -> a + b);\n        long guessSum = guess.reduce((a,\
    \ b) -> a + b);\n        long gameDiff = gameSum - guessSum;\n        long guessDiff\
    \ = guessSum - gameSum;\n        long diff = 0;\n        long diffAbs = 0;\n \
    \       for (int i = 0; i < game.size(); i++) {\n            if (game.get(i) ==\
    \ guess.get(i)) {\n                result.add(0, 0);\n            } else {\n \
    \               diff = game.get(i) - guess.get(i);\n                diffAbs =\
    \ Math.abs(diff);\n                result.add(diffAbs);\n            }\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprjtokduo.java:21: error: cannot find symbol\n        long gameSum\
    \ = game.reduce((a, b) -> a + b);\n                           ^\n  symbol:   method\
    \ reduce((a,b)->a + b)\n  location: variable game of type ArrayList<Long>\n/tmp/tmprjtokduo.java:22:\
    \ error: cannot find symbol\n        long guessSum = guess.reduce((a, b) -> a\
    \ + b);\n                             ^\n  symbol:   method reduce((a,b)->a +\
    \ b)\n  location: variable guess of type ArrayList<Long>\n/tmp/tmprjtokduo.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0, 0);\n                              ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9qa8vlk1.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9qa8vlk1.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwil4wvdt.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpwil4wvdt.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsaichg96.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpsaichg96.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe38iewb5.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpe38iewb5.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3vodmlun.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp3vodmlun.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvb7xmukm.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpvb7xmukm.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ total = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score\
    \ = game.get(i);\n            guess = guess.get(i);\n            difference =\
    \ Math.abs(guess - score);\n            total += difference;\n            result.add(difference);\n\
    \        }\n        if(game.size() == guess.size()) {\n            for(int i =\
    \ 0; i < game.size(); i++) {\n                score = game.get(i);\n         \
    \       guess = guess.get(i);\n                difference = Math.abs(guess - score);\n\
    \                total += difference;\n                result.add(difference);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_6ia6134.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_6ia6134.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp_6ia6134.java:32:\
    \ error: long cannot be dereferenced\n        if(game.size() == guess.size())\
    \ {\n                               ^\n/tmp/tmp_6ia6134.java:35: error: long cannot\
    \ be dereferenced\n                guess = guess.get(i);\n                   \
    \          ^\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa3q8ithk.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbun9_dob.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpbun9_dob.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ scoreDifference = 0;\n        long scoreDifference2 = 0;\n        long scoreDifference3\
    \ = 0;\n        long scoreDifference4 = 0;\n        long scoreDifference5 = 0;\n\
    \        long scoreDifference6 = 0;\n        long scoreDifference7 = 0;\n    \
    \    long scoreDifference8 = 0;\n        long scoreDifference9 = 0;\n        long\
    \ scoreDifference10 = 0;\n        long scoreDifference11 = 0;\n        long scoreDifference12\
    \ = 0;\n        long scoreDifference13 = 0;\n        long scoreDifference14 =\
    \ 0;\n        long scoreDifference15 = 0;\n        long scoreDifference16 = 0;\n\
    \        long scoreDifference17 = 0;\n        long scoreDifference18 = 0;\n  \
    \      long scoreDifference19 = 0;\n        long scoreDifference20 = 0;\n    \
    \    long scoreDifference21 = 0;\n        long scoreDifference22 = 0;\n      \
    \  long scoreDifference23 = 0;\n        long scoreDifference24 = 0;\n        long\
    \ scoreDifference25 = 0;\n        long scoreDifference26 = 0;\n        long scoreDifference27\
    \ = 0;\n        long scoreDifference28 = 0;\n        long scoreDifference29 =\
    \ 0;\n        long scoreDifference30 = 0;\n        long scoreDifference31 = 0;\n\
    \        long scoreDifference32 = 0;\n        long scoreDifference33 = 0;\n  \
    \      long scoreDifference34 = 0;\n        long scoreDifference35 = 0;\n    \
    \    long scoreDifference36 = 0;\n        long scoreDifference37 = 0;\n      \
    \  long scoreDifference38 = 0;\n        long scoreDifference39 = 0;\n        long\
    \ scoreDifference40 = 0;\n        long scoreDifference41 = 0;\n        long scoreDifference42\
    \ = 0;\n        long scoreDifference43 = 0;\n        long scoreDifference44 =\
    \ 0;\n        long scoreDifference45 = 0;\n        long scoreDifference46 = 0;\n\
    \        long scoreDifference47 = 0;\n        long scoreDifference48 = 0;\n  \
    \      long scoreDifference49 = 0;\n        long scoreDifference50 = 0;\n    \
    \    long scoreDifference51 = 0;\n        long scoreDifference52 = 0;\n      \
    \  long scoreDifference53 = 0;\n        long scoreDifference54 = 0;\n        long\
    \ scoreDifference55 = 0;\n        long scoreDifference56 = 0;\n        long scoreDifference57\
    \ = 0;\n        long scoreDifference58 = 0;\n        long scoreDifference59 =\
    \ 0;\n        long scoreDifference60 = 0;\n        long scoreDifference61 = 0;\n\
    \        long scoreDifference62 = 0;\n        long scoreDifference63 = 0;\n  \
    \      long scoreDifference64 = 0;\n        long scoreDifference65 = 0;\n    \
    \    long scoreDifference66 = 0;\n        long scoreDifference67 = 0;\n      \
    \  long scoreDifference68 = 0;\n        long scoreDifference69 = 0;\n        long\
    \ scoreDifference70 = 0;\n        long score\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdejd81qy.java:94: error: ';' expected\n        long score\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpueykmpk8.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpueykmpk8.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long diff = game.get(i) - guess.get(i);\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxpfbed5z.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpxpfbed5z.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long totalGuess = 0;\n        long totalGuessed = 0;\n \
    \       long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n\
    \        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n\
    \        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n  \
    \      long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n  \
    \      long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwhz25rkf.java:32: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:34: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:36: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:38: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:39: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:40: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:41: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:42: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:43: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:44: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:45: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \         ^\n/tmp/tmpwhz25rkf.java:46: error: variable totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \       ^\n/tmp/tmpwhz25rkf.java:47: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpwhz25rkf.java:48: error: variable totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:49:\
    \ error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly is already defined\
    \ in method compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmpwhz25rkf.java:50: error: variable totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:51:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmpwhz25rkf.java:52: error: variable totalGuessedCorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedCorrectlyIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:53:\
    \ error: variable totalGuessedIncorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:54:\
    \ error: variable totalGuessedCorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedCorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:55:\
    \ error: variable totalGuessedIncorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:56:\
    \ error: variable totalGuessedCorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedCorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:57:\
    \ error: variable totalGuessedIncorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedIncorrectly = 0;\n             ^\n/tmp/tmpwhz25rkf.java:58:\
    \ error: variable totalGuessedCorrectly is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \        long totalGuessedCorrectly = 0;\n             ^\n27 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            correct = guess == score;\n        \
    \    result.add(difference);\n        }\n        if(correct) {\n            return\
    \ result;\n        } else {\n            return result;\n        }\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpddm3ynmt.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpddm3ynmt.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptu7qho4s.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long totalDiff = 0;\n        long totalGuess = 0;\n    \
    \    long totalGuessed = 0;\n        long totalGuessedDiff = 0;\n        long\
    \ totalGuessedGuess = 0;\n        long totalGuessedGuessed = 0;\n        long\
    \ totalGuessedGuessedDiff = 0;\n        long totalGuessedGuessedGuess = 0;\n \
    \       long totalGuessedGuessedGuessed = 0;\n        long totalGuessedGuessedGuessedDiff\
    \ = 0;\n        long totalGuessedGuessedGuessedGuess = 0;\n        long totalGuessedGuessedGuessedGuessed\
    \ = 0;\n        long totalGuessedGuessedGuessedGuessedDiff = 0;\n        long\
    \ totalGuessedGuessedGuessedGuessedGuess = 0;\n        long totalGuessedGuessedGuessedGuessedGuessed\
    \ = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedDiff = 0;\n     \
    \   long totalGuessedGuessedGuessedGuessedGuessedGuess = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedGuessed\
    \ = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedDiff = 0;\n     \
    \   long totalGuessedGuessedGuessedGuessedGuessedGuessed = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedGuessedDiff\
    \ = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedGuessedGuess = 0;\n\
    \        long totalGuessedGuessedGuessedGuessedGuessedGuessedDiff = 0;\n     \
    \   long totalGuessedGuessedGuessedGuessedGuessedGuessedGuess = 0;\n        long\
    \ totalGuessedGuessedGuessedGuessedGuessedGuessedDiff = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedGuessedGuess\
    \ = 0;\n        long totalGuessedGuessedGuessedGuessedGuessedGuessedDiff = 0;\n\
    \        long totalGuessedGuessedGuessedGuessedGuessedGuessedG\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph4_h0lqj.java:49: error: ';' expected\n        long totalGuessedGuessedGuessedGuessedGuessedGuessedG\n\
    \                                                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4\
    \ = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 =\
    \ 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 =\
    \ 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi94vi4z6.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa7hh6yob.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpa7hh6yob.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgjf2ls2n.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpgjf2ls2n.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyjma75ao.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpyjma75ao.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb24ybdgg.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpb24ybdgg.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long diff = game.get(i) - guess.get(i);\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu73g3tav.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdkjceo9i.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq7he45uv.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpq7he45uv.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw2qcnprl.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpw2qcnprl.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ difference2 = 0;\n        long difference3 = 0;\n        long difference4 =\
    \ 0;\n        long difference5 = 0;\n        long difference6 = 0;\n        long\
    \ difference7 = 0;\n        long difference8 = 0;\n        long difference9 =\
    \ 0;\n        long difference10 = 0;\n        long difference11 = 0;\n       \
    \ long difference12 = 0;\n        long difference13 = 0;\n        long difference14\
    \ = 0;\n        long difference15 = 0;\n        long difference16 = 0;\n     \
    \   long difference17 = 0;\n        long difference18 = 0;\n        long difference19\
    \ = 0;\n        long difference20 = 0;\n        long difference21 = 0;\n     \
    \   long difference22 = 0;\n        long difference23 = 0;\n        long difference24\
    \ = 0;\n        long difference25 = 0;\n        long difference26 = 0;\n     \
    \   long difference27 = 0;\n        long difference28 = 0;\n        long difference29\
    \ = 0;\n        long difference30 = 0;\n        long difference31 = 0;\n     \
    \   long difference32 = 0;\n        long difference33 = 0;\n        long difference34\
    \ = 0;\n        long difference35 = 0;\n        long difference36 = 0;\n     \
    \   long difference37 = 0;\n        long difference38 = 0;\n        long difference39\
    \ = 0;\n        long difference40 = 0;\n        long difference41 = 0;\n     \
    \   long difference42 = 0;\n        long difference43 = 0;\n        long difference44\
    \ = 0;\n        long difference45 = 0;\n        long difference46 = 0;\n     \
    \   long difference47 = 0;\n        long difference48 = 0;\n        long difference49\
    \ = 0;\n        long difference50 = 0;\n        long difference51 = 0;\n     \
    \   long difference52 = 0;\n        long difference53 = 0;\n        long difference54\
    \ = 0;\n        long difference55 = 0;\n        long difference56 = 0;\n     \
    \   long difference57 = 0;\n        long difference58 = 0;\n        long difference59\
    \ = 0;\n        long difference60 = 0;\n        long difference61 = 0;\n     \
    \   long difference62 = 0;\n        long difference63 = 0;\n        long difference64\
    \ = 0;\n        long difference65 = 0;\n        long difference66 = 0;\n     \
    \   long difference67 = 0;\n        long difference68 = 0;\n        long difference69\
    \ = 0;\n        long difference70 = 0;\n        long difference71 = 0;\n     \
    \   long difference72 = 0;\n        long difference73 = 0;\n        long difference74\
    \ = 0;\n        long difference75 = 0;\n        long difference76 = 0;\n     \
    \   long difference77 = 0;\n        long difference78 = 0;\n        long difference79\
    \ = 0;\n        long difference80 = 0;\n        long difference81 = 0;\n     \
    \   long difference82 = 0;\n        long difference83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprcgjq4ge.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6t7ntxsj.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp6t7ntxsj.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0x0knzc.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long total2 = 0;\n        long total3 = 0;\n        long\
    \ total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n        long\
    \ total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n        long\
    \ total10 = 0;\n        long total11 = 0;\n        long total12 = 0;\n       \
    \ long total13 = 0;\n        long total14 = 0;\n        long total15 = 0;\n  \
    \      long total16 = 0;\n        long total17 = 0;\n        long total18 = 0;\n\
    \        long total19 = 0;\n        long total20 = 0;\n        long total21 =\
    \ 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n        long total83 = 0;\n        long total84\
    \ = 0;\n        long total85\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9qy41m0s.java:105: error: ';' expected\n        long total85\n\
    \                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwed8pyyo.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpwed8pyyo.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0eax7gx0.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpanu_mssd.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpanu_mssd.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqqej2v61.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpqqej2v61.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0wc3fof9.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp0wc3fof9.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp87msj1bd.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp87msj1bd.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpox7iwb01.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        for (long g : guess) {\n            total += g;\n      \
    \  }\n        for (long g : guess) {\n            long diff = Math.abs(g - game.get((int)(g\
    \ / total)));\n            result.add(diff);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyza07y91.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpji4_ed8q.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpji4_ed8q.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfosucsxt.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpfosucsxt.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjo0kdo5x.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpjo0kdo5x.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpasinpiac.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpasinpiac.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6sgyzew4.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp6sgyzew4.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp20jvz118.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp20jvz118.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy7n1ij45.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpy7n1ij45.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0etj78ig.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdktge1h5.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpdktge1h5.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaepny_7l.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpaepny_7l.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoq21fu1l.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpoq21fu1l.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long totalGuess = 0;\n        long totalGuessed = 0;\n \
    \       long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyCorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyCorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIn\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3jcb2b_h.java:51: error: ';' expected\n        long totalGuessedIn\n\
    \                           ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        long diff2 = 0;\n        long diff3\
    \ = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n        long diff6 =\
    \ 0;\n        long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n\
    \        long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n\
    \        long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n        long diff84 = 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpex_4qqi9.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9xj9ubyu.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9xj9ubyu.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl_9hbnny.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpl_9hbnny.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw6k5ly9u.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpw6k5ly9u.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_n4iq46s.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_n4iq46s.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv9ffl8n9.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpv9ffl8n9.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9pwganke.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9pwganke.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        long guessed = 0;\n        long\
    \ guessedDiff = 0;\n        long total = 0;\n        long totalDiff = 0;\n   \
    \     long totalDiff2 = 0;\n        long totalDiff3 = 0;\n        long totalDiff4\
    \ = 0;\n        long totalDiff5 = 0;\n        long totalDiff6 = 0;\n        long\
    \ totalDiff7 = 0;\n        long totalDiff8 = 0;\n        long totalDiff9 = 0;\n\
    \        long totalDiff10 = 0;\n        long totalDiff11 = 0;\n        long totalDiff12\
    \ = 0;\n        long totalDiff13 = 0;\n        long totalDiff14 = 0;\n       \
    \ long totalDiff15 = 0;\n        long totalDiff16 = 0;\n        long totalDiff17\
    \ = 0;\n        long totalDiff18 = 0;\n        long totalDiff19 = 0;\n       \
    \ long totalDiff20 = 0;\n        long totalDiff21 = 0;\n        long totalDiff22\
    \ = 0;\n        long totalDiff23 = 0;\n        long totalDiff24 = 0;\n       \
    \ long totalDiff25 = 0;\n        long totalDiff26 = 0;\n        long totalDiff27\
    \ = 0;\n        long totalDiff28 = 0;\n        long totalDiff29 = 0;\n       \
    \ long totalDiff30 = 0;\n        long totalDiff31 = 0;\n        long totalDiff32\
    \ = 0;\n        long totalDiff33 = 0;\n        long totalDiff34 = 0;\n       \
    \ long totalDiff35 = 0;\n        long totalDiff36 = 0;\n        long totalDiff37\
    \ = 0;\n        long totalDiff38 = 0;\n        long totalDiff39 = 0;\n       \
    \ long totalDiff40 = 0;\n        long totalDiff41 = 0;\n        long totalDiff42\
    \ = 0;\n        long totalDiff43 = 0;\n        long totalDiff44 = 0;\n       \
    \ long totalDiff45 = 0;\n        long totalDiff46 = 0;\n        long totalDiff47\
    \ = 0;\n        long totalDiff48 = 0;\n        long totalDiff49 = 0;\n       \
    \ long totalDiff50 = 0;\n        long totalDiff51 = 0;\n        long totalDiff52\
    \ = 0;\n        long totalDiff53 = 0;\n        long totalDiff54 = 0;\n       \
    \ long totalDiff55 = 0;\n        long totalDiff56 = 0;\n        long totalDiff57\
    \ = 0;\n        long totalDiff58 = 0;\n        long totalDiff59 = 0;\n       \
    \ long totalDiff60 = 0;\n        long totalDiff61 = 0;\n        long totalDiff62\
    \ = 0;\n        long totalDiff63 = 0;\n        long totalDiff64 = 0;\n       \
    \ long totalDiff65 = 0;\n        long totalDiff66 = 0;\n        long totalDiff67\
    \ = 0;\n        long totalDiff68 = 0;\n        long totalDiff\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0xdq12lq.java:94: error: ';' expected\n        long totalDiff\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ difference2 = 0;\n        long difference3 = 0;\n        long difference4 =\
    \ 0;\n        long difference5 = 0;\n        long difference6 = 0;\n        long\
    \ difference7 = 0;\n        long difference8 = 0;\n        long difference9 =\
    \ 0;\n        long difference10 = 0;\n        long difference11 = 0;\n       \
    \ long difference12 = 0;\n        long difference13 = 0;\n        long difference14\
    \ = 0;\n        long difference15 = 0;\n        long difference16 = 0;\n     \
    \   long difference17 = 0;\n        long difference18 = 0;\n        long difference19\
    \ = 0;\n        long difference20 = 0;\n        long difference21 = 0;\n     \
    \   long difference22 = 0;\n        long difference23 = 0;\n        long difference24\
    \ = 0;\n        long difference25 = 0;\n        long difference26 = 0;\n     \
    \   long difference27 = 0;\n        long difference28 = 0;\n        long difference29\
    \ = 0;\n        long difference30 = 0;\n        long difference31 = 0;\n     \
    \   long difference32 = 0;\n        long difference33 = 0;\n        long difference34\
    \ = 0;\n        long difference35 = 0;\n        long difference36 = 0;\n     \
    \   long difference37 = 0;\n        long difference38 = 0;\n        long difference39\
    \ = 0;\n        long difference40 = 0;\n        long difference41 = 0;\n     \
    \   long difference42 = 0;\n        long difference43 = 0;\n        long difference44\
    \ = 0;\n        long difference45 = 0;\n        long difference46 = 0;\n     \
    \   long difference47 = 0;\n        long difference48 = 0;\n        long difference49\
    \ = 0;\n        long difference50 = 0;\n        long difference51 = 0;\n     \
    \   long difference52 = 0;\n        long difference53 = 0;\n        long difference54\
    \ = 0;\n        long difference55 = 0;\n        long difference56 = 0;\n     \
    \   long difference57 = 0;\n        long difference58 = 0;\n        long difference59\
    \ = 0;\n        long difference60 = 0;\n        long difference61 = 0;\n     \
    \   long difference62 = 0;\n        long difference63 = 0;\n        long difference64\
    \ = 0;\n        long difference65 = 0;\n        long difference66 = 0;\n     \
    \   long difference67 = 0;\n        long difference68 = 0;\n        long difference69\
    \ = 0;\n        long difference70 = 0;\n        long difference71 = 0;\n     \
    \   long difference72 = 0;\n        long difference73 = 0;\n        long difference74\
    \ = 0;\n        long difference75 = 0;\n        long difference76 = 0;\n     \
    \   long difference77 = 0;\n        long difference78 = 0;\n        long difference79\
    \ = 0;\n        long difference80 = 0;\n        long difference81 = 0;\n     \
    \   long difference82 = 0;\n        long difference83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy6dfljeu.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdv_axel7.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdv_axel7.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6v95u418.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp6v95u418.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long scoreDiff\
    \ = 0;\n        long scoreDiff2 = 0;\n        long scoreDiff3 = 0;\n        long\
    \ scoreDiff4 = 0;\n        long scoreDiff5 = 0;\n        long scoreDiff6 = 0;\n\
    \        long scoreDiff7 = 0;\n        long scoreDiff8 = 0;\n        long scoreDiff9\
    \ = 0;\n        long scoreDiff10 = 0;\n        long scoreDiff11 = 0;\n       \
    \ long scoreDiff12 = 0;\n        long scoreDiff13 = 0;\n        long scoreDiff14\
    \ = 0;\n        long scoreDiff15 = 0;\n        long scoreDiff16 = 0;\n       \
    \ long scoreDiff17 = 0;\n        long scoreDiff18 = 0;\n        long scoreDiff19\
    \ = 0;\n        long scoreDiff20 = 0;\n        long scoreDiff21 = 0;\n       \
    \ long scoreDiff22 = 0;\n        long scoreDiff23 = 0;\n        long scoreDiff24\
    \ = 0;\n        long scoreDiff25 = 0;\n        long scoreDiff26 = 0;\n       \
    \ long scoreDiff27 = 0;\n        long scoreDiff28 = 0;\n        long scoreDiff29\
    \ = 0;\n        long scoreDiff30 = 0;\n        long scoreDiff31 = 0;\n       \
    \ long scoreDiff32 = 0;\n        long scoreDiff33 = 0;\n        long scoreDiff34\
    \ = 0;\n        long scoreDiff35 = 0;\n        long scoreDiff36 = 0;\n       \
    \ long scoreDiff37 = 0;\n        long scoreDiff38 = 0;\n        long scoreDiff39\
    \ = 0;\n        long scoreDiff40 = 0;\n        long scoreDiff41 = 0;\n       \
    \ long scoreDiff42 = 0;\n        long scoreDiff43 = 0;\n        long scoreDiff44\
    \ = 0;\n        long scoreDiff45 = 0;\n        long scoreDiff46 = 0;\n       \
    \ long scoreDiff47 = 0;\n        long scoreDiff48 = 0;\n        long scoreDiff49\
    \ = 0;\n        long scoreDiff50 = 0;\n        long scoreDiff51 = 0;\n       \
    \ long scoreDiff52 = 0;\n        long scoreDiff53 = 0;\n        long scoreDiff54\
    \ = 0;\n        long scoreDiff55 = 0;\n        long scoreDiff56 = 0;\n       \
    \ long scoreDiff57 = 0;\n        long scoreDiff58 = 0;\n        long scoreDiff59\
    \ = 0;\n        long scoreDiff60 = 0;\n        long scoreDiff61 = 0;\n       \
    \ long scoreDiff62 = 0;\n        long scoreDiff63 = 0;\n        long scoreDiff64\
    \ = 0;\n        long scoreDiff65 = 0;\n        long scoreDiff66 = 0;\n       \
    \ long scoreDiff67 = 0;\n        long scoreDiff68 = 0;\n        long scoreDiff69\
    \ = 0;\n        long scoreDiff70 = 0;\n        long score\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxydnwyss.java:94: error: ';' expected\n        long score\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9lfhb_je.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp9lfhb_je.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bbeobya.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpugnilbof.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpugnilbof.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsmnn3wol.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpsmnn3wol.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnz3w1ivq.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpnz3w1ivq.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        boolean found = false;\n        for(int i = 0; i <\
    \ game.size(); i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            found = false;\n\
    \            for(int j = 0; j < guess.size(); j++) {\n                if(guess\
    \ == guess.get(j)) {\n                    found = true;\n                    break;\n\
    \                }\n            }\n            if(found) {\n                result.add(difference);\n\
    \            } else {\n                result.add(Math.abs(guess - score));\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn0j4seew.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpn0j4seew.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpn0j4seew.java:31:\
    \ error: long cannot be dereferenced\n            for(int j = 0; j < guess.size();\
    \ j++) {\n                                    ^\n/tmp/tmpn0j4seew.java:32: error:\
    \ long cannot be dereferenced\n                if(guess == guess.get(j)) {\n \
    \                                ^\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphv_c2618.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmphv_c2618.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long max\
    \ = 0;\n        long min = 0;\n        long sum = 0;\n        long count = 0;\n\
    \        long sum2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n  \
    \      long count3 = 0;\n        long sum4 = 0;\n        long count4 = 0;\n  \
    \      long sum5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n    \
    \    long count6 = 0;\n        long sum7 = 0;\n        long count7 = 0;\n    \
    \    long sum8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n      \
    \  long count9 = 0;\n        long sum10 = 0;\n        long count10 = 0;\n    \
    \    long sum11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n   \
    \     long count12 = 0;\n        long sum13 = 0;\n        long count13 = 0;\n\
    \        long sum14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n\
    \        long count15 = 0;\n        long sum16 = 0;\n        long count16 = 0;\n\
    \        long sum17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n\
    \        long count18 = 0;\n        long sum19 = 0;\n        long count19 = 0;\n\
    \        long sum20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n\
    \        long count21 = 0;\n        long sum22 = 0;\n        long count22 = 0;\n\
    \        long sum23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n\
    \        long count24 = 0;\n        long sum25 = 0;\n        long count25 = 0;\n\
    \        long sum26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n\
    \        long count27 = 0;\n        long sum28 = 0;\n        long count28 = 0;\n\
    \        long sum29 = 0;\n        long count29 = 0;\n        long sum30 = 0;\n\
    \        long count30 = 0;\n        long sum31 = 0;\n        long count31 = 0;\n\
    \        long sum32 = 0;\n        long count32 = 0;\n        long sum33 = 0;\n\
    \        long count33 = 0;\n        long sum34 = 0;\n        long count34 = 0;\n\
    \        long sum35 = 0;\n        long count35 = 0;\n        long sum36 = 0;\n\
    \        long count36 = 0;\n        long sum37 = 0;\n        long count37 = 0;\n\
    \        long sum38 = 0;\n        long count38 = 0;\n        long sum39 = 0;\n\
    \        long count39 = 0;\n        long sum40 = 0;\n        long count40 = 0;\n\
    \        long sum41 = 0;\n        long count\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfnppts71.java:107: error: ';' expected\n        long count\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbehllcp9.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpbehllcp9.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0vg3p9ev.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp0vg3p9ev.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ total = 0;\n        long total2 = 0;\n        long total3 = 0;\n        long\
    \ total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n        long\
    \ total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n        long\
    \ total10 = 0;\n        long total11 = 0;\n        long total12 = 0;\n       \
    \ long total13 = 0;\n        long total14 = 0;\n        long total15 = 0;\n  \
    \      long total16 = 0;\n        long total17 = 0;\n        long total18 = 0;\n\
    \        long total19 = 0;\n        long total20 = 0;\n        long total21 =\
    \ 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n        long total83 = 0;\n        long total84\
    \ = 0;\n        long total85\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4zqsdxgg.java:105: error: ';' expected\n        long total85\n\
    \                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp24zpltnl.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp24zpltnl.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ gameSum = game.reduce((a, b) -> a + b);\n        long guessSum = guess.reduce((a,\
    \ b) -> a + b);\n        long difference = gameSum - guessSum;\n        long gameSum2\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum2 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference2 = gameSum2 - guessSum2;\n        long gameSum3\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum3 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference3 = gameSum3 - guessSum3;\n        long gameSum4\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum4 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference4 = gameSum4 - guessSum4;\n        long gameSum5\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum5 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference5 = gameSum5 - guessSum5;\n        long gameSum6\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum6 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference6 = gameSum6 - guessSum6;\n        long gameSum7\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum7 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference7 = gameSum7 - guessSum7;\n        long gameSum8\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum8 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference8 = gameSum8 - guessSum8;\n        long gameSum9\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum9 = guess.reduce((a, b)\
    \ -> a + b);\n        long difference9 = gameSum9 - guessSum9;\n        long gameSum10\
    \ = game.reduce((a, b) -> a + b);\n        long guessSum10 = guess.reduce((a,\
    \ b) -> a + b);\n        long difference10 = gameSum10 - guessSum10;\n       \
    \ long gameSum11 = game.reduce((a, b) -> a + b);\n        long guessSum11 = guess.reduce((a,\
    \ b) -> a + b);\n        long difference11 = gameSum11 - guessSum11;\n       \
    \ long gameSum12 = game.reduce((a, b) -> a + b);\n        long guessSum12 = guess.reduce((a,\
    \ b) -> a + b);\n        long difference12 = gameSum12 - guessSum12;\n       \
    \ long gameSum13 = game.reduce((a, b) -> a + b);\n        long guessSum13 = guess.reduce((a,\
    \ b) -> \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgpnvwz22.java:59: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4\
    \ = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 =\
    \ 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 =\
    \ 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaac2ekji.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz9krd8f4.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpz9krd8f4.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ gameSum = game.reduce((a, b) -> a + b);\n        long guessSum = guess.reduce((a,\
    \ b) -> a + b);\n        long diff = guessSum - gameSum;\n        long diffAbs\
    \ = Math.abs(diff);\n        long diffAbsSum = diffAbs.reduce((a, b) -> a + b);\n\
    \        long diffAbsSumAbs = diffAbsSum.reduce((a, b) -> a + b);\n        long\
    \ diffAbsSumAbsSum = diffAbsSumAbs.reduce((a, b) -> a + b);\n        long diffAbsSumAbsSumAbs\
    \ = diffAbsSumAbsSum.reduce((a, b) -> a + b);\n        long diffAbsSumAbsSumAbsSum\
    \ = diffAbsSumAbsSumAbsSum.reduce((a, b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSum\
    \ = diffAbsSumAbsSumAbsSumAbsSum.reduce((a, b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSumAbs\
    \ = diffAbsSumAbsSumAbsSumAbsSumAbsSum.reduce((a, b) -> a + b);\n        long\
    \ diffAbsSumAbsSumAbsSumAbsSumAbsSum = diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum.reduce((a,\
    \ b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSumAbsSumAbs = diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbs.reduce((a,\
    \ b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum = diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum.reduce((a,\
    \ b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbs = diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum.reduce((a,\
    \ b) -> a + b);\n        long diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum =\
    \ diffAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbsSumAbsSum.reduce((a, b) -> a + b);\n\
    \        long diffAb\n    }\n    public static void main(String[] args) {\n  \
    \  assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5v6qliem.java:37: error: ';' expected\n        long diffAb\n  \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpla39srl3.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpla39srl3.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx5ilmim3.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpx5ilmim3.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7bnwym52.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp7bnwym52.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ difference2 = 0;\n        long difference3 = 0;\n        long difference4 =\
    \ 0;\n        long difference5 = 0;\n        long difference6 = 0;\n        long\
    \ difference7 = 0;\n        long difference8 = 0;\n        long difference9 =\
    \ 0;\n        long difference10 = 0;\n        long difference11 = 0;\n       \
    \ long difference12 = 0;\n        long difference13 = 0;\n        long difference14\
    \ = 0;\n        long difference15 = 0;\n        long difference16 = 0;\n     \
    \   long difference17 = 0;\n        long difference18 = 0;\n        long difference19\
    \ = 0;\n        long difference20 = 0;\n        long difference21 = 0;\n     \
    \   long difference22 = 0;\n        long difference23 = 0;\n        long difference24\
    \ = 0;\n        long difference25 = 0;\n        long difference26 = 0;\n     \
    \   long difference27 = 0;\n        long difference28 = 0;\n        long difference29\
    \ = 0;\n        long difference30 = 0;\n        long difference31 = 0;\n     \
    \   long difference32 = 0;\n        long difference33 = 0;\n        long difference34\
    \ = 0;\n        long difference35 = 0;\n        long difference36 = 0;\n     \
    \   long difference37 = 0;\n        long difference38 = 0;\n        long difference39\
    \ = 0;\n        long difference40 = 0;\n        long difference41 = 0;\n     \
    \   long difference42 = 0;\n        long difference43 = 0;\n        long difference44\
    \ = 0;\n        long difference45 = 0;\n        long difference46 = 0;\n     \
    \   long difference47 = 0;\n        long difference48 = 0;\n        long difference49\
    \ = 0;\n        long difference50 = 0;\n        long difference51 = 0;\n     \
    \   long difference52 = 0;\n        long difference53 = 0;\n        long difference54\
    \ = 0;\n        long difference55 = 0;\n        long difference56 = 0;\n     \
    \   long difference57 = 0;\n        long difference58 = 0;\n        long difference59\
    \ = 0;\n        long difference60 = 0;\n        long difference61 = 0;\n     \
    \   long difference62 = 0;\n        long difference63 = 0;\n        long difference64\
    \ = 0;\n        long difference65 = 0;\n        long difference66 = 0;\n     \
    \   long difference67 = 0;\n        long difference68 = 0;\n        long difference69\
    \ = 0;\n        long difference70 = 0;\n        long difference71 = 0;\n     \
    \   long difference72 = 0;\n        long difference73 = 0;\n        long difference74\
    \ = 0;\n        long difference75 = 0;\n        long difference76 = 0;\n     \
    \   long difference77 = 0;\n        long difference78 = 0;\n        long difference79\
    \ = 0;\n        long difference80 = 0;\n        long difference81 = 0;\n     \
    \   long difference82 = 0;\n        long difference83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5uyizn86.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu5im8dhv.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppy_9m29y.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmppy_9m29y.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        long diff2 = 0;\n        long diff3\
    \ = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n        long diff6 =\
    \ 0;\n        long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n\
    \        long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n\
    \        long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n        long diff84 = 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx3a6aul_.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            diff = guess.get(i) -\
    \ score;\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0nsg01v3.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8rirh5ve.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp8rirh5ve.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl4tlzcsw.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp81a_j8sb.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp81a_j8sb.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkpl6yp_9.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphrqax2mx.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmphrqax2mx.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqbpac5sf.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ gameSum = 0;\n        long guessSum = 0;\n        long diff = 0;\n        int\
    \ gameSize = game.size();\n        int guessSize = guess.size();\n        for(int\
    \ i = 0; i < gameSize; i++) {\n            gameSum += game.get(i);\n        }\n\
    \        for(int i = 0; i < guessSize; i++) {\n            guessSum += guess.get(i);\n\
    \        }\n        for(int i = 0; i < guessSize; i++) {\n            diff = gameSum\
    \ - guessSum;\n            if(game.get(i) == guess.get(i)) {\n               \
    \ result.add(0);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo4ybzmgb.java:35: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(0);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n    \
    \        guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdlfl5evm.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdlfl5evm.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzblvhyc6.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzblvhyc6.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8_1h41q2.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp8_1h41q2.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long scoreDiff\
    \ = 0;\n        long scoreDiff2 = 0;\n        long scoreDiff3 = 0;\n        long\
    \ scoreDiff4 = 0;\n        long scoreDiff5 = 0;\n        long scoreDiff6 = 0;\n\
    \        long scoreDiff7 = 0;\n        long scoreDiff8 = 0;\n        long scoreDiff9\
    \ = 0;\n        long scoreDiff10 = 0;\n        long scoreDiff11 = 0;\n       \
    \ long scoreDiff12 = 0;\n        long scoreDiff13 = 0;\n        long scoreDiff14\
    \ = 0;\n        long scoreDiff15 = 0;\n        long scoreDiff16 = 0;\n       \
    \ long scoreDiff17 = 0;\n        long scoreDiff18 = 0;\n        long scoreDiff19\
    \ = 0;\n        long scoreDiff20 = 0;\n        long scoreDiff21 = 0;\n       \
    \ long scoreDiff22 = 0;\n        long scoreDiff23 = 0;\n        long scoreDiff24\
    \ = 0;\n        long scoreDiff25 = 0;\n        long scoreDiff26 = 0;\n       \
    \ long scoreDiff27 = 0;\n        long scoreDiff28 = 0;\n        long scoreDiff29\
    \ = 0;\n        long scoreDiff30 = 0;\n        long scoreDiff31 = 0;\n       \
    \ long scoreDiff32 = 0;\n        long scoreDiff33 = 0;\n        long scoreDiff34\
    \ = 0;\n        long scoreDiff35 = 0;\n        long scoreDiff36 = 0;\n       \
    \ long scoreDiff37 = 0;\n        long scoreDiff38 = 0;\n        long scoreDiff39\
    \ = 0;\n        long scoreDiff40 = 0;\n        long scoreDiff41 = 0;\n       \
    \ long scoreDiff42 = 0;\n        long scoreDiff43 = 0;\n        long scoreDiff44\
    \ = 0;\n        long scoreDiff45 = 0;\n        long scoreDiff46 = 0;\n       \
    \ long scoreDiff47 = 0;\n        long scoreDiff48 = 0;\n        long scoreDiff49\
    \ = 0;\n        long scoreDiff50 = 0;\n        long scoreDiff51 = 0;\n       \
    \ long scoreDiff52 = 0;\n        long scoreDiff53 = 0;\n        long scoreDiff54\
    \ = 0;\n        long scoreDiff55 = 0;\n        long scoreDiff56 = 0;\n       \
    \ long scoreDiff57 = 0;\n        long scoreDiff58 = 0;\n        long scoreDiff59\
    \ = 0;\n        long scoreDiff60 = 0;\n        long scoreDiff61 = 0;\n       \
    \ long scoreDiff62 = 0;\n        long scoreDiff63 = 0;\n        long scoreDiff64\
    \ = 0;\n        long scoreDiff65 = 0;\n        long scoreDiff66 = 0;\n       \
    \ long scoreDiff67 = 0;\n        long scoreDiff68 = 0;\n        long scoreDiff69\
    \ = 0;\n        long scoreDiff70 = 0;\n        long score\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpshkqajp_.java:94: error: ';' expected\n        long score\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        int i = 0;\n        int j\
    \ = 0;\n        while (i < game.size() && j < guess.size()) {\n            if\
    \ (game.get(i) == guess.get(j)) {\n                score++;\n                i++;\n\
    \                j++;\n            } else if (game.get(i) < guess.get(j)) {\n\
    \                difference = game.get(i) - guess.get(j);\n                result.add(difference);\n\
    \                i++;\n            } else {\n                difference = guess.get(j)\
    \ - game.get(i);\n                result.add(difference);\n                j++;\n\
    \            }\n        }\n        while (i < game.size()) {\n            difference\
    \ = game.get(i) - score;\n            result.add(difference);\n            i++;\n\
    \        }\n        while (j < guess.size()) {\n            difference = guess.get(j)\
    \ - score;\n            result.add(difference);\n            j++;\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp77g3y_y_.java:54)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            result.add(0);\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8l1owydj.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp8l1owydj.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp8l1owydj.java:35:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ipgw59g.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp1ipgw59g.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmysbli7t.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpmysbli7t.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = guess - score;\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4fy46k_.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpx4fy46k_.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl14epwem.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpl14epwem.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf8d5mbmk.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpf8d5mbmk.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ maxScore = game.get(game.size()-1);\n        long maxGuess = guess.get(guess.size()-1);\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(guess == maxGuess)\n                result.add(0);\n\
    \            else\n                result.add(difference);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyzly4mva.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpyzly4mva.java:25: error: long cannot be dereferenced\n      \
    \  long maxGuess = guess.get(guess.size()-1);\n                              \
    \         ^\n/tmp/tmpyzly4mva.java:25: error: long cannot be dereferenced\n  \
    \      long maxGuess = guess.get(guess.size()-1);\n                          \
    \   ^\n/tmp/tmpyzly4mva.java:28: error: long cannot be dereferenced\n        \
    \    guess = guess.get(i);\n                         ^\n/tmp/tmpyzly4mva.java:31:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ difference2 = 0;\n        long difference3 = 0;\n        long difference4 =\
    \ 0;\n        long difference5 = 0;\n        long difference6 = 0;\n        long\
    \ difference7 = 0;\n        long difference8 = 0;\n        long difference9 =\
    \ 0;\n        long difference10 = 0;\n        long difference11 = 0;\n       \
    \ long difference12 = 0;\n        long difference13 = 0;\n        long difference14\
    \ = 0;\n        long difference15 = 0;\n        long difference16 = 0;\n     \
    \   long difference17 = 0;\n        long difference18 = 0;\n        long difference19\
    \ = 0;\n        long difference20 = 0;\n        long difference21 = 0;\n     \
    \   long difference22 = 0;\n        long difference23 = 0;\n        long difference24\
    \ = 0;\n        long difference25 = 0;\n        long difference26 = 0;\n     \
    \   long difference27 = 0;\n        long difference28 = 0;\n        long difference29\
    \ = 0;\n        long difference30 = 0;\n        long difference31 = 0;\n     \
    \   long difference32 = 0;\n        long difference33 = 0;\n        long difference34\
    \ = 0;\n        long difference35 = 0;\n        long difference36 = 0;\n     \
    \   long difference37 = 0;\n        long difference38 = 0;\n        long difference39\
    \ = 0;\n        long difference40 = 0;\n        long difference41 = 0;\n     \
    \   long difference42 = 0;\n        long difference43 = 0;\n        long difference44\
    \ = 0;\n        long difference45 = 0;\n        long difference46 = 0;\n     \
    \   long difference47 = 0;\n        long difference48 = 0;\n        long difference49\
    \ = 0;\n        long difference50 = 0;\n        long difference51 = 0;\n     \
    \   long difference52 = 0;\n        long difference53 = 0;\n        long difference54\
    \ = 0;\n        long difference55 = 0;\n        long difference56 = 0;\n     \
    \   long difference57 = 0;\n        long difference58 = 0;\n        long difference59\
    \ = 0;\n        long difference60 = 0;\n        long difference61 = 0;\n     \
    \   long difference62 = 0;\n        long difference63 = 0;\n        long difference64\
    \ = 0;\n        long difference65 = 0;\n        long difference66 = 0;\n     \
    \   long difference67 = 0;\n        long difference68 = 0;\n        long difference69\
    \ = 0;\n        long difference70 = 0;\n        long difference71 = 0;\n     \
    \   long difference72 = 0;\n        long difference73 = 0;\n        long difference74\
    \ = 0;\n        long difference75 = 0;\n        long difference76 = 0;\n     \
    \   long difference77 = 0;\n        long difference78 = 0;\n        long difference79\
    \ = 0;\n        long difference80 = 0;\n        long difference81 = 0;\n     \
    \   long difference82 = 0;\n        long difference83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkvdpr4nk.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ez0lk6y.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp3ez0lk6y.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy0i72i41.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpy0i72i41.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1bojmorf.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfyu6oreg.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfyu6oreg.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            return result;\n        }\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n \
    \           guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppmgp5xzc.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmppmgp5xzc.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmppmgp5xzc.java:39:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdnpz_m98.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdnpz_m98.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxta4_s7r.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkbi6i4p6.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpkbi6i4p6.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpem6u5c_c.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ difference2 = 0;\n        long difference3 = 0;\n        long difference4 =\
    \ 0;\n        long difference5 = 0;\n        long difference6 = 0;\n        long\
    \ difference7 = 0;\n        long difference8 = 0;\n        long difference9 =\
    \ 0;\n        long difference10 = 0;\n        long difference11 = 0;\n       \
    \ long difference12 = 0;\n        long difference13 = 0;\n        long difference14\
    \ = 0;\n        long difference15 = 0;\n        long difference16 = 0;\n     \
    \   long difference17 = 0;\n        long difference18 = 0;\n        long difference19\
    \ = 0;\n        long difference20 = 0;\n        long difference21 = 0;\n     \
    \   long difference22 = 0;\n        long difference23 = 0;\n        long difference24\
    \ = 0;\n        long difference25 = 0;\n        long difference26 = 0;\n     \
    \   long difference27 = 0;\n        long difference28 = 0;\n        long difference29\
    \ = 0;\n        long difference30 = 0;\n        long difference31 = 0;\n     \
    \   long difference32 = 0;\n        long difference33 = 0;\n        long difference34\
    \ = 0;\n        long difference35 = 0;\n        long difference36 = 0;\n     \
    \   long difference37 = 0;\n        long difference38 = 0;\n        long difference39\
    \ = 0;\n        long difference40 = 0;\n        long difference41 = 0;\n     \
    \   long difference42 = 0;\n        long difference43 = 0;\n        long difference44\
    \ = 0;\n        long difference45 = 0;\n        long difference46 = 0;\n     \
    \   long difference47 = 0;\n        long difference48 = 0;\n        long difference49\
    \ = 0;\n        long difference50 = 0;\n        long difference51 = 0;\n     \
    \   long difference52 = 0;\n        long difference53 = 0;\n        long difference54\
    \ = 0;\n        long difference55 = 0;\n        long difference56 = 0;\n     \
    \   long difference57 = 0;\n        long difference58 = 0;\n        long difference59\
    \ = 0;\n        long difference60 = 0;\n        long difference61 = 0;\n     \
    \   long difference62 = 0;\n        long difference63 = 0;\n        long difference64\
    \ = 0;\n        long difference65 = 0;\n        long difference66 = 0;\n     \
    \   long difference67 = 0;\n        long difference68 = 0;\n        long difference69\
    \ = 0;\n        long difference70 = 0;\n        long difference71 = 0;\n     \
    \   long difference72 = 0;\n        long difference73 = 0;\n        long difference74\
    \ = 0;\n        long difference75 = 0;\n        long difference76 = 0;\n     \
    \   long difference77 = 0;\n        long difference78 = 0;\n        long difference79\
    \ = 0;\n        long difference80 = 0;\n        long difference81 = 0;\n     \
    \   long difference82 = 0;\n        long difference83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_w7ufgb0.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            result.add(0);\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptrjooe9t.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmptrjooe9t.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmptrjooe9t.java:35:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw0_riptv.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpw0_riptv.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            diff\
    \ = guess - score;\n            if(diff < 0) {\n                diff = -diff;\n\
    \            }\n            if(diff == 0) {\n                result.add(0);\n\
    \                correct = true;\n            }\n            else {\n        \
    \        result.add(Math.abs(diff));\n                correct = false;\n     \
    \       }\n        }\n        if(correct) {\n            result.add(0);\n    \
    \    }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw6ejax6r.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpw6ejax6r.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpw6ejax6r.java:33:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\n/tmp/tmpw6ejax6r.java:42: error:\
    \ incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(correct) {\n            return result;\n        }\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n \
    \           guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfl58q5km.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpfl58q5km.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpfl58q5km.java:39:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n    \
    \        guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt83owqp8.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpt83owqp8.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            diff = guess.get(i) -\
    \ score;\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1a1288hh.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ total = 0;\n        long total2 = 0;\n        long total3 = 0;\n        long\
    \ total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n        long\
    \ total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n        long\
    \ total10 = 0;\n        long total11 = 0;\n        long total12 = 0;\n       \
    \ long total13 = 0;\n        long total14 = 0;\n        long total15 = 0;\n  \
    \      long total16 = 0;\n        long total17 = 0;\n        long total18 = 0;\n\
    \        long total19 = 0;\n        long total20 = 0;\n        long total21 =\
    \ 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1lem90e8.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(!correct) {\n            for(int i = 0; i < guess.size(); i++)\
    \ {\n                score = game.get(i);\n                guess = guess.get(i);\n\
    \                difference = Math.abs(guess - score);\n                result.add(difference);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfaw4zgie.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpfaw4zgie.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpfaw4zgie.java:35:\
    \ error: long cannot be dereferenced\n            for(int i = 0; i < guess.size();\
    \ i++) {\n                                    ^\n/tmp/tmpfaw4zgie.java:37: error:\
    \ long cannot be dereferenced\n                guess = guess.get(i);\n       \
    \                      ^\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx1ddktz2.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpx1ddktz2.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmwi8yzq0.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpmwi8yzq0.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyw1gdahx.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpyw1gdahx.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(!correct) {\n            for(int i = 0; i < guess.size(); i++)\
    \ {\n                guess = guess.get(i);\n                difference = Math.abs(guess\
    \ - score);\n                result.add(difference);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgixe8_d8.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpgixe8_d8.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpgixe8_d8.java:35:\
    \ error: long cannot be dereferenced\n            for(int i = 0; i < guess.size();\
    \ i++) {\n                                    ^\n/tmp/tmpgixe8_d8.java:36: error:\
    \ long cannot be dereferenced\n                guess = guess.get(i);\n       \
    \                      ^\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(guess == score) {\n             \
    \   correct = true;\n            }\n            result.add(difference);\n    \
    \    }\n        if(!correct) {\n            for(int i = 0; i < game.size(); i++)\
    \ {\n                score = game.get(i);\n                guess = guess.get(i);\n\
    \                difference = Math.abs(guess - score);\n                result.add(difference);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp52k0o1a0.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp52k0o1a0.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp52k0o1a0.java:37:\
    \ error: long cannot be dereferenced\n                guess = guess.get(i);\n\
    \                             ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7t5cltyd.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp7t5cltyd.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb8mxeq7g.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpb8mxeq7g.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 =\
    \ 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n\
    \        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n\
    \        long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt2ibpuc8.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        long\
    \ scoreDifference = 0;\n        long guessed = 0;\n        long guessedDifference\
    \ = 0;\n        long differenceDifference = 0;\n        long scoreDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifference = 0;\n        long differenceDifferenceDifference\
    \ = 0;\n        long scoreDifferenceDifferenceDifference = 0;\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n        long differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        long guessedDifferenceDifferenceDifference = 0;\n        long\
    \ differenceDifferenceDifference = 0;\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpog9z_2j_.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpog9z_2j_.java:33: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:34:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:35: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:36:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:37: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:38:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:39: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:40:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:41: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:42:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:43: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:44:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:45: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:46:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:47: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:48:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:49: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:50:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:51: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:52:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:53: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:54:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:55: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:56:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:57: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:58:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:59: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:60:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:61: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:62:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:63: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:64:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:65: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:66:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:67: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:68:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:69: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:70:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:71: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:72:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:73: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:74:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:75: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:76:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:77: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:78:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:79: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:80:\
    \ error: variable guessedDifferenceDifferenceDifference is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long guessedDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:81: error: variable differenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long differenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:82:\
    \ error: variable scoreDifferenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long scoreDifferenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:83: error: variable guessedDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long guessedDifferenceDifferenceDifference = 0;\n             ^\n/tmp/tmpog9z_2j_.java:84:\
    \ error: variable differenceDifferenceDifference is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long differenceDifferenceDifference\
    \ = 0;\n             ^\n/tmp/tmpog9z_2j_.java:85: error: variable scoreDifferenceDifferenceDifference\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long scoreDifferenceDifferenceDifference = 0;\n             ^\n54 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            diff = guess.get(i) -\
    \ score;\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmnc4vzi.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwxlkniej.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpwxlkniej.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            diff\
    \ = guess - score;\n            if(diff < 0) {\n                diff = -diff;\n\
    \            }\n            if(diff == 0) {\n                correct = true;\n\
    \            }\n            result.add(diff);\n        }\n        if(!correct)\
    \ {\n            for(int i = 0; i < game.size(); i++) {\n                score\
    \ = game.get(i);\n                guess = guess.get(i);\n                diff\
    \ = guess - score;\n                if(diff < 0) {\n                    diff =\
    \ -diff;\n                }\n                if(diff > 0) {\n                \
    \    result.add(diff);\n                }\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvp1p7v8p.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpvp1p7v8p.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpvp1p7v8p.java:40:\
    \ error: long cannot be dereferenced\n                guess = guess.get(i);\n\
    \                             ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwyxymjgw.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpwyxymjgw.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long difference = Math.abs(guess\
    \ - score);\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4l4m6s28.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp4l4m6s28.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9r9y7j98.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9r9y7j98.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long maxDiff\
    \ = 0;\n        long maxScore = 0;\n        long maxGuess = 0;\n        long maxDiff2\
    \ = 0;\n        long maxScore2 = 0;\n        long maxGuess2 = 0;\n        long\
    \ maxDiff3 = 0;\n        long maxScore3 = 0;\n        long maxGuess3 = 0;\n  \
    \      long maxDiff4 = 0;\n        long maxScore4 = 0;\n        long maxGuess4\
    \ = 0;\n        long maxDiff5 = 0;\n        long maxScore5 = 0;\n        long\
    \ maxGuess5 = 0;\n        long maxDiff6 = 0;\n        long maxScore6 = 0;\n  \
    \      long maxGuess6 = 0;\n        long maxDiff7 = 0;\n        long maxScore7\
    \ = 0;\n        long maxGuess7 = 0;\n        long maxDiff8 = 0;\n        long\
    \ maxScore8 = 0;\n        long maxGuess8 = 0;\n        long maxDiff9 = 0;\n  \
    \      long maxScore9 = 0;\n        long maxGuess9 = 0;\n        long maxDiff10\
    \ = 0;\n        long maxScore10 = 0;\n        long maxGuess10 = 0;\n        long\
    \ maxDiff11 = 0;\n        long maxScore11 = 0;\n        long maxGuess11 = 0;\n\
    \        long maxDiff12 = 0;\n        long maxScore12 = 0;\n        long maxGuess12\
    \ = 0;\n        long maxDiff13 = 0;\n        long maxScore13 = 0;\n        long\
    \ maxGuess13 = 0;\n        long maxDiff14 = 0;\n        long maxScore14 = 0;\n\
    \        long maxGuess14 = 0;\n        long maxDiff15 = 0;\n        long maxScore15\
    \ = 0;\n        long maxGuess15 = 0;\n        long maxDiff16 = 0;\n        long\
    \ maxScore16 = 0;\n        long maxGuess16 = 0;\n        long maxDiff17 = 0;\n\
    \        long maxScore17 = 0;\n        long maxGuess17 = 0;\n        long maxDiff18\
    \ = 0;\n        long maxScore18 = 0;\n        long maxGuess18 = 0;\n        long\
    \ maxDiff19 = 0;\n        long maxScore19 = 0;\n        long maxGuess19 = 0;\n\
    \        long maxDiff20 = 0;\n        long maxScore20 = 0;\n        long maxGuess20\
    \ = 0;\n        long maxDiff21 = 0;\n        long maxScore21 = 0;\n        long\
    \ maxGuess21 = 0;\n        long maxDiff22 = 0;\n        long maxScore22 = 0;\n\
    \        long maxGuess22 = 0;\n        long maxDiff23 = 0;\n        long maxScore23\
    \ = 0;\n        long maxGuess\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp068pmrg4.java:92: error: ';' expected\n        long maxGuess\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long scoreDiff\
    \ = 0;\n        long scoreDiff2 = 0;\n        long scoreDiff3 = 0;\n        long\
    \ scoreDiff4 = 0;\n        long scoreDiff5 = 0;\n        long scoreDiff6 = 0;\n\
    \        long scoreDiff7 = 0;\n        long scoreDiff8 = 0;\n        long scoreDiff9\
    \ = 0;\n        long scoreDiff10 = 0;\n        long scoreDiff11 = 0;\n       \
    \ long scoreDiff12 = 0;\n        long scoreDiff13 = 0;\n        long scoreDiff14\
    \ = 0;\n        long scoreDiff15 = 0;\n        long scoreDiff16 = 0;\n       \
    \ long scoreDiff17 = 0;\n        long scoreDiff18 = 0;\n        long scoreDiff19\
    \ = 0;\n        long scoreDiff20 = 0;\n        long scoreDiff21 = 0;\n       \
    \ long scoreDiff22 = 0;\n        long scoreDiff23 = 0;\n        long scoreDiff24\
    \ = 0;\n        long scoreDiff25 = 0;\n        long scoreDiff26 = 0;\n       \
    \ long scoreDiff27 = 0;\n        long scoreDiff28 = 0;\n        long scoreDiff29\
    \ = 0;\n        long scoreDiff30 = 0;\n        long scoreDiff31 = 0;\n       \
    \ long scoreDiff32 = 0;\n        long scoreDiff33 = 0;\n        long scoreDiff34\
    \ = 0;\n        long scoreDiff35 = 0;\n        long scoreDiff36 = 0;\n       \
    \ long scoreDiff37 = 0;\n        long scoreDiff38 = 0;\n        long scoreDiff39\
    \ = 0;\n        long scoreDiff40 = 0;\n        long scoreDiff41 = 0;\n       \
    \ long scoreDiff42 = 0;\n        long scoreDiff43 = 0;\n        long scoreDiff44\
    \ = 0;\n        long scoreDiff45 = 0;\n        long scoreDiff46 = 0;\n       \
    \ long scoreDiff47 = 0;\n        long scoreDiff48 = 0;\n        long scoreDiff49\
    \ = 0;\n        long scoreDiff50 = 0;\n        long scoreDiff51 = 0;\n       \
    \ long scoreDiff52 = 0;\n        long scoreDiff53 = 0;\n        long scoreDiff54\
    \ = 0;\n        long scoreDiff55 = 0;\n        long scoreDiff56 = 0;\n       \
    \ long scoreDiff57 = 0;\n        long scoreDiff58 = 0;\n        long scoreDiff59\
    \ = 0;\n        long scoreDiff60 = 0;\n        long scoreDiff61 = 0;\n       \
    \ long scoreDiff62 = 0;\n        long scoreDiff63 = 0;\n        long scoreDiff64\
    \ = 0;\n        long scoreDiff65 = 0;\n        long scoreDiff66 = 0;\n       \
    \ long scoreDiff67 = 0;\n        long scoreDiff68 = 0;\n        long scoreDiff69\
    \ = 0;\n        long scoreDiff70 = 0;\n        long score\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpskac6npx.java:94: error: ';' expected\n        long score\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = Math.abs(guess -\
    \ score);\n            result.add(diff);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn5jexny4.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpn5jexny4.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphtrw2_ib.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmphtrw2_ib.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            long diff = guess - score;\n\
    \            result.add(diff);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphazzlx8z.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmphazzlx8z.java:23: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        boolean\
    \ correct = false;\n        for(int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            guess = guess.get(i);\n            diff\
    \ = guess - score;\n            if(diff < 0) {\n                diff = -diff;\n\
    \            }\n            if(diff == 0) {\n                result.add(0);\n\
    \                correct = true;\n            }\n            else {\n        \
    \        result.add(Math.abs(diff));\n                correct = false;\n     \
    \       }\n        }\n        if(correct) {\n            result.add(0);\n    \
    \    }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjn6b79aa.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpjn6b79aa.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpjn6b79aa.java:33:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\n/tmp/tmpjn6b79aa.java:42: error:\
    \ incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            difference = guess.get(i)\
    \ - score;\n            result.add(difference);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fqhq1jl.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
    \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
    \ guess) {\n        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n    \
    \        guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprz_d9gei.java:22: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmprz_d9gei.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError

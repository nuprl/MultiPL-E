name: HumanEval_21_rescale_to_unit
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given list of numbers (of at least two elements), apply\
  \ a linear transform to that list,\n    // such that the smallest number will become\
  \ 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
  \ 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
  \ rescaleToUnit(ArrayList<Float> numbers) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
  \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
  \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
  \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
  \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
  \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
  \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
  \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
  \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
  \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)12.0f,\
  \ (float)11.0f, (float)15.0f, (float)13.0f, (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f,\
  \ (float)0.0f, (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
completions: ["        ArrayList<Float> result = new ArrayList<Float>();\n       \
    \ float min = numbers.get(0); // initialize min to first number\n        float\
    \ max = numbers.get(0);\n        for (Float number : numbers) {\n            min\
    \ = Math.min(min, number);\n            max = Math.max(max, number);\n       \
    \ }\n        for (Float number : numbers) {\n            result.add(number * (max\
    \ - min) / (max - min));\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        float min = numbers.get(0); // smallest\
    \ number in the list\n        float max = numbers.get(numbers.size()-1); // largest\
    \ number in the list\n        float range = max - min;\n        for (Float number\
    \ : numbers) {\n            result.add(number * (range / numbers.size()) + min);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float minValue = numbers.get(0); // min of numbers\n\
    \        float maxValue = numbers.get(numbers.size()-1); // max of numbers\n \
    \       float range = maxValue - minValue; // range of the numbers\n        float\
    \ newMinValue = 0;\n        float newMaxValue = 1;\n        float newRange = range\
    \ / numbers.size(); // range of the new numbers\n        float newValue = 0;\n\
    \        float newValueDiff = 0;\n        float newValueDiffAbs = 0;\n       \
    \ float newValueDiffAbsMax = 0;\n        float newValueDiffAbsMaxMax = 0;\n  \
    \      float newValueDiffAbsMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMax = 0;\n        float\
    \ newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float\
    \ newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n      \
    \  float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n   \
    \     float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float\
    \ newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n\
    \        float newValueDiffAbsMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = 0;\n    \
    \    float newValueDiff", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (Float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        double min = numbers.get(0); //\
    \ min is first element\n        double max = numbers.get(numbers.size()-1); //\
    \ max is last element\n        double range = max - min;\n        double rescaleFactor\
    \ = range / numbers.size();\n        for (Float number : numbers) {\n        \
    \    rescaled.add(number * rescaleFactor);\n        }\n        return rescaled;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of input numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of input numbers\n        float range = max - min;\n        float scale\
    \ = (float) range / numbers.size();\n        for (float number : numbers) {\n\
    \            float scaled = (float) (number - min) * scale;\n            result.add(scaled);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        for (float number : numbers) {\n            result.add(number\
    \ * (range / numbers.size()));\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min is first element\n        float max = numbers.get(0);\n        for (Float\
    \ number : numbers) {\n            min = Math.min(min, number);\n            max\
    \ = Math.max(max, number);\n        }\n        // Normalize all numbers to [0,\
    \ 1]\n        for (Float number : numbers) {\n            result.add(number -\
    \ min) / (max - min);\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        double min = numbers.get(0); // min\
    \ of numbers\n        double max = numbers.get(numbers.size()-1); // max of numbers\n\
    \        double scale = max - min; // scale of numbers\n        double scaleFactor\
    \ = 1.0 / scale; // scale factor\n        for (Float number : numbers) {\n   \
    \         result.add(number * scaleFactor);\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        float min =\
    \ numbers.get(0); // smallest number\n        float max = numbers.get(numbers.size()-1);\
    \ // largest number\n        float range = max - min;\n        for (float number\
    \ : numbers) {\n            result.add(number * (range / numbers.size()));\n \
    \       }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // smallest number in list\n        float\
    \ max = numbers.get(numbers.size()-1); // largest number in list\n        float\
    \ range = max - min;\n        for (float number : numbers) {\n            result.add(number\
    \ * (range / numbers.size()));\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // get smallest number\n        float max = numbers.get(0);\n        for (Float\
    \ number : numbers) {\n            float scaled = (float) (number - min) / (max\
    \ - min);\n            result.add(scaled);\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(0);\n        for (Float number\
    \ : numbers) {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (Float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> rescaled = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float scale = (max - min) / (numbers.size()-1);\n      \
    \  rescaled.add(0.0f);\n        for (int i = 0; i < numbers.size()-1; i++) {\n\
    \            rescaled.add(numbers.get(i) * scale);\n        }\n        return\
    \ rescaled;\n", "        ArrayList<Float> result = new ArrayList<>();\n      \
    \  float min = numbers.get(0); // min of numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // initialize\
    \ min to first number\n        float max = numbers.get(0);\n        for (Float\
    \ number : numbers) {\n            rescaled.add(number);\n            min = Math.min(min,\
    \ number);\n            max = Math.max(max, number);\n        }\n        float\
    \ range = max - min;\n        for (Float number : numbers) {\n            rescaled.add(number\
    \ * (range / numbers.size()));\n        }\n        return rescaled;\n", "    \
    \    ArrayList<Float> result = new ArrayList<Float>();\n        float min = numbers.get(0);\
    \ // min of list\n        float max = numbers.get(numbers.size()-1); // max of\
    \ list\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            result.add(number * (range / numbers.size()));\n        }\n \
    \       return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (float number : numbers) {\n    \
    \        min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            result.add(number * (range / numbers.length));\n        }\n \
    \       return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(0);\n\
    \        for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        for (Float number\
    \ : numbers) {\n            result.add(number * (max - min) / (max - min));\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of list\n       \
    \ float max = numbers.get(numbers.size()-1); // max of list\n        float range\
    \ = max - min;\n        float scale = 1.0f / range;\n        for (float number\
    \ : numbers) {\n            result.add(number * scale);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n   \
    \     float min = numbers.get(0); // initialize min to first number\n        float\
    \ max = numbers.get(0);\n        for (Float number : numbers) {\n            min\
    \ = Math.min(min, number);\n            max = Math.max(max, number);\n       \
    \ }\n        // apply the linear transformation\n        for (Float number : numbers)\
    \ {\n            result.add(number * (max - min) / (max - min));\n        }\n\
    \        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (Float number : numbers) {\n            float scaled =\
    \ (number-min) * scale;\n            result.add(scaled);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> result = new ArrayList<>();\n        float\
    \ min = numbers.get(0); // get smallest number\n        float max = numbers.get(numbers.size()-1);\
    \ // get largest number\n        float range = max - min;\n        float scale\
    \ = 1.0f / range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = numbers.get(0); // Get min value\n\
    \        float max = numbers.get(numbers.size()-1); // Get max value\n       \
    \ float range = max - min; // Get range\n        float scale = range / numbers.size();\
    \ // Get scale\n        for (float number : numbers) {\n            float rescaled\
    \ = number * scale;\n            result.add(rescaled);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> result = new ArrayList<>();\n        float\
    \ min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        for (float number\
    \ : numbers) {\n            result.add(number * (range / number));\n        }\n\
    \        return result;\n", "        ArrayList<Float> rescaled = new ArrayList<>();\n\
    \        float min = numbers.get(0); // smallest number in list\n        float\
    \ max = numbers.get(numbers.size()-1); // largest number in list\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            rescaled.add(number * scale);\n        }\n\
    \        return rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get smallest number\n        float max\
    \ = numbers.get(1); // get largest number\n        float range = max - min;\n\
    \        for (float number : numbers) {\n            rescaled.add(number * (range\
    \ / number));\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        float min = numbers.get(0); // min\
    \ is first number\n        float max = numbers.get(numbers.size()-1); // max is\
    \ last number\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            result.add(number*(range/numbers.size()));\n        }\n     \
    \   return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(0);\n\
    \        for (float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        float range = max\
    \ - min;\n        for (float number : numbers) {\n            float scaled = (number\
    \ - min) / range;\n            result.add(scaled);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n \
    \       float min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min; // range between min and max\n\
    \        float scale = (float) 1.0 / (range + 1); // scale factor between min\
    \ and max\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<>();\n        float min = numbers.get(0); // min of\
    \ numbers\n        float max = numbers.get(numbers.size()-1); // max of numbers\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // smallest number\
    \ in list\n        float max = numbers.get(numbers.size()-1); // largest number\
    \ in list\n        float range = max - min;\n        for (Float number : numbers)\
    \ {\n            float rescale = (float) (number - min) / range;\n           \
    \ result.add(rescale);\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = numbers.get(0); // smallest\
    \ number\n        float max = numbers.get(numbers.size()-1); // largest number\n\
    \        float range = max - min;\n        for (Float number : numbers) {\n  \
    \          result.add(number * (range / numbers.size()));\n        }\n       \
    \ return result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get smallest number\n        float max\
    \ = numbers.get(0);\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * (max - min) / (numbers.get(numbers.size()) - 1));\n            min = Math.min(min,\
    \ number);\n            max = Math.max(max, number);\n        }\n        return\
    \ rescaled;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n \
    \       double min = numbers.get(0); // get smallest number\n        double max\
    \ = numbers.get(numbers.size()-1); // get largest number\n        double range\
    \ = max - min; // get range (max - min)\n        double scale = (double) range\
    \ / numbers.size();\n        for (Float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        double min = numbers.get(0); // min of numbers\n\
    \        double max = numbers.get(numbers.size()-1); // max of numbers\n     \
    \   double range = max - min; // range of the numbers\n        double scale =\
    \ range / numbers.size();\n        for (Float number : numbers) {\n          \
    \  result.add(number * scale);\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of input numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of input numbers\n        float scale = (max - min) / (numbers.size()\
    \ - 1); // scale of input numbers\n        for (Float number : numbers) {\n  \
    \          result.add(number * scale);\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        double min = numbers.get(0);\
    \ // min of list\n        double max = numbers.get(numbers.size()-1); // max of\
    \ list\n        double range = (max - min);\n        double scale = (range/numbers.size());\n\
    \        for (Float number : numbers) {\n            result.add(number*(scale));\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float scale = (max - min) / (numbers.size()-1);\n        rescaled.add(0.0f);\n\
    \        for (int i = 0; i < numbers.size()-1; i++) {\n            rescaled.add(numbers.get(i)\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        float min = numbers.get(0); // initialize\
    \ min to first number\n        float max = numbers.get(0);\n        for (float\
    \ number : numbers) {\n            min = Math.min(min, number);\n            max\
    \ = Math.max(max, number);\n        }\n        float scale = (max - min) / (numbers.size()\
    \ - 1);\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = numbers.get(0); // initialize min\
    \ to first number\n        float max = numbers.get(0);\n        for (float number\
    \ : numbers) {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        // apply the linear transform\n        for (float\
    \ number : numbers) {\n            result.add(number * (max - min) / (max - min));\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // initialize min to\
    \ first number\n        float max = numbers.get(0);\n        for (Float number\
    \ : numbers) {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (Float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float range = max - min;\n        float scale = (float)\
    \ 1.0 / (float) range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = numbers.get(0); // smallest number\n\
    \        float max = numbers.get(numbers.size()-1); // largest number\n      \
    \  float range = max - min;\n        for (float number : numbers) {\n        \
    \    result.add(number * (range / numbers.size()));\n        }\n        return\
    \ result;\n", "        ArrayList<Float> result = new ArrayList<>();\n        float\
    \ min = Collections.min(numbers);\n        float max = Collections.max(numbers);\n\
    \        float range = max - min;\n        for (Float number : numbers) {\n  \
    \          result.add(number * (range / number));\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        float min =\
    \ numbers.get(0); //smallest number in list\n        float max = numbers.get(numbers.size()-1);\
    \ //largest number in list\n        float range = max - min;\n        float scale\
    \ = 1.0f / range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = numbers.get(0); // smallest number\n\
    \        float max = numbers.get(numbers.size()-1); // largest number\n      \
    \  float range = max - min;\n        float scale = (float) 1.0 / (float) range;\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number in numbers\n\
    \        float max = numbers.get(numbers.size()-1); // largest number in numbers\n\
    \        float range = max - min;\n        for (float number : numbers) {\n  \
    \          result.add(number * (range / numbers.size()));\n        }\n       \
    \ return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float minValue = numbers.get(0); // min of input numbers\n        float\
    \ maxValue = numbers.get(numbers.size()-1); // max of input numbers\n        float\
    \ range = maxValue - minValue; // range between min and max\n        float scale\
    \ = (float) 1.0 / (range + 1.0); // scale factor between min and max\n       \
    \ for (Float number : numbers) {\n            result.add(number * scale);\n  \
    \      }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // Get min value\n\
    \        float max = numbers.get(numbers.size()-1); // Get max value\n       \
    \ float range = max - min; // Get range (max - min)\n        float scale = range\
    \ / numbers.size();\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<>();\n        double min = numbers.get(0); // min of\
    \ list\n        double max = numbers.get(numbers.size()-1); // max of list\n \
    \       double range = max - min;\n        double scale = (double) range / numbers.size();\n\
    \        for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n            result.add(number);\n        }\n        // apply the linear\
    \ transform\n        float scale = (max - min) / (result.size() - 1);\n      \
    \  for (float number : result) {\n            number = (number - min) / scale;\n\
    \            result.add(number);\n        }\n        return result;\n", "    \
    \    ArrayList<Float> rescaled = new ArrayList<Float>();\n        float smallest\
    \ = numbers.get(0); // smallest number in list\n        float largest = numbers.get(numbers.size()-1);\
    \ // largest number in list\n        float range = largest - smallest; // range\
    \ in list\n        float scale = 1.0f / range; // scale in list\n        for (float\
    \ number : numbers) {\n            rescaled.add(number * scale);\n        }\n\
    \        return rescaled;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // get smallest number\n        float max\
    \ = numbers.get(numbers.size()-1); // get largest number\n        float scale\
    \ = (max - min) / (numbers.size()-1); // get scale factor\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            result.add(numbers.get(i) * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // get min value\n\
    \        float max = numbers.get(0);\n        for (float number : numbers) {\n\
    \            min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            result.add(number * (range / numbers.length));\n        }\n \
    \       return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // Get the smallest number\n        float\
    \ max = numbers.get(numbers.size()-1); // Get the largest number\n        float\
    \ range = max - min; // Get the range\n        for (float number : numbers) {\n\
    \            float rescaled = (float) (number - min) / range; // Rescale by dividing\
    \ by the range\n            result.add(rescaled); // Add the rescaled number to\
    \ the result\n        }\n        return result;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<>();\n        float min = numbers.get(0); // min of\
    \ numbers\n        float max = numbers.get(numbers.size()-1); // max of numbers\n\
    \        float range = max - min;\n        float scale = (float) range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<>();\n        float min = numbers.get(0); // min of list\n   \
    \     float max = numbers.get(numbers.size()-1); // max of list\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            rescaled.add(number * scale);\n        }\n\
    \        return rescaled;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get smallest number\n        float max\
    \ = numbers.get(numbers.size()-1); // get largest number\n        float range\
    \ = max - min;\n        float scale = 1.0f / range;\n        for (float number\
    \ : numbers) {\n            result.add(number * scale);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n   \
    \     float smallest = numbers.get(0); // smallest number\n        float largest\
    \ = numbers.get(numbers.size()-1); // largest number\n        float range = largest\
    \ - smallest; // range of the numbers\n        float scale = range / numbers.size();\
    \ // scale of the numbers\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            result.add(numbers.get(i) * scale);\n        }\n        return result;\n",
  "        ArrayList<Float> rescaled = new ArrayList<Float>();\n        float smallest\
    \ = numbers.get(0); // smallest number in list\n        float largest = numbers.get(numbers.size()-1);\
    \ // largest number in list\n        float range = largest - smallest; // range\
    \ of numbers in list\n        float scale = 1.0f / range; // scale of smallest\
    \ to largest in list\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // min\
    \ of numbers\n        float max = numbers.get(numbers.size()-1); // max of numbers\n\
    \        float range = max - min;\n        float scale = (float) range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<>();\n        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0)",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of list\n        float max = numbers.get(0);\n        for (Float number\
    \ : numbers) {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        float scale = (max - min) / (numbers.size() - 1);\n\
    \        for (Float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0)",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        float min =\
    \ numbers.get(0); // Get the smallest number in the list\n        float max =\
    \ numbers.get(0);\n        for (float number : numbers) {\n            min = Math.min(min,\
    \ number);\n            max = Math.max(max, number);\n        }\n        float\
    \ scale = (max - min) / (numbers.size() - 1);\n        for (float number : numbers)\
    \ {\n            result.add(number * scale);\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        float min =\
    \ numbers.get(0); // Get min value\n        float max = numbers.get(numbers.size()-1);\
    \ // Get max value\n        float range = max - min; // Get range (max - min)\n\
    \        float scale = range / numbers.size();\n        for (float number : numbers)\
    \ {\n            result.add(number * scale);\n        }\n        return result;\n",
  "        ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min\
    \ = numbers.get(0); // min is first element\n        float max = numbers.get(1);\
    \ // max is second element\n        float delta = (max - min) / (numbers.size()\
    \ - 1);\n        for (float number : numbers) {\n            rescaled.add(min\
    \ + delta * number);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(0);\n        for (float number : numbers) {\n\
    \            min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        // scale each number from min to max\n        for (float number\
    \ : numbers) {\n            result.add(number * (max - min) / (max - min));\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // Get the minimum\
    \ value\n        float max = numbers.get(numbers.size()-1); // Get the maximum\
    \ value\n        float range = max - min; // Get the range of the numbers\n  \
    \      float rescaleFactor = 1.0f / range; // Get the rescale factor\n       \
    \ for (float number : numbers) {\n            rescaled.add(number * rescaleFactor);\
    \ // Rescale the numbers\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // Get\
    \ the smallest number in the list\n        float max = numbers.get(numbers.size()-1);\
    \ // Get the largest number in the list\n        float range = max - min;\n  \
    \      float scale = 1.0f / range;\n        for (float number : numbers) {\n \
    \           rescaled.add(number * scale);\n        }\n        return rescaled;\n",
  "        ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min\
    \ = numbers.get(0); // Get smallest number\n        float max = numbers.get(numbers.size()-1);\
    \ // Get largest number\n        float range = max - min; // Get range (max -\
    \ min)\n        float rescaleFactor = 1.0f / range; // Get rescale factor\n  \
    \      for (float number : numbers) {\n            rescaled.add(number * rescaleFactor);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of input numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of input numbers\n\
    \        float scale = (max - min) / (numbers.size() - 1); // scale of input numbers\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number in list\n\
    \        float max = numbers.get(numbers.size()-1); // largest number in list\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        float scale = (max - min) / (numbers.size() - 1);\
    \ // scale is between [0, 1]\n        for (Float number : numbers) {\n       \
    \     result.add(number * scale);\n        }\n        return result;\n", "   \
    \     ArrayList<Float> result = new ArrayList<Float>();\n        float min = numbers.get(0);\
    \ // Initialize min to first number\n        float max = numbers.get(0);\n   \
    \     for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        // Now we know min\
    \ and max, we can scale each number from min to max\n        for (Float number\
    \ : numbers) {\n            result.add(number * (max - min) / max);\n        }\n\
    \        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (int i = 1; i < numbers.size(); i++)\
    \ {\n            float current = numbers.get(i);\n            float delta = max\
    \ - min;\n            float newMin = min + delta * current;\n            float\
    \ newMax = max - delta * current;\n            min = newMin;\n            max\
    \ = newMax;\n            result.add(current);\n        }\n        return result;\n",
  "        ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min\
    \ = numbers.get(0); // initialize min to first number\n        float max = numbers.get(0);\n\
    \        for (Float number : numbers) {\n            rescaled.add(number);\n \
    \           min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        rescaled.add(0); // add 0 to end of list\n        rescaled.add(1);\
    \ // add 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n\
    \        rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); //\
    \ add 0 to end of list\n        rescaled.add(1); // add 1 to end of list\n   \
    \     rescaled.add(0); // add 0 to end of list\n        rescaled.add(1); // add\
    \ 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n       \
    \ rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); // add 0\
    \ to end of list\n        rescaled.add(1); // add 1 to end of list\n        rescaled.add(0);\
    \ // add 0 to end of list\n        rescaled.add(1); // add 1 to end of list\n\
    \        rescaled.add(0); // add 0 to end of list\n        rescaled.add(1); //\
    \ add 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n   \
    \     rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); // add\
    \ 0 to end of list\n        rescaled.add(1); // add 1 to end of list\n       \
    \ rescaled.add(0); // add 0 to end of list\n        rescaled.add(1); // add 1\
    \ to end of list\n        rescaled.add(0); // add 0 to end of list\n        rescaled.add(1);\
    \ // add 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n\
    \        rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); //\
    \ add 0 to end of list\n        rescaled.add(1); // add 1 to end of list\n   \
    \     rescaled.add(0); // add 0 to end of list\n        rescaled.add(1); // add\
    \ 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n       \
    \ rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); // add 0\
    \ to end of list\n        rescaled.add(1); // add 1 to end of list\n        rescaled.add(0);\
    \ // add 0 to end of list\n        rescaled.add(1); // add 1 to end of list\n\
    \        rescaled.add(0); // add 0 to end of list\n        rescaled.add(1); //\
    \ add 1 to end of list\n        rescaled.add(0); // add 0 to end of list\n   \
    \     rescaled.add(1); // add 1 to end of list\n        rescaled.add(0); // add\
    \ 0 to end of ", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min is first element\n        float max\
    \ = numbers.get(numbers.size()-1); // max is last element\n        float scale\
    \ = 1.0f / (max - min);\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); float max = numbers.get(0);\n\
    \        for (Float f : numbers) {\n            min = Math.min(min, f);\n    \
    \        max = Math.max(max, f);\n        }\n        float scale = (max - min)\
    \ / (numbers.size() - 1);\n        for (Float f : numbers) {\n            result.add((f\
    \ - min) / scale);\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        double min = numbers.get(0); // min of\
    \ list\n        double max = numbers.get(numbers.size()-1); // max of list\n \
    \       double range = max - min;\n        double scale = 1.0f / range;\n    \
    \    for (Float f : numbers) {\n            double val = f - min;\n          \
    \  result.add(val * scale);\n        }\n        return result;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // min\
    \ of list\n        float max = numbers.get(numbers.size()-1); // max of list\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        // scale all numbers to [0, 1]\n        for (Float\
    \ number : numbers) {\n            result.add(number - min) / (max - min);\n \
    \       }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (float number : numbers) {\n    \
    \        min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            result.add(number * (range / numbers.length));\n        }\n \
    \       return result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float minValue = numbers.get(0); // Get smallest number\n        float\
    \ maxValue = numbers.get(numbers.size()-1); // Get largest number\n        float\
    \ range = (maxValue - minValue); // Get range\n        float rescaleFactor = (float)\
    \ 1.0 / (range + 1); // Get rescale factor\n        for (float number : numbers)\
    \ {\n            rescaled.add(number * rescaleFactor); // Rescale number\n   \
    \     }\n        return rescaled;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float range = max - min;\n        float scale = (float) range / numbers.size();\n\
    \        rescaled.add(min);\n        for (float number : numbers) {\n        \
    \    rescaled.add(number * scale);\n        }\n        return rescaled;\n", " \
    \       ArrayList<Float> rescaled = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of list\n        float max = numbers.get(numbers.size()-1); // max of\
    \ list\n        float range = max - min;\n        float scale = range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<Float>();\n        float min = numbers.get(0); // Get smallest\
    \ number\n        float max = numbers.get(numbers.size()-1); // Get largest number\n\
    \        float range = max - min; // Get range\n        float scale = (float)\
    \ 1.0 / (range + 1); // Get scale\n        for (float number : numbers) {\n  \
    \          rescaled.add(number * scale);\n        }\n        return rescaled;\n",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        float min =\
    \ numbers.get(0); // smallest number\n        float max = numbers.get(numbers.size()-1);\
    \ // largest number\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // min of list\n\
    \        float max = numbers.get(numbers.size()-1); // max of list\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of input numbers\n        float max\
    \ = numbers.get(numbers.size()-1); // max of input numbers\n        float scale\
    \ = 1.0f / (max - min); // scale factor\n        for (Float number : numbers)\
    \ {\n            result.add(number * scale);\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<Float>();\n        double min =\
    \ numbers.get(0); // initialize min to first number\n        double max = numbers.get(0);\n\
    \        for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        double range = max\
    \ - min;\n        for (Float number : numbers) {\n            result.add(number\
    \ * (range / numbers.size()));\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // smallest number\n        float max = numbers.get(numbers.size()-1); // largest\
    \ number\n        float range = max - min;\n        for (Float number : numbers)\
    \ {\n            result.add(number*(range/numbers.size()));\n        }\n     \
    \   return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min is first element\n        float max\
    \ = numbers.get(numbers.size()-1); // max is last element\n        float scale\
    \ = 1.0f / (max - min);\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float range = max - min;\n        float scale = 1.0f / range;\n        for\
    \ (float number : numbers) {\n            result.add(number * scale);\n      \
    \  }\n        return result;\n", "        ArrayList<Float> rescaled = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min is first element\n        float max\
    \ = numbers.get(numbers.size()-1); // max is last element\n        float range\
    \ = max - min;\n        float scale = 1.0f / range;\n        for (Float number\
    \ : numbers) {\n            rescaled.add(number * scale);\n        }\n       \
    \ return rescaled;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = Collections.min(numbers);\n        float max = Collections.max(numbers);\n\
    \        float range = max - min;\n        float scale = (float) 1.0 / (float)\
    \ range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // min of list\n\
    \        float max = numbers.get(numbers.size()-1); // max of list\n        float\
    \ range = max - min; // range of the list\n        float scale = range / numbers.size();\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // First element is the\
    \ smallest\n        float max = numbers.get(numbers.size()-1); // Last element\
    \ is the largest\n        float range = max - min;\n        for (float number\
    \ : numbers) {\n            result.add(number * (range / numbers.size()));\n \
    \       }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        float range = max - min;\n        float scale = (float)\
    \ 1.0 / (float) range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); float max = numbers.get(0);\n\
    \        for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n        }\n        for (Float number\
    \ : numbers) {\n            result.add(number * (max - min) / (max - min));\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            float scaled = (number - min) / range;\n            result.add(scaled);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of input numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of input numbers\n\
    \        float range = max - min;\n        float scale = (float) range / numbers.size();\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // get smallest number\n\
    \        float max = numbers.get(0);\n        for (Float number : numbers) {\n\
    \            rescaled.add(number * (max - min) / (numbers.size() - 1));\n    \
    \        min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        double min = numbers.get(0); // initialize min to first\
    \ number\n        double max = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (Float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> rescaled = new ArrayList<Float>();\n        double minValue\
    \ = numbers.get(0); // smallest number in numbers\n        double maxValue = numbers.get(numbers.size()-1);\
    \ // largest number in numbers\n        double range = maxValue - minValue; //\
    \ range in numbers\n        double scale = (double) range / numbers.size();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            rescaled.add(numbers.get(i)\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float minValue = numbers.get(0);\
    \ // Get minimum value\n        float maxValue = numbers.get(numbers.size()-1);\
    \ // Get maximum value\n        float range = maxValue - minValue; // Get range\
    \ (max - min)\n        float rescaleFactor = (float) range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * rescaleFactor);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<>();\n        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0));\n\
    \        rescaled.add(numbers.get(0));\n        rescaled.add(numbers.get(0)",
  "        ArrayList<Float> rescaled = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of list\n        float max = numbers.get(numbers.size()-1); // max of\
    \ list\n        float range = max - min;\n        for (float number : numbers)\
    \ {\n            rescaled.add(number * (range/number));\n        }\n        return\
    \ rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get min value\n        float max = numbers.get(1);\
    \ // get max value\n        float range = max - min;\n        float scale = (float)\
    \ range / numbers.size();\n        for (float number : numbers) {\n          \
    \  rescaled.add(number * scale);\n        }\n        return rescaled;\n", "  \
    \      ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of list\n        float max = numbers.get(numbers.size()-1); // max of\
    \ list\n        float range = max - min;\n        float scale = 1.0f / range;\n\
    \        for (Float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // Get min value\n\
    \        float max = numbers.get(numbers.size()-1); // Get max value\n       \
    \ float range = max - min; // Get range (max - min)\n        float scale = 1.0f\
    \ / range; // Get scale (range / max)\n        rescaled.add(0); // Add min to\
    \ rescaled list\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * scale); // Multiply each number by scale\n        }\n        return rescaled;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of input numbers\n        float max = numbers.get(0);\n        for (Float\
    \ number : numbers) {\n            min = Math.min(min, number);\n            max\
    \ = Math.max(max, number);\n        }\n        float range = max - min;\n    \
    \    for (Float number : numbers) {\n            result.add(number * (range /\
    \ numbers.size()));\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = numbers.get(0); // min of first\
    \ number\n        float max = numbers.get(numbers.size()-1); // max of last number\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (Float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // smallest number\
    \ in list\n        float max = numbers.get(numbers.size()-1); // largest number\
    \ in list\n        float range = max - min;\n        for (Float number : numbers)\
    \ {\n            float rescaled = (float) (number - min) / range;\n          \
    \  result.add(rescaled);\n        }\n        return result;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<>();\n        double min = numbers.get(0); // smallest\
    \ number\n        double max = numbers.get(numbers.size()-1); // largest number\n\
    \        double range = max - min;\n        double scale = (double)range / (double)numbers.size();\n\
    \        for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<Float>();\n        float min = numbers.get(0); // smallest number\
    \ in numbers\n        float max = numbers.get(numbers.size()-1); // largest number\
    \ in numbers\n        float range = max - min;\n        float scale = 1.0f / range;\n\
    \        for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // smallest number\n\
    \        float max = numbers.get(numbers.size()-1); // largest number\n      \
    \  float range = max - min;\n        for (Float number : numbers) {\n        \
    \    result.add(number * (range / numbers.size()) + min);\n        }\n       \
    \ return result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (Float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        float min = numbers.get(0); // min\
    \ is first element\n        float max = numbers.get(numbers.size()-1); // max\
    \ is last element\n        for (float number : numbers) {\n            float scaled\
    \ = (number - min) / (max - min);\n            result.add(scaled);\n        }\n\
    \        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min is first element\n        float max\
    \ = numbers.get(numbers.size()-1); // max is last element\n        float range\
    \ = max - min;\n        for (Float number : numbers) {\n            float rescaled\
    \ = ((float) number - min) / range;\n            result.add(rescaled);\n     \
    \   }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = Collections.min(numbers);\n        float max = Collections.max(numbers);\n\
    \        float range = max - min;\n        for (Float number : numbers) {\n  \
    \          result.add(number * (range / number));\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // smallest number in list\n        float max = numbers.get(numbers.size()-1);\
    \ // largest number in list\n        float range = max - min;\n        float scale\
    \ = (float) 1.0 / (float) range;\n        for (float number : numbers) {\n   \
    \         result.add(number * scale);\n        }\n        return result;\n", " \
    \       ArrayList<Float> rescaled = new ArrayList<Float>();\n        double min\
    \ = numbers.get(0); // min of numbers\n        double max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        double range = max - min;\n        double scale =\
    \ (double)range / (double)numbers.size();\n        for (float number : numbers)\
    \ {\n            rescaled.add(number * scale);\n        }\n        return rescaled;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float range = max - min;\n        float scale = 1.0f / range;\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // get min value\n\
    \        float max = numbers.get(numbers.size()-1); // get max value\n       \
    \ float range = max - min; // get range\n        float scale = range / numbers.size();\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // min of input numbers\n\
    \        float max = numbers.get(0);\n        for (Float number : numbers) {\n\
    \            min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        float scale = (max - min) / (numbers.size() - 1);\n      \
    \  for (Float number : numbers) {\n            result.add(number * scale);\n \
    \       }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min of input numbers\n        float max\
    \ = numbers.get(numbers.size()-1); // max of input numbers\n        float range\
    \ = max - min;\n        for (float number : numbers) {\n            result.add(number/range);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float smallest = numbers.get(0); // smallest number\n\
    \        float largest = numbers.get(numbers.size()-1); // largest number\n  \
    \      float range = largest - smallest; // range of the numbers\n        float\
    \ scale = 1.0f / range; // scale of the smallest number to be 0\n        for (Float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0f);\n        float max = numbers.get(0);\n \
    \       for (Float number : numbers) {\n            float scaled = (float) (((number\
    \ - min) / (max - min)) * 1.0f);\n            result.add(scaled);\n          \
    \  min = Math.min(min, number);\n            max = Math.max(max, number);\n  \
    \      }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // get min value\n\
    \        float max = numbers.get(1); // get max value\n        float range = max\
    \ - min; // get range (max - min)\n        float rescaleFactor = range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * rescaleFactor);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        for (Float number : numbers) {\n            result.add(number/range);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // get smallest number\n\
    \        float max = numbers.get(numbers.size()-1); // get largest number\n  \
    \      float range = max - min;\n        float scale = 1.0f / range;\n       \
    \ for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n            result.add(number);\n        }\n        float range =\
    \ (max - min);\n        for (float number : numbers) {\n            float scaled\
    \ = (number - min) / range;\n            result.add(scaled);\n        }\n    \
    \    return result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        float rescale = (float)\
    \ range / numbers.size();\n        for (float number : numbers) {\n          \
    \  rescaled.add(number * rescale);\n        }\n        return rescaled;\n", " \
    \       ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min\
    \ = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        float scale = 1.0f\
    \ / range;\n        for (Float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<>();\n        float min = numbers.get(0); // smallest\
    \ number in list\n        float max = numbers.get(numbers.size()-1); // largest\
    \ number in list\n        float range = max - min;\n        float scale = (float)\
    \ range / numbers.size();\n        for (float number : numbers) {\n          \
    \  rescaled.add(number * scale);\n        }\n        return rescaled;\n", "  \
    \      ArrayList<Float> result = new ArrayList<>();\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        for (float number : numbers) {\n            result.add(number * (range\
    \ / number));\n        }\n        return result;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // min\
    \ is first element\n        float max = numbers.get(numbers.size()-1); // max\
    \ is last element\n        float range = max - min;\n        for (float number\
    \ : numbers) {\n            rescaled.add(number * (range / number));\n       \
    \ }\n        return rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (float number : numbers) {\n    \
    \        rescaled.add(number * (max - min) / (numbers.size() - 1));\n        \
    \    min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of list\n       \
    \ float max = numbers.get(numbers.size()-1); // max of list\n        float range\
    \ = max - min;\n        float scale = (float) range / numbers.size();\n      \
    \  for (float number : numbers) {\n            result.add(number * scale);\n \
    \       }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = Collections.min(numbers);\n        float max = Collections.max(numbers);\n\
    \        float range = max - min;\n        for (float number : numbers) {\n  \
    \          result.add(number * (range / number));\n        }\n        return result;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float smallest =\
    \ numbers.get(0); // smallest number in the list\n        float largest = numbers.get(numbers.size()-1);\
    \ // largest number in the list\n        float range = largest - smallest; //\
    \ range of the list\n        float scale = 1.0f / range; // scale of the list\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (Float number : numbers) {\n    \
    \        rescaled.add(number * (max - min) / (numbers.get(numbers.size()) - 1));\n\
    \            min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of list\n       \
    \ float max = numbers.get(numbers.size()-1); // max of list\n        float scale\
    \ = 1.0f / (max - min);\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float range = max - min;\n        for (float number : numbers) {\n        \
    \    float rescaled = number - min;\n            result.add(rescaled / range);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // initialize min to first number\n     \
    \   float max = numbers.get(0);\n        for (Float number : numbers) {\n    \
    \        min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        // Now we know min and max are both non-zero\n        // We\
    \ need to scale each number so that min becomes 0 and max becomes 1\n        //\
    \ We do this by subtracting min from each number, then dividing each number by\
    \ max - min\n        // >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n     \
    \   // [0.0, 0.25, 0.5, 0.75, 1.0]\n        for (Float number : numbers) {\n \
    \           float scaled = (number - min) / (max - min);\n            result.add(scaled);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        double min = numbers.get(0); // min of first number\n\
    \        double max = numbers.get(numbers.size()-1); // max of last number\n \
    \       double range = max - min;\n        for (Float number : numbers) {\n  \
    \          double scaled = (number-min) / range;\n            result.add(scaled);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        double min = numbers.get(0); // min of numbers is 0\n\
    \        double max = numbers.get(0);\n        for (Float number : numbers) {\n\
    \            rescaled.add(number * (max - min) / (numbers.size() - 1));\n    \
    \        min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> rescaled =\
    \ new ArrayList<>();\n        float min = numbers.get(0); // initialize min to\
    \ first number\n        float max = numbers.get(0);\n        for (Float number\
    \ : numbers) {\n            rescaled.add(number - min);\n            rescaled.add(number\
    \ - max);\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float minValue = numbers.get(0);\
    \ // Get min value\n        float maxValue = numbers.get(numbers.size()-1); //\
    \ Get max value\n        float range = maxValue - minValue; // Get range\n   \
    \     float newMinValue = 0; // New min value\n        float newMaxValue = 1;\
    \ // New max value\n        float newRange = 1; // New range\n        float newValue;\
    \ // New value\n        float newRangeValue; // New range value\n        float\
    \ newMinRangeValue; // New min range value\n        float newMaxRangeValue; //\
    \ New max range value\n        float newRangeValueNew; // New range value new\n\
    \        float newMinRangeValueNew; // New min range value new\n        float\
    \ newMaxRangeValueNew; // New max range value new\n        float newRangeValueNewNew;\
    \ // New range value new new\n        float newMinRangeValueNewNew; // New min\
    \ range value new new\n        float newMaxRangeValueNewNew; // New max range\
    \ value new new\n        float newRangeValueNewNewNew; // New range value new\
    \ new new\n        float newMinRangeValueNewNewNew; // New min range value new\
    \ new new\n        float newMaxRangeValueNewNewNew; // New max range value new\
    \ new new\n        float newRangeValueNewNewNewNew; // New range value new new\
    \ new new\n        float newMinRangeValueNewNewNewNew; // New min range value\
    \ new new new new\n        float newMaxRangeValueNewNewNewNew; // New max range\
    \ value new new new new\n        float newRangeValueNewNewNewNewNew; // New range\
    \ value new new new new new\n        float newMinRangeValueNewNewNewNewNew; //\
    \ New min range value new new new new new\n        float newMaxRangeValueNewNewNewNewNew;\
    \ // New max range value new new new new new\n        float newRangeValueNewNewNewNewNewNew;\
    \ // New range value new new new new new\n        float newMinRangeValueNewNewNewNewNewNew;\
    \ // New min range value new new new new new new\n        float newMaxRangeValueNewNewNewNewNewNew;\
    \ // New max range value new new new new new new\n        float newRangeValueNewNewNewNewNewNewNew;\
    \ // New range value new new new new new new new\n        float newMinRangeValueNewNewNewNewNewNewNew;\
    \ // New min range value new new new new new new new new\n        float newMaxRangeValueNewNewNewNew",
  "        ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min\
    \ = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        float scale = range\
    \ / numbers.size();\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * scale);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // smallest\
    \ number\n        float max = numbers.get(numbers.size()-1); // largest number\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of list\n       \
    \ float max = numbers.get(0);\n        for (Float number : numbers) {\n      \
    \      min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        for (Float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // smallest number in list\n        float max = numbers.get(numbers.size()-1);\
    \ // largest number in list\n        float range = max - min;\n        float scale\
    \ = 1.0f / range;\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = numbers.get(0); // smallest number\n\
    \        float max = numbers.get(numbers.size()-1); // largest number\n      \
    \  float range = max - min;\n        float scale = 1.0f / range;\n        for\
    \ (float number : numbers) {\n            result.add(number * scale);\n      \
    \  }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0f);\n        float max = numbers.get(0);\n \
    \       for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n            result.add(number);\n \
    \       }\n        float scale = 1.0f / (max - min);\n        for (Float number\
    \ : numbers) {\n            result.add(number * scale);\n        }\n        return\
    \ result;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n \
    \       float min = numbers.get(0); // initialize min to first number\n      \
    \  float max = numbers.get(0);\n        for (Float number : numbers) {\n     \
    \       rescaled.add(number);\n            min = Math.min(min, number);\n    \
    \        max = Math.max(max, number);\n        }\n        rescaled.add(1); //\
    \ add 1 to make min and max be 0 and 1\n        rescaled.add(0); // add 0 to make\
    \ min and max be 0 and 1\n        rescaled.add(1); // add 1 to make min and max\
    \ be 0 and 1\n        rescaled.add(0); // add 0 to make min and max be 0 and 1\n\
    \        return rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        double min = numbers.get(0); // min of list\n        double max = numbers.get(numbers.size()-1);\
    \ // max of list\n        double range = max - min;\n        double rescaleFactor\
    \ = range / numbers.size();\n        for (Float number : numbers) {\n        \
    \    rescaled.add(number * rescaleFactor);\n        }\n        return rescaled;\n",
  "        ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float range = max - min;\n        float scale = (float)\
    \ range / numbers.size();\n        for (float number : numbers) {\n          \
    \  result.add(number * scale);\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float scale = (max - min) / (numbers.size() - 1);\n    \
    \    for (Float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        double min = numbers.get(0); // smallest number in the list\n       \
    \ double max = numbers.get(numbers.size()-1); // largest number in the list\n\
    \        double range = max - min; // range of the list\n        double scale\
    \ = range / numbers.size(); // scale of the list\n        for (int i = 0; i <\
    \ numbers.size(); i++) {\n            result.add(numbers.get(i) * scale);\n  \
    \      }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get smallest number\n        float max\
    \ = numbers.get(0);\n        for (int i = 1; i < numbers.size(); i++) {\n    \
    \        float current = numbers.get(i);\n            if (current < min) {\n \
    \               min = current;\n            }\n            if (current > max)\
    \ {\n                max = current;\n            }\n        }\n        float scale\
    \ = (max - min) / (numbers.size() - 1);\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float current = numbers.get(i);\n            float scaled\
    \ = (current - min) * scale;\n            result.add(scaled);\n        }\n   \
    \     return result;\n", "        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float range = max - min;\n        float scale = (float)\
    \ range / numbers.size();\n        for (float number : numbers) {\n          \
    \  result.add(number * scale);\n        }\n        return result;\n", "      \
    \  ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(0);\n        for (float number\
    \ : numbers) {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        float scale = (max - min) / (numbers.size() - 1);\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of first number\n\
    \        float max = numbers.get(numbers.size()-1); // max of last number\n  \
    \      float range = max - min;\n        float scale = 1.0f / range;\n       \
    \ for (float number : numbers) {\n            result.add(number * scale);\n  \
    \      }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number in list\n\
    \        float max = numbers.get(numbers.size()-1); // largest number in list\n\
    \        float range = max - min;\n        for (float number : numbers) {\n  \
    \          rescaled.add(number * (range / numbers.size()));\n        }\n     \
    \   return rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        double min = numbers.get(0); // min of numbers\n        double max =\
    \ numbers.get(numbers.size()-1); // max of numbers\n        double range = max\
    \ - min;\n        double scale = (range/numbers.size());\n        rescaled.add(0);\n\
    \        rescaled.add(1);\n        for(int i = 1; i < numbers.size(); i++) {\n\
    \            rescaled.add(numbers.get(i) * scale);\n        }\n        return\
    \ rescaled;\n", "        ArrayList<Float> result = new ArrayList<>();\n      \
    \  float min = numbers.get(0); // min of list\n        float max = numbers.get(numbers.size()-1);\
    \ // max of list\n        float scale = (max - min) / (numbers.size() - 1);\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float smallest = numbers.get(0); // smallest number\
    \ in list\n        float largest = numbers.get(numbers.size()-1); // largest number\
    \ in list\n        float scale = largest / smallest; // scale factor between smallest\
    \ and largest\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> result\
    \ = new ArrayList<>();\n        float min = Collections.min(numbers);\n      \
    \  float max = Collections.max(numbers);\n        float range = max - min;\n \
    \       for (Float number : numbers) {\n            result.add(number * (range\
    \ / number));\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        for (float number : numbers) {\n            result.add(number * (range\
    \ / number));\n        }\n        return result;\n", "        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        float smallest = numbers.get(0); //\
    \ smallest number in list\n        float largest = numbers.get(numbers.size()-1);\
    \ // largest number in list\n        float range = largest - smallest; // range\
    \ in list\n        float scale = range / numbers.size();\n        for (float number\
    \ : numbers) {\n            float rescaled = number * scale;\n            result.add(rescaled);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number in list\n\
    \        float max = numbers.get(numbers.size()-1); // largest number in list\n\
    \        float range = max - min;\n        float scale = 1.0f / range;\n     \
    \   for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        double min = numbers.get(0); // initialize min to first\
    \ number\n        double max = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (Float number : numbers) {\n            double\
    \ scaled = (number - min) / (max - min);\n            result.add(scaled);\n  \
    \      }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of first number\n        float max\
    \ = numbers.get(numbers.size()-1); // max of last number\n        float range\
    \ = max - min;\n        for (float number : numbers) {\n            result.add(number\
    \ * (range / numbers.size()));\n        }\n        return result;\n", "      \
    \  ArrayList<Float> rescaled = new ArrayList<Float>();\n        float min = numbers.get(0);\
    \ // smallest number\n        float max = numbers.get(numbers.size()-1); // largest\
    \ number\n        float range = max - min;\n        float scale = range / numbers.size();\n\
    \        for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0f);\n        float max = numbers.get(0);\n\
    \        for (Float number : numbers) {\n            min = Math.min(min, number);\n\
    \            max = Math.max(max, number);\n            result.add(number);\n \
    \       }\n        float scale = (max - min) / (result.size() - 1);\n        for\
    \ (Float number : result) {\n            number = (number - min) / scale;\n  \
    \      }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of input numbers\n        float max\
    \ = numbers.get(numbers.size()-1); // max of input numbers\n        float range\
    \ = max - min; // range of the numbers\n        float scale = 1.0f / range; //\
    \ scale of the numbers\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        float minValue = numbers.get(0); // smallest\
    \ number\n        float maxValue = numbers.get(numbers.size()-1); // largest number\n\
    \        float range = maxValue - minValue; // range of the numbers\n        float\
    \ scale = range / numbers.size();\n        rescaled.add(minValue);\n        for\
    \ (float number : numbers) {\n            rescaled.add(number * scale);\n    \
    \    }\n        return rescaled;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        for (float number : numbers) {\n            rescaled.add(number\
    \ * (range / number));\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = numbers.get(0f);\n        float\
    \ max = numbers.get(0);\n        for (float number : numbers) {\n            float\
    \ scaled = (number - min) / (max - min);\n            result.add(scaled);\n  \
    \          min = Math.min(min, number);\n            max = Math.max(max, number);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        double minValue = numbers.get(0); // The smallest\
    \ number in the list\n        double maxValue = numbers.get(numbers.size()-1);\
    \ // The largest number in the list\n        double range = (maxValue - minValue);\
    \ // The difference between the largest and smallest number\n        double rangeInv\
    \ = 1 / range; // The inverse of the range\n        double scale = (rangeInv *\
    \ range); // The scale factor to apply to the numbers\n        double scaleInv\
    \ = 1 / scale; // The inverse of the scale\n        double newMinValue = minValue\
    \ * scaleInv; // The new smallest number after applying the scale\n        double\
    \ newMaxValue = maxValue * scaleInv; // The new largest number after applying\
    \ the scale\n        double newRange = newMaxValue - newMinValue; // The new range\
    \ after applying the scale\n        double newRangeInv = 1 / newRange; // The\
    \ inverse of the new range\n        double newScale = newRangeInv * newRange;\
    \ // The new scale factor to apply to the numbers\n        double newScaleInv\
    \ = 1 / newScale; // The inverse of the new scale\n        for (Float number :\
    \ numbers) {\n            double newNumber = (number - newMinValue) * newScaleInv\
    \ + newMinValue; // The new number\n            result.add(newNumber); // Add\
    \ the new number to the list\n        }\n        return result;\n", "        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        float min = numbers.get(0); // Get\
    \ smallest number\n        float max = numbers.get(numbers.size()-1); // Get largest\
    \ number\n        float range = max - min;\n        float scale = 1.0f / range;\n\
    \        for (float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // Initialize min to first\
    \ number\n        float max = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        for (Float number : numbers) {\n            result.add(number\
    \ * (max - min) / (max - min));\n        }\n        return result;\n", "     \
    \   ArrayList<Float> result = new ArrayList<>();\n        float min = numbers.get(0);\
    \ // min of numbers\n        float max = numbers.get(numbers.size()-1); // max\
    \ of numbers\n        float range = max - min;\n        float scale = 1.0f / range;\n\
    \        for (Float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<Float>();\n        float min = numbers.get(0); // min is guaranteed\
    \ to be non-zero\n        float max = numbers.get(0);\n        for (float number\
    \ : numbers) {\n            rescaled.add(number * (max - min) / (numbers.size()\
    \ - 1));\n            min = Math.min(min, number);\n            max = Math.max(max,\
    \ number);\n        }\n        return rescaled;\n", "        ArrayList<Float>\
    \ result = new ArrayList<>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float range = max - min; // range of the numbers\n        float scale = range\
    \ / numbers.size();\n        for (float number : numbers) {\n            result.add(number\
    \ * scale);\n        }\n        return result;\n", "        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0); // min of numbers\n\
    \        float max = numbers.get(numbers.size()-1); // max of numbers\n      \
    \  float range = max - min;\n        float scale = 1.0f / range;\n        for\
    \ (Float number : numbers) {\n            rescaled.add(number * scale);\n    \
    \    }\n        return rescaled;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        double min = numbers.get(0); // min of list\n      \
    \  double max = numbers.get(numbers.size()-1); // max of list\n        double\
    \ range = max - min;\n        double scale = range / numbers.size();\n       \
    \ for (Float number : numbers) {\n            rescaled.add(number * scale);\n\
    \        }\n        return rescaled;\n", "        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        float smallest = numbers.get(0); // smallest number\
    \ in list\n        float largest = numbers.get(numbers.size()-1); // largest number\
    \ in list\n        float range = largest - smallest; // range of numbers in list\n\
    \        float scale = 1.0f / range; // scale factor to map smallest number to\
    \ 0\n        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> result = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // min of numbers\n    \
    \    float max = numbers.get(numbers.size()-1); // max of numbers\n        float\
    \ range = max - min;\n        for (float number : numbers) {\n            float\
    \ rescaled = (number - min) / range;\n            result.add(rescaled);\n    \
    \    }\n        return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // smallest number in list\n        float\
    \ max = numbers.get(numbers.size()-1); // largest number in list\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (Float\
    \ number : numbers) {\n            result.add(number * scale);\n        }\n  \
    \      return result;\n", "        ArrayList<Float> result = new ArrayList<>();\n\
    \        float min = numbers.get(0); // min of numbers\n        float max = numbers.get(numbers.size()-1);\
    \ // max of numbers\n        float scale = (max - min) / (numbers.size() - 1);\n\
    \        for (float number : numbers) {\n            result.add(number * scale);\n\
    \        }\n        return result;\n", "        ArrayList<Float> rescaled = new\
    \ ArrayList<>();\n        float min = numbers.get(0); // smallest number\n   \
    \     float max = numbers.get(numbers.size()-1); // largest number\n        float\
    \ range = max - min;\n        float scale = 1.0f / range;\n        for (float\
    \ number : numbers) {\n            rescaled.add(number * scale);\n        }\n\
    \        return rescaled;\n", "        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        float min = numbers.get(0); // get min value\n        float max = numbers.get(numbers.size()-1);\
    \ // get max value\n        float range = max - min; // get range\n        float\
    \ rescale = (float) range / numbers.size();\n        rescaled.add(min);\n    \
    \    for (int i = 1; i < numbers.size(); i++) {\n            rescaled.add(numbers.get(i)\
    \ * rescale);\n        }\n        return rescaled;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

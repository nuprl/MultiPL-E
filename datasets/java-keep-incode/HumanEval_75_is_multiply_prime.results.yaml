name: HumanEval_75_is_multiply_prime
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 0;\n        long G1 = 0;\n\
    \        long H1 = 0;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp28ucye7e.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long a = 100;\n        long b = 100;\n        long c = 100;\n        long d\
    \ = 100;\n        long e = 100;\n        long f = 100;\n        long g = 100;\n\
    \        long h = 100;\n        long i = 100;\n        long j = 100;\n       \
    \ long k = 100;\n        long l = 100;\n        long m = 100;\n        long n\
    \ = 100;\n        long o = 100;\n        long p = 100;\n        long q = 100;\n\
    \        long r = 100;\n        long s = 100;\n        long t = 100;\n       \
    \ long u = 100;\n        long v = 100;\n        long w = 100;\n        long x\
    \ = 100;\n        long y = 100;\n        long z = 100;\n        long a = 100;\n\
    \        long b = 100;\n        long c = 100;\n        long d = 100;\n       \
    \ long e = 100;\n        long f = 100;\n        long g = 100;\n        long h\
    \ = 100;\n        long i = 100;\n        long j = 100;\n        long k = 100;\n\
    \        long l = 100;\n        long m = 100;\n        long n = 100;\n       \
    \ long o = 100;\n        long p = 100;\n        long q = 100;\n        long r\
    \ = 100;\n        long s = 100;\n        long t = 100;\n        long u = 100;\n\
    \        long v = 100;\n        long w = 100;\n        long x = 100;\n       \
    \ long y = 100;\n        long z = 100;\n        long a = 100;\n        long b\
    \ = 100;\n        long c = 100;\n        long d = 100;\n        long e = 100;\n\
    \        long f = 100;\n        long g = 100;\n        long h = 100;\n       \
    \ long i = 100;\n        long j = 100;\n        long k = 100;\n        long l\
    \ = 100;\n        long m = 100;\n        long n = 100;\n        long o = 100;\n\
    \        long p = 100;\n        long q = 100;\n        long r = 100;\n       \
    \ long s = 100;\n        long t = 100;\n        long u = 100;\n        long v\
    \ = 100;\n        long w = 100;\n        long x = 100;\n        long y = 100;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_s0g3wg4.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp_s0g3wg4.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9p6b2706.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgsr5f557.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 1;\n        long f = 2;\n        long g = 1;\n        long h = 2;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk8vakg2y.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpttobfaxk.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppmb6oe6e.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 2;\n        long Q = 2;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long AA = 2;\n        long AB = 2;\n        long AC = 2;\n        long\
    \ AD = 2;\n        long AE = 2;\n        long AF = 3;\n        long AG = 3;\n\
    \        long AH = 3;\n        long AI = 2;\n        long AJ = 2;\n        long\
    \ AK = 2;\n        long AL = 2;\n        long AM = 2;\n        long AN = 2;\n\
    \        long AO = 2;\n        long AP = 2;\n        long AQ = 2;\n        long\
    \ AR = 2;\n        long AS = 2;\n        long AT = 2;\n        long AU = 2;\n\
    \        long AV = 2;\n        long AW = 2;\n        long AX = 2;\n        long\
    \ AY = 2;\n        long AZ = 2;\n        long BA = 2;\n        long BB = 2;\n\
    \        long BC = 2;\n        long BD = 2;\n        long BE = 2;\n        long\
    \ BF = 3;\n        long BG = 3;\n        long BH = 3;\n        long BI = 2;\n\
    \        long BJ = 2;\n        long BK = 2;\n        long BL = 2;\n        long\
    \ BM = 2;\n        long BN = 2;\n        long BO = 2;\n        long BP = 2;\n\
    \        long BQ = 2;\n        long BR = 2;\n        long BS = 2;\n        long\
    \ BT = 2;\n        long BU = 2;\n        long BV = 2;\n        long BW = 2;\n\
    \        long BX = 2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_5c_v2cn.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphh57f67z.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0hhx7k1b.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp0hhx7k1b.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Ss = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long Aaa = 0;\n        long Bbb = 0;\n\
    \        long Ccc = 0;\n        long Ddd = 0;\n        long Eee = 0;\n       \
    \ long Fff = 0;\n        long Ggg = 0;\n        long Hhh = 0;\n        long Iii\
    \ = 0;\n        long Jjj = 0;\n        long Kkk = 0;\n        long Lll = 0;\n\
    \        long Mmm = 0;\n        long Nnn = 0;\n        long Ooo = 0;\n       \
    \ long Ppp = 0;\n        long Qqq = 0;\n        long Rrr = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4babuiw_.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2dq1aoa5.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpanp9o1c6.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpanp9o1c6.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = true;\n        long b = 2;\n       \
    \ long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq9mkm76s.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 2;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphg5c44ur.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = a;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long AA = 1;\n        long\
    \ AB = 1;\n        long AC = 1;\n        long AD = 1;\n        long AE = 1;\n\
    \        long AF = 1;\n        long AG = 1;\n        long AH = 1;\n        long\
    \ AI = 1;\n        long AJ = 1;\n        long AK = 1;\n        long AL = 1;\n\
    \        long AM = 1;\n        long AN = 1;\n        long AO = 1;\n        long\
    \ AP = 1;\n        long AQ = 1;\n        long AR = 1;\n        long AS = 1;\n\
    \        long AT = 1;\n        long AU = 1;\n        long AV = 1;\n        long\
    \ AW = 1;\n        long AX = 1;\n        long AY = 1;\n        long AZ = 1;\n\
    \        long BA = 1;\n        long BB = 1;\n        long BC = 1;\n        long\
    \ BD = 1;\n        long BE = 1;\n        long BF = 1;\n        long BG = 1;\n\
    \        long BH = 1;\n        long BI = 1;\n        long BJ = 1;\n        long\
    \ BK = 1;\n        long BL = 1;\n        long BM = 1;\n        long BN = 1;\n\
    \        long BO = 1;\n        long BP = 1;\n        long BQ = 1;\n        long\
    \ BR = 1;\n        long BS = 1;\n        long BT = 1;\n        long BU = 1;\n\
    \        long BV = 1;\n        long \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprbbacz3l.java:116: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprbbacz3l.java:116: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgyzb5et1.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1wno06kb.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp1wno06kb.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ar8qar0.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n/tmp/tmp7ar8qar0.java:41: error: variable a is already defined in method\
    \ isMultiplyPrime(long)\n        long a = 1;\n             ^\n/tmp/tmp7ar8qar0.java:42:\
    \ error: variable b is already defined in method isMultiplyPrime(long)\n     \
    \   long b = 1;\n             ^\n/tmp/tmp7ar8qar0.java:43: error: variable c is\
    \ already defined in method isMultiplyPrime(long)\n        long c = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:44: error: variable d is already defined in\
    \ method isMultiplyPrime(long)\n        long d = 1;\n             ^\n/tmp/tmp7ar8qar0.java:45:\
    \ error: variable e is already defined in method isMultiplyPrime(long)\n     \
    \   long e = 1;\n             ^\n/tmp/tmp7ar8qar0.java:46: error: variable f is\
    \ already defined in method isMultiplyPrime(long)\n        long f = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:47: error: variable g is already defined in\
    \ method isMultiplyPrime(long)\n        long g = 1;\n             ^\n/tmp/tmp7ar8qar0.java:48:\
    \ error: variable h is already defined in method isMultiplyPrime(long)\n     \
    \   long h = 1;\n             ^\n/tmp/tmp7ar8qar0.java:49: error: variable i is\
    \ already defined in method isMultiplyPrime(long)\n        long i = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:50: error: variable j is already defined in\
    \ method isMultiplyPrime(long)\n        long j = 1;\n             ^\n/tmp/tmp7ar8qar0.java:51:\
    \ error: variable k is already defined in method isMultiplyPrime(long)\n     \
    \   long k = 1;\n             ^\n/tmp/tmp7ar8qar0.java:52: error: variable l is\
    \ already defined in method isMultiplyPrime(long)\n        long l = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:53: error: variable m is already defined in\
    \ method isMultiplyPrime(long)\n        long m = 1;\n             ^\n/tmp/tmp7ar8qar0.java:54:\
    \ error: variable n is already defined in method isMultiplyPrime(long)\n     \
    \   long n = 1;\n             ^\n/tmp/tmp7ar8qar0.java:55: error: variable o is\
    \ already defined in method isMultiplyPrime(long)\n        long o = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:56: error: variable p is already defined in\
    \ method isMultiplyPrime(long)\n        long p = 1;\n             ^\n/tmp/tmp7ar8qar0.java:57:\
    \ error: variable q is already defined in method isMultiplyPrime(long)\n     \
    \   long q = 1;\n             ^\n/tmp/tmp7ar8qar0.java:58: error: variable r is\
    \ already defined in method isMultiplyPrime(long)\n        long r = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:59: error: variable s is already defined in\
    \ method isMultiplyPrime(long)\n        long s = 1;\n             ^\n/tmp/tmp7ar8qar0.java:60:\
    \ error: variable t is already defined in method isMultiplyPrime(long)\n     \
    \   long t = 1;\n             ^\n/tmp/tmp7ar8qar0.java:61: error: variable u is\
    \ already defined in method isMultiplyPrime(long)\n        long u = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:62: error: variable v is already defined in\
    \ method isMultiplyPrime(long)\n        long v = 1;\n             ^\n/tmp/tmp7ar8qar0.java:63:\
    \ error: variable w is already defined in method isMultiplyPrime(long)\n     \
    \   long w = 1;\n             ^\n/tmp/tmp7ar8qar0.java:64: error: variable x is\
    \ already defined in method isMultiplyPrime(long)\n        long x = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:65: error: variable y is already defined in\
    \ method isMultiplyPrime(long)\n        long y = 1;\n             ^\n/tmp/tmp7ar8qar0.java:66:\
    \ error: variable z is already defined in method isMultiplyPrime(long)\n     \
    \   long z = 1;\n             ^\n/tmp/tmp7ar8qar0.java:67: error: variable a is\
    \ already defined in method isMultiplyPrime(long)\n        long a = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:68: error: variable b is already defined in\
    \ method isMultiplyPrime(long)\n        long b = 1;\n             ^\n/tmp/tmp7ar8qar0.java:69:\
    \ error: variable c is already defined in method isMultiplyPrime(long)\n     \
    \   long c = 1;\n             ^\n/tmp/tmp7ar8qar0.java:70: error: variable d is\
    \ already defined in method isMultiplyPrime(long)\n        long d = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:71: error: variable e is already defined in\
    \ method isMultiplyPrime(long)\n        long e = 1;\n             ^\n/tmp/tmp7ar8qar0.java:72:\
    \ error: variable f is already defined in method isMultiplyPrime(long)\n     \
    \   long f = 1;\n             ^\n/tmp/tmp7ar8qar0.java:73: error: variable g is\
    \ already defined in method isMultiplyPrime(long)\n        long g = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:74: error: variable h is already defined in\
    \ method isMultiplyPrime(long)\n        long h = 1;\n             ^\n/tmp/tmp7ar8qar0.java:75:\
    \ error: variable i is already defined in method isMultiplyPrime(long)\n     \
    \   long i = 1;\n             ^\n/tmp/tmp7ar8qar0.java:76: error: variable j is\
    \ already defined in method isMultiplyPrime(long)\n        long j = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:77: error: variable k is already defined in\
    \ method isMultiplyPrime(long)\n        long k = 1;\n             ^\n/tmp/tmp7ar8qar0.java:78:\
    \ error: variable l is already defined in method isMultiplyPrime(long)\n     \
    \   long l = 1;\n             ^\n/tmp/tmp7ar8qar0.java:79: error: variable m is\
    \ already defined in method isMultiplyPrime(long)\n        long m = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:80: error: variable n is already defined in\
    \ method isMultiplyPrime(long)\n        long n = 1;\n             ^\n/tmp/tmp7ar8qar0.java:81:\
    \ error: variable o is already defined in method isMultiplyPrime(long)\n     \
    \   long o = 1;\n             ^\n/tmp/tmp7ar8qar0.java:82: error: variable p is\
    \ already defined in method isMultiplyPrime(long)\n        long p = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:83: error: variable q is already defined in\
    \ method isMultiplyPrime(long)\n        long q = 1;\n             ^\n/tmp/tmp7ar8qar0.java:84:\
    \ error: variable r is already defined in method isMultiplyPrime(long)\n     \
    \   long r = 1;\n             ^\n/tmp/tmp7ar8qar0.java:85: error: variable s is\
    \ already defined in method isMultiplyPrime(long)\n        long s = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:86: error: variable t is already defined in\
    \ method isMultiplyPrime(long)\n        long t = 1;\n             ^\n/tmp/tmp7ar8qar0.java:87:\
    \ error: variable u is already defined in method isMultiplyPrime(long)\n     \
    \   long u = 1;\n             ^\n/tmp/tmp7ar8qar0.java:88: error: variable v is\
    \ already defined in method isMultiplyPrime(long)\n        long v = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:89: error: variable w is already defined in\
    \ method isMultiplyPrime(long)\n        long w = 1;\n             ^\n/tmp/tmp7ar8qar0.java:90:\
    \ error: variable x is already defined in method isMultiplyPrime(long)\n     \
    \   long x = 1;\n             ^\n/tmp/tmp7ar8qar0.java:91: error: variable y is\
    \ already defined in method isMultiplyPrime(long)\n        long y = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:92: error: variable z is already defined in\
    \ method isMultiplyPrime(long)\n        long z = 1;\n             ^\n/tmp/tmp7ar8qar0.java:93:\
    \ error: variable a is already defined in method isMultiplyPrime(long)\n     \
    \   long a = 1;\n             ^\n/tmp/tmp7ar8qar0.java:94: error: variable b is\
    \ already defined in method isMultiplyPrime(long)\n        long b = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:95: error: variable c is already defined in\
    \ method isMultiplyPrime(long)\n        long c = 1;\n             ^\n/tmp/tmp7ar8qar0.java:96:\
    \ error: variable d is already defined in method isMultiplyPrime(long)\n     \
    \   long d = 1;\n             ^\n/tmp/tmp7ar8qar0.java:97: error: variable e is\
    \ already defined in method isMultiplyPrime(long)\n        long e = 1;\n     \
    \        ^\n/tmp/tmp7ar8qar0.java:98: error: variable f is already defined in\
    \ method isMultiplyPrime(long)\n        long f = 1;\n             ^\n/tmp/tmp7ar8qar0.java:99:\
    \ error: variable g is already defined in method isMultiplyPrime(long)\n     \
    \   long g = 1;\n             ^\n/tmp/tmp7ar8qar0.java:100: error: variable h\
    \ is already defined in method isMultiplyPrime(long)\n        long h = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:101: error: variable i is already defined\
    \ in method isMultiplyPrime(long)\n        long i = 1;\n             ^\n/tmp/tmp7ar8qar0.java:102:\
    \ error: variable j is already defined in method isMultiplyPrime(long)\n     \
    \   long j = 1;\n             ^\n/tmp/tmp7ar8qar0.java:103: error: variable k\
    \ is already defined in method isMultiplyPrime(long)\n        long k = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:104: error: variable l is already defined\
    \ in method isMultiplyPrime(long)\n        long l = 1;\n             ^\n/tmp/tmp7ar8qar0.java:105:\
    \ error: variable m is already defined in method isMultiplyPrime(long)\n     \
    \   long m = 1;\n             ^\n/tmp/tmp7ar8qar0.java:106: error: variable n\
    \ is already defined in method isMultiplyPrime(long)\n        long n = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:107: error: variable o is already defined\
    \ in method isMultiplyPrime(long)\n        long o = 1;\n             ^\n/tmp/tmp7ar8qar0.java:108:\
    \ error: variable p is already defined in method isMultiplyPrime(long)\n     \
    \   long p = 1;\n             ^\n/tmp/tmp7ar8qar0.java:109: error: variable q\
    \ is already defined in method isMultiplyPrime(long)\n        long q = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:110: error: variable r is already defined\
    \ in method isMultiplyPrime(long)\n        long r = 1;\n             ^\n/tmp/tmp7ar8qar0.java:111:\
    \ error: variable s is already defined in method isMultiplyPrime(long)\n     \
    \   long s = 1;\n             ^\n/tmp/tmp7ar8qar0.java:112: error: variable t\
    \ is already defined in method isMultiplyPrime(long)\n        long t = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:113: error: variable u is already defined\
    \ in method isMultiplyPrime(long)\n        long u = 1;\n             ^\n/tmp/tmp7ar8qar0.java:114:\
    \ error: variable v is already defined in method isMultiplyPrime(long)\n     \
    \   long v = 1;\n             ^\n/tmp/tmp7ar8qar0.java:115: error: variable w\
    \ is already defined in method isMultiplyPrime(long)\n        long w = 1;\n  \
    \           ^\n/tmp/tmp7ar8qar0.java:116: error: variable x is already defined\
    \ in method isMultiplyPrime(long)\n        long x = 1;\n             ^\n/tmp/tmp7ar8qar0.java:117:\
    \ error: variable y is already defined in method isMultiplyPrime(long)\n     \
    \   long y = 1;\n             ^\n78 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = a;\n        long d = a;\n      \
    \  long e = a;\n        long f = a;\n        long g = a;\n        long h = a;\n\
    \        long i = a;\n        long j = a;\n        long k = a;\n        long l\
    \ = a;\n        long m = a;\n        long n = a;\n        long o = a;\n      \
    \  long p = a;\n        long q = a;\n        long r = a;\n        long s = a;\n\
    \        long t = a;\n        long u = a;\n        long v = a;\n        long w\
    \ = a;\n        long x = a;\n        long y = a;\n        long z = a;\n      \
    \  long a = a;\n        long b = a;\n        long c = a;\n        long d = a;\n\
    \        long e = a;\n        long f = a;\n        long g = a;\n        long h\
    \ = a;\n        long i = a;\n        long j = a;\n        long k = a;\n      \
    \  long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = \n    }\n \
    \   public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpswkm_u6x.java:118: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnalel0vv.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7mgo3ews.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long aa = 0;\n        long bb = 0;\n        long cc = 0;\n        long dd =\
    \ 0;\n        long ee = 0;\n        long ff = 0;\n        long gg = 0;\n     \
    \   long hh = 0;\n        long ii = 0;\n        long jj = 0;\n        long kk\
    \ = 0;\n        long ll = 0;\n        long mm = 0;\n        long nn = 0;\n   \
    \     long oo = 0;\n        long pp = 0;\n        long qq = 0;\n        long rr\
    \ = 0;\n        long ss = 0;\n        long tt = 0;\n        long uu = 0;\n   \
    \     long vv = 0;\n        long ww = 0;\n        long xx = 0;\n        long yy\
    \ = 0;\n        long zz = 0;\n        long aaa = 0;\n        long bbb = 0;\n \
    \       long ccc = 0;\n        long ddd = 0;\n        long eee = 0;\n        long\
    \ fff = 0;\n        long ggg = 0;\n        long hhh = 0;\n        long iii = 0;\n\
    \        long jjj = 0;\n        long kkk = 0;\n        long lll = 0;\n       \
    \ long mmm = 0;\n        long nnn = 0;\n        long ooo = 0;\n        long ppp\
    \ = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss = 0;\n\
    \        long ttt = 0;\n        long uuu = 0;\n        long vvv = 0;\n       \
    \ long www = 0;\n        long xxx = 0;\n        long yyy = 0;\n        long zzz\
    \ = 0;\n        long aaaa = 0;\n        long bbbb = 0;\n        long cccc = 0;\n\
    \        long dddd = 0;\n        long eeee = 0;\n        long ffff = 0;\n    \
    \    long gggg = 0;\n        long hhhh = 0;\n        long iiii = 0;\n        long\
    \ jjjj = 0;\n        long kkkk = 0;\n        long llll = 0;\n        long mmmm\
    \ = 0;\n        long nnnn = 0;\n        long oooo = 0;\n        long pppp = 0;\n\
    \        long qqqq = 0;\n        long rrrr = 0;\n        long ssss = 0;\n    \
    \    long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3m6j5eyc.java:112: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3m6j5eyc.java:112: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 2;\n        long e = 3;\n        long f = 5;\n        long g = 7;\n        long\
    \ h = 10;\n        long i = 13;\n        long j = 15;\n        long k = 21;\n\
    \        long l = 31;\n        long m = 41;\n        long n = 51;\n        long\
    \ o = 61;\n        long p = 71;\n        long q = 81;\n        long r = 91;\n\
    \        long s = 101;\n        long t = 111;\n        long u = 121;\n       \
    \ long v = 131;\n        long w = 141;\n        long x = 151;\n        long y\
    \ = 161;\n        long z = 171;\n        long a = 181;\n        long b = 191;\n\
    \        long c = 201;\n        long d = 211;\n        long e = 221;\n       \
    \ long f = 231;\n        long g = 241;\n        long h = 251;\n        long i\
    \ = 261;\n        long j = 271;\n        long k = 281;\n        long l = 291;\n\
    \        long m = 301;\n        long n = 311;\n        long o = 321;\n       \
    \ long p = 331;\n        long q = 341;\n        long r = 351;\n        long s\
    \ = 361;\n        long t = 371;\n        long u = 381;\n        long v = 391;\n\
    \        long w = 401;\n        long x = 411;\n        long y = 421;\n       \
    \ long z = 431;\n        long a = 441;\n        long b = 451;\n        long c\
    \ = 461;\n        long d = 471;\n        long e = 481;\n        long f = 491;\n\
    \        long g = 501;\n        long h = 511;\n        long i = 521;\n       \
    \ long j = 531;\n        long k = 541;\n        long l = 551;\n        long m\
    \ = 561;\n        long n = 571;\n        long o = 581;\n        long p = 591;\n\
    \        long q = 601;\n        long r = 611;\n        long s = 621;\n       \
    \ long t = 631;\n        long u = 641;\n        long v = 651;\n        long w\
    \ = 661;\n        long x = 671;\n        long y = 681;\n        long z = 691;\n\
    \        long a = 701;\n        long b = 711;\n        long c = 721;\n       \
    \ long d = 731;\n        long e = 741;\n        long f = 751;\n        long g\
    \ = 761;\n        long h = 771;\n        long i = 781;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpps04zbof.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n/tmp/tmpps04zbof.java:41: error: variable a is already defined in method\
    \ isMultiplyPrime(long)\n        long a = 181;\n             ^\n/tmp/tmpps04zbof.java:42:\
    \ error: variable b is already defined in method isMultiplyPrime(long)\n     \
    \   long b = 191;\n             ^\n/tmp/tmpps04zbof.java:43: error: variable c\
    \ is already defined in method isMultiplyPrime(long)\n        long c = 201;\n\
    \             ^\n/tmp/tmpps04zbof.java:44: error: variable d is already defined\
    \ in method isMultiplyPrime(long)\n        long d = 211;\n             ^\n/tmp/tmpps04zbof.java:45:\
    \ error: variable e is already defined in method isMultiplyPrime(long)\n     \
    \   long e = 221;\n             ^\n/tmp/tmpps04zbof.java:46: error: variable f\
    \ is already defined in method isMultiplyPrime(long)\n        long f = 231;\n\
    \             ^\n/tmp/tmpps04zbof.java:47: error: variable g is already defined\
    \ in method isMultiplyPrime(long)\n        long g = 241;\n             ^\n/tmp/tmpps04zbof.java:48:\
    \ error: variable h is already defined in method isMultiplyPrime(long)\n     \
    \   long h = 251;\n             ^\n/tmp/tmpps04zbof.java:49: error: variable i\
    \ is already defined in method isMultiplyPrime(long)\n        long i = 261;\n\
    \             ^\n/tmp/tmpps04zbof.java:50: error: variable j is already defined\
    \ in method isMultiplyPrime(long)\n        long j = 271;\n             ^\n/tmp/tmpps04zbof.java:51:\
    \ error: variable k is already defined in method isMultiplyPrime(long)\n     \
    \   long k = 281;\n             ^\n/tmp/tmpps04zbof.java:52: error: variable l\
    \ is already defined in method isMultiplyPrime(long)\n        long l = 291;\n\
    \             ^\n/tmp/tmpps04zbof.java:53: error: variable m is already defined\
    \ in method isMultiplyPrime(long)\n        long m = 301;\n             ^\n/tmp/tmpps04zbof.java:54:\
    \ error: variable n is already defined in method isMultiplyPrime(long)\n     \
    \   long n = 311;\n             ^\n/tmp/tmpps04zbof.java:55: error: variable o\
    \ is already defined in method isMultiplyPrime(long)\n        long o = 321;\n\
    \             ^\n/tmp/tmpps04zbof.java:56: error: variable p is already defined\
    \ in method isMultiplyPrime(long)\n        long p = 331;\n             ^\n/tmp/tmpps04zbof.java:57:\
    \ error: variable q is already defined in method isMultiplyPrime(long)\n     \
    \   long q = 341;\n             ^\n/tmp/tmpps04zbof.java:58: error: variable r\
    \ is already defined in method isMultiplyPrime(long)\n        long r = 351;\n\
    \             ^\n/tmp/tmpps04zbof.java:59: error: variable s is already defined\
    \ in method isMultiplyPrime(long)\n        long s = 361;\n             ^\n/tmp/tmpps04zbof.java:60:\
    \ error: variable t is already defined in method isMultiplyPrime(long)\n     \
    \   long t = 371;\n             ^\n/tmp/tmpps04zbof.java:61: error: variable u\
    \ is already defined in method isMultiplyPrime(long)\n        long u = 381;\n\
    \             ^\n/tmp/tmpps04zbof.java:62: error: variable v is already defined\
    \ in method isMultiplyPrime(long)\n        long v = 391;\n             ^\n/tmp/tmpps04zbof.java:63:\
    \ error: variable w is already defined in method isMultiplyPrime(long)\n     \
    \   long w = 401;\n             ^\n/tmp/tmpps04zbof.java:64: error: variable x\
    \ is already defined in method isMultiplyPrime(long)\n        long x = 411;\n\
    \             ^\n/tmp/tmpps04zbof.java:65: error: variable y is already defined\
    \ in method isMultiplyPrime(long)\n        long y = 421;\n             ^\n/tmp/tmpps04zbof.java:66:\
    \ error: variable z is already defined in method isMultiplyPrime(long)\n     \
    \   long z = 431;\n             ^\n/tmp/tmpps04zbof.java:67: error: variable a\
    \ is already defined in method isMultiplyPrime(long)\n        long a = 441;\n\
    \             ^\n/tmp/tmpps04zbof.java:68: error: variable b is already defined\
    \ in method isMultiplyPrime(long)\n        long b = 451;\n             ^\n/tmp/tmpps04zbof.java:69:\
    \ error: variable c is already defined in method isMultiplyPrime(long)\n     \
    \   long c = 461;\n             ^\n/tmp/tmpps04zbof.java:70: error: variable d\
    \ is already defined in method isMultiplyPrime(long)\n        long d = 471;\n\
    \             ^\n/tmp/tmpps04zbof.java:71: error: variable e is already defined\
    \ in method isMultiplyPrime(long)\n        long e = 481;\n             ^\n/tmp/tmpps04zbof.java:72:\
    \ error: variable f is already defined in method isMultiplyPrime(long)\n     \
    \   long f = 491;\n             ^\n/tmp/tmpps04zbof.java:73: error: variable g\
    \ is already defined in method isMultiplyPrime(long)\n        long g = 501;\n\
    \             ^\n/tmp/tmpps04zbof.java:74: error: variable h is already defined\
    \ in method isMultiplyPrime(long)\n        long h = 511;\n             ^\n/tmp/tmpps04zbof.java:75:\
    \ error: variable i is already defined in method isMultiplyPrime(long)\n     \
    \   long i = 521;\n             ^\n/tmp/tmpps04zbof.java:76: error: variable j\
    \ is already defined in method isMultiplyPrime(long)\n        long j = 531;\n\
    \             ^\n/tmp/tmpps04zbof.java:77: error: variable k is already defined\
    \ in method isMultiplyPrime(long)\n        long k = 541;\n             ^\n/tmp/tmpps04zbof.java:78:\
    \ error: variable l is already defined in method isMultiplyPrime(long)\n     \
    \   long l = 551;\n             ^\n/tmp/tmpps04zbof.java:79: error: variable m\
    \ is already defined in method isMultiplyPrime(long)\n        long m = 561;\n\
    \             ^\n/tmp/tmpps04zbof.java:80: error: variable n is already defined\
    \ in method isMultiplyPrime(long)\n        long n = 571;\n             ^\n/tmp/tmpps04zbof.java:81:\
    \ error: variable o is already defined in method isMultiplyPrime(long)\n     \
    \   long o = 581;\n             ^\n/tmp/tmpps04zbof.java:82: error: variable p\
    \ is already defined in method isMultiplyPrime(long)\n        long p = 591;\n\
    \             ^\n/tmp/tmpps04zbof.java:83: error: variable q is already defined\
    \ in method isMultiplyPrime(long)\n        long q = 601;\n             ^\n/tmp/tmpps04zbof.java:84:\
    \ error: variable r is already defined in method isMultiplyPrime(long)\n     \
    \   long r = 611;\n             ^\n/tmp/tmpps04zbof.java:85: error: variable s\
    \ is already defined in method isMultiplyPrime(long)\n        long s = 621;\n\
    \             ^\n/tmp/tmpps04zbof.java:86: error: variable t is already defined\
    \ in method isMultiplyPrime(long)\n        long t = 631;\n             ^\n/tmp/tmpps04zbof.java:87:\
    \ error: variable u is already defined in method isMultiplyPrime(long)\n     \
    \   long u = 641;\n             ^\n/tmp/tmpps04zbof.java:88: error: variable v\
    \ is already defined in method isMultiplyPrime(long)\n        long v = 651;\n\
    \             ^\n/tmp/tmpps04zbof.java:89: error: variable w is already defined\
    \ in method isMultiplyPrime(long)\n        long w = 661;\n             ^\n/tmp/tmpps04zbof.java:90:\
    \ error: variable x is already defined in method isMultiplyPrime(long)\n     \
    \   long x = 671;\n             ^\n/tmp/tmpps04zbof.java:91: error: variable y\
    \ is already defined in method isMultiplyPrime(long)\n        long y = 681;\n\
    \             ^\n/tmp/tmpps04zbof.java:92: error: variable z is already defined\
    \ in method isMultiplyPrime(long)\n        long z = 691;\n             ^\n/tmp/tmpps04zbof.java:93:\
    \ error: variable a is already defined in method isMultiplyPrime(long)\n     \
    \   long a = 701;\n             ^\n/tmp/tmpps04zbof.java:94: error: variable b\
    \ is already defined in method isMultiplyPrime(long)\n        long b = 711;\n\
    \             ^\n/tmp/tmpps04zbof.java:95: error: variable c is already defined\
    \ in method isMultiplyPrime(long)\n        long c = 721;\n             ^\n/tmp/tmpps04zbof.java:96:\
    \ error: variable d is already defined in method isMultiplyPrime(long)\n     \
    \   long d = 731;\n             ^\n/tmp/tmpps04zbof.java:97: error: variable e\
    \ is already defined in method isMultiplyPrime(long)\n        long e = 741;\n\
    \             ^\n/tmp/tmpps04zbof.java:98: error: variable f is already defined\
    \ in method isMultiplyPrime(long)\n        long f = 751;\n             ^\n/tmp/tmpps04zbof.java:99:\
    \ error: variable g is already defined in method isMultiplyPrime(long)\n     \
    \   long g = 761;\n             ^\n/tmp/tmpps04zbof.java:100: error: variable\
    \ h is already defined in method isMultiplyPrime(long)\n        long h = 771;\n\
    \             ^\n/tmp/tmpps04zbof.java:101: error: variable i is already defined\
    \ in method isMultiplyPrime(long)\n        long i = 781;\n             ^\n62 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpje49amni.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoofvhooe.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0cxv8l0t.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxsfljlh9.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 3;\n        long j = 3;\n        long k = 3;\n        long l\
    \ = 3;\n        long m = 3;\n        long n = 3;\n        long o = 3;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 3;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n      \
    \  long L = 3;\n        long M = 3;\n        long N = 3;\n        long O = 3;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 3;\n      \
    \  long W = 3;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n\
    \        long L = 3;\n        long M = 3;\n        long N = 3;\n        long O\
    \ = 3;\n        long P = 3;\n        long Q = 3;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 3;\n\
    \        long W = 3;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 3;\n        long J = 3;\n        long K\
    \ = 3;\n        long L = 3;\n        long M = 3;\n        long N = 3;\n      \
    \  long O = 3;\n        long P = 3;\n        long Q = 3;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 3;\n        long W = 3;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3gt99wqs.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3gt99wqs.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n      \
    \  long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n\
    \        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K\
    \ = 0;\n        long L = 0;\n        long M = 0;\n        long N = 0;\n      \
    \  long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n\
    \        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V\
    \ = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n      \
    \  long Z = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ts6qz92.java:67: error: variable A is already defined in method\
    \ isMultiplyPrime(long)\n        long A = 0;\n             ^\n/tmp/tmp6ts6qz92.java:68:\
    \ error: variable B is already defined in method isMultiplyPrime(long)\n     \
    \   long B = 0;\n             ^\n/tmp/tmp6ts6qz92.java:69: error: variable C is\
    \ already defined in method isMultiplyPrime(long)\n        long C = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:70: error: variable D is already defined in\
    \ method isMultiplyPrime(long)\n        long D = 0;\n             ^\n/tmp/tmp6ts6qz92.java:71:\
    \ error: variable E is already defined in method isMultiplyPrime(long)\n     \
    \   long E = 0;\n             ^\n/tmp/tmp6ts6qz92.java:72: error: variable F is\
    \ already defined in method isMultiplyPrime(long)\n        long F = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:73: error: variable G is already defined in\
    \ method isMultiplyPrime(long)\n        long G = 0;\n             ^\n/tmp/tmp6ts6qz92.java:74:\
    \ error: variable H is already defined in method isMultiplyPrime(long)\n     \
    \   long H = 0;\n             ^\n/tmp/tmp6ts6qz92.java:75: error: variable I is\
    \ already defined in method isMultiplyPrime(long)\n        long I = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:76: error: variable J is already defined in\
    \ method isMultiplyPrime(long)\n        long J = 0;\n             ^\n/tmp/tmp6ts6qz92.java:77:\
    \ error: variable K is already defined in method isMultiplyPrime(long)\n     \
    \   long K = 0;\n             ^\n/tmp/tmp6ts6qz92.java:78: error: variable L is\
    \ already defined in method isMultiplyPrime(long)\n        long L = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:79: error: variable M is already defined in\
    \ method isMultiplyPrime(long)\n        long M = 0;\n             ^\n/tmp/tmp6ts6qz92.java:80:\
    \ error: variable N is already defined in method isMultiplyPrime(long)\n     \
    \   long N = 0;\n             ^\n/tmp/tmp6ts6qz92.java:81: error: variable O is\
    \ already defined in method isMultiplyPrime(long)\n        long O = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:82: error: variable P is already defined in\
    \ method isMultiplyPrime(long)\n        long P = 0;\n             ^\n/tmp/tmp6ts6qz92.java:83:\
    \ error: variable Q is already defined in method isMultiplyPrime(long)\n     \
    \   long Q = 0;\n             ^\n/tmp/tmp6ts6qz92.java:84: error: variable R is\
    \ already defined in method isMultiplyPrime(long)\n        long R = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:85: error: variable S is already defined in\
    \ method isMultiplyPrime(long)\n        long S = 0;\n             ^\n/tmp/tmp6ts6qz92.java:86:\
    \ error: variable T is already defined in method isMultiplyPrime(long)\n     \
    \   long T = 0;\n             ^\n/tmp/tmp6ts6qz92.java:87: error: variable U is\
    \ already defined in method isMultiplyPrime(long)\n        long U = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:88: error: variable V is already defined in\
    \ method isMultiplyPrime(long)\n        long V = 0;\n             ^\n/tmp/tmp6ts6qz92.java:89:\
    \ error: variable W is already defined in method isMultiplyPrime(long)\n     \
    \   long W = 0;\n             ^\n/tmp/tmp6ts6qz92.java:90: error: variable X is\
    \ already defined in method isMultiplyPrime(long)\n        long X = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:91: error: variable Y is already defined in\
    \ method isMultiplyPrime(long)\n        long Y = 0;\n             ^\n/tmp/tmp6ts6qz92.java:92:\
    \ error: variable Z is already defined in method isMultiplyPrime(long)\n     \
    \   long Z = 0;\n             ^\n/tmp/tmp6ts6qz92.java:93: error: variable A is\
    \ already defined in method isMultiplyPrime(long)\n        long A = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:94: error: variable B is already defined in\
    \ method isMultiplyPrime(long)\n        long B = 0;\n             ^\n/tmp/tmp6ts6qz92.java:95:\
    \ error: variable C is already defined in method isMultiplyPrime(long)\n     \
    \   long C = 0;\n             ^\n/tmp/tmp6ts6qz92.java:96: error: variable D is\
    \ already defined in method isMultiplyPrime(long)\n        long D = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:97: error: variable E is already defined in\
    \ method isMultiplyPrime(long)\n        long E = 0;\n             ^\n/tmp/tmp6ts6qz92.java:98:\
    \ error: variable F is already defined in method isMultiplyPrime(long)\n     \
    \   long F = 0;\n             ^\n/tmp/tmp6ts6qz92.java:99: error: variable G is\
    \ already defined in method isMultiplyPrime(long)\n        long G = 0;\n     \
    \        ^\n/tmp/tmp6ts6qz92.java:100: error: variable H is already defined in\
    \ method isMultiplyPrime(long)\n        long H = 0;\n             ^\n/tmp/tmp6ts6qz92.java:101:\
    \ error: variable I is already defined in method isMultiplyPrime(long)\n     \
    \   long I = 0;\n             ^\n/tmp/tmp6ts6qz92.java:102: error: variable J\
    \ is already defined in method isMultiplyPrime(long)\n        long J = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:103: error: variable K is already defined\
    \ in method isMultiplyPrime(long)\n        long K = 0;\n             ^\n/tmp/tmp6ts6qz92.java:104:\
    \ error: variable L is already defined in method isMultiplyPrime(long)\n     \
    \   long L = 0;\n             ^\n/tmp/tmp6ts6qz92.java:105: error: variable M\
    \ is already defined in method isMultiplyPrime(long)\n        long M = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:106: error: variable N is already defined\
    \ in method isMultiplyPrime(long)\n        long N = 0;\n             ^\n/tmp/tmp6ts6qz92.java:107:\
    \ error: variable O is already defined in method isMultiplyPrime(long)\n     \
    \   long O = 0;\n             ^\n/tmp/tmp6ts6qz92.java:108: error: variable P\
    \ is already defined in method isMultiplyPrime(long)\n        long P = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:109: error: variable Q is already defined\
    \ in method isMultiplyPrime(long)\n        long Q = 0;\n             ^\n/tmp/tmp6ts6qz92.java:110:\
    \ error: variable R is already defined in method isMultiplyPrime(long)\n     \
    \   long R = 0;\n             ^\n/tmp/tmp6ts6qz92.java:111: error: variable S\
    \ is already defined in method isMultiplyPrime(long)\n        long S = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:112: error: variable T is already defined\
    \ in method isMultiplyPrime(long)\n        long T = 0;\n             ^\n/tmp/tmp6ts6qz92.java:113:\
    \ error: variable U is already defined in method isMultiplyPrime(long)\n     \
    \   long U = 0;\n             ^\n/tmp/tmp6ts6qz92.java:114: error: variable V\
    \ is already defined in method isMultiplyPrime(long)\n        long V = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:115: error: variable W is already defined\
    \ in method isMultiplyPrime(long)\n        long W = 0;\n             ^\n/tmp/tmp6ts6qz92.java:116:\
    \ error: variable X is already defined in method isMultiplyPrime(long)\n     \
    \   long X = 0;\n             ^\n/tmp/tmp6ts6qz92.java:117: error: variable Y\
    \ is already defined in method isMultiplyPrime(long)\n        long Y = 0;\n  \
    \           ^\n/tmp/tmp6ts6qz92.java:118: error: variable Z is already defined\
    \ in method isMultiplyPrime(long)\n        long Z = 0;\n             ^\n52 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = true;\n        long b = a;\n       \
    \ long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsxfgnm5x.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppl59h1jw.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqvxx4eod.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpqvxx4eod.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 30;\n        long d = 30;\n   \
    \     long e = 30;\n        long f = 30;\n        long g = 30;\n        long h\
    \ = 30;\n        long i = 30;\n        long j = 30;\n        long k = 30;\n  \
    \      long l = 30;\n        long m = 30;\n        long n = 30;\n        long\
    \ o = 30;\n        long p = 30;\n        long q = 30;\n        long r = 30;\n\
    \        long s = 30;\n        long t = 30;\n        long u = 30;\n        long\
    \ v = 30;\n        long w = 30;\n        long x = 30;\n        long y = 30;\n\
    \        long z = 30;\n        long A = 30;\n        long B = 30;\n        long\
    \ C = 30;\n        long D = 30;\n        long E = 30;\n        long F = 30;\n\
    \        long G = 30;\n        long H = 30;\n        long I = 30;\n        long\
    \ J = 30;\n        long K = 30;\n        long L = 30;\n        long M = 30;\n\
    \        long N = 30;\n        long O = 30;\n        long P = 30;\n        long\
    \ Q = 30;\n        long R = 30;\n        long S = 30;\n        long T = 30;\n\
    \        long U = 30;\n        long V = 30;\n        long W = 30;\n        long\
    \ X = 30;\n        long Y = 30;\n        long Z = 30;\n        long A = 30;\n\
    \        long B = 30;\n        long C = 30;\n        long D = 30;\n        long\
    \ E = 30;\n        long F = 30;\n        long G = 30;\n        long H = 30;\n\
    \        long I = 30;\n        long J = 30;\n        long K = 30;\n        long\
    \ L = 30;\n        long M = 30;\n        long N = 30;\n        long O = 30;\n\
    \        long P = 30;\n        long Q = 30;\n        long R = 30;\n        long\
    \ S = 30;\n        long T = 30;\n        long U = 30;\n        long V = 30;\n\
    \        long W = 30;\n        long X = 30;\n        long Y = 30;\n        long\
    \ Z = 30;\n        long A = 30;\n        long B = 30;\n        long C = 30;\n\
    \        long D = 30;\n        long E = 30;\n        long F = 30;\n        long\
    \ G = 30;\n        long H = 30;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpohihs6z_.java:101: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpohihs6z_.java:101: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n      \
    \  long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n\
    \        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K\
    \ = 0;\n        long L = 0;\n        long M = 0;\n        long N = 0;\n      \
    \  long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n\
    \        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V\
    \ = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n      \
    \  long Z = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy2zba1i9.java:67: error: variable A is already defined in method\
    \ isMultiplyPrime(long)\n        long A = 0;\n             ^\n/tmp/tmpy2zba1i9.java:68:\
    \ error: variable B is already defined in method isMultiplyPrime(long)\n     \
    \   long B = 0;\n             ^\n/tmp/tmpy2zba1i9.java:69: error: variable C is\
    \ already defined in method isMultiplyPrime(long)\n        long C = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:70: error: variable D is already defined in\
    \ method isMultiplyPrime(long)\n        long D = 0;\n             ^\n/tmp/tmpy2zba1i9.java:71:\
    \ error: variable E is already defined in method isMultiplyPrime(long)\n     \
    \   long E = 0;\n             ^\n/tmp/tmpy2zba1i9.java:72: error: variable F is\
    \ already defined in method isMultiplyPrime(long)\n        long F = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:73: error: variable G is already defined in\
    \ method isMultiplyPrime(long)\n        long G = 0;\n             ^\n/tmp/tmpy2zba1i9.java:74:\
    \ error: variable H is already defined in method isMultiplyPrime(long)\n     \
    \   long H = 0;\n             ^\n/tmp/tmpy2zba1i9.java:75: error: variable I is\
    \ already defined in method isMultiplyPrime(long)\n        long I = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:76: error: variable J is already defined in\
    \ method isMultiplyPrime(long)\n        long J = 0;\n             ^\n/tmp/tmpy2zba1i9.java:77:\
    \ error: variable K is already defined in method isMultiplyPrime(long)\n     \
    \   long K = 0;\n             ^\n/tmp/tmpy2zba1i9.java:78: error: variable L is\
    \ already defined in method isMultiplyPrime(long)\n        long L = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:79: error: variable M is already defined in\
    \ method isMultiplyPrime(long)\n        long M = 0;\n             ^\n/tmp/tmpy2zba1i9.java:80:\
    \ error: variable N is already defined in method isMultiplyPrime(long)\n     \
    \   long N = 0;\n             ^\n/tmp/tmpy2zba1i9.java:81: error: variable O is\
    \ already defined in method isMultiplyPrime(long)\n        long O = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:82: error: variable P is already defined in\
    \ method isMultiplyPrime(long)\n        long P = 0;\n             ^\n/tmp/tmpy2zba1i9.java:83:\
    \ error: variable Q is already defined in method isMultiplyPrime(long)\n     \
    \   long Q = 0;\n             ^\n/tmp/tmpy2zba1i9.java:84: error: variable R is\
    \ already defined in method isMultiplyPrime(long)\n        long R = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:85: error: variable S is already defined in\
    \ method isMultiplyPrime(long)\n        long S = 0;\n             ^\n/tmp/tmpy2zba1i9.java:86:\
    \ error: variable T is already defined in method isMultiplyPrime(long)\n     \
    \   long T = 0;\n             ^\n/tmp/tmpy2zba1i9.java:87: error: variable U is\
    \ already defined in method isMultiplyPrime(long)\n        long U = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:88: error: variable V is already defined in\
    \ method isMultiplyPrime(long)\n        long V = 0;\n             ^\n/tmp/tmpy2zba1i9.java:89:\
    \ error: variable W is already defined in method isMultiplyPrime(long)\n     \
    \   long W = 0;\n             ^\n/tmp/tmpy2zba1i9.java:90: error: variable X is\
    \ already defined in method isMultiplyPrime(long)\n        long X = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:91: error: variable Y is already defined in\
    \ method isMultiplyPrime(long)\n        long Y = 0;\n             ^\n/tmp/tmpy2zba1i9.java:92:\
    \ error: variable Z is already defined in method isMultiplyPrime(long)\n     \
    \   long Z = 0;\n             ^\n/tmp/tmpy2zba1i9.java:93: error: variable A is\
    \ already defined in method isMultiplyPrime(long)\n        long A = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:94: error: variable B is already defined in\
    \ method isMultiplyPrime(long)\n        long B = 0;\n             ^\n/tmp/tmpy2zba1i9.java:95:\
    \ error: variable C is already defined in method isMultiplyPrime(long)\n     \
    \   long C = 0;\n             ^\n/tmp/tmpy2zba1i9.java:96: error: variable D is\
    \ already defined in method isMultiplyPrime(long)\n        long D = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:97: error: variable E is already defined in\
    \ method isMultiplyPrime(long)\n        long E = 0;\n             ^\n/tmp/tmpy2zba1i9.java:98:\
    \ error: variable F is already defined in method isMultiplyPrime(long)\n     \
    \   long F = 0;\n             ^\n/tmp/tmpy2zba1i9.java:99: error: variable G is\
    \ already defined in method isMultiplyPrime(long)\n        long G = 0;\n     \
    \        ^\n/tmp/tmpy2zba1i9.java:100: error: variable H is already defined in\
    \ method isMultiplyPrime(long)\n        long H = 0;\n             ^\n/tmp/tmpy2zba1i9.java:101:\
    \ error: variable I is already defined in method isMultiplyPrime(long)\n     \
    \   long I = 0;\n             ^\n/tmp/tmpy2zba1i9.java:102: error: variable J\
    \ is already defined in method isMultiplyPrime(long)\n        long J = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:103: error: variable K is already defined\
    \ in method isMultiplyPrime(long)\n        long K = 0;\n             ^\n/tmp/tmpy2zba1i9.java:104:\
    \ error: variable L is already defined in method isMultiplyPrime(long)\n     \
    \   long L = 0;\n             ^\n/tmp/tmpy2zba1i9.java:105: error: variable M\
    \ is already defined in method isMultiplyPrime(long)\n        long M = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:106: error: variable N is already defined\
    \ in method isMultiplyPrime(long)\n        long N = 0;\n             ^\n/tmp/tmpy2zba1i9.java:107:\
    \ error: variable O is already defined in method isMultiplyPrime(long)\n     \
    \   long O = 0;\n             ^\n/tmp/tmpy2zba1i9.java:108: error: variable P\
    \ is already defined in method isMultiplyPrime(long)\n        long P = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:109: error: variable Q is already defined\
    \ in method isMultiplyPrime(long)\n        long Q = 0;\n             ^\n/tmp/tmpy2zba1i9.java:110:\
    \ error: variable R is already defined in method isMultiplyPrime(long)\n     \
    \   long R = 0;\n             ^\n/tmp/tmpy2zba1i9.java:111: error: variable S\
    \ is already defined in method isMultiplyPrime(long)\n        long S = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:112: error: variable T is already defined\
    \ in method isMultiplyPrime(long)\n        long T = 0;\n             ^\n/tmp/tmpy2zba1i9.java:113:\
    \ error: variable U is already defined in method isMultiplyPrime(long)\n     \
    \   long U = 0;\n             ^\n/tmp/tmpy2zba1i9.java:114: error: variable V\
    \ is already defined in method isMultiplyPrime(long)\n        long V = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:115: error: variable W is already defined\
    \ in method isMultiplyPrime(long)\n        long W = 0;\n             ^\n/tmp/tmpy2zba1i9.java:116:\
    \ error: variable X is already defined in method isMultiplyPrime(long)\n     \
    \   long X = 0;\n             ^\n/tmp/tmpy2zba1i9.java:117: error: variable Y\
    \ is already defined in method isMultiplyPrime(long)\n        long Y = 0;\n  \
    \           ^\n/tmp/tmpy2zba1i9.java:118: error: variable Z is already defined\
    \ in method isMultiplyPrime(long)\n        long Z = 0;\n             ^\n52 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxfmuq0c5.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb9taci37.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpb9taci37.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqanh69i3.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9se_i7kp.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp9se_i7kp.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 3;\n        long d = 5;\n      \
    \  long e = 7;\n        long f = 9;\n        long g = 11;\n        long h = 13;\n\
    \        long i = 17;\n        long j = 21;\n        long k = 29;\n        long\
    \ l = 31;\n        long m = 43;\n        long n = 57;\n        long o = 71;\n\
    \        long p = 9;\n        long q = 23;\n        long r = 29;\n        long\
    \ s = 31;\n        long t = 43;\n        long u = 57;\n        long v = 71;\n\
    \        long w = 89;\n        long x = 113;\n        long y = 131;\n        long\
    \ z = 15;\n        long A = 31;\n        long B = 51;\n        long C = 7;\n \
    \       long D = 9;\n        long E = 11;\n        long F = 13;\n        long\
    \ G = 17;\n        long H = 21;\n        long I = 29;\n        long J = 31;\n\
    \        long K = 43;\n        long L = 51;\n        long M = 7;\n        long\
    \ N = 9;\n        long O = 11;\n        long P = 13;\n        long Q = 17;\n \
    \       long R = 21;\n        long S = 29;\n        long T = 31;\n        long\
    \ U = 43;\n        long V = 51;\n        long W = 7;\n        long X = 9;\n  \
    \      long Y = 11;\n        long Z = 13;\n        long A = 31;\n        long\
    \ B = 51;\n        long C = 7;\n        long D = 9;\n        long E = 11;\n  \
    \      long F = 13;\n        long G = 17;\n        long H = 21;\n        long\
    \ I = 29;\n        long J = 31;\n        long K = 43;\n        long L = 51;\n\
    \        long M = 7;\n        long N = 9;\n        long O = 11;\n        long\
    \ P = 13;\n        long Q = 17;\n        long R = 21;\n        long S = 29;\n\
    \        long T = 31;\n        long U = 43;\n        long V = 51;\n        long\
    \ W = 7;\n        long X = 9;\n        long Y = 11;\n        long Z = 13;\n  \
    \      long A = 31;\n        long B = 51;\n        long C = 7;\n        long D\
    \ = 9;\n        long E = 11;\n        long F = 13;\n        long G = 17;\n   \
    \     long H = 21;\n        long I = 29;\n        long J = 31;\n        long K\
    \ = 43;\n        long L = 51;\n        long M = 7;\n        long N = 9;\n    \
    \    long O\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrwbgepb.java:107: error: ';' expected\n        long O\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwidj6zx7.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 0;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 0;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0cp9iai.java:114: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpc0cp9iai.java:114: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp46l2cmj_.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isPrime = true;\n        long b = 1;\n        long c =\
    \ 2;\n        long d = 2;\n        long e = 2;\n        long f = 3;\n        long\
    \ g = 3;\n        long h = 3;\n        long i = 5;\n        long j = 5;\n    \
    \    long k = 5;\n        long l = 5;\n        long m = 5;\n        long n = 5;\n\
    \        long o = 5;\n        long p = 5;\n        long q = 5;\n        long r\
    \ = 5;\n        long s = 5;\n        long t = 5;\n        long u = 5;\n      \
    \  long v = 5;\n        long w = 5;\n        long x = 5;\n        long y = 5;\n\
    \        long z = 5;\n        long A = a;\n        long B = b;\n        long C\
    \ = c; \n        long D = d; \n        long E;\n        long F;\n        long\
    \ G;\n        long H;\n        long I;\n        long J;\n        long K;\n   \
    \     long L;\n        long M;\n        long N;\n        long O;\n        long\
    \ P;\n        long Q;\n        long R;\n        long S;\n        long T;\n   \
    \     long U;\n        long V;\n        long W;\n        long X;\n        long\
    \ Y;\n        long Z;\n        long A = a;\n        long B = b;\n        long\
    \ C = c; \n        long D = d; \n        long E;\n        long F;\n        long\
    \ G;\n        long H;\n        long I;\n        long J;\n        long K;\n   \
    \     long L;\n        long M;\n        long N;\n        long O;\n        long\
    \ P;\n        long Q;\n        long R;\n        long S;\n        long T;\n   \
    \     long U;\n        long V;\n        long W;\n        long X;\n        long\
    \ Y;\n        long Z;\n        long A = a;\n        long B = b;\n        long\
    \ C = c; \n        long D = d; \n        long E;\n        long F;\n        long\
    \ G;\n        long H;\n        long I;\n        long J;\n        long K;\n   \
    \     long L;\n        long M;\n        long N;\n        long O;\n        long\
    \ P;\n        long Q;\n        long R;\n        long S;\n        long T;\n   \
    \     long U;\n        long V\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptbwjkkg4.java:115: error: ';' expected\n        long V\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 3, c = 5, d = 7;\n        long e = 3, f = 5, g = 7, h\
    \ = 9;\n        long i = 5, j = 7, k = 9, l = 10;\n        long m = 5, n = 7,\
    \ o = 9;\n        long p = 5, q = 7, r = 9, s = 10;\n        long t = 5, u = 7,\
    \ v = 9, w = 10;\n        long x = 5, y = 7, z = 9;\n        long A = 3, B = 3,\
    \ C = 3, D = 3, E = 3, F = 3, G = 3, H = 3, I = 3, J = 3, K = 3, L = 3, M = 3,\
    \ N = 3, O = 3, P = 3, Q = 3, R = 3, S = 3, T = 3, U = 3, V = 3, W = 3, X = 3,\
    \ Y = 3, Z = 3, AA = 3, BB = 3, CC = 3, DD = 3, EE = 3, FF = 3, GG = 3, HH = 3,\
    \ II = 3, JJ = 3, KK = 3, LL = 3, MM = 3, NN = 3, OO = 3, PP = 3, QP = 3, RP =\
    \ 3, SP = 3, TP = 3, UU = 3, VV = 3, WW = 3, XX = 3, YY = 3, ZZ = 3, AAA = 3,\
    \ BBB = 3, CCC = 3, DDD = 3, EEE = 3, FFF = 3, GGG = 3, HHH = 3, III = 3, JJJ\
    \ = 3, KKK = 3, LLL = 3, MMM = 3, NNN = 3, OOO = 3, PPP = 3, QPP = 3, RPP = 3,\
    \ SPP = 3, TPP = 3, UUP = 3, VVV = 3, WWW = 3, XXX = 3, YYY = 3, ZZZ = 3, AAAA\
    \ = 3, BBBB = 3, CCCC = 3, DDDD = 3, EEEE = 3, FFFF = 3, GGGG = 3, HHHH = 3, IIII\
    \ = 3, JJJJ = 3, KKKK = 3, LLLL = 3, MMMM = 3, NNNN = 3, OOOO = 3, PPPP = 3, QPPP\
    \ = 3, RPPP = 3, SPPP = 3, TPPP = 3, UUPP = 3, VVVV = 3, WWWW = 3, XXXX = 3, YYYY\
    \ = 3, ZZZZ = 3, AAAAA = 3, BBBBB = 3, CCCCC = 3, DDDDD = 3, EEEEE = 3, FFFFF\
    \ = 3, GGGGG = 3, HHHHH = 3, IIIII = 3, JJJJJ = 3, KKKKK = 3, LLLLL = 3, MMMMM\
    \ = 3, NNNNN = 3, OOOOO = 3, PPPP\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxmo6pl7o.java:23: error: ';' expected\n        long A = 3, B =\
    \ 3, C = 3, D = 3, E = 3, F = 3, G = 3, H = 3, I = 3, J = 3, K = 3, L = 3, M =\
    \ 3, N = 3, O = 3, P = 3, Q = 3, R = 3, S = 3, T = 3, U = 3, V = 3, W = 3, X =\
    \ 3, Y = 3, Z = 3, AA = 3, BB = 3, CC = 3, DD = 3, EE = 3, FF = 3, GG = 3, HH\
    \ = 3, II = 3, JJ = 3, KK = 3, LL = 3, MM = 3, NN = 3, OO = 3, PP = 3, QP = 3,\
    \ RP = 3, SP = 3, TP = 3, UU = 3, VV = 3, WW = 3, XX = 3, YY = 3, ZZ = 3, AAA\
    \ = 3, BBB = 3, CCC = 3, DDD = 3, EEE = 3, FFF = 3, GGG = 3, HHH = 3, III = 3,\
    \ JJJ = 3, KKK = 3, LLL = 3, MMM = 3, NNN = 3, OOO = 3, PPP = 3, QPP = 3, RPP\
    \ = 3, SPP = 3, TPP = 3, UUP = 3, VVV = 3, WWW = 3, XXX = 3, YYY = 3, ZZZ = 3,\
    \ AAAA = 3, BBBB = 3, CCCC = 3, DDDD = 3, EEEE = 3, FFFF = 3, GGGG = 3, HHHH =\
    \ 3, IIII = 3, JJJJ = 3, KKKK = 3, LLLL = 3, MMMM = 3, NNNN = 3, OOOO = 3, PPPP\
    \ = 3, QPPP = 3, RPPP = 3, SPPP = 3, TPPP = 3, UUPP = 3, VVVV = 3, WWWW = 3, XXXX\
    \ = 3, YYYY = 3, ZZZZ = 3, AAAAA = 3, BBBBB = 3, CCCCC = 3, DDDDD = 3, EEEEE =\
    \ 3, FFFFF = 3, GGGGG = 3, HHHHH = 3, IIIII = 3, JJJJJ = 3, KKKKK = 3, LLLLL =\
    \ 3, MMMMM = 3, NNNNN = 3, OOOOO = 3, PPPP\n                                 \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long prime = 31;\n \
    \       long counter = 0;\n        while (prime <= 100) {\n            counter\
    \ = 0;\n            while (prime % prime == 0) {\n                counter++;\n\
    \                prime++;\n            }\n            if (counter == 3) {\n  \
    \              isMultiplyPrime = true;\n                break;\n            }\n\
    \            prime++;\n        }\n        return isMultiplyPrime;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgh5c1ygp.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgh5c1ygp.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 5;\n        long d = 2;\n     \
    \   long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4hx8d7pm.java:41: error: variable a is already defined in method\
    \ isMultiplyPrime(long)\n        long a = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:42:\
    \ error: variable b is already defined in method isMultiplyPrime(long)\n     \
    \   long b = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:43: error: variable c is\
    \ already defined in method isMultiplyPrime(long)\n        long c = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:44: error: variable d is already defined in\
    \ method isMultiplyPrime(long)\n        long d = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:45:\
    \ error: variable e is already defined in method isMultiplyPrime(long)\n     \
    \   long e = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:46: error: variable f is\
    \ already defined in method isMultiplyPrime(long)\n        long f = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:47: error: variable g is already defined in\
    \ method isMultiplyPrime(long)\n        long g = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:48:\
    \ error: variable h is already defined in method isMultiplyPrime(long)\n     \
    \   long h = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:49: error: variable i is\
    \ already defined in method isMultiplyPrime(long)\n        long i = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:50: error: variable j is already defined in\
    \ method isMultiplyPrime(long)\n        long j = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:51:\
    \ error: variable k is already defined in method isMultiplyPrime(long)\n     \
    \   long k = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:52: error: variable l is\
    \ already defined in method isMultiplyPrime(long)\n        long l = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:53: error: variable m is already defined in\
    \ method isMultiplyPrime(long)\n        long m = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:54:\
    \ error: variable n is already defined in method isMultiplyPrime(long)\n     \
    \   long n = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:55: error: variable o is\
    \ already defined in method isMultiplyPrime(long)\n        long o = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:56: error: variable p is already defined in\
    \ method isMultiplyPrime(long)\n        long p = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:57:\
    \ error: variable q is already defined in method isMultiplyPrime(long)\n     \
    \   long q = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:58: error: variable r is\
    \ already defined in method isMultiplyPrime(long)\n        long r = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:59: error: variable s is already defined in\
    \ method isMultiplyPrime(long)\n        long s = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:60:\
    \ error: variable t is already defined in method isMultiplyPrime(long)\n     \
    \   long t = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:61: error: variable u is\
    \ already defined in method isMultiplyPrime(long)\n        long u = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:62: error: variable v is already defined in\
    \ method isMultiplyPrime(long)\n        long v = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:63:\
    \ error: variable w is already defined in method isMultiplyPrime(long)\n     \
    \   long w = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:64: error: variable x is\
    \ already defined in method isMultiplyPrime(long)\n        long x = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:65: error: variable y is already defined in\
    \ method isMultiplyPrime(long)\n        long y = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:66:\
    \ error: variable z is already defined in method isMultiplyPrime(long)\n     \
    \   long z = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:67: error: variable a is\
    \ already defined in method isMultiplyPrime(long)\n        long a = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:68: error: variable b is already defined in\
    \ method isMultiplyPrime(long)\n        long b = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:69:\
    \ error: variable c is already defined in method isMultiplyPrime(long)\n     \
    \   long c = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:70: error: variable d is\
    \ already defined in method isMultiplyPrime(long)\n        long d = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:71: error: variable e is already defined in\
    \ method isMultiplyPrime(long)\n        long e = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:72:\
    \ error: variable f is already defined in method isMultiplyPrime(long)\n     \
    \   long f = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:73: error: variable g is\
    \ already defined in method isMultiplyPrime(long)\n        long g = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:74: error: variable h is already defined in\
    \ method isMultiplyPrime(long)\n        long h = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:75:\
    \ error: variable i is already defined in method isMultiplyPrime(long)\n     \
    \   long i = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:76: error: variable j is\
    \ already defined in method isMultiplyPrime(long)\n        long j = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:77: error: variable k is already defined in\
    \ method isMultiplyPrime(long)\n        long k = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:78:\
    \ error: variable l is already defined in method isMultiplyPrime(long)\n     \
    \   long l = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:79: error: variable m is\
    \ already defined in method isMultiplyPrime(long)\n        long m = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:80: error: variable n is already defined in\
    \ method isMultiplyPrime(long)\n        long n = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:81:\
    \ error: variable o is already defined in method isMultiplyPrime(long)\n     \
    \   long o = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:82: error: variable p is\
    \ already defined in method isMultiplyPrime(long)\n        long p = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:83: error: variable q is already defined in\
    \ method isMultiplyPrime(long)\n        long q = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:84:\
    \ error: variable r is already defined in method isMultiplyPrime(long)\n     \
    \   long r = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:85: error: variable s is\
    \ already defined in method isMultiplyPrime(long)\n        long s = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:86: error: variable t is already defined in\
    \ method isMultiplyPrime(long)\n        long t = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:87:\
    \ error: variable u is already defined in method isMultiplyPrime(long)\n     \
    \   long u = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:88: error: variable v is\
    \ already defined in method isMultiplyPrime(long)\n        long v = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:89: error: variable w is already defined in\
    \ method isMultiplyPrime(long)\n        long w = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:90:\
    \ error: variable x is already defined in method isMultiplyPrime(long)\n     \
    \   long x = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:91: error: variable y is\
    \ already defined in method isMultiplyPrime(long)\n        long y = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:92: error: variable z is already defined in\
    \ method isMultiplyPrime(long)\n        long z = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:93:\
    \ error: variable a is already defined in method isMultiplyPrime(long)\n     \
    \   long a = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:94: error: variable b is\
    \ already defined in method isMultiplyPrime(long)\n        long b = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:95: error: variable c is already defined in\
    \ method isMultiplyPrime(long)\n        long c = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:96:\
    \ error: variable d is already defined in method isMultiplyPrime(long)\n     \
    \   long d = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:97: error: variable e is\
    \ already defined in method isMultiplyPrime(long)\n        long e = 1;\n     \
    \        ^\n/tmp/tmp4hx8d7pm.java:98: error: variable f is already defined in\
    \ method isMultiplyPrime(long)\n        long f = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:99:\
    \ error: variable g is already defined in method isMultiplyPrime(long)\n     \
    \   long g = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:100: error: variable h\
    \ is already defined in method isMultiplyPrime(long)\n        long h = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:101: error: variable i is already defined\
    \ in method isMultiplyPrime(long)\n        long i = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:102:\
    \ error: variable j is already defined in method isMultiplyPrime(long)\n     \
    \   long j = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:103: error: variable k\
    \ is already defined in method isMultiplyPrime(long)\n        long k = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:104: error: variable l is already defined\
    \ in method isMultiplyPrime(long)\n        long l = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:105:\
    \ error: variable m is already defined in method isMultiplyPrime(long)\n     \
    \   long m = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:106: error: variable n\
    \ is already defined in method isMultiplyPrime(long)\n        long n = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:107: error: variable o is already defined\
    \ in method isMultiplyPrime(long)\n        long o = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:108:\
    \ error: variable p is already defined in method isMultiplyPrime(long)\n     \
    \   long p = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:109: error: variable q\
    \ is already defined in method isMultiplyPrime(long)\n        long q = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:110: error: variable r is already defined\
    \ in method isMultiplyPrime(long)\n        long r = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:111:\
    \ error: variable s is already defined in method isMultiplyPrime(long)\n     \
    \   long s = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:112: error: variable t\
    \ is already defined in method isMultiplyPrime(long)\n        long t = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:113: error: variable u is already defined\
    \ in method isMultiplyPrime(long)\n        long u = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:114:\
    \ error: variable v is already defined in method isMultiplyPrime(long)\n     \
    \   long v = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:115: error: variable w\
    \ is already defined in method isMultiplyPrime(long)\n        long w = 1;\n  \
    \           ^\n/tmp/tmp4hx8d7pm.java:116: error: variable x is already defined\
    \ in method isMultiplyPrime(long)\n        long x = 1;\n             ^\n/tmp/tmp4hx8d7pm.java:117:\
    \ error: variable y is already defined in method isMultiplyPrime(long)\n     \
    \   long y = 1;\n             ^\n77 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 0;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw8_jpqs4.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = a;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdigom3e8.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1rtfhs2r.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long limit = 100;\n        long\
    \ counter = 0;\n        long counter2 = 0;\n        long counter3 = 0;\n     \
    \   long counter4 = 0;\n        long counter5 = 0;\n        long counter6 = 0;\n\
    \        long counter7 = 0;\n        long counter8 = 0;\n        long counter9\
    \ = 0;\n        long counter10 = 0;\n        long counter11 = 0;\n        long\
    \ counter12 = 0;\n        long counter13 = 0;\n        long counter14 = 0;\n \
    \       long counter15 = 0;\n        long counter16 = 0;\n        long counter17\
    \ = 0;\n        long counter18 = 0;\n        long counter19 = 0;\n        long\
    \ counter20 = 0;\n        long counter21 = 0;\n        long counter22 = 0;\n \
    \       long counter23 = 0;\n        long counter24 = 0;\n        long counter25\
    \ = 0;\n        long counter26 = 0;\n        long counter27 = 0;\n        long\
    \ counter28 = 0;\n        long counter29 = 0;\n        long counter30 = 0;\n \
    \       long counter31 = 0;\n        long counter32 = 0;\n        long counter33\
    \ = 0;\n        long counter34 = 0;\n        long counter35 = 0;\n        long\
    \ counter36 = 0;\n        long counter37 = 0;\n        long counter38 = 0;\n \
    \       long counter39 = 0;\n        long counter40 = 0;\n        long counter41\
    \ = 0;\n        long counter42 = 0;\n        long counter43 = 0;\n        long\
    \ counter44 = 0;\n        long counter45 = 0;\n        long counter46 = 0;\n \
    \       long counter47 = 0;\n        long counter48 = 0;\n        long counter49\
    \ = 0;\n        long counter50 = 0;\n        long counter51 = 0;\n        long\
    \ counter52 = 0;\n        long counter53 = 0;\n        long counter54 = 0;\n \
    \       long counter55 = 0;\n        long counter56 = 0;\n        long counter57\
    \ = 0;\n        long counter58 = 0;\n        long counter59 = 0;\n        long\
    \ counter60 = 0;\n        long counter61 = 0;\n        long counter62 = 0;\n \
    \       long counter63 = 0;\n        long counter64 = 0;\n        long counter65\
    \ = 0;\n        long counter66 = 0;\n        long counter67 = 0;\n        long\
    \ counter68 = 0;\n        long counter69 = 0;\n        long counter70 = 0;\n \
    \       long counter71 = 0;\n        long counter72 = 0;\n        long counter73\
    \ = 0;\n        long counter74 = 0;\n        long counter75 = 0;\n        long\
    \ counter76 = 0;\n        long counter77 = 0;\n        long counter78 = 0;\n \
    \       long counter79 = 0;\n        long counter80 = 0;\n        long counter81\
    \ = 0;\n        long counter82 = 0;\n        long counter83 = 0;\n        long\
    \ counter84 = 0;\n        long \n    }\n    public static void main(String[] args)\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4ptbfgu.java:102: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpj4ptbfgu.java:102: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Ss = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long Aaa = 0;\n        long Bbb = 0;\n\
    \        long Ccc = 0;\n        long Ddd = 0;\n        long Eee = 0;\n       \
    \ long Fff = 0;\n        long Ggg = 0;\n        long Hhh = 0;\n        long Iii\
    \ = 0;\n        long Jjj = 0;\n        long Kkk = 0;\n        long Lll = 0;\n\
    \        long Mmm = 0;\n        long Nnn = 0;\n        long Ooo = 0;\n       \
    \ long Ppp = 0;\n        long Qqq = 0;\n        long Rrr = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuww28y02.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n      \
    \  long L = 5;\n        long M = 5;\n        long N = 5;\n        long O = 5;\n\
    \        long P = 5;\n        long Q = 5;\n        long R = 5;\n        long S\
    \ = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n      \
    \  long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z = 5;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n\
    \        long L = 5;\n        long M = 5;\n        long N = 5;\n        long O\
    \ = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n      \
    \  long S = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n\
    \        long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z\
    \ = 5;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 5;\n        long J = 5;\n        long K\
    \ = 5;\n        long L = 5;\n        long M = 5;\n        long N = 5;\n      \
    \  long O = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n\
    \        long S = 5;\n        long T = 5;\n        long U = 5;\n        long V\
    \ = 5;\n        long W = 5;\n        long X = 5;\n        long Y = 5;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwv9b8kjf.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpwv9b8kjf.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 2;\n        long Q = 2;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 2;\n        long B = 2;\n        long C = 2;\n        long D\
    \ = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n\
    \        long L = 2;\n        long M = 2;\n        long N = 2;\n        long O\
    \ = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n\
    \        long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 2;\n        long B = 2;\n        long C = 2;\n      \
    \  long D = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 2;\n        long J = 2;\n        long K\
    \ = 2;\n        long L = 2;\n        long M = 2;\n        long N = 2;\n      \
    \  long O = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 2;\n        long W = 2;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3z9ttj_g.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3z9ttj_g.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long a = 100;\n        long b = 100;\n        long c = 100;\n        long d\
    \ = 100;\n        long e = 100;\n        long f = 100;\n        long g = 100;\n\
    \        long h = 100;\n        long i = 100;\n        long j = 100;\n       \
    \ long k = 100;\n        long l = 100;\n        long m = 100;\n        long n\
    \ = 100;\n        long o = 100;\n        long p = 100;\n        long q = 100;\n\
    \        long r = 100;\n        long s = 100;\n        long t = 100;\n       \
    \ long u = 100;\n        long v = 100;\n        long w = 100;\n        long x\
    \ = 100;\n        long y = 100;\n        long z = 100;\n        long a = 100;\n\
    \        long b = 100;\n        long c = 100;\n        long d = 100;\n       \
    \ long e = 100;\n        long f = 100;\n        long g = 100;\n        long h\
    \ = 100;\n        long i = 100;\n        long j = 100;\n        long k = 100;\n\
    \        long l = 100;\n        long m = 100;\n        long n = 100;\n       \
    \ long o = 100;\n        long p = 100;\n        long q = 100;\n        long r\
    \ = 100;\n        long s = 100;\n        long t = 100;\n        long u = 100;\n\
    \        long v = 100;\n        long w = 100;\n        long x = 100;\n       \
    \ long y = 100;\n        long z = 100;\n        long a = 100;\n        long b\
    \ = 100;\n        long c = 100;\n        long d = 100;\n        long e = 100;\n\
    \        long f = 100;\n        long g = 100;\n        long h = 100;\n       \
    \ long i = 100;\n        long j = 100;\n        long k = 100;\n        long l\
    \ = 100;\n        long m = 100;\n        long n = 100;\n        long o = 100;\n\
    \        long p = 100;\n        long q = 100;\n        long r = 100;\n       \
    \ long s = 100;\n        long t = 100;\n        long u = 100;\n        long v\
    \ = 100;\n        long w = 100;\n        long x = 100;\n        long y = 100;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphi3fypkl.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmphi3fypkl.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5uohnzvz.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long primeFactor = 1;\n\
    \        long primeFactor2 = 1;\n        long primeFactor3 = 1;\n        long\
    \ primeFactor4 = 1;\n        long primeFactor5 = 1;\n        long primeFactor6\
    \ = 1;\n        long primeFactor7 = 1;\n        long primeFactor8 = 1;\n     \
    \   long primeFactor9 = 1;\n        long primeFactor10 = 1;\n        long primeFactor11\
    \ = 1;\n        long primeFactor12 = 1;\n        long primeFactor13 = 1;\n   \
    \     long primeFactor14 = 1;\n        long primeFactor15 = 1;\n        long primeFactor16\
    \ = 1;\n        long primeFactor17 = 1;\n        long primeFactor18 = 1;\n   \
    \     long primeFactor19 = 1;\n        long primeFactor20 = 1;\n        long primeFactor21\
    \ = 1;\n        long primeFactor22 = 1;\n        long primeFactor23 = 1;\n   \
    \     long primeFactor24 = 1;\n        long primeFactor25 = 1;\n        long primeFactor26\
    \ = 1;\n        long primeFactor27 = 1;\n        long primeFactor28 = 1;\n   \
    \     long primeFactor29 = 1;\n        long primeFactor30 = 1;\n        long primeFactor31\
    \ = 1;\n        long primeFactor32 = 1;\n        long primeFactor33 = 1;\n   \
    \     long primeFactor34 = 1;\n        long primeFactor35 = 1;\n        long primeFactor36\
    \ = 1;\n        long primeFactor37 = 1;\n        long primeFactor38 = 1;\n   \
    \     long primeFactor39 = 1;\n        long primeFactor40 = 1;\n        long primeFactor41\
    \ = 1;\n        long primeFactor42 = 1;\n        long primeFactor43 = 1;\n   \
    \     long primeFactor44 = 1;\n        long primeFactor45 = 1;\n        long primeFactor46\
    \ = 1;\n        long primeFactor47 = 1;\n        long primeFactor48 = 1;\n   \
    \     long primeFactor49 = 1;\n        long primeFactor50 = 1;\n        long primeFactor51\
    \ = 1;\n        long primeFactor52 = 1;\n        long primeFactor53 = 1;\n   \
    \     long primeFactor54 = 1;\n        long primeFactor55 = 1;\n        long primeFactor56\
    \ = 1;\n        long primeFactor57 = 1;\n        long primeFactor58 = 1;\n   \
    \     long primeFactor59 = 1;\n        long primeFactor60 = 1;\n        long primeFactor61\
    \ = 1;\n        long primeFactor62 = 1;\n        long primeFactor63 = 1;\n   \
    \     long primeFactor64 = 1;\n        long primeFactor65 = 1;\n        long primeFactor66\
    \ = 1;\n        long primeFactor67 = 1;\n        long primeFactor68 = 1;\n   \
    \     long primeFactor69 = 1;\n        long primeFactor70 = 1;\n        long primeFactor71\
    \ = 1;\n        long prime\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_1b6zme0.java:88: error: ';' expected\n        long prime\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9rrmwugn.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3twc6kmm.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1dj0jny.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp29xe02lj.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_v2uq8o7.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf7qe5g78.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp25yup7iy.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj3q3seu8.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 2;\n        long B = 2;\n        long C = 2;\n        long D\
    \ = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n\
    \        long L = 2;\n        long M = 2;\n        long N = 2;\n        long O\
    \ = 2;\n        long P = 3;\n        long Q = 3;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n\
    \        long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 2;\n        long B = 2;\n        long C = 2;\n      \
    \  long D = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 2;\n        long J = 2;\n        long K\
    \ = 2;\n        long L = 2;\n        long M = 2;\n        long N = 2;\n      \
    \  long O = 2;\n        long P = 3;\n        long Q = 3;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 2;\n        long W = 2;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmkgqctod.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpmkgqctod.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long primeNumbers[]\
    \ = new long[100];\n        long primeNumbersSum = 0;\n        long primeNumbersSum2\
    \ = 0;\n        long primeNumbersSum3 = 0;\n        long primeNumbersSum4 = 0;\n\
    \        long primeNumbersSum5 = 0;\n        long primeNumbersSum6 = 0;\n    \
    \    long primeNumbersSum7 = 0;\n        long primeNumbersSum8 = 0;\n        long\
    \ primeNumbersSum9 = 0;\n        long primeNumbersSum10 = 0;\n        long primeNumbersSum11\
    \ = 0;\n        long primeNumbersSum12 = 0;\n        long primeNumbersSum13 =\
    \ 0;\n        long primeNumbersSum14 = 0;\n        long primeNumbersSum15 = 0;\n\
    \        long primeNumbersSum16 = 0;\n        long primeNumbersSum17 = 0;\n  \
    \      long primeNumbersSum18 = 0;\n        long primeNumbersSum19 = 0;\n    \
    \    long primeNumbersSum20 = 0;\n        long primeNumbersSum21 = 0;\n      \
    \  long primeNumbersSum22 = 0;\n        long primeNumbersSum23 = 0;\n        long\
    \ primeNumbersSum24 = 0;\n        long primeNumbersSum25 = 0;\n        long primeNumbersSum26\
    \ = 0;\n        long primeNumbersSum27 = 0;\n        long primeNumbersSum28 =\
    \ 0;\n        long primeNumbersSum29 = 0;\n        long primeNumbersSum30 = 0;\n\
    \        long primeNumbersSum31 = 0;\n        long primeNumbersSum32 = 0;\n  \
    \      long primeNumbersSum33 = 0;\n        long primeNumbersSum34 = 0;\n    \
    \    long primeNumbersSum35 = 0;\n        long primeNumbersSum36 = 0;\n      \
    \  long primeNumbersSum37 = 0;\n        long primeNumbersSum38 = 0;\n        long\
    \ primeNumbersSum39 = 0;\n        long primeNumbersSum40 = 0;\n        long primeNumbersSum41\
    \ = 0;\n        long primeNumbersSum42 = 0;\n        long primeNumbersSum43 =\
    \ 0;\n        long primeNumbersSum44 = 0;\n        long primeNumbersSum45 = 0;\n\
    \        long primeNumbersSum46 = 0;\n        long primeNumbersSum47 = 0;\n  \
    \      long primeNumbersSum48 = 0;\n        long primeNumbersSum49 = 0;\n    \
    \    long primeNumbersSum50 = 0;\n        long primeNumbersSum51 = 0;\n      \
    \  long primeNumbersSum52 = 0;\n        long primeNumbersSum53 = 0;\n        long\
    \ primeNumbersSum54 = 0;\n        long primeNumbersSum55 = 0;\n        \n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi0jmbtem.java:74: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 3;\n        long m = 3;\n        long n = 3;\n        long o = 3;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 3;\n        long v = 3;\n        long w\
    \ = 3;\n        long x = 3;\n        long y = 3;\n        long z = 3;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n      \
    \  long L = 3;\n        long M = 3;\n        long N = 3;\n        long O = 3;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 3;\n        long V = 3;\n      \
    \  long W = 3;\n        long X = 3;\n        long Y = 3;\n        long Z = 3;\n\
    \        long AA = 3;\n        long BB = 3;\n        long CC = 3;\n        long\
    \ DD = 3;\n        long EE = 3;\n        long FF = 3;\n        long GG = 3;\n\
    \        long HH = 3;\n        long II = 3;\n        long JJ = 3;\n        long\
    \ KK = 3;\n        long LL = 3;\n        long MM = 3;\n        long NN = 3;\n\
    \        long OO = 3;\n        long PP = 3;\n        long QQ = 3;\n        long\
    \ RR = 2;\n        long SS = 2;\n        long TT = 2;\n        long UU = 3;\n\
    \        long VV = 3;\n        long WW = 3;\n        long XX = 3;\n        long\
    \ YY = 3;\n        long ZZ = 3;\n        long AAA = 3;\n        long BBB = 3;\n\
    \        long CCC = 3;\n        long DDD = 3;\n        long EEE = 3;\n       \
    \ long FFF = 3;\n        long GGG = 3;\n        long HHH = 3;\n        long III\
    \ = 3;\n        long JJJ = 3;\n        long KKK = 3;\n        long LLL = 3;\n\
    \        long MMM = 3;\n        long NNN = 3;\n        long OOO = 3;\n       \
    \ long PPP = 3;\n        long QQQ = 3;\n        long RRR = 2;\n        long SSS\
    \ = 2;\n        long TTT = 2;\n        long UUU = 3;\n        long V\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqb5oo4pz.java:114: error: ';' expected\n        long V\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7b5y4gq8.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvxr1new2.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long aa = 0;\n        long bb = 0;\n        long cc = 0;\n        long dd =\
    \ 0;\n        long ee = 0;\n        long ff = 0;\n        long gg = 0;\n     \
    \   long hh = 0;\n        long ii = 0;\n        long jj = 0;\n        long kk\
    \ = 0;\n        long ll = 0;\n        long mm = 0;\n        long nn = 0;\n   \
    \     long oo = 0;\n        long pp = 0;\n        long qq = 0;\n        long rr\
    \ = 0;\n        long ss = 0;\n        long tt = 0;\n        long uu = 0;\n   \
    \     long vv = 0;\n        long ww = 0;\n        long xx = 0;\n        long yy\
    \ = 0;\n        long zz = 0;\n        long aaa = 0;\n        long bbb = 0;\n \
    \       long ccc = 0;\n        long ddd = 0;\n        long eee = 0;\n        long\
    \ fff = 0;\n        long ggg = 0;\n        long hhh = 0;\n        long iii = 0;\n\
    \        long jjj = 0;\n        long kkk = 0;\n        long lll = 0;\n       \
    \ long mmm = 0;\n        long nnn = 0;\n        long ooo = 0;\n        long ppp\
    \ = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss = 0;\n\
    \        long ttt = 0;\n        long uuu = 0;\n        long vvv = 0;\n       \
    \ long www = 0;\n        long xxx = 0;\n        long yyy = 0;\n        long zzz\
    \ = 0;\n        long aaaa = 0;\n        long bbbb = 0;\n        long cccc = 0;\n\
    \        long dddd = 0;\n        long eeee = 0;\n        long ffff = 0;\n    \
    \    long gggg = 0;\n        long hhhh = 0;\n        long iiii = 0;\n        long\
    \ jjjj = 0;\n        long kkkk = 0;\n        long llll = 0;\n        long mmmm\
    \ = 0;\n        long nnnn = 0;\n        long oooo = 0;\n        long pppp = 0;\n\
    \        long qqqq = 0;\n        long rrrr = 0;\n        long ssss = 0;\n    \
    \    long tt\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphbivt2y2.java:112: error: ';' expected\n        long tt\n     \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 0;\n        long h\
    \ = 0;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n      \
    \  long h = 0;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n\
    \        long h = 0;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9199d29m.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp9199d29m.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj29pjrb0.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 2;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n\
    \        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n      \
    \  long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n\
    \        long n = 1;\n        long o = 1;\n        long p = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n      \
    \  long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b\
    \ = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n      \
    \  long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n\
    \        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m\
    \ = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n\
    \        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x\
    \ = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n      \
    \  long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n      \
    \  long x = \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvzk43jxk.java:118: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E; \n        long F = f; \n        long G; \n        long H;\
    \ \n        long I; \n        long J; \n        long K; \n        long L; \n \
    \       long M; \n        long N; \n        long O; \n        long P; \n     \
    \   long Q; \n        long R; \n        long S; \n        long T; \n        long\
    \ U; \n        long V; \n        long W; \n        long X; \n        long Y; \n\
    \        long Z; \n        long AA = A; \n        long BB = B; \n        long\
    \ CC = C; \n        long DD = D; \n        long EE; \n        long FF; \n    \
    \    long GG; \n        long HH; \n        long II; \n        long JJ; \n    \
    \    long KK; \n        long LL; \n        long MM; \n        long NN; \n    \
    \    long OO; \n        long PP; \n        long QQ; \n        long RR; \n    \
    \    long SS; \n        long TT; \n        long UU; \n        long VV; \n    \
    \    long WW; \n        long XX; \n        long YY; \n        long ZZ; \n    \
    \    long AAA = AA; \n        long BBB = BB; \n        long CCC = CC; \n     \
    \   long DDD = DD; \n        long EEE; \n        long FFF; \n        long GGG;\
    \ \n        long HHH; \n        long III; \n        long JJJ; \n        long KKK;\
    \ \n        long LLL; \n        long MMM; \n        long NNN; \n        long OOO;\
    \ \n        long PPP; \n        long QQQ; \n        long RRR; \n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn8e8ixmx.java:111: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpn8e8ixmx.java:111: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp0ky1xhp.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 30;\n        long d = 30;\n   \
    \     long e = 30;\n        long f = 30;\n        long g = 30;\n        long h\
    \ = 30;\n        long i = 30;\n        long j = 30;\n        long k = 30;\n  \
    \      long l = 30;\n        long m = 30;\n        long n = 30;\n        long\
    \ o = 30;\n        long p = 30;\n        long q = 30;\n        long r = 30;\n\
    \        long s = 30;\n        long t = 30;\n        long u = 30;\n        long\
    \ v = 30;\n        long w = 30;\n        long x = 30;\n        long y = 30;\n\
    \        long z = 30;\n        long A = 30;\n        long B = 30;\n        long\
    \ C = 30;\n        long D = 30;\n        long E = 30;\n        long F = 30;\n\
    \        long G = 30;\n        long H = 30;\n        long I = 30;\n        long\
    \ J = 30;\n        long K = 30;\n        long L = 30;\n        long M = 30;\n\
    \        long N = 30;\n        long O = 30;\n        long P = 30;\n        long\
    \ Q = 30;\n        long R = 30;\n        long S = 30;\n        long T = 30;\n\
    \        long U = 30;\n        long V = 30;\n        long W = 30;\n        long\
    \ X = 30;\n        long Y = 30;\n        long Z = 30;\n        long A = 30;\n\
    \        long B = 30;\n        long C = 30;\n        long D = 30;\n        long\
    \ E = 30;\n        long F = 30;\n        long G = 30;\n        long H = 30;\n\
    \        long I = 30;\n        long J = 30;\n        long K = 30;\n        long\
    \ L = 30;\n        long M = 30;\n        long N = 30;\n        long O = 30;\n\
    \        long P = 30;\n        long Q = 30;\n        long R = 30;\n        long\
    \ S = 30;\n        long T = 30;\n        long U = 30;\n        long V = 30;\n\
    \        long W = 30;\n        long X = 30;\n        long Y = 30;\n        long\
    \ Z = 30;\n        long A = 30;\n        long B = 30;\n        long C = 30;\n\
    \        long D = 30;\n        long E = 30;\n        long F = 30;\n        long\
    \ G = 30;\n        long H = 30;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbuy2mgpj.java:101: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpbuy2mgpj.java:101: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 1;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 1;\n        long h = 2;\n\
    \        long i = 2;\n        long j = 3;\n        long k = 5;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 3;\n      \
    \  long p = 2;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 3;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E; \n        long F = f; \n        long G = g; \n        long\
    \ H = h; \n        long I = i; \n        long J = j; \n        long K = k; \n\
    \        long L = l; \n        long M = m;\n        long N = n;\n        long\
    \ O = o;\n        long P = p;\n        long Q = q;\n        long R = r;\n    \
    \    long S = s;\n        long T = t;\n        long U = u;\n        long V = v;\n\
    \        long W = w;\n        long X = x;\n        long Y = y;\n        long Z\
    \ = z;\n        long A = a;\n        long B = b;\n        long C = c; \n     \
    \   long D = d; \n        long E; \n        long F = f; \n        long G = g;\
    \ \n        long H = h; \n        long I = i; \n        long J = j; \n       \
    \ long K = k; \n        long L = l; \n        long M = m;\n        long N = n;\n\
    \        long O = o;\n        long P = p;\n        long Q = q;\n        long R\
    \ = r;\n        long S = s;\n        long T = t;\n        long U = u;\n      \
    \  long V = v;\n        long W = w;\n        long X = x;\n        long Y = y;\n\
    \        long Z = z;\n        long A = a;\n        long B = b;\n        long C\
    \ = c; \n        long D = d; \n        long E; \n        long F = f; \n      \
    \  long G = g; \n        long H = h; \n        long I = i; \n        long J =\
    \ j; \n        long K = k; \n        long L = l; \n        long M = m;\n     \
    \   long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmy_ke6ib.java:106: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpmy_ke6ib.java:106: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbes650zz.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppxllhcl6.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long a = 2;\n        long b = 2;\n        long c = 2;\n        long d = 2;\n\
    \        long e = 2;\n        long f = 3;\n        long g = 3;\n        long h\
    \ = 3;\n        long i = 2;\n        long j = 2;\n        long k = 2;\n      \
    \  long l = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n\
    \        long p = 2;\n        long q = 2;\n        long r = 2;\n        long s\
    \ = 2;\n        long t = 2;\n        long u = 2;\n        long v = 2;\n      \
    \  long w = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n\
    \        long a = 2;\n        long b = 2;\n        long c = 2;\n        long d\
    \ = 2;\n        long e = 2;\n        long f = 3;\n        long g = 3;\n      \
    \  long h = 3;\n        long i = 2;\n        long j = 2;\n        long k = 2;\n\
    \        long l = 2;\n        long m = 2;\n        long n = 2;\n        long o\
    \ = 2;\n        long p = 2;\n        long q = 2;\n        long r = 2;\n      \
    \  long s = 2;\n        long t = 2;\n        long u = 2;\n        long v = 2;\n\
    \        long w = 2;\n        long x = 2;\n        long y = 2;\n        long z\
    \ = 2;\n        long a = 2;\n        long b = 2;\n        long c = 2;\n      \
    \  long d = 2;\n        long e = 2;\n        long f = 3;\n        long g = 3;\n\
    \        long h = 3;\n        long i = 2;\n        long j = 2;\n        long k\
    \ = 2;\n        long l = 2;\n        long m = 2;\n        long n = 2;\n      \
    \  long o = 2;\n        long p = 2;\n        long q = 2;\n        long r = 2;\n\
    \        long s = 2;\n        long t = 2;\n        long u = 2;\n        long v\
    \ = 2;\n        long w = 2;\n        long x = 2;\n        long y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcdbubhw2.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpcdbubhw2.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj5ocq5q7.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoklmm1lz.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6z_k9l3a.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcp84f6_0.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzl7ah6lm.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpzl7ah6lm.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 2;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n\
    \        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 0;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n      \
    \  long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n\
    \        long n = 1;\n        long o = 1;\n        long p = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n      \
    \  long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b\
    \ = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n      \
    \  long f = 0;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n\
    \        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m\
    \ = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n\
    \        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x\
    \ = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n      \
    \  long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 0;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n      \
    \  long x = \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7fnqa04j.java:118: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Sq = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long Aaa = 0;\n        long Bbb = 0;\n\
    \        long Ccc = 0;\n        long Ddd = 0;\n        long Eee = 0;\n       \
    \ long Fff = 0;\n        long Ggg = 0;\n        long Hhh = 0;\n        long Iii\
    \ = 0;\n        long Jjj = 0;\n        long Kkk = 0;\n        long Lll = 0;\n\
    \        long Mmm = 0;\n        long Nnn = 0;\n        long Ooo = 0;\n       \
    \ long Ppp = 0;\n        long Qqq = 0;\n        long Rrr = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr_w2qpyr.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 0;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 0;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqp0qqfk1.java:114: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpqp0qqfk1.java:114: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7t2m10s_.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpekjdai76.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6xoj3les.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsfbfc8ds.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpsfbfc8ds.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n      \
    \  long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n\
    \        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K\
    \ = 0;\n        long L = 0;\n        long M = 0;\n        long N = 0;\n      \
    \  long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n\
    \        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V\
    \ = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n      \
    \  long Z = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmnf48qci.java:67: error: variable A is already defined in method\
    \ isMultiplyPrime(long)\n        long A = 0;\n             ^\n/tmp/tmpmnf48qci.java:68:\
    \ error: variable B is already defined in method isMultiplyPrime(long)\n     \
    \   long B = 0;\n             ^\n/tmp/tmpmnf48qci.java:69: error: variable C is\
    \ already defined in method isMultiplyPrime(long)\n        long C = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:70: error: variable D is already defined in\
    \ method isMultiplyPrime(long)\n        long D = 0;\n             ^\n/tmp/tmpmnf48qci.java:71:\
    \ error: variable E is already defined in method isMultiplyPrime(long)\n     \
    \   long E = 0;\n             ^\n/tmp/tmpmnf48qci.java:72: error: variable F is\
    \ already defined in method isMultiplyPrime(long)\n        long F = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:73: error: variable G is already defined in\
    \ method isMultiplyPrime(long)\n        long G = 0;\n             ^\n/tmp/tmpmnf48qci.java:74:\
    \ error: variable H is already defined in method isMultiplyPrime(long)\n     \
    \   long H = 0;\n             ^\n/tmp/tmpmnf48qci.java:75: error: variable I is\
    \ already defined in method isMultiplyPrime(long)\n        long I = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:76: error: variable J is already defined in\
    \ method isMultiplyPrime(long)\n        long J = 0;\n             ^\n/tmp/tmpmnf48qci.java:77:\
    \ error: variable K is already defined in method isMultiplyPrime(long)\n     \
    \   long K = 0;\n             ^\n/tmp/tmpmnf48qci.java:78: error: variable L is\
    \ already defined in method isMultiplyPrime(long)\n        long L = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:79: error: variable M is already defined in\
    \ method isMultiplyPrime(long)\n        long M = 0;\n             ^\n/tmp/tmpmnf48qci.java:80:\
    \ error: variable N is already defined in method isMultiplyPrime(long)\n     \
    \   long N = 0;\n             ^\n/tmp/tmpmnf48qci.java:81: error: variable O is\
    \ already defined in method isMultiplyPrime(long)\n        long O = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:82: error: variable P is already defined in\
    \ method isMultiplyPrime(long)\n        long P = 0;\n             ^\n/tmp/tmpmnf48qci.java:83:\
    \ error: variable Q is already defined in method isMultiplyPrime(long)\n     \
    \   long Q = 0;\n             ^\n/tmp/tmpmnf48qci.java:84: error: variable R is\
    \ already defined in method isMultiplyPrime(long)\n        long R = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:85: error: variable S is already defined in\
    \ method isMultiplyPrime(long)\n        long S = 0;\n             ^\n/tmp/tmpmnf48qci.java:86:\
    \ error: variable T is already defined in method isMultiplyPrime(long)\n     \
    \   long T = 0;\n             ^\n/tmp/tmpmnf48qci.java:87: error: variable U is\
    \ already defined in method isMultiplyPrime(long)\n        long U = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:88: error: variable V is already defined in\
    \ method isMultiplyPrime(long)\n        long V = 0;\n             ^\n/tmp/tmpmnf48qci.java:89:\
    \ error: variable W is already defined in method isMultiplyPrime(long)\n     \
    \   long W = 0;\n             ^\n/tmp/tmpmnf48qci.java:90: error: variable X is\
    \ already defined in method isMultiplyPrime(long)\n        long X = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:91: error: variable Y is already defined in\
    \ method isMultiplyPrime(long)\n        long Y = 0;\n             ^\n/tmp/tmpmnf48qci.java:92:\
    \ error: variable Z is already defined in method isMultiplyPrime(long)\n     \
    \   long Z = 0;\n             ^\n/tmp/tmpmnf48qci.java:93: error: variable A is\
    \ already defined in method isMultiplyPrime(long)\n        long A = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:94: error: variable B is already defined in\
    \ method isMultiplyPrime(long)\n        long B = 0;\n             ^\n/tmp/tmpmnf48qci.java:95:\
    \ error: variable C is already defined in method isMultiplyPrime(long)\n     \
    \   long C = 0;\n             ^\n/tmp/tmpmnf48qci.java:96: error: variable D is\
    \ already defined in method isMultiplyPrime(long)\n        long D = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:97: error: variable E is already defined in\
    \ method isMultiplyPrime(long)\n        long E = 0;\n             ^\n/tmp/tmpmnf48qci.java:98:\
    \ error: variable F is already defined in method isMultiplyPrime(long)\n     \
    \   long F = 0;\n             ^\n/tmp/tmpmnf48qci.java:99: error: variable G is\
    \ already defined in method isMultiplyPrime(long)\n        long G = 0;\n     \
    \        ^\n/tmp/tmpmnf48qci.java:100: error: variable H is already defined in\
    \ method isMultiplyPrime(long)\n        long H = 0;\n             ^\n/tmp/tmpmnf48qci.java:101:\
    \ error: variable I is already defined in method isMultiplyPrime(long)\n     \
    \   long I = 0;\n             ^\n/tmp/tmpmnf48qci.java:102: error: variable J\
    \ is already defined in method isMultiplyPrime(long)\n        long J = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:103: error: variable K is already defined\
    \ in method isMultiplyPrime(long)\n        long K = 0;\n             ^\n/tmp/tmpmnf48qci.java:104:\
    \ error: variable L is already defined in method isMultiplyPrime(long)\n     \
    \   long L = 0;\n             ^\n/tmp/tmpmnf48qci.java:105: error: variable M\
    \ is already defined in method isMultiplyPrime(long)\n        long M = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:106: error: variable N is already defined\
    \ in method isMultiplyPrime(long)\n        long N = 0;\n             ^\n/tmp/tmpmnf48qci.java:107:\
    \ error: variable O is already defined in method isMultiplyPrime(long)\n     \
    \   long O = 0;\n             ^\n/tmp/tmpmnf48qci.java:108: error: variable P\
    \ is already defined in method isMultiplyPrime(long)\n        long P = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:109: error: variable Q is already defined\
    \ in method isMultiplyPrime(long)\n        long Q = 0;\n             ^\n/tmp/tmpmnf48qci.java:110:\
    \ error: variable R is already defined in method isMultiplyPrime(long)\n     \
    \   long R = 0;\n             ^\n/tmp/tmpmnf48qci.java:111: error: variable S\
    \ is already defined in method isMultiplyPrime(long)\n        long S = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:112: error: variable T is already defined\
    \ in method isMultiplyPrime(long)\n        long T = 0;\n             ^\n/tmp/tmpmnf48qci.java:113:\
    \ error: variable U is already defined in method isMultiplyPrime(long)\n     \
    \   long U = 0;\n             ^\n/tmp/tmpmnf48qci.java:114: error: variable V\
    \ is already defined in method isMultiplyPrime(long)\n        long V = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:115: error: variable W is already defined\
    \ in method isMultiplyPrime(long)\n        long W = 0;\n             ^\n/tmp/tmpmnf48qci.java:116:\
    \ error: variable X is already defined in method isMultiplyPrime(long)\n     \
    \   long X = 0;\n             ^\n/tmp/tmpmnf48qci.java:117: error: variable Y\
    \ is already defined in method isMultiplyPrime(long)\n        long Y = 0;\n  \
    \           ^\n/tmp/tmpmnf48qci.java:118: error: variable Z is already defined\
    \ in method isMultiplyPrime(long)\n        long Z = 0;\n             ^\n52 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvqif_x_j.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpno0abskh.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpno0abskh.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsixm0e3k.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E;\n        long F = f; \n        long G = g; \n        long\
    \ H = h; \n        long I = i;\n        long J = j;\n        long K = k;\n   \
    \     long L = l;\n        long M = m;\n        long N = n;\n        long O =\
    \ o;\n        long P = p;\n        long Q = q;\n        long R = r;\n        long\
    \ S = s;\n        long T = t;\n        long U = u;\n        long V = v;\n    \
    \    long W = w;\n        long X = x;\n        long Y = y;\n        long Z = z;\n\
    \        long a = A;\n        long b = B;\n        long c = C;\n        long d\
    \ = D;\n        long e = E;\n        long f = F;\n        long g = G;\n      \
    \  long h = H;\n        long i = I;\n        long j = J;\n        long k = K;\n\
    \        long l = L;\n        long m = M;\n        long n = N;\n        long o\
    \ = O;\n        long p = P;\n        long q = Q;\n        long r = R;\n      \
    \  long s = S;\n        long t = T;\n        long u = U;\n        long v = V;\n\
    \        long w = W;\n        long x = X;\n        long y = Y;\n        long z\
    \ = Z;\n        long A = a;\n        long B = b;\n        long C = c; \n     \
    \   long D = d; \n        long E;\n        long F = f; \n        long G = g; \n\
    \        long H = h; \n        long I = i;\n        long J = j;\n        long\
    \ K = k;\n        long L = l;\n        long M = m;\n        long N = n;\n    \
    \    long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1womvpe.java:107: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpc1womvpe.java:107: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n        long\
    \ h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n    \
    \    long l = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n\
    \        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s\
    \ = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n      \
    \  long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n   \
    \     long DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG\
    \ = 0;\n        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n   \
    \     long KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN\
    \ = 0;\n        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n   \
    \     long RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU\
    \ = 0;\n        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n   \
    \     long YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long\
    \ BBB = 0;\n        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n\
    \        long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n       \
    \ long III = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL\
    \ = 0;\n        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n\
    \        long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n       \
    \ long SSS = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long V\n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ctzrtab.java:114: error: ';' expected\n        long V\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Ss = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long Aaa = 0;\n        long Bbb = 0;\n\
    \        long Ccc = 0;\n        long Ddd = 0;\n        long Eee = 0;\n       \
    \ long Fff = 0;\n        long Ggg = 0;\n        long Hhh = 0;\n        long Iii\
    \ = 0;\n        long Jjj = 0;\n        long Kkk = 0;\n        long Lll = 0;\n\
    \        long Mmm = 0;\n        long Nnn = 0;\n        long Ooo = 0;\n       \
    \ long Ppp = 0;\n        long Qqq = 0;\n        long Rrr = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn2xuqtrs.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxe_dkuib.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long a = a;\n        long b = b;\n        long c = c;\n        long d = d;\n\
    \        long e = e;\n        long f = f;\n        long g = g;\n        long h\
    \ = h;\n        long i = i;\n        long j = j;\n        long k = k;\n      \
    \  long l = l;\n        long m = m;\n        long n = n;\n        long o = o;\n\
    \        long p = p;\n        long q = q;\n        long r = r;\n        long s\
    \ = s;\n        long t = t;\n        long u = u;\n        long v = v;\n      \
    \  long w = w;\n        long x = x;\n        long y = y;\n        long z = z;\n\
    \        long a = a;\n        long b = b;\n        long c = c;\n        long d\
    \ = d;\n        long e = e;\n        long f = f;\n        long g = g;\n      \
    \  long h = h;\n        long i = i;\n        long j = j;\n        long k = k;\n\
    \        long l = l;\n        long m = m;\n        long n = n;\n        long o\
    \ = o;\n        long p = p;\n        long q = q;\n        long r = r;\n      \
    \  long s = s;\n        long t = t;\n        long u = u;\n        long v = v;\n\
    \        long w = w;\n        long x = x;\n        long y = y;\n        long z\
    \ = z;\n        long a = a;\n        long b = b;\n        long c = c;\n      \
    \  long d = d;\n        long e = e;\n        long f = f;\n        long g = g;\n\
    \        long h = h;\n        long i = i;\n        long j = j;\n        long k\
    \ = k;\n        long l = l;\n        long m = m;\n        long n = n;\n      \
    \  long o = o;\n        long p = p;\n        long q = q;\n        long r = r;\n\
    \        long s = s;\n        long t = t;\n        long u = u;\n        long v\
    \ = v;\n\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwb_f6pbs.java:41: error: variable a is already defined in method\
    \ isMultiplyPrime(long)\n        long a = a;\n             ^\n/tmp/tmpwb_f6pbs.java:42:\
    \ error: variable b is already defined in method isMultiplyPrime(long)\n     \
    \   long b = b;\n             ^\n/tmp/tmpwb_f6pbs.java:43: error: variable c is\
    \ already defined in method isMultiplyPrime(long)\n        long c = c;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:44: error: variable d is already defined in\
    \ method isMultiplyPrime(long)\n        long d = d;\n             ^\n/tmp/tmpwb_f6pbs.java:45:\
    \ error: variable e is already defined in method isMultiplyPrime(long)\n     \
    \   long e = e;\n             ^\n/tmp/tmpwb_f6pbs.java:46: error: variable f is\
    \ already defined in method isMultiplyPrime(long)\n        long f = f;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:47: error: variable g is already defined in\
    \ method isMultiplyPrime(long)\n        long g = g;\n             ^\n/tmp/tmpwb_f6pbs.java:48:\
    \ error: variable h is already defined in method isMultiplyPrime(long)\n     \
    \   long h = h;\n             ^\n/tmp/tmpwb_f6pbs.java:49: error: variable i is\
    \ already defined in method isMultiplyPrime(long)\n        long i = i;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:50: error: variable j is already defined in\
    \ method isMultiplyPrime(long)\n        long j = j;\n             ^\n/tmp/tmpwb_f6pbs.java:51:\
    \ error: variable k is already defined in method isMultiplyPrime(long)\n     \
    \   long k = k;\n             ^\n/tmp/tmpwb_f6pbs.java:52: error: variable l is\
    \ already defined in method isMultiplyPrime(long)\n        long l = l;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:53: error: variable m is already defined in\
    \ method isMultiplyPrime(long)\n        long m = m;\n             ^\n/tmp/tmpwb_f6pbs.java:54:\
    \ error: variable n is already defined in method isMultiplyPrime(long)\n     \
    \   long n = n;\n             ^\n/tmp/tmpwb_f6pbs.java:55: error: variable o is\
    \ already defined in method isMultiplyPrime(long)\n        long o = o;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:56: error: variable p is already defined in\
    \ method isMultiplyPrime(long)\n        long p = p;\n             ^\n/tmp/tmpwb_f6pbs.java:57:\
    \ error: variable q is already defined in method isMultiplyPrime(long)\n     \
    \   long q = q;\n             ^\n/tmp/tmpwb_f6pbs.java:58: error: variable r is\
    \ already defined in method isMultiplyPrime(long)\n        long r = r;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:59: error: variable s is already defined in\
    \ method isMultiplyPrime(long)\n        long s = s;\n             ^\n/tmp/tmpwb_f6pbs.java:60:\
    \ error: variable t is already defined in method isMultiplyPrime(long)\n     \
    \   long t = t;\n             ^\n/tmp/tmpwb_f6pbs.java:61: error: variable u is\
    \ already defined in method isMultiplyPrime(long)\n        long u = u;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:62: error: variable v is already defined in\
    \ method isMultiplyPrime(long)\n        long v = v;\n             ^\n/tmp/tmpwb_f6pbs.java:63:\
    \ error: variable w is already defined in method isMultiplyPrime(long)\n     \
    \   long w = w;\n             ^\n/tmp/tmpwb_f6pbs.java:64: error: variable x is\
    \ already defined in method isMultiplyPrime(long)\n        long x = x;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:65: error: variable y is already defined in\
    \ method isMultiplyPrime(long)\n        long y = y;\n             ^\n/tmp/tmpwb_f6pbs.java:66:\
    \ error: variable z is already defined in method isMultiplyPrime(long)\n     \
    \   long z = z;\n             ^\n/tmp/tmpwb_f6pbs.java:67: error: variable a is\
    \ already defined in method isMultiplyPrime(long)\n        long a = a;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:68: error: variable b is already defined in\
    \ method isMultiplyPrime(long)\n        long b = b;\n             ^\n/tmp/tmpwb_f6pbs.java:69:\
    \ error: variable c is already defined in method isMultiplyPrime(long)\n     \
    \   long c = c;\n             ^\n/tmp/tmpwb_f6pbs.java:70: error: variable d is\
    \ already defined in method isMultiplyPrime(long)\n        long d = d;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:71: error: variable e is already defined in\
    \ method isMultiplyPrime(long)\n        long e = e;\n             ^\n/tmp/tmpwb_f6pbs.java:72:\
    \ error: variable f is already defined in method isMultiplyPrime(long)\n     \
    \   long f = f;\n             ^\n/tmp/tmpwb_f6pbs.java:73: error: variable g is\
    \ already defined in method isMultiplyPrime(long)\n        long g = g;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:74: error: variable h is already defined in\
    \ method isMultiplyPrime(long)\n        long h = h;\n             ^\n/tmp/tmpwb_f6pbs.java:75:\
    \ error: variable i is already defined in method isMultiplyPrime(long)\n     \
    \   long i = i;\n             ^\n/tmp/tmpwb_f6pbs.java:76: error: variable j is\
    \ already defined in method isMultiplyPrime(long)\n        long j = j;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:77: error: variable k is already defined in\
    \ method isMultiplyPrime(long)\n        long k = k;\n             ^\n/tmp/tmpwb_f6pbs.java:78:\
    \ error: variable l is already defined in method isMultiplyPrime(long)\n     \
    \   long l = l;\n             ^\n/tmp/tmpwb_f6pbs.java:79: error: variable m is\
    \ already defined in method isMultiplyPrime(long)\n        long m = m;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:80: error: variable n is already defined in\
    \ method isMultiplyPrime(long)\n        long n = n;\n             ^\n/tmp/tmpwb_f6pbs.java:81:\
    \ error: variable o is already defined in method isMultiplyPrime(long)\n     \
    \   long o = o;\n             ^\n/tmp/tmpwb_f6pbs.java:82: error: variable p is\
    \ already defined in method isMultiplyPrime(long)\n        long p = p;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:83: error: variable q is already defined in\
    \ method isMultiplyPrime(long)\n        long q = q;\n             ^\n/tmp/tmpwb_f6pbs.java:84:\
    \ error: variable r is already defined in method isMultiplyPrime(long)\n     \
    \   long r = r;\n             ^\n/tmp/tmpwb_f6pbs.java:85: error: variable s is\
    \ already defined in method isMultiplyPrime(long)\n        long s = s;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:86: error: variable t is already defined in\
    \ method isMultiplyPrime(long)\n        long t = t;\n             ^\n/tmp/tmpwb_f6pbs.java:87:\
    \ error: variable u is already defined in method isMultiplyPrime(long)\n     \
    \   long u = u;\n             ^\n/tmp/tmpwb_f6pbs.java:88: error: variable v is\
    \ already defined in method isMultiplyPrime(long)\n        long v = v;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:89: error: variable w is already defined in\
    \ method isMultiplyPrime(long)\n        long w = w;\n             ^\n/tmp/tmpwb_f6pbs.java:90:\
    \ error: variable x is already defined in method isMultiplyPrime(long)\n     \
    \   long x = x;\n             ^\n/tmp/tmpwb_f6pbs.java:91: error: variable y is\
    \ already defined in method isMultiplyPrime(long)\n        long y = y;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:92: error: variable z is already defined in\
    \ method isMultiplyPrime(long)\n        long z = z;\n             ^\n/tmp/tmpwb_f6pbs.java:93:\
    \ error: variable a is already defined in method isMultiplyPrime(long)\n     \
    \   long a = a;\n             ^\n/tmp/tmpwb_f6pbs.java:94: error: variable b is\
    \ already defined in method isMultiplyPrime(long)\n        long b = b;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:95: error: variable c is already defined in\
    \ method isMultiplyPrime(long)\n        long c = c;\n             ^\n/tmp/tmpwb_f6pbs.java:96:\
    \ error: variable d is already defined in method isMultiplyPrime(long)\n     \
    \   long d = d;\n             ^\n/tmp/tmpwb_f6pbs.java:97: error: variable e is\
    \ already defined in method isMultiplyPrime(long)\n        long e = e;\n     \
    \        ^\n/tmp/tmpwb_f6pbs.java:98: error: variable f is already defined in\
    \ method isMultiplyPrime(long)\n        long f = f;\n             ^\n/tmp/tmpwb_f6pbs.java:99:\
    \ error: variable g is already defined in method isMultiplyPrime(long)\n     \
    \   long g = g;\n             ^\n/tmp/tmpwb_f6pbs.java:100: error: variable h\
    \ is already defined in method isMultiplyPrime(long)\n        long h = h;\n  \
    \           ^\n/tmp/tmpwb_f6pbs.java:101: error: variable i is already defined\
    \ in method isMultiplyPrime(long)\n        long i = i;\n             ^\n/tmp/tmpwb_f6pbs.java:102:\
    \ error: variable j is already defined in method isMultiplyPrime(long)\n     \
    \   long j = j;\n             ^\n/tmp/tmpwb_f6pbs.java:103: error: variable k\
    \ is already defined in method isMultiplyPrime(long)\n        long k = k;\n  \
    \           ^\n/tmp/tmpwb_f6pbs.java:104: error: variable l is already defined\
    \ in method isMultiplyPrime(long)\n        long l = l;\n             ^\n/tmp/tmpwb_f6pbs.java:105:\
    \ error: variable m is already defined in method isMultiplyPrime(long)\n     \
    \   long m = m;\n             ^\n/tmp/tmpwb_f6pbs.java:106: error: variable n\
    \ is already defined in method isMultiplyPrime(long)\n        long n = n;\n  \
    \           ^\n/tmp/tmpwb_f6pbs.java:107: error: variable o is already defined\
    \ in method isMultiplyPrime(long)\n        long o = o;\n             ^\n/tmp/tmpwb_f6pbs.java:108:\
    \ error: variable p is already defined in method isMultiplyPrime(long)\n     \
    \   long p = p;\n             ^\n/tmp/tmpwb_f6pbs.java:109: error: variable q\
    \ is already defined in method isMultiplyPrime(long)\n        long q = q;\n  \
    \           ^\n/tmp/tmpwb_f6pbs.java:110: error: variable r is already defined\
    \ in method isMultiplyPrime(long)\n        long r = r;\n             ^\n/tmp/tmpwb_f6pbs.java:111:\
    \ error: variable s is already defined in method isMultiplyPrime(long)\n     \
    \   long s = s;\n             ^\n/tmp/tmpwb_f6pbs.java:112: error: variable t\
    \ is already defined in method isMultiplyPrime(long)\n        long t = t;\n  \
    \           ^\n/tmp/tmpwb_f6pbs.java:113: error: variable u is already defined\
    \ in method isMultiplyPrime(long)\n        long u = u;\n             ^\n/tmp/tmpwb_f6pbs.java:114:\
    \ error: variable v is already defined in method isMultiplyPrime(long)\n     \
    \   long v = v;\n             ^\n74 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkslcs5ag.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1yajihif.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp1yajihif.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 5;\n        long d = 5;\n     \
    \   long e = 5;\n        long f = 5;\n        long g = 5;\n        long h = 5;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E; \n        long F; \n        long G; \n        long H; \n \
    \       long I; \n        long J; \n        long K; \n        long L; \n     \
    \   long M; \n        long N; \n        long O; \n        long P; \n        long\
    \ Q; \n        long R; \n        long S; \n        long T; \n        long U; \n\
    \        long V; \n        long W; \n        long X; \n        long Y; \n    \
    \    long Z; \n        long AA = a; \n        long BB = b; \n        long CC =\
    \ c; \n        long DD = d; \n        long EE; \n        long FF; \n        long\
    \ GG; \n        long HH; \n        long II; \n        long JJ; \n        long\
    \ KK; \n        long LL; \n        long MM; \n        long NN; \n        long\
    \ OO; \n        long PP; \n        long QQ; \n        long RR; \n        long\
    \ SS; \n        long TT; \n        long UU; \n        long VV; \n        long\
    \ WW; \n        long XX; \n        long YY; \n        long ZZ; \n        long\
    \ AAA = a; \n        long BBB = b; \n        long CCC = c; \n        long DDD\
    \ = d; \n        long EEE; \n        long FFF; \n        long GGG; \n        long\
    \ HHH; \n        long III; \n        long JJJ; \n        long KKK; \n        long\
    \ LLL; \n        long MMM; \n        long NNN; \n        long OOO; \n        long\
    \ PPP; \n        long QQQ; \n        long RRR; \n        long SSS; \n        \n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_rje2lmi.java:113: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpokc4f0bx.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmkh01o5d.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqg04wabe.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long limit = 100;\n        long\
    \ counter = 0;\n        long counter2 = 0;\n        long counter3 = 0;\n     \
    \   long counter4 = 0;\n        long counter5 = 0;\n        long counter6 = 0;\n\
    \        long counter7 = 0;\n        long counter8 = 0;\n        long counter9\
    \ = 0;\n        long counter10 = 0;\n        long counter11 = 0;\n        long\
    \ counter12 = 0;\n        long counter13 = 0;\n        long counter14 = 0;\n \
    \       long counter15 = 0;\n        long counter16 = 0;\n        long counter17\
    \ = 0;\n        long counter18 = 0;\n        long counter19 = 0;\n        long\
    \ counter20 = 0;\n        long counter21 = 0;\n        long counter22 = 0;\n \
    \       long counter23 = 0;\n        long counter24 = 0;\n        long counter25\
    \ = 0;\n        long counter26 = 0;\n        long counter27 = 0;\n        long\
    \ counter28 = 0;\n        long counter29 = 0;\n        long counter30 = 0;\n \
    \       long counter31 = 0;\n        long counter32 = 0;\n        long counter33\
    \ = 0;\n        long counter34 = 0;\n        long counter35 = 0;\n        long\
    \ counter36 = 0;\n        long counter37 = 0;\n        long counter38 = 0;\n \
    \       long counter39 = 0;\n        long counter40 = 0;\n        long counter41\
    \ = 0;\n        long counter42 = 0;\n        long counter43 = 0;\n        long\
    \ counter44 = 0;\n        long counter45 = 0;\n        long counter46 = 0;\n \
    \       long counter47 = 0;\n        long counter48 = 0;\n        long counter49\
    \ = 0;\n        long counter50 = 0;\n        long counter51 = 0;\n        long\
    \ counter52 = 0;\n        long counter53 = 0;\n        long counter54 = 0;\n \
    \       long counter55 = 0;\n        long counter56 = 0;\n        long counter57\
    \ = 0;\n        long counter58 = 0;\n        long counter59 = 0;\n        long\
    \ counter60 = 0;\n        long counter61 = 0;\n        long counter62 = 0;\n \
    \       long counter63 = 0;\n        long counter64 = 0;\n        long counter65\
    \ = 0;\n        long counter66 = 0;\n        long counter67 = 0;\n        long\
    \ counter68 = 0;\n        long counter69 = 0;\n        long counter70 = 0;\n \
    \       long counter71 = 0;\n        long counter72 = 0;\n        long counter73\
    \ = 0;\n        long counter74 = 0;\n        long counter75 = 0;\n        long\
    \ counter76 = 0;\n        long counter77 = 0;\n        long counter78 = 0;\n \
    \       long counter79 = 0;\n        long counter80 = 0;\n        long counter81\
    \ = 0;\n        long counter82 = 0;\n        long counter83 = 0;\n        long\
    \ counter84 = 0;\n        long \n    }\n    public static void main(String[] args)\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvbdvsxrj.java:102: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpvbdvsxrj.java:102: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdgxzy1sj.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl82uyy71.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 3;\n        long j = 3;\n        long k = 3;\n        long l\
    \ = 3;\n        long m = 3;\n        long n = 3;\n        long o = 3;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 3;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n      \
    \  long L = 3;\n        long M = 3;\n        long N = 3;\n        long O = 3;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 3;\n        long S\
    \ = 3;\n        long T = 3;\n        long U = 3;\n        long V = 3;\n      \
    \  long W = 3;\n        long X = 3;\n        long Y = 3;\n        long Z = 3;\n\
    \        long AA = 3;\n        long BB = 3;\n        long CC = 3;\n        long\
    \ DD = 3;\n        long EE = 3;\n        long FF = 3;\n        long GG = 3;\n\
    \        long HH = 3;\n        long II = 3;\n        long JJ = 3;\n        long\
    \ KK = 3;\n        long LL = 3;\n        long MM = 3;\n        long NN = 3;\n\
    \        long OO = 3;\n        long PP = 3;\n        long QQ = 3;\n        long\
    \ RR = 3;\n        long SS = 3;\n        long TT = 3;\n        long UU = 3;\n\
    \        long VV = 3;\n        long WW = 3;\n        long XX = 3;\n        long\
    \ YY = 3;\n        long ZZ = 3;\n        long AAA = 3;\n        long BBB = 3;\n\
    \        long CCC = 3;\n        long DDD = 3;\n        long EEE = 3;\n       \
    \ long FFF = 3;\n        long GGG = 3;\n        long HHH = 3;\n        long III\
    \ = 3;\n        long JJJ = 3;\n        long KKK = 3;\n        long LLL = 3;\n\
    \        long MMM = 3;\n        long NNN = 3;\n        long OOO = 3;\n       \
    \ long PPP = 3;\n        long QQQ = 3;\n        long RRR = 3;\n        long SSS\
    \ = 3;\n        long TTT = 3;\n        long UUU = 3;\n        long \n    }\n \
    \   public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7z3flwtx.java:114: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp7z3flwtx.java:114: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgplrgzru.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpelzhd5o6.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpelzhd5o6.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj30ub6bo.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j\
    \ = 0;\n        long k = 0;\n        long l = 0;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n      \
    \  long J = 0;\n        long K = 0;\n        long L = 0;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 0;\n        long G1 = 0;\n        long H1 = 0;\n        long\
    \ I1 = 0;\n        long J1 = 0;\n        long K1 = 0;\n        long L1 = 0;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 0;\n        long G2 = 0;\n\
    \        long H2 = 0;\n        long I2 = 0;\n        long J2 = 0;\n        long\
    \ K2 = 0;\n        long L2 = 0;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = 1;\n        long U2 = 1;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpblo6x2g5.java:116: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzxuvkwk8.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 0;\n        long G1 = 0;\n\
    \        long H1 = 0;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsn3h34x9.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp83exl3uj.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp83exl3uj.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp_d407x0.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 1;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 1;\n        long h = 2;\n\
    \        long i = 2;\n        long j = 3;\n        long k = 1;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 1;\n      \
    \  long p = 2;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 1;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long a = 1;\n        long b = 2;\n        long c = 2;\n        long d = 1;\n\
    \        long e = 2;\n        long f = 3;\n        long g = 1;\n        long h\
    \ = 2;\n        long i = 2;\n        long j = 3;\n        long k = 1;\n      \
    \  long l = 2;\n        long m = 2;\n        long n = 2;\n        long o = 1;\n\
    \        long p = 2;\n        long q = 3;\n        long r = 2;\n        long s\
    \ = 2;\n        long t = 1;\n        long u = 2;\n        long v = 3;\n      \
    \  long w = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n\
    \        long a = 1;\n        long b = 2;\n        long c = 2;\n        long d\
    \ = 1;\n        long e = 2;\n        long f = 3;\n        long g = 1;\n      \
    \  long h = 2;\n        long i = 2;\n        long j = 3;\n        long k = 1;\n\
    \        long l = 2;\n        long m = 2;\n        long n = 2;\n        long o\
    \ = 1;\n        long p = 2;\n        long q = 3;\n        long r = 2;\n      \
    \  long s = 2;\n        long t = 1;\n        long u = 2;\n        long v = 3;\n\
    \        long w = 2;\n        long x = 2;\n        long y = 2;\n        long z\
    \ = 2;\n        long a = 1;\n        long b = 2;\n        long c = 2;\n      \
    \  long d = 1;\n        long e = 2;\n        long f = 3;\n        long g = 1;\n\
    \        long h = 2;\n        long i = 2;\n        long j = 3;\n        long k\
    \ = 1;\n        long l = 2;\n        long m = 2;\n        long n = 2;\n      \
    \  long o = 1;\n        long p = 2;\n        long q = 3;\n        long r = 2;\n\
    \        long s = 2;\n        long t = 1;\n        long u = 2;\n        long v\
    \ = 3;\n        long w = 2;\n        long x = 2;\n        long y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0go6o_hg.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp0go6o_hg.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 2;\n        long Q = 2;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 2;\n        long B = 2;\n        long C = 2;\n        long D\
    \ = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n\
    \        long L = 2;\n        long M = 2;\n        long N = 2;\n        long O\
    \ = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n\
    \        long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 2;\n        long B = 2;\n        long C = 2;\n      \
    \  long D = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 2;\n        long J = 2;\n        long K\
    \ = 2;\n        long L = 2;\n        long M = 2;\n        long N = 2;\n      \
    \  long O = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 2;\n        long W = 2;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmjb_d8cp.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpmjb_d8cp.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long b = a;\n        long c =\
    \ 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n        long\
    \ g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n    \
    \    long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long A = 1;\n        long B = 1;\n        long C\
    \ = 1;\n        long D = 1;\n        long E = 1;\n        long F = 1;\n      \
    \  long G = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n\
    \        long K = 1;\n        long L = 1;\n        long M = 1;\n        long N\
    \ = 1;\n        long O = 1;\n        long P = 1;\n        long Q = 1;\n      \
    \  long R = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n\
    \        long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y\
    \ = 1;\n        long Z = 1;\n        long A1 = 1;\n        long B1 = 1;\n    \
    \    long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n        long F1\
    \ = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long I1 = 1;\n   \
    \     long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n        long M1\
    \ = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long P1 = 1;\n   \
    \     long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n        long T1\
    \ = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long W1 = 1;\n   \
    \     long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n        long A2\
    \ = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long D2 = 1;\n   \
    \     long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n        long H2\
    \ = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long K2 = 1;\n   \
    \     long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n        long O2\
    \ = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long R2 = 1;\n   \
    \     long S2 = 1;\n        long T2 = 1;\n        long \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphsn835hr.java:114: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmphsn835hr.java:114: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprqk1c9xc.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf5sixba4.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 2;\n        long g = 1;\n        long h = 2;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_bw3z6a.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp89_dyrbw.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr2090i67.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n        long\
    \ h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n    \
    \    long l = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n\
    \        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s\
    \ = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n      \
    \  long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long aa = 0;\n        long bb = 0;\n        long cc = 0;\n        long\
    \ dd = 0;\n        long ee = 0;\n        long ff = 0;\n        long gg = 0;\n\
    \        long hh = 0;\n        long ii = 0;\n        long jj = 0;\n        long\
    \ kk = 0;\n        long ll = 0;\n        long mm = 0;\n        long nn = 0;\n\
    \        long oo = 0;\n        long pp = 0;\n        long qq = 0;\n        long\
    \ rr = 0;\n        long ss = 0;\n        long tt = 0;\n        long uu = 0;\n\
    \        long vv = 0;\n        long ww = 0;\n        long xx = 0;\n        long\
    \ yy = 0;\n        long zz = 0;\n        long aaa = 0;\n        long bbb = 0;\n\
    \        long ccc = 0;\n        long ddd = 0;\n        long eee = 0;\n       \
    \ long fff = 0;\n        long ggg = 0;\n        long hhh = 0;\n        long iii\
    \ = 0;\n        long jjj = 0;\n        long kkk = 0;\n        long lll = 0;\n\
    \        long mmm = 0;\n        long nnn = 0;\n        long ooo = 0;\n       \
    \ long ppp = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss\
    \ = 0;\n        long ttt = 0;\n        long uuu = 0;\n        long vvv = 0;\n\
    \        long www = 0;\n        long xxx = 0;\n        long yyy = 0;\n       \
    \ long zzz = 0;\n        long aaaa = 0;\n        long bbbb = 0;\n        long\
    \ cccc = 0;\n        long dddd = 0;\n        long eeee = 0;\n        long ffff\
    \ = 0;\n        long gggg = 0;\n        long hhhh = 0;\n        long iiii = 0;\n\
    \        long jjjj = 0;\n        long kkkk = 0;\n        long llll = 0;\n    \
    \    long mmmm = 0;\n        long nnnn = 0;\n        long oooo = 0;\n        long\
    \ pppp = 0;\n        long qqqq = 0;\n        long rrrr = 0;\n        long ssss\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp665rpg5l.java:16: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a);\n                      \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n        long\
    \ h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n    \
    \    long l = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n\
    \        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s\
    \ = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n      \
    \  long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n   \
    \     long DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG\
    \ = 0;\n        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n   \
    \     long KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN\
    \ = 0;\n        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n   \
    \     long RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU\
    \ = 0;\n        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n   \
    \     long YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long\
    \ BBB = 0;\n        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n\
    \        long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n       \
    \ long III = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL\
    \ = 0;\n        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n\
    \        long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n       \
    \ long SSS = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long V\n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphhvyp8kw.java:114: error: ';' expected\n        long V\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 2;\n        long Q = 2;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 2;\n        long B = 2;\n        long C = 2;\n        long D\
    \ = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n\
    \        long L = 2;\n        long M = 2;\n        long N = 2;\n        long O\
    \ = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n\
    \        long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 2;\n        long B = 2;\n        long C = 2;\n      \
    \  long D = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 2;\n        long J = 2;\n        long K\
    \ = 2;\n        long L = 2;\n        long M = 2;\n        long N = 2;\n      \
    \  long O = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 2;\n        long W = 2;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwlaenfdh.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpwlaenfdh.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp095c02az.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxk66e20g.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 2;\n      \
    \  long c = 2;\n        long d = 2;\n        long e = 2;\n        long f = 3;\n\
    \        long g = 3;\n        long h = 3;\n        long i = 2;\n        long j\
    \ = 2;\n        long k = 2;\n        long l = 2;\n        long m = 2;\n      \
    \  long n = 2;\n        long o = 2;\n        long p = 2;\n        long q = 2;\n\
    \        long r = 2;\n        long s = 2;\n        long t = 2;\n        long u\
    \ = 2;\n        long v = 2;\n        long w = 2;\n        long x = 2;\n      \
    \  long y = 2;\n        long z = 2;\n        long A = 2;\n        long B = 2;\n\
    \        long C = 2;\n        long D = 2;\n        long E = 2;\n        long F\
    \ = 3;\n        long G = 3;\n        long H = 3;\n        long I = 2;\n      \
    \  long J = 2;\n        long K = 2;\n        long L = 2;\n        long M = 2;\n\
    \        long N = 2;\n        long O = 2;\n        long P = 2;\n        long Q\
    \ = 2;\n        long R = 2;\n        long S = 2;\n        long T = 2;\n      \
    \  long U = 2;\n        long V = 2;\n        long W = 2;\n        long X = 2;\n\
    \        long Y = 2;\n        long Z = 2;\n        long A = 2;\n        long B\
    \ = 2;\n        long C = 2;\n        long D = 2;\n        long E = 2;\n      \
    \  long F = 3;\n        long G = 3;\n        long H = 3;\n        long I = 2;\n\
    \        long J = 2;\n        long K = 2;\n        long L = 2;\n        long M\
    \ = 2;\n        long N = 2;\n        long O = 2;\n        long P = 2;\n      \
    \  long Q = 2;\n        long R = 2;\n        long S = 2;\n        long T = 2;\n\
    \        long U = 2;\n        long V = 2;\n        long W = 2;\n        long X\
    \ = 2;\n        long Y = 2;\n        long Z = 2;\n        long A = 2;\n      \
    \  long B = 2;\n        long C = 2;\n        long D = 2;\n        long E = 2;\n\
    \        long F = 3;\n        long G = 3;\n        long H = 3;\n        long I\
    \ = 2;\n        long J = 2;\n        long K = 2;\n        long L = 2;\n      \
    \  long M = 2;\n        long N = 2;\n        long O = 2;\n        long P = 2;\n\
    \        long Q = 2;\n        long R = 2;\n        long S = 2;\n        long T\
    \ = 2;\n        long U = 2;\n        long V = 2;\n        long W = 2;\n      \
    \  long X\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd_6ru339.java:117: error: ';' expected\n        long X\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt9f6h67t.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 3;\n        long d = 5;\n      \
    \  long e = 7;\n        long f = 9;\n        long g = 17;\n        long h = 23;\n\
    \        long i = 29;\n        long j = 31;\n        long k = 33;\n        long\
    \ l = 35;\n        long m = 41;\n        long n = 43;\n        long o = 51;\n\
    \        long p = 53;\n        long q = 59;\n        long r = 61;\n        long\
    \ s = 67;\n        long t = 71;\n        long u = 71;\n        long v = 71;\n\
    \        long w = 71;\n        long x = 71;\n        long y = 71;\n        long\
    \ z = 71;\n        long aa = 99;\n        long bb = 99;\n        long cc = 99;\n\
    \        long dd = 99;\n        long ee = 99;\n        long ff = 99;\n       \
    \ long gg = 99;\n        long hh = 99;\n        long ii = 99;\n        long jj\
    \ = 99;\n        long kk = 99;\n        long ll = 99;\n        long mm = 99;\n\
    \        long nn = 99;\n        long oo = 99;\n        long pp = 99;\n       \
    \ long qq = 99;\n        long rr = 99;\n        long ss = 99;\n        long tt\
    \ = 99;\n        long uu = 99;\n        long vv = 99;\n        long ww = 99;\n\
    \        long xx = 99;\n        long yy = 99;\n        long zz = 99;\n       \
    \ long aaa = 99;\n        long bbb = 99;\n        long ccc = 99;\n        long\
    \ dd = 99;\n        long eee = 99;\n        long fff = 99;\n        long ggg =\
    \ 99;\n        long hhh = 99;\n        long iii = 99;\n        long jjj = 99;\n\
    \        long kk = 99;\n        long lll = 99;\n        long mmm = 99;\n     \
    \   long nnn = 99;\n        long ooo = 99;\n        long ppp = 99;\n        long\
    \ qq = 99;\n        long rr = 99;\n        long ss = 99;\n        long tt = 99;\n\
    \        long uuu = 99;\n        long vv = 99;\n        long ww = 99;\n      \
    \  long xx = 99;\n        long yy = 99;\n        long zz = 99;\n        long aaa\
    \ = 99;\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpph0wr0s1.java:70: error: variable dd is already defined in method\
    \ isMultiplyPrime(long)\n        long dd = 99;\n             ^\n/tmp/tmpph0wr0s1.java:77:\
    \ error: variable kk is already defined in method isMultiplyPrime(long)\n    \
    \    long kk = 99;\n             ^\n/tmp/tmpph0wr0s1.java:83: error: variable\
    \ qq is already defined in method isMultiplyPrime(long)\n        long qq = 99;\n\
    \             ^\n/tmp/tmpph0wr0s1.java:84: error: variable rr is already defined\
    \ in method isMultiplyPrime(long)\n        long rr = 99;\n             ^\n/tmp/tmpph0wr0s1.java:85:\
    \ error: variable ss is already defined in method isMultiplyPrime(long)\n    \
    \    long ss = 99;\n             ^\n/tmp/tmpph0wr0s1.java:86: error: variable\
    \ tt is already defined in method isMultiplyPrime(long)\n        long tt = 99;\n\
    \             ^\n/tmp/tmpph0wr0s1.java:88: error: variable vv is already defined\
    \ in method isMultiplyPrime(long)\n        long vv = 99;\n             ^\n/tmp/tmpph0wr0s1.java:89:\
    \ error: variable ww is already defined in method isMultiplyPrime(long)\n    \
    \    long ww = 99;\n             ^\n/tmp/tmpph0wr0s1.java:90: error: variable\
    \ xx is already defined in method isMultiplyPrime(long)\n        long xx = 99;\n\
    \             ^\n/tmp/tmpph0wr0s1.java:91: error: variable yy is already defined\
    \ in method isMultiplyPrime(long)\n        long yy = 99;\n             ^\n/tmp/tmpph0wr0s1.java:92:\
    \ error: variable zz is already defined in method isMultiplyPrime(long)\n    \
    \    long zz = 99;\n             ^\n/tmp/tmpph0wr0s1.java:93: error: variable\
    \ aaa is already defined in method isMultiplyPrime(long)\n        long aaa = 99;\n\
    \             ^\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6jb0rtml.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7yi038ss.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 3, c = 5, d = 7;\n        long e = 3, f = 5, g = 7, h\
    \ = 9;\n        long i = 5, j = 7, k = 9, l = 10;\n        long m = 5, n = 7,\
    \ o = 9;\n        long p = 5, q = 7, r = 9, s = 10;\n        long t = 5, u = 7,\
    \ v = 9, w = 10;\n        long x = 5, y = 7, z = 9;\n        long A = 3, B = 3,\
    \ C = 5;\n        long D = 3, E = 3, F = 5;\n        long G = 3, H = 3, I = 5;\n\
    \        long J = 3, K = 3, L = 5;\n        long M = 3, N = 3, O = 5;\n      \
    \  long P = 3, Q = 3, R = 3, S = 5;\n        long T = 3, U = 3, V = 5;\n     \
    \   long W = 3, X = 3, Y = 3, Z = 5;\n        long AA = 3, BB = 3, CC = 5;\n \
    \       long DD = 3, EE = 3, FF = 5;\n        long GG = 3, HH = 3, II = 5;\n \
    \       long JJ = 3, KK = 3, LL = 5;\n        long MM = 3, NN = 3, OO = 5;\n \
    \       long PP = 3, QP = 3, RP = 3, SJ = 5;\n        long TT = 3, UU = 3, VV\
    \ = 5;\n        long WW = 3, XX = 3, YY = 3, ZZ = 5;\n        long AAA = 3, BBB\
    \ = 3, CCC = 5;\n        long DDD = 3, EEE = 3, FFF = 5;\n        long GGG = 3,\
    \ HHH = 3, III = 5;\n        long JJJ = 3, KKK = 3, LLL = 5;\n        long MMM\
    \ = 3, NNN = 3, OOO = 5;\n        long PPP = 3, QPP = 3, RPP = 3, SJJ = 5;\n \
    \       long TTT = 3, UUU = 3, VVV = 5;\n        long WWW = 3, XXX = 3, YYY =\
    \ 3, ZZZ = 5;\n        long AAAA = 3, BBBB = 3, CCCC = 5;\n        long DDDD =\
    \ 3, EEEE = 3, FFFF = 5;\n        long GGGG = 3, HHHH = 3, IIII = 5;\n       \
    \ long JJJJ = 3, KKKK = 3, LLLL = 5;\n        long MMMM = 3, NNNN = 3, OOOO =\
    \ 5;\n        long PPPP = 3, QPPP = 3, RPPP = 3, SJJJ = 5;\n        long TTTT\
    \ = 3, UUUU = 3, VVVV = 5;\n        long WWWW = 3, XXXX = 3, YYYY = 3, ZZZZ =\
    \ 5;\n        long AAAAA = 3, BBBBB = 3, CCCCC = 5;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3vo8gmmd.java:57: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long limit = a / 3;\n       \
    \ long limit2 = limit * limit;\n        long limit3 = limit * limit2;\n      \
    \  long limit4 = limit * limit3;\n        long limit5 = limit * limit4;\n    \
    \    long limit6 = limit * limit5;\n        long limit7 = limit * limit6;\n  \
    \      long limit8 = limit * limit7;\n        long limit9 = limit * limit8;\n\
    \        long limit10 = limit * limit9;\n        long limit11 = limit * limit10;\n\
    \        long limit12 = limit * limit11;\n        long limit13 = limit * limit12;\n\
    \        long limit14 = limit * limit13;\n        long limit15 = limit * limit14;\n\
    \        long limit16 = limit * limit15;\n        long limit17 = limit * limit16;\n\
    \        long limit18 = limit * limit17;\n        long limit19 = limit * limit18;\n\
    \        long limit20 = limit * limit19;\n        long limit21 = limit * limit20;\n\
    \        long limit22 = limit * limit21;\n        long limit23 = limit * limit22;\n\
    \        long limit24 = limit * limit23;\n        long limit25 = limit * limit24;\n\
    \        long limit26 = limit * limit25;\n        long limit27 = limit * limit26;\n\
    \        long limit28 = limit * limit27;\n        long limit29 = limit * limit28;\n\
    \        long limit30 = limit * limit29;\n        long limit31 = limit * limit30;\n\
    \        long limit32 = limit * limit31;\n        long limit33 = limit * limit32;\n\
    \        long limit34 = limit * limit33;\n        long limit35 = limit * limit34;\n\
    \        long limit36 = limit * limit35;\n        long limit37 = limit * limit36;\n\
    \        long limit38 = limit * limit37;\n        long limit39 = limit * limit38;\n\
    \        long limit40 = limit * limit39;\n        long limit41 = limit * limit40;\n\
    \        long limit42 = limit * limit41;\n        long limit43 = limit * limit42;\n\
    \        long limit44 = limit * limit43;\n        long limit45 = limit * limit44;\n\
    \        long limit46 = limit * limit45;\n        long limit47 = limit * limit46;\n\
    \        long limit48 = limit * limit47;\n        long limit49 = limit * limit48;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptzm17r3_.java:66: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmptzm17r3_.java:66: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long aa = 0;\n        long bb = 0;\n        long cc = 0;\n        long dd =\
    \ 0;\n        long ee = 0;\n        long ff = 0;\n        long gg = 0;\n     \
    \   long hh = 0;\n        long ii = 0;\n        long jj = 0;\n        long kk\
    \ = 0;\n        long ll = 0;\n        long mm = 0;\n        long nn = 0;\n   \
    \     long oo = 0;\n        long pp = 0;\n        long qq = 0;\n        long rr\
    \ = 0;\n        long ss = 0;\n        long tt = 0;\n        long uu = 0;\n   \
    \     long vv = 0;\n        long ww = 0;\n        long xx = 0;\n        long yy\
    \ = 0;\n        long zz = 0;\n        long aaa = 0;\n        long bbb = 0;\n \
    \       long ccc = 0;\n        long ddd = 0;\n        long eee = 0;\n        long\
    \ fff = 0;\n        long ggg = 0;\n        long hhh = 0;\n        long iii = 0;\n\
    \        long jjj = 0;\n        long kkk = 0;\n        long lll = 0;\n       \
    \ long mmm = 0;\n        long nnn = 0;\n        long ooo = 0;\n        long ppp\
    \ = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss = 0;\n\
    \        long ttt = 0;\n        long uuu = 0;\n        long vvv = 0;\n       \
    \ long www = 0;\n        long xxx = 0;\n        long yyy = 0;\n        long zzz\
    \ = 0;\n        long aaaa = 0;\n        long bbbb = 0;\n        long cccc = 0;\n\
    \        long dddd = 0;\n        long eeee = 0;\n        long ffff = 0;\n    \
    \    long gggg = 0;\n        long hhhh = 0;\n        long iiii = 0;\n        long\
    \ jjjj = 0;\n        long kkkk = 0;\n        long llll = 0;\n        long mmmm\
    \ = 0;\n        long nnnn = 0;\n        long oooo = 0;\n        long pppp = 0;\n\
    \        long qqqq = 0;\n        long rrrr = 0;\n        long ssss = 0;\n    \
    \    long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4213awaa.java:112: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp4213awaa.java:112: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjt01vyes.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwpq5q8qr.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpovbqlvyu.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfo15ij78.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps1o9t2ce.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isPrime = true;\n        long limit = 100;\n        long\
    \ counter = 1;\n        long counter2 = 1;\n        long counter3 = 1;\n     \
    \   long counter4 = 1;\n        long counter5 = 1;\n        long counter6 = 1;\n\
    \        long counter7 = 1;\n        long counter8 = 1;\n        long counter9\
    \ = 1;\n        long counter10 = 1;\n        long counter11 = 1;\n        long\
    \ counter12 = 1;\n        long counter13 = 1;\n        long counter14 = 1;\n \
    \       long counter15 = 1;\n        long counter16 = 1;\n        long counter17\
    \ = 1;\n        long counter18 = 1;\n        long counter19 = 1;\n        long\
    \ counter20 = 1;\n        long counter21 = 1;\n        long counter22 = 1;\n \
    \       long counter23 = 1;\n        long counter24 = 1;\n        long counter25\
    \ = 1;\n        long counter26 = 1;\n        long counter27 = 1;\n        long\
    \ counter28 = 1;\n        long counter29 = 1;\n        long counter30 = 1;\n \
    \       long counter31 = 1;\n        long counter32 = 1;\n        long counter33\
    \ = 1;\n        long counter34 = 1;\n        long counter35 = 1;\n        long\
    \ counter36 = 1;\n        long counter37 = 1;\n        long counter38 = 1;\n \
    \       long counter39 = 1;\n        long counter40 = 1;\n        long counter41\
    \ = 1;\n        long counter42 = 1;\n        long counter43 = 1;\n        long\
    \ counter44 = 1;\n        long counter45 = 1;\n        long counter46 = 1;\n \
    \       long counter47 = 1;\n        long counter48 = 1;\n        long counter49\
    \ = 1;\n        long counter50 = 1;\n        long counter51 = 1;\n        long\
    \ counter52 = 1;\n        long counter53 = 1;\n        long counter54 = 1;\n \
    \       long counter55 = 1;\n        long counter56 = 1;\n        long counter57\
    \ = 1;\n        long counter58 = 1;\n        long counter59 = 1;\n        long\
    \ counter60 = 1;\n        long counter61 = 1;\n        long counter62 = 1;\n \
    \       long counter63 = 1;\n        long counter64 = 1;\n        long counter65\
    \ = 1;\n        long counter66 = 1;\n        long counter67 = 1;\n        long\
    \ counter68 = 1;\n        long counter69 = 1;\n        long counter70 = 1;\n \
    \       long counter71 = 1;\n        long counter72 = 1;\n        long counter73\
    \ = 1;\n        long counter74 = 1;\n        long counter75 = 1;\n        long\
    \ counter76 = 1;\n        long counter77 = 1;\n        long counter78 = 1;\n \
    \       long counter79 = 1;\n        long counter80 = 1;\n        long counter81\
    \ = 1;\n        long counter82 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_jxbe7ct.java:101: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpttd_tc85.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppmf8ev9o.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E;\n        long F;\n        long G;\n        long H;\n     \
    \   long I;\n        long J;\n        long K;\n        long L;\n        long M;\n\
    \        long N;\n        long O;\n        long P;\n        long Q;\n        long\
    \ R;\n        long S;\n        long T;\n        long U;\n        long V;\n   \
    \     long W;\n        long X;\n        long Y;\n        long Z;\n        long\
    \ AA;\n        long BB;\n        long CC;\n        long DD;\n        long EE;\n\
    \        long FF;\n        long GG;\n        long HH;\n        long II;\n    \
    \    long JJ;\n        long KK;\n        long LL;\n        long MM;\n        long\
    \ NN;\n        long OO;\n        long PP;\n        long QQ;\n        long RR;\n\
    \        long SS;\n        long TT;\n        long UU;\n        long VV;\n    \
    \    long WW;\n        long XX;\n        long YY;\n        long ZZ;\n        long\
    \ AAA;\n        long BBB;\n        long CCC;\n        long DDD;\n        long\
    \ EEE;\n        long FFF;\n        long GGG;\n        long HHH;\n        long\
    \ III;\n        long JJJ;\n        long KKK;\n        long LLL;\n        long\
    \ MMM;\n        long NNN;\n        long OOO;\n        long PPP;\n        long\
    \ QQQ;\n        long RRR;\n        long SSS;\n        long TTT;\n        long\
    \ UUU;\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjnq3kl01.java:114: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 3; // first prime number\n        long c = 5; // second\
    \ prime number\n        long d = 7; // third prime number\n        long e = 3;\
    \ // fourth prime number\n        long f = 3; // fifth prime number\n        long\
    \ g = 7; // sixth prime number\n        long h = 9; // seventh prime number\n\
    \        long i = 5; // eighth prime number\n        long j = 11; // ninth prime\
    \ number\n        long k = 13; // tenth prime number\n        long l = 17; //\
    \ eleventh prime number\n        long m = 23; // twelfth prime number\n      \
    \  long n = 29; // thirteenth prime number\n        long o = 37; // fourteenth\
    \ prime number\n        long p = 53; // fifteenth prime number\n        long q\
    \ = 59; // sixteenth prime number\n        long r = 67; // seventeenth prime number\n\
    \        long s = 73; // eighteenth prime number\n        long t = 89; // nineteenth\
    \ prime number\n        long u = 113; // twentieth prime number\n        long\
    \ v = 137; // thirtieth prime number\n        long w = 179; // fourtieth prime\
    \ number\n        long x = 231; // fiftieth prime number\n        long y = 293;\
    \ // sixtieth prime number\n        long z = 371; // seventieth prime number\n\
    \        long A = a;\n        long B = b;\n        long C = c; // first prime\
    \ number\n        long D = d; // second prime number\n        long E = e; // third\
    \ prime number\n        long F = f; // fourth prime number\n        long G = g;\
    \ // fifth prime number\n        long H = h; // sixth prime number\n        long\
    \ I = i; // eighth prime number\n        long J = j; // ninth prime number\n \
    \       long K = k; // tenth prime number\n        long L = l; // eleventh prime\
    \ number\n        long M = m;\n        long N = n; // thirteenth prime number\n\
    \        long O = o; // fourteenth prime number\n        long P = p; // fifteenth\
    \ prime number\n        long Q = q; // sixteenth prime number\n        long R\
    \ = r; // seventeenth prime number\n        long S = s; // eighteenth prime number\n\
    \        long T = t; // nineteenth prime number\n        long U = u; // twentieth\
    \ prime number\n        long V = v; // thirtieth prime number\n        long W\
    \ = w; // fourtieth prime number\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjvzp52oc.java:64: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 0;\n        long h = 0;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 0;\n        long G = 0;\n        long H = 0;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 0;\n        long G1 = 0;\n        long H1 = 0;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 0;\n        long G2 = 0;\n\
    \        long H2 = 0;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = 1;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2i5zyaqi.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzv_3ynx8.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmgrk62yf.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n      \
    \  long L = 5;\n        long M = 5;\n        long N = 5;\n        long O = 5;\n\
    \        long P = 5;\n        long Q = 5;\n        long R = 5;\n        long S\
    \ = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n      \
    \  long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z = 5;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n\
    \        long L = 5;\n        long M = 5;\n        long N = 5;\n        long O\
    \ = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n      \
    \  long S = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n\
    \        long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z\
    \ = 5;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 5;\n        long J = 5;\n        long K\
    \ = 5;\n        long L = 5;\n        long M = 5;\n        long N = 5;\n      \
    \  long O = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n\
    \        long S = 5;\n        long T = 5;\n        long U = 5;\n        long V\
    \ = 5;\n        long W = 5;\n        long X = 5;\n        long Y = 5;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphmy803w_.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmphmy803w_.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpabflisw_.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = Math.sqrt(a);\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 0;\n        long g = 0;\n        long\
    \ h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n    \
    \    long l = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n\
    \        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s\
    \ = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n      \
    \  long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D\
    \ = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n      \
    \  long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n\
    \        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O\
    \ = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n      \
    \  long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n\
    \        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z\
    \ = 0;\n        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n   \
    \     long DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG\
    \ = 0;\n        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n   \
    \     long KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN\
    \ = 0;\n        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n   \
    \     long RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU\
    \ = 0;\n        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n   \
    \     long YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long\
    \ BBB = 0;\n        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n\
    \        long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n       \
    \ long III = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL\
    \ = 0;\n        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n\
    \        long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n       \
    \ long SSS = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long V\n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbzhyzqa6.java:114: error: ';' expected\n        long V\n      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpocl1go69.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpocl1go69.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg64iv5e7.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n      \
    \  long L = 5;\n        long M = 5;\n        long N = 5;\n        long O = 5;\n\
    \        long P = 5;\n        long Q = 5;\n        long R = 5;\n        long S\
    \ = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n      \
    \  long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z = 5;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n\
    \        long L = 5;\n        long M = 5;\n        long N = 5;\n        long O\
    \ = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n      \
    \  long S = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n\
    \        long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z\
    \ = 5;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 5;\n        long J = 5;\n        long K\
    \ = 5;\n        long L = 5;\n        long M = 5;\n        long N = 5;\n      \
    \  long O = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n\
    \        long S = 5;\n        long T = 5;\n        long U = 5;\n        long V\
    \ = 5;\n        long W = 5;\n        long X = 5;\n        long Y = 5;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyf3eoial.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpyf3eoial.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = true;\n        long b = 1;\n       \
    \ long c = 2;\n        long d = 2;\n        long e = 2;\n        long f = 3;\n\
    \        long g = 3;\n        long h = 3;\n        long i = 3;\n        long j\
    \ = 3;\n        long k = 3;\n        long l = 3;\n        long m = 3;\n      \
    \  long n = 3;\n        long o = 3;\n        long p = 3;\n        long q = 3;\n\
    \        long r = 2;\n        long s = 2;\n        long t = 2;\n        long u\
    \ = 2;\n        long v = 2;\n        long w = 2;\n        long x = 2;\n      \
    \  long y = 2;\n        long z = 2;\n        long A = 3;\n        long B = 3;\n\
    \        long C = 3;\n        long D = 3;\n        long E = 3;\n        long F\
    \ = 3;\n        long G = 3;\n        long H = 3;\n        long I = 3;\n      \
    \  long J = 3;\n        long K = 3;\n        long L = 3;\n        long M = 3;\n\
    \        long N = 3;\n        long O = 3;\n        long P = 3;\n        long Q\
    \ = 3;\n        long R = 3;\n        long S = 3;\n        long T = 3;\n      \
    \  long U = 3;\n        long V = 3;\n        long W = 3;\n        long X = 3;\n\
    \        long Y = 3;\n        long Z = 3;\n        long AA = 3;\n        long\
    \ BB = 3;\n        long CC = 3;\n        long DD = 3;\n        long EE = 3;\n\
    \        long FF = 3;\n        long GG = 3;\n        long HH = 3;\n        long\
    \ II = 3;\n        long JJ = 3;\n        long KK = 3;\n        long LL = 3;\n\
    \        long MM = 3;\n        long NN = 3;\n        long OO = 3;\n        long\
    \ PP = 3;\n        long QQ = 3;\n        long RR = 3;\n        long SS = 3;\n\
    \        long TT = 3;\n        long UU = 3;\n        long VV = 3;\n        long\
    \ WW = 3;\n        long XX = 3;\n        long YY = 3;\n        long ZZ = 3;\n\
    \        long AAA = 3;\n        long BBB = 3;\n        long CCC = 3;\n       \
    \ long DDD = 3;\n        long EEE = 3;\n        long FFF = 3;\n        long GGG\
    \ = 3;\n        long HHH = 3;\n        long III = 3;\n        long JJJ = 3;\n\
    \        long KKK = 3;\n        long LLL = 3;\n        long MMM = 3;\n       \
    \ long NNN = 3;\n        long OOO = 3;\n        long PPP = 3;\n        long QQQ\
    \ = 3;\n        long RRR = 3;\n        long SSS = 3;\n        long TTT = 3;\n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprrpct5ex.java:114: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = true;\n        long b = 2;\n       \
    \ long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 1;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpplmqih33.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6fv0lobe.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7fimywuu.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 3;\n        long d = 5;\n      \
    \  long e = 7;\n        long f = 9;\n        long g = 17;\n        long h = 23;\n\
    \        long i = 29;\n        long j = 31;\n        long k = 41;\n        long\
    \ l = 49;\n        long m = 59;\n        long n = 61;\n        long o = 67;\n\
    \        long p = 71;\n        long q = 71;\n        long r = 71;\n        long\
    \ s = 71;\n        long t = 71;\n        long u = 71;\n        long v = 71;\n\
    \        long w = 71;\n        long x = 71;\n        long y = 71;\n        long\
    \ z = 71;\n        long a = 71;\n        long b = 71;\n        long c = 71;\n\
    \        long d = 71;\n        long e = 71;\n        long f = 71;\n        long\
    \ g = 71;\n        long h = 71;\n        long i = 71;\n        long j = 71;\n\
    \        long k = 71;\n        long l = 71;\n        long m = 71;\n        long\
    \ n = 71;\n        long o = 71;\n        long p = 71;\n        long q = 71;\n\
    \        long r = 71;\n        long s = 71;\n        long t = 71;\n        long\
    \ u = 71;\n        long v = 71;\n        long w = 71;\n        long x = 71;\n\
    \        long y = 71;\n        long z = 71;\n        long a = 71;\n        long\
    \ b = 71;\n        long c = 71;\n        long d = 71;\n        long e = 71;\n\
    \        long f = 71;\n        long g = 71;\n        long h = 71;\n        long\
    \ i = 71;\n        long j = 71;\n        long k = 71;\n        long l = 71;\n\
    \        long m = 71;\n        long n = 71;\n        long o = 71;\n        long\
    \ p = 71;\n        long q = 71;\n        long r = 71;\n        long s = 71;\n\
    \        long t = 71;\n        long u = 71;\n        long v = 71;\n        long\
    \ w = 71;\n        long x = 71;\n        long y = 71;\n        long z = 71;\n\
    \        long a = 71;\n        long b = 71;\n        long c = 71;\n        long\
    \ d = 71;\n        long e = 71;\n        long f = 71;\n        long g = 71;\n\
    \        long h = 71;\n        long i = 71;\n        long \n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwsbe_gtx.java:102: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpwsbe_gtx.java:102: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 30;\n        long d = 30;\n   \
    \     long e = 30;\n        long f = 30;\n        long g = 30;\n        long h\
    \ = 30;\n        long i = 30;\n        long j = 30;\n        long k = 30;\n  \
    \      long l = 30;\n        long m = 30;\n        long n = 30;\n        long\
    \ o = 30;\n        long p = 30;\n        long q = 30;\n        long r = 30;\n\
    \        long s = 30;\n        long t = 30;\n        long u = 30;\n        long\
    \ v = 30;\n        long w = 30;\n        long x = 30;\n        long y = 30;\n\
    \        long z = 30;\n        long A = 30;\n        long B = 30;\n        long\
    \ C = 30;\n        long D = 30;\n        long E = 30;\n        long F = 30;\n\
    \        long G = 30;\n        long H = 30;\n        long I = 30;\n        long\
    \ J = 30;\n        long K = 30;\n        long L = 30;\n        long M = 30;\n\
    \        long N = 30;\n        long O = 30;\n        long P = 30;\n        long\
    \ Q = 30;\n        long R = 30;\n        long S = 30;\n        long T = 30;\n\
    \        long U = 30;\n        long V = 30;\n        long W = 30;\n        long\
    \ X = 30;\n        long Y = 30;\n        long Z = 30;\n        long A = 30;\n\
    \        long B = 30;\n        long C = 30;\n        long D = 30;\n        long\
    \ E = 30;\n        long F = 30;\n        long G = 30;\n        long H = 30;\n\
    \        long I = 30;\n        long J = 30;\n        long K = 30;\n        long\
    \ L = 30;\n        long M = 30;\n        long N = 30;\n        long O = 30;\n\
    \        long P = 30;\n        long Q = 30;\n        long R = 30;\n        long\
    \ S = 30;\n        long T = 30;\n        long U = 30;\n        long V = 30;\n\
    \        long W = 30;\n        long X = 30;\n        long Y = 30;\n        long\
    \ Z = 30;\n        long A = 30;\n        long B = 30;\n        long C = 30;\n\
    \        long D = 30;\n        long E = 30;\n        long F = 30;\n        long\
    \ G = 30;\n        long H = 30;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdsaywp6g.java:101: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpdsaywp6g.java:101: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Ss = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long aa = 0;\n        long bb = 0;\n\
    \        long cc = 0;\n        long dd = 0;\n        long ee = 0;\n        long\
    \ ff = 0;\n        long gg = 0;\n        long hh = 0;\n        long ii = 0;\n\
    \        long jj = 0;\n        long kk = 0;\n        long ll = 0;\n        long\
    \ mm = 0;\n        long nn = 0;\n        long oo = 0;\n        long pp = 0;\n\
    \        long qq = 0;\n        long rr = 0;\n        long ss = 0;\n        long\
    \ tt = 0;\n        long uu = 0;\n        long \n    }\n    public static void\
    \ main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0wkdl0xy.java:114: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp0wkdl0xy.java:114: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ogrt146.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq_tw5ax9.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwx1yge_n.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = a;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqfgaxp50.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long b = 2;\n        long c =\
    \ 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n        long\
    \ g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n    \
    \    long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c\
    \ = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n      \
    \  long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y\
    \ = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n\
    \        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 0;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n      \
    \  long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n\
    \        long n = 1;\n        long o = 1;\n        long p = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n      \
    \  long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqxkjca9n.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpqxkjca9n.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Bb = 0;\n        long Cc = 0;\n        long\
    \ Dd = 0;\n        long Ee = 0;\n        long Ff = 0;\n        long Gg = 0;\n\
    \        long Hh = 0;\n        long Ii = 0;\n        long Jj = 0;\n        long\
    \ Kk = 0;\n        long Ll = 0;\n        long Mm = 0;\n        long Nn = 0;\n\
    \        long Oo = 0;\n        long Pp = 0;\n        long Qq = 0;\n        long\
    \ Rr = 0;\n        long Ss = 0;\n        long Tt = 0;\n        long Uu = 0;\n\
    \        long Vv = 0;\n        long Ww = 0;\n        long Xx = 0;\n        long\
    \ Yy = 0;\n        long Zz = 0;\n        long Aaa = 0;\n        long Bbb = 0;\n\
    \        long Ccc = 0;\n        long Ddd = 0;\n        long Eee = 0;\n       \
    \ long Fff = 0;\n        long Ggg = 0;\n        long Hhh = 0;\n        long Iii\
    \ = 0;\n        long Jjj = 0;\n        long Kkk = 0;\n        long Lll = 0;\n\
    \        long Mmm = 0;\n        long Nnn = 0;\n        long Ooo = 0;\n       \
    \ long Ppp = 0;\n        long Qqq = 0;\n        long Rrr = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphx5bfbux.java:111: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp85_f83wp.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp85_f83wp.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp55bx1cdy.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isMultiplyPrime = false;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long A = 1;\n        long B = 1;\n\
    \        long C = 1;\n        long D = 1;\n        long E = 1;\n        long F\
    \ = 0;\n        long G = 1;\n        long H = 1;\n        long I = 1;\n      \
    \  long J = 1;\n        long K = 1;\n        long L = 1;\n        long M = 1;\n\
    \        long N = 1;\n        long O = 1;\n        long P = 1;\n        long Q\
    \ = 1;\n        long R = 1;\n        long S = 1;\n        long T = 1;\n      \
    \  long U = 1;\n        long V = 1;\n        long W = 1;\n        long X = 1;\n\
    \        long Y = 1;\n        long Z = 1;\n        long A1 = 1;\n        long\
    \ B1 = 1;\n        long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n\
    \        long F1 = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long\
    \ I1 = 1;\n        long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n\
    \        long M1 = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long\
    \ P1 = 1;\n        long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n\
    \        long T1 = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long\
    \ W1 = 1;\n        long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n\
    \        long A2 = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long\
    \ D2 = 1;\n        long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n\
    \        long H2 = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long\
    \ K2 = 1;\n        long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n\
    \        long O2 = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long\
    \ R2 = 1;\n        long S2 = 1;\n        long T2 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgwjpix7d.java:114: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ma4dkhz.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp6ma4dkhz.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmg5edh5i.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 2;\n        long Q = 2;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long A = 2;\n        long B = 2;\n        long C = 2;\n        long D\
    \ = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n\
    \        long L = 2;\n        long M = 2;\n        long N = 2;\n        long O\
    \ = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n      \
    \  long S = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n\
    \        long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z\
    \ = 2;\n        long A = 2;\n        long B = 2;\n        long C = 2;\n      \
    \  long D = 2;\n        long E = 2;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 2;\n        long J = 2;\n        long K\
    \ = 2;\n        long L = 2;\n        long M = 2;\n        long N = 2;\n      \
    \  long O = 2;\n        long P = 2;\n        long Q = 2;\n        long R = 2;\n\
    \        long S = 2;\n        long T = 2;\n        long U = 2;\n        long V\
    \ = 2;\n        long W = 2;\n        long X = 2;\n        long Y = 2;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw1sk5qes.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpw1sk5qes.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n      \
    \  long L = 5;\n        long M = 5;\n        long N = 5;\n        long O = 5;\n\
    \        long P = 5;\n        long Q = 5;\n        long R = 5;\n        long S\
    \ = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n      \
    \  long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z = 5;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 5;\n        long J = 5;\n        long K = 5;\n\
    \        long L = 5;\n        long M = 5;\n        long N = 5;\n        long O\
    \ = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n      \
    \  long S = 5;\n        long T = 5;\n        long U = 5;\n        long V = 5;\n\
    \        long W = 5;\n        long X = 5;\n        long Y = 5;\n        long Z\
    \ = 5;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 5;\n        long J = 5;\n        long K\
    \ = 5;\n        long L = 5;\n        long M = 5;\n        long N = 5;\n      \
    \  long O = 5;\n        long P = 5;\n        long Q = 5;\n        long R = 5;\n\
    \        long S = 5;\n        long T = 5;\n        long U = 5;\n        long V\
    \ = 5;\n        long W = 5;\n        long X = 5;\n        long Y = 5;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyv2yf8ue.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpyv2yf8ue.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 3;\n        long j = 3;\n        long k = 3;\n        long l\
    \ = 3;\n        long m = 3;\n        long n = 3;\n        long o = 3;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 3;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5yv_nq1_.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 2;\n        long d = 2;\n     \
    \   long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 2;\n        long B = 2;\n        long C = 2;\n        long D = 2;\n\
    \        long E = 2;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 2;\n        long J = 2;\n        long K = 2;\n      \
    \  long L = 2;\n        long M = 2;\n        long N = 2;\n        long O = 2;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 2;\n        long S\
    \ = 2;\n        long T = 2;\n        long U = 2;\n        long V = 2;\n      \
    \  long W = 2;\n        long X = 2;\n        long Y = 2;\n        long Z = 2;\n\
    \        long AA = 2;\n        long AB = 2;\n        long AC = 2;\n        long\
    \ AD = 2;\n        long AE = 2;\n        long AF = 3;\n        long AG = 3;\n\
    \        long AH = 3;\n        long AI = 2;\n        long AJ = 2;\n        long\
    \ AK = 2;\n        long AL = 2;\n        long AM = 2;\n        long AN = 2;\n\
    \        long AO = 2;\n        long AP = 3;\n        long AQ = 3;\n        long\
    \ AR = 2;\n        long AS = 2;\n        long AT = 2;\n        long AU = 2;\n\
    \        long AV = 2;\n        long AW = 2;\n        long AX = 2;\n        long\
    \ AY = 2;\n        long AZ = 2;\n        long BA = 2;\n        long BB = 2;\n\
    \        long BC = 2;\n        long BD = 2;\n        long BE = 2;\n        long\
    \ BF = 3;\n        long BG = 3;\n        long BH = 3;\n        long BI = 2;\n\
    \        long BJ = 2;\n        long BK = 2;\n        long BL = 2;\n        long\
    \ BM = 2;\n        long BN = 2;\n        long BO = 2;\n        long BP = 3;\n\
    \        long BQ = 3;\n        long BR = 2;\n        long BS = 2;\n        long\
    \ BT = 2;\n        long BU = 2;\n        long BV = 2;\n        long BW = 2;\n\
    \        long BX\n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4qbg46fw.java:116: error: ';' expected\n        long BX\n     \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4j_7ia8i.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr3y3qm1_.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 2;\n        long q = 2;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 2;\n        long w\
    \ = 2;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = 3;\n        long B = 3;\n        long C = 3;\n        long D = 3;\n\
    \        long E = 3;\n        long F = 3;\n        long G = 3;\n        long H\
    \ = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n      \
    \  long L = 3;\n        long M = 3;\n        long N = 3;\n        long O = 3;\n\
    \        long P = 3;\n        long Q = 3;\n        long R = 3;\n        long S\
    \ = 3;\n        long T = 3;\n        long U = 3;\n        long V = 3;\n      \
    \  long W = 3;\n        long X = 3;\n        long Y = 3;\n        long Z = 3;\n\
    \        long A = 3;\n        long B = 3;\n        long C = 3;\n        long D\
    \ = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n      \
    \  long H = 3;\n        long I = 3;\n        long J = 3;\n        long K = 3;\n\
    \        long L = 3;\n        long M = 3;\n        long N = 3;\n        long O\
    \ = 3;\n        long P = 3;\n        long Q = 3;\n        long R = 3;\n      \
    \  long S = 3;\n        long T = 3;\n        long U = 3;\n        long V = 3;\n\
    \        long W = 3;\n        long X = 3;\n        long Y = 3;\n        long Z\
    \ = 3;\n        long A = 3;\n        long B = 3;\n        long C = 3;\n      \
    \  long D = 3;\n        long E = 3;\n        long F = 3;\n        long G = 3;\n\
    \        long H = 3;\n        long I = 3;\n        long J = 3;\n        long K\
    \ = 3;\n        long L = 3;\n        long M = 3;\n        long N = 3;\n      \
    \  long O = 3;\n        long P = 3;\n        long Q = 3;\n        long R = 3;\n\
    \        long S = 3;\n        long T = 3;\n        long U = 3;\n        long V\
    \ = 3;\n        long W = 3;\n        long X = 3;\n        long Y = 3;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5ldlvmd.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpi5ldlvmd.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean result = false;\n        long b = 1;\n        long c =\
    \ 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long\
    \ g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n    \
    \    long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long A = 1;\n        long B = 1;\n        long C\
    \ = 1;\n        long D = 1;\n        long E = 1;\n        long F = 1;\n      \
    \  long G = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n\
    \        long K = 1;\n        long L = 1;\n        long M = 1;\n        long N\
    \ = 1;\n        long O = 1;\n        long P = 1;\n        long Q = 1;\n      \
    \  long R = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n\
    \        long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y\
    \ = 1;\n        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n    \
    \    long AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF\
    \ = 1;\n        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n   \
    \     long AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM\
    \ = 1;\n        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n   \
    \     long AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT\
    \ = 1;\n        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n   \
    \     long AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA\
    \ = 1;\n        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n   \
    \     long BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH\
    \ = 1;\n        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n   \
    \     long BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO\
    \ = 1;\n        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n   \
    \     long BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV\
    \ = 1;\n        long BW = 1;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzak4acut.java:118: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 30;\n        long c = 2;\n        long d = 2;\n     \
    \   long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 2;\n        long j = 2;\n        long k = 2;\n        long l\
    \ = 2;\n        long m = 2;\n        long n = 2;\n        long o = 2;\n      \
    \  long p = 3;\n        long q = 3;\n        long r = 2;\n        long s = 2;\n\
    \        long t = 2;\n        long u = 2;\n        long v = 3;\n        long w\
    \ = 3;\n        long x = 2;\n        long y = 2;\n        long z = 2;\n      \
    \  long A = a;\n        long B = b;\n        long C = c * d;\n        long D =\
    \ e * f;\n        long E = g * h;\n        long F = i * j;\n        long G = k\
    \ * l;\n        long H = o * m;\n        long I = p * n;\n        long J = q *\
    \ o;\n        long K = r * p;\n        long L = s * q;\n        long M = t * r;\n\
    \        long N = u * s;\n        long O = v * t;\n        long P = w * u;\n \
    \       long Q = x * v;\n        long R * S = y * w;\n        long T = z * x;\n\
    \        long U = A * B;\n        long V = C * D;\n        long W = E * F;\n \
    \       long X = G * H;\n        long Y = I * J;\n        long Z = K * L;\n  \
    \      long AA = A * A;\n        long AB = B * B;\n        long AC = C * C;\n\
    \        long AD = D * D;\n        long AE = E * E;\n        long AF = F * F;\n\
    \        long AG = G * G;\n        long AH = H * H;\n        long AI = I * I;\n\
    \        long AJ = J * J;\n        long AK = K * K;\n        long AL = L * L;\n\
    \        long AM = M * M;\n        long AN = N * N;\n        long AO = O * O;\n\
    \        long AP = P * P;\n        long AQ = Q * Q;\n        long AR = R * R;\n\
    \        long AS = S * S;\n        long AT = T * T;\n        long AU = U * U;\n\
    \        long AV = V * V;\n        long \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7bvbxw9i.java:58: error: ';' expected\n        long R * S = y *\
    \ w;\n              ^\n/tmp/tmp7bvbxw9i.java:88: error: not a statement\n    \
    \    long \n        ^\n/tmp/tmp7bvbxw9i.java:88: error: ';' expected\n       \
    \ long \n            ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 0;\n        long c = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long Aa = 0;\n        long Ba = 0;\n        long Ca = 0;\n        long\
    \ Da = 0;\n        long Ea = 0;\n        long Fa = 0;\n        long Ga = 0;\n\
    \        long Ha = 0;\n        long Ia = 0;\n        long Ja = 0;\n        long\
    \ Ka = 0;\n        long La = 0;\n        long Ma = 0;\n        long Na = 0;\n\
    \        long Oa = 0;\n        long Pa = 0;\n        long Qa = 0;\n        long\
    \ Ra = 0;\n        long Sa = 0;\n        long Ta = 0;\n        long Ua = 0;\n\
    \        long Va = 0;\n        long Wa = 0;\n        long Xa = 0;\n        long\
    \ Ya = 0;\n        long Za = 0;\n        long Aaa = 0;\n        long Baa = 0;\n\
    \        long Caa = 0;\n        long Daa = 0;\n        long Eaa = 0;\n       \
    \ long Faa = 0;\n        long Gaa = 0;\n        long Haa = 0;\n        long Iaa\
    \ = 0;\n        long Jaa = 0;\n        long Kaa = 0;\n        long Laa = 0;\n\
    \        long Maa = 0;\n        long Naa = 0;\n        long Oaa = 0;\n       \
    \ long Paa = 0;\n        long Qaa = 0;\n        long Raa = 0;\n        long Saa\
    \ = 0;\n        long Taa\n    }\n    public static void main(String[] args) {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsgdv49su.java:112: error: ';' expected\n        long Taa\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfos2lm9p.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_9u7mn5k.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpujwi2ugi.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 0;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 0;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3xupfgfo.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3xupfgfo.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n\
    \        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H\
    \ = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n      \
    \  long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n\
    \        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S\
    \ = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n      \
    \  long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n\
    \        long AA = 0;\n        long BB = 0;\n        long CC = 0;\n        long\
    \ DD = 0;\n        long EE = 0;\n        long FF = 0;\n        long GG = 0;\n\
    \        long HH = 0;\n        long II = 0;\n        long JJ = 0;\n        long\
    \ KK = 0;\n        long LL = 0;\n        long MM = 0;\n        long NN = 0;\n\
    \        long OO = 0;\n        long PP = 0;\n        long QQ = 0;\n        long\
    \ RR = 0;\n        long SS = 0;\n        long TT = 0;\n        long UU = 0;\n\
    \        long VV = 0;\n        long WW = 0;\n        long XX = 0;\n        long\
    \ YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n\
    \        long CCC = 0;\n        long DDD = 0;\n        long EEE = 0;\n       \
    \ long FFF = 0;\n        long GGG = 0;\n        long HHH = 0;\n        long III\
    \ = 0;\n        long JJJ = 0;\n        long KKK = 0;\n        long LLL = 0;\n\
    \        long MMM = 0;\n        long NNN = 0;\n        long OOO = 0;\n       \
    \ long PPP = 0;\n        long QQQ = 0;\n        long RRR = 0;\n        long SSS\
    \ = 0;\n        long TTT = 0;\n        long UUU = 0;\n        long VVV\n    }\n\
    \    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpko_lsjup.java:114: error: ';' expected\n        long VVV\n    \
    \            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 2;\n        long d = 2;\n      \
    \  long e = 2;\n        long f = 3;\n        long g = 3;\n        long h = 3;\n\
    \        long i = 5;\n        long j = 5;\n        long k = 5;\n        long l\
    \ = 5;\n        long m = 5;\n        long n = 5;\n        long o = 5;\n      \
    \  long p = 5;\n        long q = 5;\n        long r = 5;\n        long s = 5;\n\
    \        long t = 5;\n        long u = 5;\n        long v = 5;\n        long w\
    \ = 5;\n        long x = 5;\n        long y = 5;\n        long z = 5;\n      \
    \  long A = a;\n        long B = b;\n        long C = c; \n        long D = d;\
    \ \n        long E; \n        long F = f; \n        long G; \n        long H;\
    \ \n        long I; \n        long J; \n        long K; \n        long L; \n \
    \       long M; \n        long N; \n        long O; \n        long P; \n     \
    \   long Q; \n        long R; \n        long S; \n        long T; \n        long\
    \ U; \n        long V; \n        long W; \n        long X; \n        long Y; \n\
    \        long Z; \n        long AA = A; \n        long BB = B; \n        long\
    \ CC = C; \n        long DD = D; \n        long EE; \n        long FF; \n    \
    \    long GG; \n        long HH; \n        long II; \n        long JJ; \n    \
    \    long KK; \n        long LL; \n        long MM; \n        long NN; \n    \
    \    long OO; \n        long PP; \n        long QQ; \n        long RR; \n    \
    \    long SS; \n        long TT; \n        long UU; \n        long VV; \n    \
    \    long WW; \n        long XX; \n        long YY; \n        long ZZ; \n    \
    \    long AAA = AA; \n        long BBB = BB; \n        long CCC = CC; \n     \
    \   long DDD = DD; \n        long EEE; \n        long FFF; \n        long GGG;\
    \ \n        long HHH; \n        long III; \n        long JJJ; \n        long KKK;\
    \ \n        long LLL; \n        long MMM; \n        long NNN; \n        long OOO;\
    \ \n        long PPP; \n        long QQQ; \n        long RRR; \n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplwsynnqr.java:111: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmplwsynnqr.java:111: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        boolean isPrime = true;\n        long b = 2;\n        long c =\
    \ 1;\n        long d = 1;\n        long e = 1;\n        long f = 0;\n        long\
    \ g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n    \
    \    long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long A = 1;\n        long B = 1;\n        long C\
    \ = 1;\n        long D = 1;\n        long E = 1;\n        long F = 1;\n      \
    \  long G = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n\
    \        long K = 1;\n        long L = 1;\n        long M = 1;\n        long N\
    \ = 1;\n        long O = 1;\n        long P = 1;\n        long Q = 1;\n      \
    \  long R = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n\
    \        long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y\
    \ = 1;\n        long Z = 1;\n        long A1 = 1;\n        long B1 = 1;\n    \
    \    long C1 = 1;\n        long D1 = 1;\n        long E1 = 1;\n        long F1\
    \ = 1;\n        long G1 = 1;\n        long H1 = 1;\n        long I1 = 1;\n   \
    \     long J1 = 1;\n        long K1 = 1;\n        long L1 = 1;\n        long M1\
    \ = 1;\n        long N1 = 1;\n        long O1 = 1;\n        long P1 = 1;\n   \
    \     long Q1 = 1;\n        long R1 = 1;\n        long S1 = 1;\n        long T1\
    \ = 1;\n        long U1 = 1;\n        long V1 = 1;\n        long W1 = 1;\n   \
    \     long X1 = 1;\n        long Y1 = 1;\n        long Z1 = 1;\n        long A2\
    \ = 1;\n        long B2 = 1;\n        long C2 = 1;\n        long D2 = 1;\n   \
    \     long E2 = 1;\n        long F2 = 1;\n        long G2 = 1;\n        long H2\
    \ = 1;\n        long I2 = 1;\n        long J2 = 1;\n        long K2 = 1;\n   \
    \     long L2 = 1;\n        long M2 = 1;\n        long N2 = 1;\n        long O2\
    \ = 1;\n        long P2 = 1;\n        long Q2 = 1;\n        long R2 = 1;\n   \
    \     long S2 = 1;\n        long T2 = 1;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp43nt2gem.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long \n    }\n    public static void main(String[] args) {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5dlo58tt.java:118: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp5dlo58tt.java:118: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 0;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_l3866m4.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long\
    \ AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n\
    \        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long\
    \ AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n\
    \        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long\
    \ AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n\
    \        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long\
    \ AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n\
    \        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long\
    \ BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n\
    \        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long\
    \ BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n\
    \        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long\
    \ BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW = 1;\n\
    \        long BX = 1;\n    }\n    public static void main(String[] args) {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7uzgpkd0.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that returns true if the given number\
    \ is the multiplication of 3 prime numbers\n    // and false otherwise.\n    //\
    \ Knowing that (a) is less then 100. \n    // Example:\n    // is_multiply_prime(30)\
    \ == True\n    // 30 = 2 * 3 * 5\n    public static boolean isMultiplyPrime(long\
    \ a) {\n        long b = 2;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long A = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n\
    \        long E = 1;\n        long F = 1;\n        long G = 1;\n        long H\
    \ = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n      \
    \  long L = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n\
    \        long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S\
    \ = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n      \
    \  long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n\
    \        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n        long\
    \ D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1 = 1;\n\
    \        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n        long\
    \ K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1 = 1;\n\
    \        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n        long\
    \ R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1 = 1;\n\
    \        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n        long\
    \ Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2 = 1;\n\
    \        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n        long\
    \ F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2 = 1;\n\
    \        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n        long\
    \ M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2 = 1;\n\
    \        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n        long\
    \ T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpltv24454.java:115: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError

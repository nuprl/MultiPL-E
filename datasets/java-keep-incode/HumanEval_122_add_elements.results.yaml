name: HumanEval_122_add_elements
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9z7v6wt5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz7yhsm3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8y73svi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp04zsdym3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurmng4bx.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1redzvu6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyodmo6du.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ijrp277.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return maxSum;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpib9oom2d.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7jjqgf_a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkb75pon.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpelucmfbb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ma_8_ru.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3cq5a0_i.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n\
    \        return sum + sum2;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplg67hc81.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71bqmsjw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84 = 0;\n        long sum85 = 0;\n        long sum86 = 0;\n   \
    \     \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprs1hlkep.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocylzy1o.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixfzhwpk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3k5hxse0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgqvgtr82.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8w9wv7cn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp188cj17c.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxa5jwgaq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long firstK = arr.get(0);\n \
    \       long secondK = arr.get(1);\n        long thirdK = arr.get(2);\n      \
    \  long fourthK = arr.get(3);\n        long fifthK = arr.get(4);\n        long\
    \ sixthK = arr.get(5);\n        long seventhK = arr.get(6);\n        long eighthK\
    \ = arr.get(7);\n        long ninthK = arr.get(8);\n        long tenthK = arr.get(9);\n\
    \        sum = firstK + secondK + thirdK + fourthK + fifthK + sixthK + seventhK\
    \ + eighthK + ninthK + tenthK;\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 9 out of bounds for length 9\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.addElements(tmpr34q80l2.java:28)\n\tat Problem.main(tmpr34q80l2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzo8fl4l.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9urwiuv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprrgqne2d.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt12tu94t.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54qdtw1k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoksa7yhd.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmple267aj9.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5q76_phk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplsjrnv1w.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ggbpykz.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++) {\n    \
    \        sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnnslzi3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if((i+1)<arr.size() && arr.get(i+1)<10)\
    \ {\n                sum += arr.get(i+1);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6me8l_5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpime1_ihx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5ugjw7m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpus_jw7qj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l6ri4tz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84 = 0;\n        long sum85 = 0;\n        long sum86 = 0;\n   \
    \     \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqckhkt9d.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum2 +=\
    \ arr.get(i);\n        }\n        for(int i = k; i < arr.size(); i++) {\n    \
    \        sum3 += arr.get(i);\n        }\n        return sum + sum2 + sum3;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo7uuvgeg.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n/tmp/tmpo7uuvgeg.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n        for(int i = k; i < arr.size(); i++) {\n\
    \                    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        long\
    \ maxSumIndex = 0;\n        long maxSumDigit = 0;\n        for(int i = 0; i <\
    \ k; i++) {\n            sum += arr.get(i);\n        }\n        for(int i = 0;\
    \ i < k; i++) {\n            long digit = arr.get(i) % 10;\n            sum +=\
    \ digit;\n            if(maxSumDigit < digit) {\n                maxSumDigit =\
    \ digit;\n                maxSumIndex = i;\n                maxSum = sum;\n  \
    \          }\n        }\n        return maxSum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev50b9yk.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9_htwr7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        long\
    \ maxSumIndex = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n            if(sum > maxSum) {\n                maxSum = sum;\n\
    \                maxSumIndex = i;\n            }\n        }\n        return maxSum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwodyjok.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmtagr4bb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size();\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqn4hkain.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2_rf6wj4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< k; i++){\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcddhdbk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< k; i++){\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir1_z6gr.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmyyghml.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long firstK = arr.get(0);\n \
    \       long secondK = arr.get(1);\n        long thirdK = arr.get(2);\n      \
    \  long fourthK = arr.get(3);\n        sum += firstK;\n        sum += secondK;\n\
    \        sum += thirdK;\n        sum += fourthK;\n        sum -= firstK * 10000;\n\
    \        sum -= secondK * 10000;\n        sum -= thirdK * 10000;\n        sum\
    \ -= fourthK * 10000;\n        sum -= firstK * 1000;\n        sum -= secondK *\
    \ 1000;\n        sum -= thirdK * 1000;\n        sum -= fourthK * 1000;\n     \
    \   sum -= firstK * 100;\n        sum -= secondK * 100;\n        sum -= thirdK\
    \ * 100;\n        sum -= fourthK * 100;\n        sum -= firstK * 10;\n       \
    \ sum -= secondK * 10;\n        sum -= thirdK * 10;\n        sum -= fourthK *\
    \ 10;\n        sum -= firstK;\n        sum -= secondK;\n        sum -= thirdK;\n\
    \        sum -= fourthK;\n        sum -= firstK * 10000;\n        sum -= secondK\
    \ * 10000;\n        sum -= thirdK * 10000;\n        sum -= fourthK * 10000;\n\
    \        sum -= firstK * 1000;\n        sum -= secondK * 1000;\n        sum -=\
    \ thirdK * 1000;\n        sum -= fourthK * 1000;\n        sum -= firstK * 100;\n\
    \        sum -= secondK * 100;\n        sum -= thirdK * 100;\n        sum -= fourthK\
    \ * 100;\n        sum -= firstK * 10;\n        sum -= secondK * 10;\n        sum\
    \ -= thirdK * 10;\n        sum -= fourthK * 10;\n        sum -= firstK;\n    \
    \    sum -= secondK;\n        sum -= thirdK;\n        sum -= fourthK;\n      \
    \  sum -= firstK * 10000;\n        sum -= secondK * 10000;\n        sum -= thirdK\
    \ * 10000;\n        sum -= fourthK * 10000;\n        sum -= firstK * 1000;\n \
    \       sum -= secondK * 1000;\n        sum -= thirdK * 1000;\n        sum -=\
    \ fourthK * 1000;\n        sum -= firstK * 100;\n        sum -= secondK * 100;\n\
    \        sum -= \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkcx40gbt.java:78: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyboc8wxr.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0tjk_1qf.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnw19azrd.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsudttwb4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i) - Math.pow(10,\
    \ arr.size() - i - 1);\n        }\n        maxSum = sum;\n        return maxSum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfal2ne87.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdrh5xpg.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfndt1hph.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd9s180zb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqsvcwh3v.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp48a1mukz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ko5ehxw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9tm4sme5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppavdaioa.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogbi5qo7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps12x6wdc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - Math.pow(10, arr.size() - i - 1);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaiaejdcs.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i< arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   for(int i = 0; i< arr.size(); i++) {\n            sum += arr.get(i);\n   \
    \         if(sum > maxSum) {\n                maxSum = sum;\n            }\n \
    \       }\n        return maxSum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9diwkql.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2iu9vhyp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjz5i7b53.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbqrftwkt.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++) {\n    \
    \        sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpci7lh1ou.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - arr.get(i-1);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz6gmu305.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n\
    \        return sum + sum2;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmbhcfin3.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy1kzuakk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4oy4pjz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd62bmj1c.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21baajiv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6k1aufs.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_dy1jiln.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4002_hn.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovg2q28f.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_1k_u0g.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcysnm8kf.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdt17qj8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjsbauuh0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - Math.pow(10, arr.size() - i - 1);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy89js_au.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1whrk469.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpys18tpxj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9jymoxr.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - arr.get(i-1);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj8xg841m.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8mwhbdy.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5gq7rt_c.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n\
    \        return sum + sum2;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxzkstz9r.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsb2lgj6v.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcc6o26m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wgsu04k.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5yqu_x6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1vsnik4k.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22goyuth.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpye5qxpy0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1o2wluam.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sumOfTwoDigits = 0;\n  \
    \      for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n\
    \        for(int i = 0; i < k; i++) {\n            sumOfTwoDigits += arr.get(i);\n\
    \        }\n        return sum + sumOfTwoDigits;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmw3cwyrl.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i) - Math.pow(10,\
    \ arr.size() - i - 1);\n        }\n        maxSum = sum;\n        return maxSum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8nv5waju.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqy3wziz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1yyc89y.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sumOfTwoDigits = 0;\n  \
    \      for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n\
    \        for(int i = k; i < arr.size(); i++) {\n            sumOfTwoDigits +=\
    \ arr.get(i);\n        }\n        return sum + sumOfTwoDigits;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph25uhr_v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            maxSum\
    \ = Math.max(maxSum, sum);\n        }\n        return maxSum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn8m01po_.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9sa5qyv7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++) {\n    \
    \        sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nzm7c5o.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7uydg29.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i) - Math.pow(10,\
    \ arr.size() - i - 1);\n        }\n        maxSum = Math.max(maxSum, sum);\n \
    \       return maxSum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmputusmw4w.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3n4i2_n.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluvruthf.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6k7c0e5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4e2ltwb7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jp9cyv6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01aow6qw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppfes6siy.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< k; i++){\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl9rl51ez.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum >= 10) {\n      \
    \          sum += arr.get(i-k);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3uu6sux1.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                sum += arr.get(i-k);\n                   \
    \             ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejgq4p8c.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0p4ndvic.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno46cznc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg5s8wvss.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdmwdiiyx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_xbsy_g.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry5hcpi5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpelspv6dl.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6s9k321.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hqoyqd5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wqemhh5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwrtol0tx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i) - Math.pow(10,\
    \ arr.size() - i - 1);\n        }\n        maxSum = Math.max(sum, maxSum);\n \
    \       return maxSum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgy0h49zn.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zheam3t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_8j3y2i.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ax8z6yc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum >= 10) {\n      \
    \          sum -= 10;\n            }\n            if(sum > k) {\n            \
    \    sum -= k;\n            }\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpggzmphqt.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwuyuuei.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrzbtggo.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeweh6nl.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo8mf12p.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84 = 0;\n        long sum85 = 0;\n        long sum86 = 0;\n   \
    \     \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdlx7jdoi.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3204vdne.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfr_ip84.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugeizmp6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy3a14zxh.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0w_e1mr.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7tbd99in.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfcfjvzg_.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsrb9zec.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptlodu7q_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - arr.get(i - k);\n        }\n       \
    \ return sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp48igh9kd.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n/tmp/tmp48igh9kd.java:23: error: incompatible types: possible lossy\
    \ conversion from long to int\n            sum += arr.get(i) - arr.get(i - k);\n\
    \                                          ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3ybwr7r.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(i<k) {\n            \
    \    sum += arr.get(i+1);\n            }\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcftco1fg.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9li7lkj2.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i) - arr.get(i-1);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkczgaav2.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeyr6nw1z.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnsj1mx39.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzv82nyt.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ddxcl_s.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qs16edg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4c4_wmgy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i<arr.size(); i++) {\n            long currentSum = 0;\n            for(int\
    \ j = 0; j<k; j++) {\n                currentSum += arr.get(i-j);\n          \
    \  }\n            sum += currentSum;\n            if(currentSum > maxSum) {\n\
    \                maxSum = currentSum;\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 9\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.addElements(tmp2buviavq.java:23)\n\tat Problem.main(tmp2buviavq.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9eljv_bk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zwo26ft.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2sltkzi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv5vmd2g.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvowdadi6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43c2ew1q.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24x78uzi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm11yofou.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if((i+1)<arr.size() && arr.get(i+1)<10)\
    \ {\n                sum += arr.get(i+1);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7dh4q2x_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3lxgxtt3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdmd_65w.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp248hgvzu.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuk5n5vrx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n\
    \        return sum + sum2;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp41lx6sct.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqp9x6zq8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6zw9wvb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0tumpo4i.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84 = 0;\n        long sum85 = 0;\n        long sum86 = 0;\n   \
    \     \n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp7b4mcd1.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++){\n \
    \           sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96u03s1m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1rmkhn7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long sum2 = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n            sum2 += arr.get(i);\n\
    \        }\n        return sum + sum2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpevxq1vpb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw5ptzcvq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmwvl0vk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qbu7zt4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurf255f6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< k; i++){\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwowvz6q_.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21vymu9b.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph68o1m1m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i<k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4eu69qj3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i=0;i<k;i++){\n     \
    \       sum += arr.get(i);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0ms4p64.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkpjr9l5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i< arr.size()-k;\
    \ i++){\n            sum += arr.get(i);\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxuytcxo9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return maxSum;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7binv_a0.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array of integers arr and an integer\
    \ k, return\n    // the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n    // Output: 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <=\
    \ len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n    public static long addElements(ArrayList<Long>\
    \ arr, long k) {\n        long sum = 0;\n        for(int i = 0; i < k; i++) {\n\
    \            sum += arr.get(i);\n        }\n        return sum;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps7ltq9hz.java:27)\n"
  exit_code: 1
  status: Exception

name: HumanEval_130_tri
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Everyone knows Fibonacci sequence, it was studied deeply\
  \ by mathematicians in \n    // the last couple centuries. However, what people\
  \ don't know is Tribonacci sequence.\n    // Tribonacci sequence is defined by the\
  \ recurrence:\n    // tri(1) = 3\n    // tri(n) = 1 + n / 2, if n is even.\n   \
  \ // tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    // For example:\n\
  \    // tri(2) = 1 + (2 / 2) = 2\n    // tri(4) = 3\n    // tri(3) = tri(2) + tri(1)\
  \ + tri(4)\n    // = 2 + 3 + 3 = 8 \n    // You are given a non-negative integer\
  \ number n, you have to a return a list of the \n    // first n + 1 numbers of the\
  \ Tribonacci sequence.\n    // Examples:\n    // tri(3) = [1, 3, 2, 8]\n    public\
  \ static ArrayList<Long> tri(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(tri((3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l)))));\n \
  \   assert(tri((4l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l)))));\n    assert(tri((5l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l)))));\n    assert(tri((6l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l,\
  \ (long)15l, (long)4l)))));\n    assert(tri((7l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l)))));\n\
  \    assert(tri((8l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l)))));\n\
  \    assert(tri((9l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l)))));\n\
  \    assert(tri((20l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l,\
  \ (long)6l, (long)48l, (long)7l, (long)63l, (long)8l, (long)80l, (long)9l, (long)99l,\
  \ (long)10l, (long)120l, (long)11l)))));\n    assert(tri((0l)).equals((new ArrayList<Long>(Arrays.asList((long)1l)))));\n\
  \    assert(tri((1l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 1) {\n            result.add(1);\n            return result;\n        }\n\
    \        if (n == 2) {\n            result.add(3);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        ArrayList<Long> fourth = new ArrayList<>();\n        ArrayList<Long>\
    \ fifth = new ArrayList<>();\n        ArrayList<Long> sixth = new ArrayList<>();\n\
    \        ArrayList<Long> seventh = new ArrayList<>();\n        ArrayList<Long>\
    \ eighth = new ArrayList<>();\n        ArrayList<Long> ninth = new ArrayList<>();\n\
    \        ArrayList<Long> tenth = new ArrayList<>();\n        ArrayList<Long> eleventh\
    \ = new ArrayList<>();\n        ArrayList<Long> twelfth = new ArrayList<>();\n\
    \        ArrayList<Long> thirteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ fourteenth = new ArrayList<>();\n        ArrayList<Long> fifteenth = new ArrayList<>();\n\
    \        ArrayList<Long> sixteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ seventeenth = new ArrayList<>();\n        ArrayList<Long> eighteenth = new ArrayList<>();\n\
    \        ArrayList<Long> nineteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentieth = new ArrayList<>();\n        ArrayList<Long> twentyfirst = new ArrayList<>();\n\
    \        ArrayList<Long> twentysecond = new ArrayList<>();\n        ArrayList<Long>\
    \ twentythird = new ArrayList<>();\n        ArrayList<Long> twentyfourth = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyfifth = new ArrayList<>();\n \
    \       ArrayList<Long> twentysixth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentyseventh = new ArrayList<>();\n        ArrayList<Long> twentyeighth = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyninth = new ArrayList<>();\n \
    \       ArrayList<Long> thirtieth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyfirst = new ArrayList<>();\n        ArrayList<Long> thirtysecond = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtythird = new ArrayList<>();\n \
    \       ArrayList<Long> thirtyfourth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyfifth = new ArrayList<>();\n        ArrayList<Long> thirtysixth = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtyseventh = new ArrayList<>();\n\
    \        ArrayList<Long> thirtyeighth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyninth = new ArrayList<>();\n        ArrayList<Long> fortieth = new ArrayList<>();\n\
    \        ArrayList<Long> fortyfirst = new ArrayList<>();\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 1;\n        long d = 1;\n        long temp;\n        long temp2;\n\
    \        long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 1) {\n            result.add(1);\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            tri(n - 1, result);\n            tri(n\
    \ - 2, result);\n            result.add(tri(n - 1) + tri(n - 2));\n        } else\
    \ {\n            tri(n - 1, result);\n            tri(n - 2, result);\n      \
    \      tri(n - 3, result);\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ - 3));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3));\n     \
    \   }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n\
    \        long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (long)Math.pow(3,1);\n    \
    \    long tri2 = (long)Math.pow(3,2);\n        long tri3 = (long)Math.pow(3,3);\n\
    \        long tri4 = (long)Math.pow(3,4);\n        long tri5 = (long)Math.pow(3,5);\n\
    \        long tri6 = (long)Math.pow(3,6);\n        long tri7 = (long)Math.pow(3,7);\n\
    \        long tri8 = (long)Math.pow(3,8);\n        long tri9 = (long)Math.pow(3,9);\n\
    \        long tri10 = (long)Math.pow(3,10);\n        long tri11 = (long)Math.pow(3,11);\n\
    \        long tri12 = (long)Math.pow(3,12);\n        long tri13 = (long)Math.pow(3,13);\n\
    \        long tri14 = (long)Math.pow(3,14);\n        long tri15 = (long)Math.pow(3,15);\n\
    \        long tri16 = (long)Math.pow(3,16);\n        long tri17 = (long)Math.pow(3,17);\n\
    \        long tri18 = (long)Math.pow(3,18);\n        long tri19 = (long)Math.pow(3,19);\n\
    \        long tri20 = (long)Math.pow(3,20);\n        long tri21 = (long)Math.pow(3,21);\n\
    \        long tri22 = (long)Math.pow(3,22);\n        long tri23 = (long)Math.pow(3,23);\n\
    \        long tri24 = (long)Math.pow(3,24);\n        long tri25 = (long)Math.pow(3,25);\n\
    \        long tri26 = (long)Math.pow(3,26);\n        long tri27 = (long)Math.pow(3,27);\n\
    \        long tri28 = (long)Math.pow(3,28);\n        long tri29 = (long)Math.pow(3,29);\n\
    \        long tri30 = (long)Math.pow(3,30);\n        long tri31 = (long)Math.pow(3,31);\n\
    \        long tri32 = (long)Math.pow(3,32);\n        long tri33 = (long)Math.pow(3,33);\n\
    \        long tri34 = (long)Math.pow(3,34);\n        long tri35 = (long)Math.pow(3,35);\n\
    \        long tri36 = (long)Math.pow(3,36);\n        long tri37 = (long)Math.pow(3,37);\n\
    \        long tri38 = (long)Math.pow(3,38);\n        long tri39 = (long)Math.pow(3,39);\n\
    \        long tri40 = (long)Math.pow(3,40);\n        long tri41 = (long)Math.pow(3,41);\n\
    \        long tri42 = (long)Math.pow(3,42);\n        long tri43 = (long)Math.pow(3,43);\n\
    \        long tri44", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n\
    \        long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1);\n        second.add(1);\n\
    \        third.add(1);\n        long tri1 = third.get(0);\n        long tri2 =\
    \ first.get(0);\n        long tri3 = second.get(0) + third.get(0);\n        third.add(tri3);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(tri1);\n        third.add(tri1);\n\
    \        second.add(tri2);\n        first.add(", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n  \
    \          return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(3);\n        second.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        ArrayList<Long> a = tri(n - 1);\n\
    \        ArrayList<Long> b = tri(n - 2);\n        ArrayList<Long> c = tri(n -\
    \ 3);\n        a.addAll(b);\n        a.addAll(c);\n        result.add(a.get(0));\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(3);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n - 1));\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n - 3));\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (n / 3L);\n        long tri2\
    \ = tri1 + tri1;\n        long tri3 = tri2 + tri2;\n        long tri4 = tri3 +\
    \ tri3;\n        result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        result.add(tri4);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n / 2) + tri(n / 2 + 1) + tri(n / 2\
    \ + 2));\n        } else {\n            result.add(tri(n / 2) + tri(n / 2 + 1)\
    \ + tri(n / 2 + 2));\n            result.add(tri(n / 2 + 1) + tri(n / 2 + 2) +\
    \ tri(n / 2 + 3));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long a = tri(n - 1);\n            long b = tri(n - 2);\n            result.add(a);\n\
    \            result.add(b);\n            result.add(a+b);\n            return\
    \ result;\n        }\n        long a = tri(n - 1);\n        long b = tri(n - 2);\n\
    \        long c = tri(n - 3);\n        result.add(a);\n        result.add(b);\n\
    \        result.add(c);\n        result.add(a+b+c);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 2) {\n  \
    \          result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        ArrayList<Long> tri4 = tri(n - 4);\n        ArrayList<Long>\
    \ tri5 = tri(n - 5);\n        ArrayList<Long> tri6 = tri(n - 6);\n        ArrayList<Long>\
    \ tri7 = tri(n - 7);\n        ArrayList<Long> tri8 = tri(n - 8);\n        ArrayList<Long>\
    \ tri9 = tri(n - 9);\n        ArrayList<Long> tri10 = tri(n - 10);\n        ArrayList<Long>\
    \ tri11 = tri(n - 11);\n        ArrayList<Long> tri12 = tri(n - 12);\n       \
    \ ArrayList<Long> tri13 = tri(n - 13);\n        ArrayList<Long> tri14 = tri(n\
    \ - 14);\n        ArrayList<Long> tri15 = tri(n - 15);\n        ArrayList<Long>\
    \ tri16 = tri(n - 16);\n        ArrayList<Long> tri17 = tri(n - 17);\n       \
    \ ArrayList<Long> tri18 = tri(n - 18);\n        ArrayList<Long> tri19 = tri(n\
    \ - 19);\n        ArrayList<Long> tri20 = tri(n - 20);\n        ArrayList<Long>\
    \ tri21 = tri(n - 21);\n        ArrayList<Long> tri22 = tri(n - 22);\n       \
    \ ArrayList<Long> tri23 = tri(n - 23);\n        ArrayList<Long> tri24 = tri(n\
    \ - 24);\n        ArrayList<Long> tri25 = tri(n - 25);\n        ArrayList<Long>\
    \ tri26 = tri(n - 26);\n        ArrayList<Long> tri27 = tri(n - 27);\n       \
    \ ArrayList<Long> tri28 = tri(n - 28);\n        ArrayList<Long> tri29 = tri(n\
    \ - 29);\n        ArrayList<Long> tri30 = tri(n - 30);\n        ArrayList<Long>\
    \ tri31 = tri(n - 31);\n        ArrayList<Long> tri32 = tri(n - 32);\n       \
    \ ArrayList<Long> tri33 = tri(n - 33);\n        ArrayList<Long> tri34 = tri(n\
    \ - 34);\n        ArrayList<Long> tri35 = tri(n - 35);\n        ArrayList<Long>\
    \ tri36 = tri(n - 36);\n        ArrayList<Long> tri37 = tri(n - 37);\n       \
    \ ArrayList<Long> tri38 = tri(n - 38);\n        ArrayList<Long> tri39 = tri(n\
    \ - 39);\n        ArrayList<Long> tri40 = tri(n - 40);\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)Math.pow(3,1);\n\
    \        long tri2 = (long)Math.pow(3,2);\n        long tri3 = (long)Math.pow(3,3);\n\
    \        long tri4 = (long)Math.pow(3,4);\n        long tri5 = (long)Math.pow(3,5);\n\
    \        long tri6 = (long)Math.pow(3,6);\n        long tri7 = (long)Math.pow(3,7);\n\
    \        long tri8 = (long)Math.pow(3,8);\n        long tri9 = (long)Math.pow(3,9);\n\
    \        long tri10 = (long)Math.pow(3,10);\n        long tri11 = (long)Math.pow(3,11);\n\
    \        long tri12 = (long)Math.pow(3,12);\n        long tri13 = (long)Math.pow(3,13);\n\
    \        long tri14 = (long)Math.pow(3,14);\n        long tri15 = (long)Math.pow(3,15);\n\
    \        long tri16 = (long)Math.pow(3,16);\n        long tri17 = (long)Math.pow(3,17);\n\
    \        long tri18 = (long)Math.pow(3,18);\n        long tri19 = (long)Math.pow(3,19);\n\
    \        long tri20 = (long)Math.pow(3,20);\n        long tri21 = (long)Math.pow(3,21);\n\
    \        long tri22 = (long)Math.pow(3,22);\n        long tri23 = (long)Math.pow(3,23);\n\
    \        long tri24 = (long)Math.pow(3,24);\n        long tri25 = (long)Math.pow(3,25);\n\
    \        long tri26 = (long)Math.pow(3,26);\n        long tri27 = (long)Math.pow(3,27);\n\
    \        long tri28 = (long)Math.pow(3,28);\n        long tri29 = (long)Math.pow(3,29);\n\
    \        long tri30 = (long)Math.pow(3,30);\n        long tri31 = (long)Math.pow(3,31);\n\
    \        long tri32 = (long)Math.pow(3,32);\n        long tri33 = (long)Math.pow(3,33);\n\
    \        long tri34 = (long)Math.pow(3,34);\n        long tri35 = (long)Math.pow(3,35);\n\
    \        long tri36 = (long)Math.pow(3,36);\n        long tri37 = (long)Math.pow(3,37);\n\
    \        long tri38 = (long)Math.pow(3,38);\n        long tri39 = (long)Math.pow(3,39);\n\
    \        long tri40 = (long)Math.pow(3,40);\n        long tri41 = (long)Math.pow(3,41);\n\
    \        long tri42 = (long)Math.pow(3,42);\n        long tri43 = (long)Math.pow(3,43);\n\
    \        long tri44", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(1);\n        third.add(1);\n      \
    \  for (int i = 2; i <= n; i++) {\n            third.add(first.get(0) + second.get(0)\
    \ + third.get(0));\n            second.add(first.get(0));\n            first.add(third.get(0));\n\
    \        }\n        result.addAll(first);\n        result.addAll(second);\n  \
    \      result.addAll(third);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2));\n        }\n        else {\n         \
    \   result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n == 1) {\n            result.add(3);\n        } else {\n            long a\
    \ = tri(n - 1);\n            long b = tri(n - 2);\n            long c = tri(n\
    \ + 1);\n            result.add(a);\n            result.add(b);\n            result.add(c);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(3);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3));\n     \
    \   }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(1);\n            return result;\n        }\n\
    \        ArrayList<Long> a = tri(n - 1);\n        ArrayList<Long> b = tri(n -\
    \ 2);\n        ArrayList<Long> c = tri(n + 1);\n        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Long i : a) {\n            result.add(i);\n\
    \        }\n        for (Long i : b) {\n            result.add(i);\n        }\n\
    \        for (Long i : c) {\n            result.add(i);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n <= 2) {\n            result.add(n);\n            return result;\n       \
    \ }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(n);\n            return result;\n        }\n\
    \        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long> second\
    \ = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n \
    \       first.add(3);\n        second.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 2) {\n            result.add(n);\n            return result;\n        }\n\
    \        long tri1 = tri(n - 1);\n        long tri2 = tri(n - 2);\n        long\
    \ tri3 = tri(n - 3);\n        result.add(tri1);\n        result.add(tri2);\n \
    \       result.add(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3));\n     \
    \   }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 1) {\n            result.add(1);\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n  \
    \      result.add(tri(n - 1) + tri(n - 2));\n        return result;\n", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n    \
    \        result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 2) {\n            result.add(n);\n            return result;\n\
    \        }\n        long tri1 = tri(n - 1);\n        long tri2 = tri(n - 2);\n\
    \        long tri3 = tri(n + 1);\n        result.add(tri1);\n        result.add(tri2);\n\
    \        result.add(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(3);\n\
    \        } else {\n            long tri1 = tri(n - 1);\n            long tri2\
    \ = tri(n - 2);\n            long tri3 = tri(n + 1);\n            result.add(tri1);\n\
    \            result.add(tri2);\n            result.add(tri3);\n        }\n   \
    \     return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(3);\n        } else {\n       \
    \     long tri1 = tri(n - 1);\n            long tri2 = tri(n - 2);\n         \
    \   long tri3 = tri(n + 1);\n            result.add(tri1);\n            result.add(tri2);\n\
    \            result.add(tri3);\n        }\n        return result;\n", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n      \
    \      result.add(0L);\n            return result;\n        }\n        if (n ==\
    \ 1) {\n            result.add(1L);\n            return result;\n        }\n \
    \       if (n % 2 == 0) {\n            long a = tri(n - 1);\n            long\
    \ b = tri(n - 2);\n            long c = tri(n + 1);\n            long sum = a;\n\
    \            for (int i = 0; i < c.length; i++) {\n                sum = sum +\
    \ b[i] + c[i];\n            }\n            result.add(sum);\n        }\n     \
    \   else {\n            long a = tri(n - 1);\n            long b = tri(n - 2);\n\
    \            long c = tri(n + 1);\n            long sum = a;\n            for\
    \ (int i = 0; i < c.length; i++) {\n                sum = sum + b[i] + c[i];\n\
    \            }\n            result.add(sum);\n            sum = tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1);\n            result.add(sum);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n == 0) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n == 1) {\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(tri(n\
    \ - 1) + tri(n - 2));\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  ArrayList<Long> tri1 = tri(n - 1);\n            ArrayList<Long> tri2 = tri(n\
    \ - 2);\n            ArrayList<Long> tri3 = tri(n - 3);\n            tri1.addAll(tri2);\n\
    \            tri1.addAll(tri3);\n            result.addAll(tri1);\n        } else\
    \ {\n            ArrayList<Long> tri1 = tri(n - 1);\n            ArrayList<Long>\
    \ tri2 = tri(n - 2);\n            ArrayList<Long> tri3 = tri(n - 3);\n       \
    \     tri2.addAll(tri1);\n            tri2.addAll(tri3);\n            result.addAll(tri2);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n -\
    \ 4));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  ArrayList<Long> left = tri(n - 1);\n            ArrayList<Long> right = tri(n\
    \ - 2);\n            for (long i : left) {\n                result.add(i);\n \
    \           }\n            for (long j : right) {\n                result.add(j);\n\
    \            }\n            result.add(1L);\n        } else {\n            ArrayList<Long>\
    \ left = tri(n - 1);\n            ArrayList<Long> right = tri(n - 2);\n      \
    \      for (long i : left) {\n                result.add(i);\n            }\n\
    \            for (long j : right) {\n                result.add(j);\n        \
    \    }\n            result.add(1L);\n            result.add(1L);\n        }\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(2);\n        third.add(3);\n      \
    \  if (n % 2 == 0) {\n            third.add(tri(n - 1) + tri(n - 2) + tri(n +\
    \ 1));\n        }\n        else {\n            third.add(tri(n - 1) + tri(n -\
    \ 2));\n        }\n        result.addAll(first);\n        result.addAll(second);\n\
    \        result.addAll(third);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long tri1 = tri(n - 1);\n            long tri2 = tri(n - 2);\n            result.add(tri1\
    \ + tri2);\n        } else {\n            long tri1 = tri(n - 1);\n          \
    \  long tri2 = tri(n - 2);\n            result.add(tri1 + tri2 + tri1);\n    \
    \    }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri = 1;\n        long tri2 = 1;\n        long tri3 = 1;\n     \
    \   long tri4 = 1;\n        long tri5 = tri3;\n        long tri6 = tri4;\n   \
    \     long tri7 = tri5;\n        long tri8 = tri6;\n        long tri9 = tri7;\n\
    \        long tri10 = tri8;\n        long tri11 = tri9;\n        long tri12 =\
    \ tri10;\n        long tri13 = tri11;\n        long tri14 = tri12;\n        long\
    \ tri15 = tri13;\n        long tri16 = tri14;\n        long tri17 = tri15;\n \
    \       long tri18 = tri16;\n        long tri19 = tri17;\n        long tri20 =\
    \ tri18;\n        long tri21 = tri19;\n        long tri22 = tri20;\n        long\
    \ tri23 = tri21;\n        long tri24 = tri22;\n        long tri25 = tri23;\n \
    \       long tri26 = tri24;\n        long tri27 = tri25;\n        long tri28 =\
    \ tri26;\n        long tri29 = tri27;\n        long tri30 = tri28;\n        long\
    \ tri31 = tri29;\n        long tri32 = tri30;\n        long tri33 = tri31;\n \
    \       long tri34 = tri32;\n        long tri35 = tri33;\n        long tri36 =\
    \ tri34;\n        long tri37 = tri35;\n        long tri38 = tri36;\n        long\
    \ tri39 = tri37;\n        long tri40 = tri38;\n        long tri41 = tri39;\n \
    \       long tri42 = tri40;\n        long tri43 = tri41;\n        long tri44 =\
    \ tri42;\n        long tri45 = tri43;\n        long tri46 = tri44;\n        long\
    \ tri47 = tri45;\n        long tri48 = tri46;\n        long tri49 = tri47;\n \
    \       long tri50 = tri48;\n        long tri51 = tri49;\n        long tri52 =\
    \ tri50;\n        long tri53 = tri51;\n        long tri54 = tri52;\n        long\
    \ tri55 = tri53;\n        long tri56 = tri54;\n        long tri57 = tri55;\n \
    \       long tri58 = tri56;\n        long tri59 = tri57;\n        long tri60 =\
    \ tri58;\n        ", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            long a = tri(n -\
    \ 1L);\n            long b = tri(n - 2L);\n            long c = tri(n + 1L);\n\
    \            result.add(a);\n            result.add(b);\n            result.add(c);\n\
    \            return result;\n        }\n        long a = tri(n - 1L);\n      \
    \  long b = tri(n - 2L);\n        long c = tri(n + 1L);\n        result.add(a);\n\
    \        result.add(b);\n        result.add(c);\n        result.add(a + b + c);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(1);\n        third.add(1);\n      \
    \  if (n % 2 == 0) {\n            third.add(1);\n        }\n        for (int i\
    \ = 2; i <= n; i++) {\n            third.add(first.get(0) + second.get(0) + third.get(0));\n\
    \            second.add(first.get(0) + second.get(0) + third.get(0));\n      \
    \      first.add(first.get(0) + second.get(0) + third.get(0));\n        }\n  \
    \      result.addAll(first);\n        result.addAll(third);\n        result.addAll(second);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(1);\n        third.add(1);\n      \
    \  long tri1 = first.get(0);\n        long tri2 = second.get(0) + third.get(0)\
    \ + first.get(1);\n        long tri3 = third.get(0) + second.get(0) + third.get(1)\
    \ + first.get(1);\n        long tri4 = third.get(0) + third.get(1) + first.get(1);\n\
    \        long tri5 = third.get(0) + third.get(1) + second.get(0) + first.get(1);\n\
    \        long tri6 = third.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + first.get(1);\n        long tri7 = third.get(0) + third.get(1) + second.get(0)\
    \ + third.get(1) + second.get(0) + first.get(1);\n        long tri8 = third.get(0)\
    \ + third.get(1) + second.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + first.get(1);\n        long tri9 = third.get(0) + third.get(1) + second.get(0)\
    \ + third.get(1) + second.get(0) + third.get(1) + second.get(0) + first.get(1);\n\
    \        long tri10 = third.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + second.get(0) + third.get(1) + second.get(0) + third.get(1) + first.get(1);\n\
    \        long tri11 = third.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + second.get(0) + third.get(1) + second.get(0) + third.get(1) + third.get(0)\
    \ + first.get(1);\n        long tri12 = third.get(0) + third.get(1) + second.get(0)\
    \ + third.get(1) + second.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + third.get(0) + second.get(0) + first.get(1);\n        long tri13 = third.get(0)\
    \ + third.get(1) + second.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + second.get(0) + third.get(1) + third.get(0) + second.get(0) + third.get(1)\
    \ + first.get(1);\n        long tri14 = third.get(0) + third.get(1) + second.get(0)\
    \ + third.get(1) + second.get(0) + third.get(1) + second.get(0) + third.get(1)\
    \ + third.get(0) + second.get(0) + third.get(1) + second.get(0) + first.get(1);\n\
    \        long tri", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n\
    \        }\n        result.add(tri(n - 1) + tri(n - 2));\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ == 2) {\n            result.add(3);\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            ArrayList<Long> first = new ArrayList<>();\n\
    \            ArrayList<Long> second = new ArrayList<>();\n            first.add(1);\n\
    \            second.add(1);\n            second.add(3);\n            second.add(3);\n\
    \            second.add(8);\n            ArrayList<Long> third = new ArrayList<>();\n\
    \            third.add(first);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);\n\
    \            third.add(second);\n            third.add(second);\n            third.add(second);",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(3);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n / 2) + tri(n / 2 + 1) + tri(n / 2\
    \ + 2));\n        } else {\n            result.add(tri(n / 2) + tri(n / 2 + 1)\
    \ + tri(n / 2 + 2));\n            result.add(tri(n / 2 + 1) + tri(n / 2 + 2) +\
    \ tri(n / 2 + 3));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  ArrayList<Long> left = tri(n - 1);\n            ArrayList<Long> right = tri(n\
    \ - 2);\n            ArrayList<Long> result = new ArrayList<>();\n           \
    \ for (long i = 0; i < left.size(); i++) {\n                result.add(left[i]\
    \ + right[i]);\n            }\n            return result;\n        } else {\n\
    \            ArrayList<Long> left = tri(n - 1);\n            ArrayList<Long> right\
    \ = tri(n - 2);\n            ArrayList<Long> result = new ArrayList<>();\n   \
    \         for (long i = 0; i < left.size(); i++) {\n                result.add(left[i]\
    \ + right[i]);\n            }\n            return result;\n        }\n", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n   \
    \         result.add(0L);\n            return result;\n        }\n        if (n\
    \ == 1) {\n            result.add(1L);\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            ArrayList<Long> tri1 = tri(n - 1);\n \
    \           ArrayList<Long> tri2 = tri(n - 2);\n            ArrayList<Long> tri3\
    \ = tri(n - 3);\n            result.addAll(tri1);\n            result.addAll(tri2);\n\
    \            result.addAll(tri3);\n            return result;\n        }\n   \
    \     ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n\
    \ - 2);\n        result.addAll(tri1);\n        result.addAll(tri2);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n <= 1) {\n            result.add(n);\n            return result;\n       \
    \ }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long> tri2\
    \ = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n            return result;\n        }\n        result.add(tri(n\
    \ - 1) + tri(n - 2));\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            result.add(1L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n\
    \            return result;\n        }\n        ArrayList<Long> left = tri(n -\
    \ 1);\n        ArrayList<Long> right = tri(n - 2);\n        ArrayList<Long> middle\
    \ = new ArrayList<>();\n        middle.add(left.get(left.size() - 1) + right.get(right.size()\
    \ - 1));\n        middle.add(left.get(left.size() - 2) + right.get(right.size()\
    \ - 2));\n        result.add(middle.get(middle.size() - 1));\n        result.add(middle.get(middle.size()\
    \ - 2));\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ tri1 = tri(n - 1);\n        long tri2 = tri(n - 2);\n        long tri3 = tri(n\
    \ - 3);\n        result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            result.add(1L);\n            return result;\n        }\n        if\
    \ (n > 0) {\n            ArrayList<Long> left = new ArrayList<>();\n         \
    \   left.add(0L);\n            left.add(1L);\n            ArrayList<Long> right\
    \ = new ArrayList<>();\n            right.add(1L);\n            right.add(2L);\n\
    \            ArrayList<Long> result = new ArrayList<>();\n            result.add(0L);\n\
    \            result.add(1L);\n            while (left.size() < n) {\n        \
    \        result.add(left.get(left.size() - 1) + right.get(right.size() - 1));\n\
    \                left.add(right.get(right.size() - 1));\n                right.add(left.get(left.size()\
    \ - 1));\n            }\n            return result;\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n <= 1) {\n            result.add(1);\n            return result;\n       \
    \ }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long> tri2\
    \ = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n            return result;\n        }\n        result.add(tri(n\
    \ - 1) + tri(n - 2));\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(3);\n        second.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long tri1 = (long)Math.pow(3,1);\n        long\
    \ tri2 = (long)Math.pow(3,2);\n        long tri3 = (long)Math.pow(3,3);\n    \
    \    long tri4 = (long)Math.pow(3,4);\n        long tri5 = (long)Math.pow(3,5);\n\
    \        long tri6 = (long)Math.pow(3,6);\n        long tri7 = (long)Math.pow(3,7);\n\
    \        long tri8 = (long)Math.pow(3,8);\n        long tri9 = (long)Math.pow(3,9);\n\
    \        long tri10 = (long)Math.pow(3,10);\n        long tri11 = (long)Math.pow(3,11);\n\
    \        long tri12 = (long)Math.pow(3,12);\n        long tri13 = (long)Math.pow(3,13);\n\
    \        long tri14 = (long)Math.pow(3,14);\n        long tri15 = (long)Math.pow(3,15);\n\
    \        long tri16 = (long)Math.pow(3,16);\n        long tri17 = (long)Math.pow(3,17);\n\
    \        long tri18 = (long)Math.pow(3,18);\n        long tri19 = (long)Math.pow(3,19);\n\
    \        long tri20 = (long)Math.pow(3,20);\n        long tri21 = (long)Math.pow(3,21);\n\
    \        long tri22 = (long)Math.pow(3,22);\n        long tri23 = (long)Math.pow(3,23);\n\
    \        long tri24 = (long)Math.pow(3,24);\n        long tri25 = (long)Math.pow(3,25);\n\
    \        long tri26 = (long)Math.pow(3,26);\n        long tri27 = (long)Math.pow(3,27);\n\
    \        long tri28 = (long)Math.pow(3,28);\n        long tri29 = (long)Math.pow(3,29);\n\
    \        long tri30 = (long)Math.pow(3,30);\n        long tri31 = (long)Math.pow(3,31);\n\
    \        long tri32 = (long)Math.pow(3,32);\n        long tri33 = (long)Math.pow(3,33);\n\
    \        long tri34 = (long)Math.pow(3,34);\n        long tri35 = (long)Math.pow(3,35);\n\
    \        long tri36 = (long)Math.pow(3,36);\n        long tri37 = (long)Math.pow(3,37);\n\
    \        long tri38 = (long)Math.pow(3,38);\n        long tri39 = (long)Math.pow(3,39);\n\
    \        long tri40 = (long)Math.pow(3,40);\n        long tri41 = (long)Math.pow(3,41);\n\
    \        long tri42 = (long)Math.pow(3,42);\n        long tri43 = (long)Math.pow(3,43);\n\
    \        long tri44", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long a = 1;\n        long b = 2;\n        long c = 3;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 2;\n        long c = 3;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 2;\n        long c = 3;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = 1;\n        long b = 2;\n        long c\
    \ = 3;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n      \
    \  long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 1;\n        long temp;\n        long temp2;\n        long temp3;\n       \
    \ long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n        long temp84;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(0L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 1;\n        long d = 1;\n        long sum = 0;\n        long temp;\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        while (n > 0) {\n            temp = a + b + c + d;\n     \
    \       a = b;\n            b = c;\n            c = d;\n            d = temp;\n\
    \            sum += temp;\n            n -= 1;\n        }\n        result.add(sum);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n -\
    \ 4));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n -\
    \ 4));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1);\n        second.add(2);\n\
    \        third.add(3);\n        third.add(4);\n        third.add(5);\n       \
    \ third.add(6);\n        third.add(7);\n        third.add(8);\n        third.add(9);\n\
    \        third.add(10);\n        third.add(11);\n        third.add(12);\n    \
    \    third.add(13);\n        third.add(14);\n        third.add(15);\n        third.add(16);\n\
    \        third.add(17);\n        third.add(18);\n        third.add(19);\n    \
    \    third.add(20);\n        third.add(21);\n        third.add(22);\n        third.add(23);\n\
    \        third.add(24);\n        third.add(25);\n        third.add(26);\n    \
    \    third.add(27);\n        third.add(28);\n        third.add(29);\n        third.add(30);\n\
    \        third.add(31);\n        third.add(32);\n        third.add(33);\n    \
    \    third.add(34);\n        third.add(35);\n        third.add(36);\n        third.add(37);\n\
    \        third.add(38);\n        third.add(39);\n        third.add(40);\n    \
    \    third.add(41);\n        third.add(42);\n        third.add(43);\n        third.add(44);\n\
    \        third.add(45);\n        third.add(46);\n        third.add(47);\n    \
    \    third.add(48);\n        third.add(49);\n        third.add(50);\n        third.add(51);\n\
    \        third.add(52);\n        third.add(53);\n        third.add(54);\n    \
    \    third.add(55);\n        third.add(56);\n        third.add(57);\n        third.add(58);\n\
    \        third.add(59);\n        third.add(60);\n        third.add(61);\n    \
    \    third.add(62);\n        third.add(63);\n        third.add(64);\n        third.add(65);\n\
    \        third.add(66);\n        third.add(67);\n        third.add(68);\n    \
    \    third.add(69);", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(2L);\n\
    \            result.add(3L);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n - 3));\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 1) {\n            result.add(3);\n  \
    \          return result;\n        }\n        if (n % 2 == 0) {\n            long\
    \ a = tri(n - 1);\n            long b = tri(n - 2);\n            long c = tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1);\n            result.add(a);\n            result.add(b);\n\
    \            result.add(c);\n        } else {\n            long a = tri(n - 1);\n\
    \            long b = tri(n - 2);\n            long c = tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1);\n            result.add(a);\n            result.add(b);\n    \
    \        result.add(c);\n            result.add(tri(n + 2));\n        }\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(2);\n        third.add(3);\n      \
    \  ArrayList<Long> fourth = new ArrayList<>();\n        fourth.add(4);\n     \
    \   ArrayList<Long> fifth = new ArrayList<>();\n        fifth.add(5);\n      \
    \  ArrayList<Long> sixth = new ArrayList<>();\n        sixth.add(6);\n       \
    \ ArrayList<Long> seventh = new ArrayList<>();\n        seventh.add(7);\n    \
    \    ArrayList<Long> eighth = new ArrayList<>();\n        eighth.add(8);\n   \
    \     ArrayList<Long> ninth = new ArrayList<>();\n        ninth.add(9);\n    \
    \    ArrayList<Long> tenth = new ArrayList<>();\n        tenth.add(10);\n    \
    \    ArrayList<Long> eleventh = new ArrayList<>();\n        eleventh.add(11);\n\
    \        ArrayList<Long> twelfth = new ArrayList<>();\n        twelfth.add(12);\n\
    \        ArrayList<Long> thirteenth = new ArrayList<>();\n        thirteenth.add(13);\n\
    \        ArrayList<Long> fourteenth = new ArrayList<>();\n        fourteenth.add(14);\n\
    \        ArrayList<Long> fifteenth = new ArrayList<>();\n        fifteenth.add(15);\n\
    \        ArrayList<Long> sixteenth = new ArrayList<>();\n        sixteenth.add(16);\n\
    \        ArrayList<Long> seventeenth = new ArrayList<>();\n        seventeenth.add(17);\n\
    \        ArrayList<Long> eighteenth = new ArrayList<>();\n        eighteenth.add(18);\n\
    \        ArrayList<Long> nineteenth = new ArrayList<>();\n        nineteenth.add(19);\n\
    \        ArrayList<Long> twentieth = new ArrayList<>();\n        twentieth.add(20);\n\
    \        ArrayList<Long> twentyfirst = new ArrayList<>();\n        twentyfirst.add(21);\n\
    \        ArrayList<Long> twentysecond = new ArrayList<>();\n        twentysecond.add(22);\n\
    \        ArrayList<Long> twentythird = new ArrayList<>();\n        twentythird.add(23);\n\
    \        ArrayList<Long> twentyfourth = new ArrayList<>();\n        twentyfourth.add(24);\n\
    \        ArrayList<Long> twentyfifth = new ArrayList<>();\n        twentyfifth.add(25);\n\
    \        ArrayList<Long> twentysixth = new ArrayList<>();\n        twentysixth.add(26);\n\
    \        ArrayList<Long> twenty", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 0) {\n            result.add(0L);\n            result.add(1L);\n        \
    \    return result;\n        }\n        if (n == 1) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(0L);\n\
    \            result.add(1L);\n            result.add(2L);\n            return\
    \ result;\n        }\n        ArrayList<Long> left = tri(n - 1);\n        ArrayList<Long>\
    \ right = tri(n - 2);\n        ArrayList<Long> sum = left.stream().map(x -> x\
    \ + right.get(x)).collect(Collectors.toList());\n        result.add(sum.get(0));\n\
    \        result.add(sum.get(1));\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 3;\n        long d = 4;\n        long e = 5;\n        long f = 1;\n\
    \        long g = 2;\n        long h = 3;\n        long i = 1;\n        long j\
    \ = 2;\n        long k = 3;\n        long l = 1;\n        long m = 2;\n      \
    \  long n = 1;\n        long o = 3;\n        long p = 1;\n        long q = 2;\n\
    \        long r = 1;\n        long s = 3;\n        long t = 1;\n        long u\
    \ = 2;\n        long v = 3;\n        long w = 1;\n        long x = 2;\n      \
    \  long y = 1;\n        long z = 3;\n        long a = 1;\n        long b = 2;\n\
    \        long c = 3;\n        long d = 4;\n        long e = 5;\n        long f\
    \ = 1;\n        long g = 2;\n        long h = 3;\n        long i = 1;\n      \
    \  long j = 2;\n        long k = 3;\n        long l = 1;\n        long m = 2;\n\
    \        long n = 1;\n        long o = 3;\n        long p = 1;\n        long q\
    \ = 2;\n        long r = 1;\n        long s = 3;\n        long t = 1;\n      \
    \  long u = 2;\n        long v = 3;\n        long w = 1;\n        long x = 2;\n\
    \        long y = 1;\n        long z = 3;\n        long a = 1;\n        long b\
    \ = 2;\n        long c = 3;\n        long d = 4;\n        long e = 5;\n      \
    \  long f = 1;\n        long g = 2;\n        long h = 3;\n        long i = 1;\n\
    \        long j = 2;\n        long k = 3;\n        long l = 1;\n        long m\
    \ = 2;\n        long n = 1;\n        long o = 3;\n        long p = 1;\n      \
    \  long q = 2;\n        long r = 1;\n        long s = 3;\n        long t = 1;\n\
    \        long u = 2;\n        long v = 3;\n        long w = 1;\n        long x\
    \ = 2;\n        long y = 1;\n        long z = 3;\n        long a = 1;\n      \
    \  long b = 2;\n        long c = 3;\n        long d = 4;\n        long e = 5;\n\
    \        long f = 1;\n        long g = 2;\n        long h = 3;\n        long i\
    \ = 1;\n        long j = 2;\n        long k = 3;\n        long l = 1;\n      \
    \  long m = 2;\n        long n = 1;\n        long o = 3;\n        long p = 1;\n\
    \        long q = 2;\n        long r = 1;\n        long s = 3;\n        long t\
    \ = 1;\n        long u = 2;\n        long v = 3;\n        long w", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 2) {\n            result.add(n);\n\
    \            return result;\n        }\n        long a = 1;\n        long b =\
    \ 2;\n        long c = 1;\n        long d = 1;\n        long temp;\n        long\
    \ temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n    \
    \    long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long a = tri(n - 1);\n            long b = tri(n - 2);\n            long c\
    \ = tri(n + 1);\n            for (long i : a) {\n                result.add(i);\n\
    \            }\n            for (long j : b) {\n                result.add(j);\n\
    \            }\n            for (long k : c) {\n                result.add(k);\n\
    \            }\n        } else {\n            long a = tri(n - 1);\n         \
    \   long b = tri(n - 2);\n            long c = tri(n + 1);\n            for (long\
    \ i : a) {\n                result.add(i);\n            }\n            for (long\
    \ j : b) {\n                result.add(j);\n            }\n            for (long\
    \ k : c) {\n                result.add(k);\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n / 2) + tri(n\
    \ / 2) + tri(n / 2));\n        } else {\n            result.add(tri(n / 2) + tri(n\
    \ / 2) + tri(n / 2) + tri(n / 2));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(3);\n \
    \       second.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        ", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (n / 3L);\n\
    \        long tri2 = (tri1 + tri1);\n        long tri3 = (tri2 + tri2);\n    \
    \    result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(3);\n        second.add(1);\n\
    \        third.add(2);\n        if (n % 2 == 0) {\n            third.add(1);\n\
    \        }\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n - 3));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri = 1;\n        long tri2 = 1;\n\
    \        long tri3 = 1;\n        long tri4 = 1;\n        long tri5 = 1;\n    \
    \    long tri6 = 1;\n        long tri7 = 1;\n        long tri8 = 1;\n        long\
    \ tri9 = 1;\n        long tri10 = 1;\n        long tri11 = 1;\n        long tri12\
    \ = 1;\n        long tri13 = 1;\n        long tri14 = 1;\n        long tri15 =\
    \ 1;\n        long tri16 = 1;\n        long tri17 = 1;\n        long tri18 = 1;\n\
    \        long tri19 = 1;\n        long tri20 = 1;\n        long tri21 = 1;\n \
    \       long tri22 = 1;\n        long tri23 = 1;\n        long tri24 = 1;\n  \
    \      long tri25 = 1;\n        long tri26 = 1;\n        long tri27 = 1;\n   \
    \     long tri28 = 1;\n        long tri29 = 1;\n        long tri30 = 1;\n    \
    \    long tri31 = 1;\n        long tri32 = 1;\n        long tri33 = 1;\n     \
    \   long tri34 = 1;\n        long tri35 = 1;\n        long tri36 = 1;\n      \
    \  long tri37 = 1;\n        long tri38 = 1;\n        long tri39 = 1;\n       \
    \ long tri40 = 1;\n        long tri41 = 1;\n        long tri42 = 1;\n        long\
    \ tri43 = 1;\n        long tri44 = 1;\n        long tri45 = 1;\n        long tri46\
    \ = 1;\n        long tri47 = 1;\n        long tri48 = 1;\n        long tri49 =\
    \ 1;\n        long tri50 = 1;\n        long tri51 = 1;\n        long tri52 = 1;\n\
    \        long tri53 = 1;\n        long tri54 = 1;\n        long tri55 = 1;\n \
    \       long tri56 = 1;\n        long tri57 = 1;\n        long tri58 = 1;\n  \
    \      long tri59 = 1;\n        long tri60 = 1;\n        long tri61 = 1;\n   \
    \     long tri62 = 1;\n        long tri63 = 1;\n        long tri64 = 1;\n    \
    \    long tri65 = 1;\n        long tri66 = 1;\n        long tri67 = 1;\n     \
    \   long tri68 = 1;\n        long tri69 = 1;\n        long tri70 = 1;\n      \
    \  long tri71 = 1;\n        long tri72 = 1;\n        long tri73 = 1;\n       \
    \ long tri74 = 1;\n        long tri75 = 1;\n        long tri76 = 1;\n        long\
    \ tri77 = 1;\n        long tri78 = 1;\n        long tri79 = 1;\n        long tri80\
    \ = 1;\n        long tri81 = 1;\n        long tri82 = 1;\n        long tri83 =\
    \ 1;", "        ArrayList<Long> result = new ArrayList<>();\n        long tri1\
    \ = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n        long\
    \ tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n    \
    \    long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long a = 1;\n    \
    \    long b = 2;\n        long c = 1;\n        long d = 1;\n        long sum =\
    \ 0;\n        long temp;\n        for(int i = 1; i <= n; i++) {\n            temp\
    \ = a + b + c + d;\n            a = b;\n            b = c;\n            c = d;\n\
    \            d = temp;\n            result.add(temp);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n == 0) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n == 1) {\n            result.add(1L);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n - 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1);\n \
    \       second.add(2);\n        third.add(3);\n        if (n % 2 == 0) {\n   \
    \         third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        }\n      \
    \  result.addAll(first);\n        result.addAll(second);\n        result.addAll(third);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1);\n        second.add(2);\n        third.add(3);\n      \
    \  if (n % 2 == 0) {\n            third.add(tri(n - 1) + tri(n - 2) + tri(n +\
    \ 1));\n        }\n        result.addAll(first);\n        result.addAll(second);\n\
    \        result.addAll(third);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(3);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            ArrayList<Long> left = tri(n - 1);\n\
    \            ArrayList<Long> right = tri(n - 2);\n            left.addAll(right);\n\
    \            result.addAll(left);\n        } else {\n            ArrayList<Long>\
    \ left = tri(n - 1);\n            ArrayList<Long> right = tri(n - 2);\n      \
    \      left.addAll(right);\n            left.add(1L);\n            result.addAll(left);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 2) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(0L);\n            return\
    \ result;\n        }\n        if (n == 2) {\n            result.add(0L);\n   \
    \         result.add(1L);\n            result.add(2L);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            ArrayList<Long> left = tri(n\
    \ - 1);\n            ArrayList<Long> right = tri(n - 2);\n            left.addAll(right);\n\
    \            result.addAll(left);\n        } else {\n            ArrayList<Long>\
    \ left = tri(n - 1);\n            ArrayList<Long> right = tri(n - 3);\n      \
    \      left.addAll(right);\n            result.addAll(left);\n        }\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n - 3));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(0L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n - 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)Math.pow(3,1);\n\
    \        long tri2 = (long)Math.pow(3,2);\n        long tri3 = (long)Math.pow(3,3);\n\
    \        long tri4 = (long)Math.pow(3,4);\n        long tri5 = (long)Math.pow(3,5);\n\
    \        long tri6 = (long)Math.pow(3,6);\n        long tri7 = (long)Math.pow(3,7);\n\
    \        long tri8 = (long)Math.pow(3,8);\n        long tri9 = (long)Math.pow(3,9);\n\
    \        long tri10 = (long)Math.pow(3,10);\n        long tri11 = (long)Math.pow(3,11);\n\
    \        long tri12 = (long)Math.pow(3,12);\n        long tri13 = (long)Math.pow(3,13);\n\
    \        long tri14 = (long)Math.pow(3,14);\n        long tri15 = (long)Math.pow(3,15);\n\
    \        long tri16 = (long)Math.pow(3,16);\n        long tri17 = (long)Math.pow(3,17);\n\
    \        long tri18 = (long)Math.pow(3,18);\n        long tri19 = (long)Math.pow(3,19);\n\
    \        long tri20 = (long)Math.pow(3,20);\n        long tri21 = (long)Math.pow(3,21);\n\
    \        long tri22 = (long)Math.pow(3,22);\n        long tri23 = (long)Math.pow(3,23);\n\
    \        long tri24 = (long)Math.pow(3,24);\n        long tri25 = (long)Math.pow(3,25);\n\
    \        long tri26 = (long)Math.pow(3,26);\n        long tri27 = (long)Math.pow(3,27);\n\
    \        long tri28 = (long)Math.pow(3,28);\n        long tri29 = (long)Math.pow(3,29);\n\
    \        long tri30 = (long)Math.pow(3,30);\n        long tri31 = (long)Math.pow(3,31);\n\
    \        long tri32 = (long)Math.pow(3,32);\n        long tri33 = (long)Math.pow(3,33);\n\
    \        long tri34 = (long)Math.pow(3,34);\n        long tri35 = (long)Math.pow(3,35);\n\
    \        long tri36 = (long)Math.pow(3,36);\n        long tri37 = (long)Math.pow(3,37);\n\
    \        long tri38 = (long)Math.pow(3,38);\n        long tri39 = (long)Math.pow(3,39);\n\
    \        long tri40 = (long)Math.pow(3,40);\n        long tri41 = (long)Math.pow(3,41);\n\
    \        long tri42 = (long)Math.pow(3,42);\n        long tri43 = (long)Math.pow(3,43);\n\
    \        long tri44", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long tri1 = (3 * n) / 2;\n        long tri2 = tri1 + tri1;\n        long\
    \ tri3 = tri2 + tri2;\n        result.add(tri1);\n        result.add(tri2);\n\
    \        result.add(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long a = tri(n - 1L);\n            long b = tri(n - 2L);\n            result.add(a);\n\
    \            result.add(b);\n            result.add(a + b);\n        } else {\n\
    \            long a = tri(n - 1L);\n            long b = tri(n - 3L);\n      \
    \      result.add(a);\n            result.add(b);\n            result.add(a +\
    \ b);\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n    \
    \        return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1);\n        second.add(1);\n\
    \        third.add(1);\n        if (n % 2 == 0) {\n            third.add(1);\n\
    \        }\n        for (int i = 2; i <= n; i++) {\n            third.add(first.get(0)\
    \ + second.get(0) + third.get(0));\n            second.add(first.get(0) + second.get(0)\
    \ + third.get(0));\n            first.add(third.get(0));\n        }\n        result.addAll(first);\n\
    \        result.addAll(second);\n        result.addAll(third);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n <= 1) {\n            result.add(n);\n            return result;\n       \
    \ }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long> tri2\
    \ = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 3;\n        long sum\
    \ = 0;\n        long temp;\n        for(int i = 1; i <= n; i++) {\n          \
    \  sum = a + b + c;\n            a = b;\n            b = c;\n            c = sum;\n\
    \            result.add(sum);\n        }\n        return result;\n", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n       \
    \     result.add(3);\n            return result;\n        }\n        if (n % 2\
    \ == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n   \
    \     } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) +\
    \ tri(n - 3) + tri(n - 4));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n\
    \        }\n        result.add(tri(n - 1) + tri(n - 2));\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(0L);\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(0L);\n\
    \            result.add(1L);\n            result.add(2L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            long tri1 = tri(n\
    \ - 1) + tri(n - 2) + tri(n - 3);\n            result.add(tri1);\n           \
    \ long tri2 = tri(n - 1) + tri(n - 2) + tri(n - 3);\n            result.add(tri2);\n\
    \            return result;\n        } else {\n            long tri1 = tri(n -\
    \ 1) + tri(n - 2) + tri(n - 3);\n            result.add(tri1);\n            long\
    \ tri2 = tri(n - 1) + tri(n - 2) + tri(n - 3);\n            result.add(tri2);\n\
    \            long tri3 = tri(n - 1) + tri(n - 2) + tri(n - 3);\n            result.add(tri3);\n\
    \            return result;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long tri1 = (long)Math.pow(3,1);\n        long tri2\
    \ = (long)Math.pow(3,2);\n        long tri3 = (long)Math.pow(3,3);\n        long\
    \ tri4 = (long)Math.pow(3,4);\n        long tri5 = (long)Math.pow(3,5);\n    \
    \    long tri6 = (long)Math.pow(3,6);\n        long tri7 = (long)Math.pow(3,7);\n\
    \        long tri8 = (long)Math.pow(3,8);\n        long tri9 = (long)Math.pow(3,9);\n\
    \        long tri10 = (long)Math.pow(3,10);\n        long tri11 = (long)Math.pow(3,11);\n\
    \        long tri12 = (long)Math.pow(3,12);\n        long tri13 = (long)Math.pow(3,13);\n\
    \        long tri14 = (long)Math.pow(3,14);\n        long tri15 = (long)Math.pow(3,15);\n\
    \        long tri16 = (long)Math.pow(3,16);\n        long tri17 = (long)Math.pow(3,17);\n\
    \        long tri18 = (long)Math.pow(3,18);\n        long tri19 = (long)Math.pow(3,19);\n\
    \        long tri20 = (long)Math.pow(3,20);\n        long tri21 = (long)Math.pow(3,21);\n\
    \        long tri22 = (long)Math.pow(3,22);\n        long tri23 = (long)Math.pow(3,23);\n\
    \        long tri24 = (long)Math.pow(3,24);\n        long tri25 = (long)Math.pow(3,25);\n\
    \        long tri26 = (long)Math.pow(3,26);\n        long tri27 = (long)Math.pow(3,27);\n\
    \        long tri28 = (long)Math.pow(3,28);\n        long tri29 = (long)Math.pow(3,29);\n\
    \        long tri30 = (long)Math.pow(3,30);\n        long tri31 = (long)Math.pow(3,31);\n\
    \        long tri32 = (long)Math.pow(3,32);\n        long tri33 = (long)Math.pow(3,33);\n\
    \        long tri34 = (long)Math.pow(3,34);\n        long tri35 = (long)Math.pow(3,35);\n\
    \        long tri36 = (long)Math.pow(3,36);\n        long tri37 = (long)Math.pow(3,37);\n\
    \        long tri38 = (long)Math.pow(3,38);\n        long tri39 = (long)Math.pow(3,39);\n\
    \        long tri40 = (long)Math.pow(3,40);\n        long tri41 = (long)Math.pow(3,41);\n\
    \        long tri42 = (long)Math.pow(3,42);\n        long tri43 = (long)Math.pow(3,43);\n\
    \        long tri44", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long a = 1;\n    \
    \    long b = 2;\n        long c = 1;\n        long d = 1;\n        long temp;\n\
    \        long tri = 0;\n        long tri_sum = 0;\n        long tri_sum_temp =\
    \ 0;\n        long tri_sum_temp2 = 0;\n        long tri_sum_temp3 = 0;\n     \
    \   long tri_sum_temp4 = 0;\n        long tri_sum_temp5 = 0;\n        long tri_sum_temp6\
    \ = 0;\n        long tri_sum_temp7 = 0;\n        long tri_sum_temp8 = 0;\n   \
    \     long tri_sum_temp9 = 0;\n        long tri_sum_temp10 = 0;\n        long\
    \ tri_sum_temp11 = 0;\n        long tri_sum_temp12 = 0;\n        long tri_sum_temp13\
    \ = 0;\n        long tri_sum_temp14 = 0;\n        long tri_sum_temp15 = 0;\n \
    \       long tri_sum_temp16 = 0;\n        long tri_sum_temp17 = 0;\n        long\
    \ tri_sum_temp18 = 0;\n        long tri_sum_temp19 = 0;\n        long tri_sum_temp20\
    \ = 0;\n        long tri_sum_temp21 = 0;\n        long tri_sum_temp22 = 0;\n \
    \       long tri_sum_temp23 = 0;\n        long tri_sum_temp24 = 0;\n        long\
    \ tri_sum_temp25 = 0;\n        long tri_sum_temp26 = 0;\n        long tri_sum_temp27\
    \ = 0;\n        long tri_sum_temp28 = 0;\n        long tri_sum_temp29 = 0;\n \
    \       long tri_sum_temp30 = 0;\n        long tri_sum_temp31 = 0;\n        long\
    \ tri_sum_temp32 = 0;\n        long tri_sum_temp33 = 0;\n        long tri_sum_temp34\
    \ = 0;\n        long tri_sum_temp35 = 0;\n        long tri_sum_temp36 = 0;\n \
    \       long tri_sum_temp37 = 0;\n        long tri_sum_temp38 = 0;\n        long\
    \ tri_sum_temp39 = 0;\n        long tri_sum_temp40 = 0;\n        long tri_sum_temp41\
    \ = 0;\n        long tri_sum_temp42 = 0;\n        long tri_sum_temp43 = 0;\n \
    \       long tri_sum_temp44 = 0;\n        long tri_sum_temp45 = 0;\n        long\
    \ tri_sum_temp46 = 0;\n        long tri_sum_temp47 = 0;\n        long tri_sum_temp48\
    \ = 0;\n        long tri_sum_temp49 = 0;\n        long tri_sum_temp50 = 0;\n \
    \       long tri_sum_temp51 = 0;\n        long tri_sum_temp52 = 0;\n        long\
    \ tri", "        ArrayList<Long> result = new ArrayList<>();\n        if (n ==\
    \ 0) {\n            result.add(0L);\n            return result;\n        }\n \
    \       if (n == 1) {\n            result.add(1L);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            long a = tri(n - 1L);\n   \
    \         long b = tri(n - 2L);\n            result.add(a);\n            result.add(b);\n\
    \            result.add(a + b);\n        } else {\n            long a = tri(n\
    \ - 1L);\n            long b = tri(n - 3L);\n            result.add(a);\n    \
    \        result.add(b);\n            result.add(a + b);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n    \
    \    long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n - 1));\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n\
    \            result.add(2L);\n            return result;\n        }\n        ArrayList<Long>\
    \ left = tri(n - 1);\n        ArrayList<Long> right = tri(n - 2);\n        ArrayList<Long>\
    \ middle = new ArrayList<>();\n        middle.add(left.get(left.size() - 1) +\
    \ right.get(right.size() - 1));\n        middle.add(left.get(left.size() - 1)\
    \ + right.get(right.size() - 1) + left.get(left.size() - 2));\n        middle.add(left.get(left.size()\
    \ - 1) + right.get(right.size() - 1) + left.get(left.size() - 2) + right.get(right.size()\
    \ - 2));\n        result.addAll(left);\n        result.addAll(middle);\n     \
    \   result.addAll(right);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n - 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n - 1));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ == 2) {\n            result.add(3);\n            return result;\n        }\n\
    \        ArrayList<Long> left = tri(n - 1);\n        ArrayList<Long> right = tri(n\
    \ - 2);\n        ArrayList<Long> middle = new ArrayList<>();\n        middle.add(left.get(0)\
    \ + right.get(0));\n        middle.add(left.get(1) + right.get(1));\n        middle.add(left.get(2)\
    \ + right.get(2));\n        middle.add(left.get(3) + right.get(3));\n        result.addAll(middle);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (n / 3L);\n        long tri2 = (tri1 + tri1);\n        long\
    \ tri3 = tri2 + tri1;\n        result.add(tri1);\n        result.add(tri2);\n\
    \        result.add(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n - 1));\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            long a = tri(n -\
    \ 1);\n            long b = tri(n - 2);\n            long c = tri(n + 1);\n  \
    \          long sum = a + b + c;\n            result.add(sum);\n            return\
    \ result;\n        }\n        long a = tri(n - 1);\n        long b = tri(n - 2);\n\
    \        long c = tri(n + 1);\n        long sum = a + b + c;\n        result.add(sum);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 3;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 2;\n        long c = 3;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 2;\n        long c = 3;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = 1;\n        long b = 2;\n        long c\
    \ = 3;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n      \
    \  long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n    \
    \    long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(3);\n        second.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n \
    \           result.add(1L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            long tri1 = tri(n - 1);\n       \
    \     long tri2 = tri(n - 2);\n            result.add(tri1);\n            result.add(tri1\
    \ + tri2);\n        } else {\n            long tri1 = tri(n - 1);\n          \
    \  long tri2 = tri(n - 2);\n            result.add(tri1);\n            result.add(tri1\
    \ + tri2);\n            result.add(tri1 + tri2 + tri1);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n == 0) {\n            result.add(0L);\n            result.add(1L);\n     \
    \       return result;\n        }\n        if (n == 1) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(1L);\n\
    \            result.add(2L);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        ArrayList<Long> fourth\
    \ = new ArrayList<>();\n        ArrayList<Long> fifth = new ArrayList<>();\n \
    \       ArrayList<Long> sixth = new ArrayList<>();\n        ArrayList<Long> seventh\
    \ = new ArrayList<>();\n        ArrayList<Long> eighth = new ArrayList<>();\n\
    \        ArrayList<Long> ninth = new ArrayList<>();\n        ArrayList<Long> tenth\
    \ = new ArrayList<>();\n        ArrayList<Long> eleventh = new ArrayList<>();\n\
    \        ArrayList<Long> twelfth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirteenth = new ArrayList<>();\n        ArrayList<Long> fourteenth = new ArrayList<>();\n\
    \        ArrayList<Long> fifteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ sixteenth = new ArrayList<>();\n        ArrayList<Long> seventeenth = new ArrayList<>();\n\
    \        ArrayList<Long> eighteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ nineteenth = new ArrayList<>();\n        ArrayList<Long> twentieth = new ArrayList<>();\n\
    \        ArrayList<Long> twentyfirst = new ArrayList<>();\n        ArrayList<Long>\
    \ twentysecond = new ArrayList<>();\n        ArrayList<Long> twentythird = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyfourth = new ArrayList<>();\n\
    \        ArrayList<Long> twentyfifth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentysixth = new ArrayList<>();\n        ArrayList<Long> twentyseventh = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyeighth = new ArrayList<>();\n\
    \        ArrayList<Long> twentyninth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtieth = new ArrayList<>();\n        ArrayList<Long> thirtyfirst = new ArrayList<>();\n\
    \        ArrayList<Long> thirtysecond = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtythird = new ArrayList<>();\n        ArrayList<Long> thirtyfourth = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtyfifth = new ArrayList<>();\n \
    \       ArrayList<Long> thirtysixth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyseventh = new ArrayList<>();\n        ArrayList<Long> thirtyeighth = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtynin", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3));\n     \
    \   }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n\
    \        long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        ArrayList<Long> left = tri(n -\
    \ 1);\n        ArrayList<Long> right = tri(n - 2);\n        ArrayList<Long> middle\
    \ = new ArrayList<>();\n        middle.add(0L);\n        middle.add(1L);\n   \
    \     middle.add(2L);\n        middle.add(3L);\n        middle.add(4L);\n    \
    \    middle.add(5L);\n        middle.add(6L);\n        middle.add(7L);\n     \
    \   middle.add(8L);\n        middle.add(9L);\n        middle.add(10L);\n     \
    \   middle.add(11L);\n        middle.add(12L);\n        middle.add(13L);\n   \
    \     middle.add(14L);\n        middle.add(15L);\n        middle.add(16L);\n \
    \       middle.add(17L);\n        middle.add(18L);\n        middle.add(19L);\n\
    \        middle.add(20L);\n        middle.add(21L);\n        middle.add(22L);\n\
    \        middle.add(23L);\n        middle.add(24L);\n        middle.add(25L);\n\
    \        middle.add(26L);\n        middle.add(27L);\n        middle.add(28L);\n\
    \        middle.add(29L);\n        middle.add(30L);\n        middle.add(31L);\n\
    \        middle.add(32L);\n        middle.add(33L);\n        middle.add(34L);\n\
    \        middle.add(35L);\n        middle.add(36L);\n        middle.add(37L);\n\
    \        middle.add(38L);\n        middle.add(39L);\n        middle.add(40L);\n\
    \        middle.add(41L);\n        middle.add(42L);\n        middle.add(43L);\n\
    \        middle.add(44L);\n        middle.add(45L);\n        middle.add(46L);\n\
    \        middle.add(47L);\n        middle.add(48L);\n        middle.add(49L);\n\
    \        middle.add(50L);\n        middle.add(51L);\n        middle.add(52L);\n\
    \        middle.add(53L);\n        middle.add(54L);\n        middle.add(", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n \
    \           result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 2) {\n            result.add(n);\n  \
    \          return result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1);\n\
    \        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n\
    \ - 3);\n        ArrayList<Long> tri4 = tri(n - 4);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        result.addAll(tri4);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(3);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(3);\n\
    \        } else {\n            long tri1 = tri(n - 1);\n            long tri2\
    \ = tri(n - 2);\n            long tri3 = tri(n + 1);\n            result.add(tri1);\n\
    \            result.add(tri2);\n            result.add(tri3);\n        }\n   \
    \     return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<>();\n        ArrayList<Long>\
    \ right = new ArrayList<>();\n        left.add(1);\n        right.add(1);\n  \
    \      for (int i = 2; i <= n; i++) {\n            left.add(right.get(i - 1) +\
    \ right.get(i - 2));\n            right.add(left.get(i - 1) + left.get(i - 2));\n\
    \        }\n        result.addAll(left);\n        result.addAll(right);\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)Math.pow(3,1);\n        long tri2 = (long)Math.pow(3,2);\n\
    \        long tri3 = (long)Math.pow(3,3);\n        long tri4 = (long)Math.pow(3,4);\n\
    \        long tri5 = (long)Math.pow(3,5);\n        long tri6 = (long)Math.pow(3,6);\n\
    \        long tri7 = (long)Math.pow(3,7);\n        long tri8 = (long)Math.pow(3,8);\n\
    \        long tri9 = (long)Math.pow(3,9);\n        long tri10 = (long)Math.pow(3,10);\n\
    \        long tri11 = (long)Math.pow(3,11);\n        long tri12 = (long)Math.pow(3,12);\n\
    \        long tri13 = (long)Math.pow(3,13);\n        long tri14 = (long)Math.pow(3,14);\n\
    \        long tri15 = (long)Math.pow(3,15);\n        long tri16 = (long)Math.pow(3,16);\n\
    \        long tri17 = (long)Math.pow(3,17);\n        long tri18 = (long)Math.pow(3,18);\n\
    \        long tri19 = (long)Math.pow(3,19);\n        long tri20 = (long)Math.pow(3,20);\n\
    \        long tri21 = (long)Math.pow(3,21);\n        long tri22 = (long)Math.pow(3,22);\n\
    \        long tri23 = (long)Math.pow(3,23);\n        long tri24 = (long)Math.pow(3,24);\n\
    \        long tri25 = (long)Math.pow(3,25);\n        long tri26 = (long)Math.pow(3,26);\n\
    \        long tri27 = (long)Math.pow(3,27);\n        long tri28 = (long)Math.pow(3,28);\n\
    \        long tri29 = (long)Math.pow(3,29);\n        long tri30 = (long)Math.pow(3,30);\n\
    \        long tri31 = (long)Math.pow(3,31);\n        long tri32 = (long)Math.pow(3,32);\n\
    \        long tri33 = (long)Math.pow(3,33);\n        long tri34 = (long)Math.pow(3,34);\n\
    \        long tri35 = (long)Math.pow(3,35);\n        long tri36 = (long)Math.pow(3,36);\n\
    \        long tri37 = (long)Math.pow(3,37);\n        long tri38 = (long)Math.pow(3,38);\n\
    \        long tri39 = (long)Math.pow(3,39);\n        long tri40 = (long)Math.pow(3,40);\n\
    \        long tri41 = (long)Math.pow(3,41);\n        long tri42 = (long)Math.pow(3,42);\n\
    \        long tri43 = (long)Math.pow(3,43);\n        long tri44", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri = 1;\n        long tri2 = 1;\n\
    \        long tri3 = 1;\n        long tri4 = 1;\n        long tri5 = 1;\n    \
    \    long tri6 = 1;\n        long tri7 = 1;\n        long tri8 = 1;\n        long\
    \ tri9 = 1;\n        long tri10 = 1;\n        long tri11 = 1;\n        long tri12\
    \ = 1;\n        long tri13 = 1;\n        long tri14 = 1;\n        long tri15 =\
    \ 1;\n        long tri16 = 1;\n        long tri17 = 1;\n        long tri18 = 1;\n\
    \        long tri19 = 1;\n        long tri20 = 1;\n        long tri21 = 1;\n \
    \       long tri22 = 1;\n        long tri23 = 1;\n        long tri24 = 1;\n  \
    \      long tri25 = 1;\n        long tri26 = 1;\n        long tri27 = 1;\n   \
    \     long tri28 = 1;\n        long tri29 = 1;\n        long tri30 = 1;\n    \
    \    long tri31 = 1;\n        long tri32 = 1;\n        long tri33 = 1;\n     \
    \   long tri34 = 1;\n        long tri35 = 1;\n        long tri36 = 1;\n      \
    \  long tri37 = 1;\n        long tri38 = 1;\n        long tri39 = 1;\n       \
    \ long tri40 = 1;\n        long tri41 = 1;\n        long tri42 = 1;\n        long\
    \ tri43 = 1;\n        long tri44 = 1;\n        long tri45 = 1;\n        long tri46\
    \ = 1;\n        long tri47 = 1;\n        long tri48 = 1;\n        long tri49 =\
    \ 1;\n        long tri50 = 1;\n        long tri51 = 1;\n        long tri52 = 1;\n\
    \        long tri53 = 1;\n        long tri54 = 1;\n        long tri55 = 1;\n \
    \       long tri56 = 1;\n        long tri57 = 1;\n        long tri58 = 1;\n  \
    \      long tri59 = 1;\n        long tri60 = 1;\n        long tri61 = 1;\n   \
    \     long tri62 = 1;\n        long tri63 = 1;\n        long tri64 = 1;\n    \
    \    long tri65 = 1;\n        long tri66 = 1;\n        long tri67 = 1;\n     \
    \   long tri68 = 1;\n        long tri69 = 1;\n        long tri70 = 1;\n      \
    \  long tri71 = 1;\n        long tri72 = 1;\n        long tri73 = 1;\n       \
    \ long tri74 = 1;\n        long tri75 = 1;\n        long tri76 = 1;\n        long\
    \ tri77 = 1;\n        long tri78 = 1;\n        long tri79 = 1;\n        long tri80\
    \ = 1;\n        long tri81 = 1;\n        long tri82 = 1;\n        long tri83 =\
    \ 1;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n ==\
    \ 1) {\n            result.add(1L);\n            return result;\n        }\n \
    \       if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            ArrayList<Long> left\
    \ = tri(n - 1);\n            ArrayList<Long> right = tri(n - 2);\n           \
    \ ArrayList<Long> sum = left.stream().map(x -> x + right.get(0)).collect(Collectors.toList());\n\
    \            result.addAll(sum);\n            return result;\n        }\n    \
    \    ArrayList<Long> left = tri(n - 1);\n        ArrayList<Long> right = tri(n\
    \ - 2);\n        ArrayList<Long> sum = left.stream().map(x -> x + right.get(0)).collect(Collectors.toList());\n\
    \        result.addAll(sum);\n        result.add(sum.get(0) + sum.get(1));\n \
    \       return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<>();\n        ArrayList<Long>\
    \ right = new ArrayList<>();\n        left.add(1);\n        right.add(1);\n  \
    \      long leftSum = leftSum(left);\n        long rightSum = rightSum(right);\n\
    \        long sum = (leftSum + rightSum) / 2;\n        long leftSum2 = leftSum(left);\n\
    \        long rightSum2 = rightSum(right);\n        long sum2 = (leftSum2 + rightSum2)\
    \ / 2;\n        long leftSum3 = leftSum(left);\n        long rightSum3 = rightSum(right);\n\
    \        long sum3 = (leftSum3 + rightSum3) / 2;\n        long leftSum4 = leftSum(left);\n\
    \        long rightSum4 = rightSum(right);\n        long sum4 = (leftSum4 + rightSum4)\
    \ / 2;\n        long leftSum5 = leftSum(left);\n        long rightSum5 = rightSum(right);\n\
    \        long sum5 = (leftSum5 + rightSum5) / 2;\n        long leftSum6 = leftSum(left);\n\
    \        long rightSum6 = rightSum(right);\n        long sum6 = (leftSum6 + rightSum6)\
    \ / 2;\n        long leftSum7 = leftSum(left);\n        long rightSum7 = rightSum(right);\n\
    \        long sum7 = (leftSum7 + rightSum7) / 2;\n        long leftSum8 = leftSum(left);\n\
    \        long rightSum8 = rightSum(right);\n        long sum8 = (leftSum8 + rightSum8)\
    \ / 2;\n        long leftSum9 = leftSum(left);\n        long rightSum9 = rightSum(right);\n\
    \        long sum9 = (leftSum9 + rightSum9) / 2;\n        long leftSum10 = leftSum(left);\n\
    \        long rightSum10 = rightSum(right);\n        long sum10 = (leftSum10 +\
    \ rightSum10) / 2;\n        long leftSum11 = leftSum(left);\n        long rightSum11\
    \ = rightSum(right);\n        long sum11 = (leftSum11 + rightSum11) / 2;\n   \
    \     long leftSum12 = leftSum(left);\n        long rightSum12 = rightSum(right);\n\
    \        long sum12 = (leftSum12 + rightSum12) / 2;\n        long leftSum13 =\
    \ leftSum(left);\n        long rightSum13 = rightSum(right);\n        ", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n   \
    \         result.add(1);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        ArrayList<Long> tri4 = tri(n - 4);\n        ArrayList<Long>\
    \ tri5 = tri(n - 5);\n        ArrayList<Long> tri6 = tri(n - 6);\n        ArrayList<Long>\
    \ tri7 = tri(n - 7);\n        ArrayList<Long> tri8 = tri(n - 8);\n        ArrayList<Long>\
    \ tri9 = tri(n - 9);\n        ArrayList<Long> tri10 = tri(n - 10);\n        ArrayList<Long>\
    \ tri11 = tri(n - 11);\n        ArrayList<Long> tri12 = tri(n - 12);\n       \
    \ ArrayList<Long> tri13 = tri(n - 13);\n        ArrayList<Long> tri14 = tri(n\
    \ - 14);\n        ArrayList<Long> tri15 = tri(n - 15);\n        ArrayList<Long>\
    \ tri16 = tri(n - 16);\n        ArrayList<Long> tri17 = tri(n - 17);\n       \
    \ ArrayList<Long> tri18 = tri(n - 18);\n        ArrayList<Long> tri19 = tri(n\
    \ - 19);\n        ArrayList<Long> tri20 = tri(n - 20);\n        ArrayList<Long>\
    \ tri21 = tri(n - 21);\n        ArrayList<Long> tri22 = tri(n - 22);\n       \
    \ ArrayList<Long> tri23 = tri(n - 23);\n        ArrayList<Long> tri24 = tri(n\
    \ - 24);\n        ArrayList<Long> tri25 = tri(n - 25);\n        ArrayList<Long>\
    \ tri26 = tri(n - 26);\n        ArrayList<Long> tri27 = tri(n - 27);\n       \
    \ ArrayList<Long> tri28 = tri(n - 28);\n        ArrayList<Long> tri29 = tri(n\
    \ - 29);\n        ArrayList<Long> tri30 = tri(n - 30);\n        ArrayList<Long>\
    \ tri31 = tri(n - 31);\n        ArrayList<Long> tri32 = tri(n - 32);\n       \
    \ ArrayList<Long> tri33 = tri(n - 33);\n        ArrayList<Long> tri34 = tri(n\
    \ - 34);\n        ArrayList<Long> tri35 = tri(n - 35);\n        ArrayList<Long>\
    \ tri36 = tri(n - 36);\n        ArrayList<Long> tri37 = tri(n - 37);\n       \
    \ ArrayList<Long> tri38 = tri(n - 38);\n        ArrayList<Long> tri39 = tri(n\
    \ - 39);\n        ArrayList<Long> tri40 = tri(n - 40);\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long first = (long) (Math.pow(Math.sqrt(n), 3L) / Math.sqrt(5L));\n       \
    \     long second = (long) (Math.pow(Math.sqrt(n), 2L) / Math.sqrt(5L));\n   \
    \         long third = (long) (Math.pow(Math.sqrt(n), 1L) / Math.sqrt(5L));\n\
    \            result.add(first);\n            result.add(second);\n           \
    \ result.add(third);\n            return result;\n        }\n        long first\
    \ = (long) (Math.pow(Math.sqrt(n), 3L) / Math.sqrt(5L));\n        long second\
    \ = (long) (Math.pow(Math.sqrt(n), 2L) / Math.sqrt(5L));\n        long third =\
    \ (long) (Math.pow(Math.sqrt(n), 1L) / Math.sqrt(5L));\n        ArrayList<Long>\
    \ firstResult = tri(n - 1);\n        ArrayList<Long> secondResult = tri(n - 2);\n\
    \        ArrayList<Long> thirdResult = tri(n - 3);\n        ArrayList<Long> result\
    \ = new ArrayList<>();\n        result.addAll(firstResult);\n        result.addAll(secondResult);\n\
    \        result.addAll(thirdResult);\n        result.add(first);\n        result.add(second);\n\
    \        result.add(third);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n - 3));\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n  \
    \      result.add(tri(n - 1) + tri(n - 2));\n        return result;\n", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n    \
    \        result.add(0L);\n            return result;\n        }\n        if (n\
    \ == 1) {\n            result.add(1L);\n            return result;\n        }\n\
    \        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n -\
    \ 4));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n  \
    \          return result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1);\n\
    \        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n\
    \ - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n        result.addAll(tri3);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ArrayList<Long>\
    \ tri40 = tri(n - 40);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(3);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3));\n        }\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long a = 1;\n        long b = 1;\n        long\
    \ c = 1;\n        long d = 1;\n        long temp;\n        long tri = 0;\n   \
    \     for(int i = 1; i <= n; i++) {\n            tri += i;\n            temp =\
    \ tri;\n            tri = a + b + c + d;\n            a = b;\n            b =\
    \ c;\n            c = d;\n            d = temp;\n            result.add(tri);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 2) {\n            result.add(n);\n  \
    \          return result;\n        }\n        long first = 1;\n        long second\
    \ = 2;\n        long third = 1;\n        long fourth = 1;\n        long fifth\
    \ = 1;\n        long sixth = 1;\n        long seventh = 1;\n        long eighth\
    \ = 1;\n        long nineth = 1;\n        long tenth = 1;\n        long eleventh\
    \ = 1;\n        long twelfth = 1;\n        long thirteenth = 1;\n        long\
    \ fourteenth = 1;\n        long fifteenth = 1;\n        long sixteenth = 1;\n\
    \        long seventeenth = 1;\n        long eighteenth = 1;\n        long nineteenth\
    \ = 1;\n        long twentieth = 1;\n        long twentyfirst = 1;\n        long\
    \ twentysecond = 1;\n        long twentythird = 1;\n        long twentyfourth\
    \ = 1;\n        long twentyfifth = 1;\n        long twentysixth = 1;\n       \
    \ long twentyseventh = 1;\n        long twentyeighth = 1;\n        long twentyninth\
    \ = 1;\n        long thirtieth = 1;\n        long thirtyfirst = 1;\n        long\
    \ thirtysecond = 1;\n        long thirtythird = 1;\n        long thirtyfourth\
    \ = 1;\n        long thirtyfifth = 1;\n        long thirtysixth = 1;\n       \
    \ long thirtyseventh = 1;\n        long thirtyeighth = 1;\n        long thirtyninth\
    \ = 1;\n        long fortieth = 1;\n        long fortyfirst = 1;\n        long\
    \ fortysecond = 1;\n        long fortythird = 1;\n        long fortyfourth = 1;\n\
    \        long fortyfifth = 1;\n        long fortysixth = 1;\n        long fortyseventh\
    \ = 1;\n        long fortyeighth = 1;\n        long fortyninth = 1;\n        long\
    \ fiftieth = 1;\n        long fiftyfirst = 1;\n        long fiftysecond = 1;\n\
    \        long fiftythird = 1;\n        long fiftyfourth = 1;\n        long fiftyfifth\
    \ = 1;\n        long fiftysixth = 1;\n        long fiftyseventh = 1;\n       \
    \ long fiftyeighth = 1;\n        long fiftyninth = 1;\n        long sixtieth =\
    \ 1;\n        long sixtyfirst = 1;\n        long sixtysecond = 1;\n        long\
    \ sixtythird = 1;\n        long sixtyfour", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n   \
    \         result.add(1L);\n            return result;\n        }\n        if (n\
    \ == 1) {\n            result.add(0L);\n            return result;\n        }\n\
    \        if (n == 2) {\n            result.add(1L);\n            result.add(2L);\n\
    \            return result;\n        }\n        ArrayList<Long> left = tri(n -\
    \ 1);\n        ArrayList<Long> right = tri(n - 2);\n        ArrayList<Long> middle\
    \ = new ArrayList<>();\n        middle.add(0L);\n        middle.add(1L);\n   \
    \     middle.add(2L);\n        middle.add(3L);\n        middle.add(4L);\n    \
    \    middle.add(5L);\n        middle.add(6L);\n        middle.add(7L);\n     \
    \   middle.add(8L);\n        middle.add(9L);\n        middle.add(10L);\n     \
    \   middle.add(11L);\n        middle.add(12L);\n        middle.add(13L);\n   \
    \     middle.add(14L);\n        middle.add(15L);\n        middle.add(16L);\n \
    \       middle.add(17L);\n        middle.add(18L);\n        middle.add(19L);\n\
    \        middle.add(20L);\n        middle.add(21L);\n        middle.add(22L);\n\
    \        middle.add(23L);\n        middle.add(24L);\n        middle.add(25L);\n\
    \        middle.add(26L);\n        middle.add(27L);\n        middle.add(28L);\n\
    \        middle.add(29L);\n        middle.add(30L);\n        middle.add(31L);\n\
    \        middle.add(32L);\n        middle.add(33L);\n        middle.add(34L);\n\
    \        middle.add(35L);\n        middle.add(36L);\n        middle.add(37L);\n\
    \        middle.add(38L);\n        middle.add(39L);\n        middle.add(40L);\n\
    \        middle.add(41L);\n        middle.add(42L);\n        middle.add(43L);\n\
    \        middle.add(44L);\n        middle.add(45L);\n        middle.add(46L);\n\
    \        middle.add(47L);\n        middle.add(48L);\n        middle.add(49L);\n\
    \        middle.add(50L);\n        middle.add(51L);\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n\
    \            return result;\n        }\n        long a = 1;\n        long b =\
    \ 2;\n        long c = 1;\n        long d = 1;\n        long sum = 0;\n      \
    \  while (c <= n) {\n            sum = a + b + c + d;\n            long temp =\
    \ a;\n            a = b;\n            b = c;\n            c = d;\n           \
    \ d = sum;\n            result.add(temp);\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            ArrayList<Long> left = new ArrayList<>();\n\
    \            left.add(0L);\n            left.add(1L);\n            left.add(tri(n\
    \ - 1));\n            left.add(tri(n - 2));\n            result.addAll(left);\n\
    \        } else {\n            ArrayList<Long> left = new ArrayList<>();\n   \
    \         left.add(tri(n - 1));\n            left.add(tri(n - 2));\n         \
    \   left.add(tri(n - 3));\n            result.addAll(left);\n        }\n     \
    \   return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(0L);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        ArrayList<Long> tri4 = tri(n - 4);\n        ArrayList<Long>\
    \ tri5 = tri(n - 5);\n        ArrayList<Long> tri6 = tri(n - 6);\n        ArrayList<Long>\
    \ tri7 = tri(n - 7);\n        ArrayList<Long> tri8 = tri(n - 8);\n        ArrayList<Long>\
    \ tri9 = tri(n - 9);\n        ArrayList<Long> tri10 = tri(n - 10);\n        ArrayList<Long>\
    \ tri11 = tri(n - 11);\n        ArrayList<Long> tri12 = tri(n - 12);\n       \
    \ ArrayList<Long> tri13 = tri(n - 13);\n        ArrayList<Long> tri14 = tri(n\
    \ - 14);\n        ArrayList<Long> tri15 = tri(n - 15);\n        ArrayList<Long>\
    \ tri16 = tri(n - 16);\n        ArrayList<Long> tri17 = tri(n - 17);\n       \
    \ ArrayList<Long> tri18 = tri(n - 18);\n        ArrayList<Long> tri19 = tri(n\
    \ - 19);\n        ArrayList<Long> tri20 = tri(n - 20);\n        ArrayList<Long>\
    \ tri21 = tri(n - 21);\n        ArrayList<Long> tri22 = tri(n - 22);\n       \
    \ ArrayList<Long> tri23 = tri(n - 23);\n        ArrayList<Long> tri24 = tri(n\
    \ - 24);\n        ArrayList<Long> tri25 = tri(n - 25);\n        ArrayList<Long>\
    \ tri26 = tri(n - 26);\n        ArrayList<Long> tri27 = tri(n - 27);\n       \
    \ ArrayList<Long> tri28 = tri(n - 28);\n        ArrayList<Long> tri29 = tri(n\
    \ - 29);\n        ArrayList<Long> tri30 = tri(n - 30);\n        ArrayList<Long>\
    \ tri31 = tri(n - 31);\n        ArrayList<Long> tri32 = tri(n - 32);\n       \
    \ ArrayList<Long> tri33 = tri(n - 33);\n        ArrayList<Long> tri34 = tri(n\
    \ - 34);\n        ArrayList<Long> tri35 = tri(n - 35);\n        ArrayList<Long>\
    \ tri36 = tri(n - 36);\n        ArrayList<Long> tri37 = tri(n - 37);\n       \
    \ ArrayList<Long> tri38 = tri(n - 38);\n        ArrayList<Long> ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1);\n        second.add(1);\n\
    \        third.add(1);\n        if (n % 2 == 0) {\n            third.add(1);\n\
    \        }\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (3 * n) / 2;\n        long\
    \ tri2 = (tri1 + tri1);\n        long tri3 = (tri2 + tri2);\n        long tri4\
    \ = (tri3 + tri3);\n        result.add(tri1);\n        result.add(tri2);\n   \
    \     result.add(tri3);\n        result.add(tri4);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n / 2) + tri(n / 2) + tri(n / 2));\n\
    \            return result;\n        }\n        result.add(tri(n / 2) + tri(n\
    \ / 2) + tri(n / 2) + tri(n / 2));\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1L);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  ArrayList<Long> first = new ArrayList<>();\n            ArrayList<Long> second\
    \ = new ArrayList<>();\n            ArrayList<Long> third = new ArrayList<>();\n\
    \            first.add(0L);\n            second.add(1L);\n            third.add(2L);\n\
    \            ArrayList<Long> fourth = new ArrayList<>();\n            fourth.add(3L);\n\
    \            ArrayList<Long> fifth = new ArrayList<>();\n            fifth.add(4L);\n\
    \            ArrayList<Long> sixth = new ArrayList<>();\n            sixth.add(5L);\n\
    \            ArrayList<Long> seventh = new ArrayList<>();\n            seventh.add(6L);\n\
    \            ArrayList<Long> eighth = new ArrayList<>();\n            eighth.add(7L);\n\
    \            ArrayList<Long> ninth = new ArrayList<>();\n            ninth.add(8L);\n\
    \            ArrayList<Long> tenth = new ArrayList<>();\n            tenth.add(9L);\n\
    \            ArrayList<Long> eleventh = new ArrayList<>();\n            eleventh.add(10L);\n\
    \            ArrayList<Long> twelfth = new ArrayList<>();\n            twelfth.add(11L);\n\
    \            ArrayList<Long> thirteenth = new ArrayList<>();\n            thirteenth.add(12L);\n\
    \            ArrayList<Long> fourteenth = new ArrayList<>();\n            fourteenth.add(13L);\n\
    \            ArrayList<Long> fifteenth = new ArrayList<>();\n            fifteenth.add(14L);\n\
    \            ArrayList<Long> sixteenth = new ArrayList<>();\n            sixteenth.add(15L);\n\
    \            ArrayList<Long> seventeenth = new ArrayList<>();\n            seventeenth.add(16L);\n\
    \            ArrayList<Long> eighteenth = new ArrayList<>();\n            eighteenth.add(17L);\n\
    \            ArrayList<Long> nineteenth = new ArrayList<>();\n            nineteenth.add(18L);\n\
    \            ArrayList<Long> twentieth = new ArrayList<>();\n            twentieth.add(19L);\n\
    \            ArrayList<Long> twentyfirst = new ArrayList<>();\n            twentyfirst.add(20L);\n\
    \            ArrayList<Long> twentysecond = new ArrayList<>();\n            twentysecond.add(21L);\n\
    \            ArrayList<Long> twentythird = new ArrayList<>();\n            twentythird.add(22L);\n\
    \            ArrayList<Long> twentyfourth = new ArrayList<>();\n            ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long a = 1;\n    \
    \    long b = 2;\n        long c = 3;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n      \
    \  long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n\
    \        long b = 2;\n        long c = 3;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 2;\n        long c = 3;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 2;\n        long c = 3;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(1);\n            return result;\n        }\n\
    \        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n\
    \ - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \            return result;\n        }\n        result.add(tri(n - 1) + tri(n\
    \ - 2));\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n    \
    \    return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(3);\n        } else {\n            long tri1 = tri(n - 1);\n\
    \            long tri2 = tri(n - 2);\n            long tri3 = tri(n + 1);\n  \
    \          result.add(tri1);\n            result.add(tri2);\n            result.add(tri3);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0L);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1L);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            result.add(1L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2)\
    \ + tri(n - 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0L);\n\
    \            result.add(1L);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0L);\n            return result;\n      \
    \  }\n        if (n == 2) {\n            result.add(0L);\n            result.add(1L);\n\
    \            result.add(2L);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            ArrayList<Long> left = tri(n - 1);\n           \
    \ ArrayList<Long> right = tri(n - 2);\n            ArrayList<Long> result = new\
    \ ArrayList<>();\n            for (long i = 0; i < left.size(); i++) {\n     \
    \           result.add(left[i] + right[i]);\n            }\n            return\
    \ result;\n        } else {\n            ArrayList<Long> left = tri(n - 1);\n\
    \            ArrayList<Long> right = tri(n - 3);\n            ArrayList<Long>\
    \ result = new ArrayList<>();\n            for (long i = 0; i < left.size(); i++)\
    \ {\n                result.add(left[i] + right[i]);\n            }\n        \
    \    return result;\n        }\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long a = 1;\n    \
    \    long b = 2;\n        long c = 3;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n      \
    \  long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n\
    \        long b = 2;\n        long c = 3;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 2;\n        long c = 3;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 2;\n        long c = 3;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 2) {\n            result.add(n);\n            return result;\n        }\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long sum = 0;\n        for (int i = 3; i <= n; i++) {\n      \
    \      sum = a + b + c + d;\n            a = b;\n            b = c;\n        \
    \    c = d;\n            d = sum;\n            result.add(sum);\n        }\n \
    \       return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long a = 1;\n        long b = 1;\n        long\
    \ c = 1;\n        long d = 1;\n        long temp;\n        if (n <= 1) {\n   \
    \         result.add(1);\n            return result;\n        }\n        if (n\
    \ % 2 == 0) {\n            temp = tri(n - 1);\n            for (long i = 0; i\
    \ < temp.size(); i++) {\n                result.add(temp.get(i));\n          \
    \  }\n            return result;\n        }\n        else {\n            temp\
    \ = tri(n - 1);\n            for (long i = 0; i < temp.size(); i++) {\n      \
    \          result.add(temp.get(i));\n            }\n            result.add(tri(n\
    \ - 2));\n            return result;\n        }\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

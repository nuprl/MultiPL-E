name: HumanEval_150_x_or_y
language: julia
prompt: "\"\"\"A simple program which should return the value of x if n is \n    a\
  \ prime number and should return the value of y otherwise.\n\n    Examples:\n  \
  \  for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\"\n\
  function x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
  \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
  \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
  \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
  \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2,\
  \ 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
completions: ["    if n == 1 \n        return x\n    elseif n == 2 \n        return\
    \ y\n    elseif n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    elseif n %\
    \ 2 == 1 \n        return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ value appears in a given array.", "    if n == 1 \n        return x\n    else\
    \ if n == 2 \n        return y\n    else if n % 2 == 0 \n        return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function which returns the value of x if n is a prime number and should return\
    \ the value of y otherwise.", "    if n == 1 \n        then return x\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        then\
    \ return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the factorial of a number. \nExamples:\nfactorial(5) ==\
    \ 120\nfactorial(3) == 6\nfactorial(4) == 24\nfactorial(2) == 1", "    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend", "    if isPrime(n) == true\n\
    \        return y\n    else\n        return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.", "    if\
    \ n == 2 || n == 3 || n == 5\n        return y\n    else\n        return x\n \
    \   end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number. \nThe factorial of a number $n$ is defined as:", "    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function which takes as input a number n and returns\
    \ the factorial of n. \nThe factorial of a number n is defined as the product\
    \ of all positive integers less than or equal to n.", "    if n % 2 == 0 \n  \
    \      then return y\n        else return x\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.", "    if n == 2 || n ==\
    \ 3 || n == 5 || n == 7 || n == 11 \n        then y\n        else x\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nExamples:\nfactorial(3) == 6\nfactorial(5) == 120\nfactorial(10)\
    \ == 3628800\nHint: use recursion!", "    if isPrime(n)\n        return x\n  \
    \  else\n        return y\nend\n</cell>\n<text>\nExercise 3\nWrite a program which\
    \ should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.", "    if n == 2 || n == 3 || n == 5\n        return\
    \ x\n    else\n        return y\nend", "    if n == 1 \n        then return x\n\
    \        else return y\n    end\n    \n    if n % 2 == 0 \n        then return\
    \ x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a program which prints the factorial of a number.\
    \ \nThe factorial of a number $n$ is defined as:", "    if n == 1 \n        return\
    \ x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n  \
    \      return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function which returns the number of times a given number\
    \ appears in a given array.", "    if n == 1 \n        then return x\n       \
    \ else return y\n    end\n    if n % 2 == 0 \n        then return x_or_y(n / 2,\
    \ x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a number as an argument and returns the\
    \ number of digits in that number.", "    if n == 1 \n        return x\n    else\
    \ \n        return y\nend\n</cell>\n<code language=julia-1.5>\n@assert x_or_y(7,\
    \ 34, 12) == 34\n@assert x_or_y(15, 8, 5) == 5\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of times a value appears in a given array.",
  "    if n == 2 || n == 3 || n == 5\n        return x\n    else\n        return y\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of prime numbers less than a given number. \nFor example if given\
    \ number is 10, the function should return 3.", "    if n == 1 \n        then\
    \ return x\n        else return y\n    end\n    \n    if n % 2 == 0 \n       \
    \ then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n \
    \   end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.", "    if n == 1 \n        then return x\n        else return y\n\
    \    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n\
    \        else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.",
  "    if n == 1 \n        then return x \n        else return y \n    end\n    \n\
    \    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program\
    \ which prints the Fibonacci numbers. \nThe Fibonacci numbers are the numbers\
    \ in the following sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\n\
    The first two numbers in the Fibonacci sequence are 0 and 1. \nThe second two\
    \ numbers in the Fibonacci sequence are 1 and 2. \nThe third number in the Fibonacci\
    \ sequence is 2. \nThe fourth number in the Fibonacci sequence is 3. \nThe fifth\
    \ number in the Fibonacci sequence is 5. \nThe sixth number in the Fibonacci sequence\
    \ is 8. \nThe seventh number in the Fibonacci sequence is 13. \nThe eighth number\
    \ in the Fibonacci sequence is 21. \nThe ninth number in the Fibonacci sequence\
    \ is 34. \nThe tenth number in the Fibonacci sequence is 55. \nThe eleventh number\
    \ in the Fibonacci sequence is 89. \nThe twelfth number in the Fibonacci sequence\
    \ is 144. \nThe thirteenth number in the Fibonacci sequence is 233. \nThe fourteenth\
    \ number in the Fibonacci sequence is 377. \nThe fifteenth number in the Fibonacci\
    \ sequence is 610. \nThe sixteenth number in the Fibonacci sequence is 987. \n\
    The seventeenth number in the Fibonacci sequence is 1597. \nThe eighteenth number\
    \ in the Fibonacci sequence is 2584. \nThe nineteenth number in the Fibonacci\
    \ sequence is 4181. \nThe twentieth number in the Fibonacci sequence is 6765.\
    \ \nThe twenty-first number in the Fibonacci sequence is 13821. \nThe twenty-second\
    \ number in the Fibonacci sequence is 19643. \nThe twenty-third number in the\
    \ Fibonacci sequence is 31781. \nThe twenty-fourth number in the Fibonacci sequence\
    \ is 514229. \nThe twenty-fifth number in the Fibonacci sequence is 832041. \n",
  "    if n == 1\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes two numbers and returns the sum\
    \ of the squares of the two numbers.", "    if n == 1 \n        then return x\n\
    \    else if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n\
    \        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 4\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.",
  "    if n == 1 \n        then return x\n        else return y\n    end\n    \n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which takes a number n and returns the value of x if n is a prime number and\
    \ returns the value of y otherwise.", "    if n % 2 == 0 \n        then return\
    \ y\n        else return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.", "    if n == 1\n        return x\n\
    \    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return True if n is a prime number and False otherwise.",
  "    if isPrime(n) == true\n        x \n    else\n        y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which takes as input a number n and returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.",
  "    if n == 1 \n        then x\n    else\n        if isPrime(n)\n            then\
    \ x_or_y(n-1, x, y)\n        else\n            y\n        end\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function which returns the sum of all prime\
    \ numbers less than or equal to n.", "    if n == 1 \n        return x\n    else\
    \ if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend", "    if n == 1 \n        then return x\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.", "    if isPrime(n) == true\
    \ \n        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.", "    if n == 1 \n\
    \        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 7\nWrite a program which returns the number of times a given number appears\
    \ in a given list.", "    if n % 2 == 0 \n        then return x\n        else\
    \ return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers and returns the sum of the squares of the numbers.", " \
    \   if n == 2 || n == 3 || n == 5\n        return y\n    else\n        return\
    \ x\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes as input a\
    \ number n and returns the value of x if n is a prime number and returns the value\
    \ of y otherwise.", "    if n == 1 \n        return x\n    else if n % 2 == 0\
    \ \n        return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2, y,\
    \ x)\nend", "    if isPrime(n) == true\n        return x\n    else\n        return\
    \ y\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a number n\
    \ and returns the number of digits in n. \nFor example, x_digits(12) == 3.", " \
    \   if n == 1 \n        then return x\n        else return y\n    end\n    \n\
    \    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program\
    \ which should return the value of x if n is a prime number and should return\
    \ the value of y otherwise.", "    if n == 1 \n        then return x\n       \
    \ else return y\n    end\n    if n % 2 == 0 \n        then return x_or_y(n / 2,\
    \ x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given number appears in a given array. \nFor example count_in_array(3,\
    \ [1, 2, 3, 3]) == 2.", "    if n == 1 \n        then return x\n        else return\
    \ y\n    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n\
    \        else return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        then return x\n    else\
    \ if isPrime(n)\n        then return y\n    else \n        return x_or_y(n-1,\
    \ x, y+1)\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34,\
    \ 12)\n</cell>\n<text>\nExercise 4\nWrite a program which returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.", "    if n ==\
    \ 1\n        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.", "    if n % 2 == 0 \n \
    \       then return x\n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program that prints the numbers from 1 to 100 and then prints\
    \ the numbers that are divisible by 7 and are not divisible by 3.", "    if n\
    \ == 1 \n        then return x\n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        return x \n    else \n\
    \        return y \nend\n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.", "    if n == 1 \n        then return x\n        else return\
    \ y\n    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n\
    \        else return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 10\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.", "    if n == 1 \n     \
    \   then return x\n        else return y\n    end\n    if n % 2 == 0 \n      \
    \  then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function which returns the number of times a given value appears in a given\
    \ array.", "    if n % 2 == 0 \n        then return y\n        else return x\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.", "    if n % 2 == 0 \n        then return y\n        else return\
    \ x\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.", "    if n == 1 \n        then return x\n        else return y\n\
    \    end\n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n      \
    \  else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a number. \nThe function should\
    \ accept a number as an argument and should return an Int64 number.", "    if\
    \ n == 1 \n        return x\n    else\n        return y\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a number.", "    if\
    \ n == 1 \n        then return x\n    else if n % 2 == 0 \n        then return\
    \ x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.",
  "    if n % 2 == 0\n        then return y\n        else return x\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ a given value appears in a given array.", "    if n % 2 == 0 \n        then\
    \ return x \n        else return y\nend", "    if n % 2 == 0 \n        then return\
    \ x \n        else return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nThe function should accept a number as an argument and should return the factorial\
    \ of that number.", "    if isPrime(n) == true\n        x \n    else\n       \
    \ y\n    end\nend", "    if n == 1 \n        then return x\n    else if n % 2\
    \ == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n\
    \ / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of times a given number appears in a given\
    \ array.", "    if n == 1 \n        then return x\n        else return y\n   \
    \ end\n    \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n   \
    \     else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.",
  "    if n == 1 \n        then return x\n    else if n == 2 \n        then return\
    \ y\n    else if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else\
    \ \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nExamples:\nfactorial(3) == 6\nfactorial(5) == 120\nfactorial(10) == 3628800",
  "    if isPrime(n) == true \n        x \n    else \n        y \n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        then return x\n        else return y\n    end\n    \n    if n\
    \ % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which\
    \ returns the value of x if n is a prime number and returns the value of y otherwise.",
  "    if n == 1 \n        return x\n    else \n        return y\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number.", "    if\
    \ n == 1 \n        then return x\n        else return y\n    end\n    if n % 2\
    \ == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which\
    \ should return True if n is a prime number and False otherwise.", "    if n ==\
    \ 1 \n        then return x\n    else if n == 2 \n        then return y\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n-1, x, y)\n    else \n        then\
    \ return x_or_y(n-1, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which takes an integer n and returns the value of\
    \ n!.", "    if n == 1 \n        return x\n    else if n == 2 \n        return\
    \ y\n    else \n        return x_or_y(n - 1, x, y) \nend", "    if n == 1 \n \
    \       then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n-1, x-y, y)\n        else return x_or_y(n-1, x,\
    \ y-x)\n    end\nend", "    if n == 1 \n        then return x\n    else if isPrime(n)\n\
    \        then return y\n    else \n        then return x_or_y(n-1, x, y+1)\n \
    \   end\nend\n</cell>\n<code language=julia-1.0>\n@code_warntype x_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.0>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of integers and returns\
    \ a vector of the squares of the integers in the vector.", "    if n == 1 \n \
    \       then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.", "    if isPrime(n) == true\n\
    \        return y\n    else\n        return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.", "    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime numbers less than a given number. \nThe function\
    \ should take one argument, the number to check. \nThe function should return\
    \ an integer which is the number of prime numbers less than the given number.",
  "    if n == 1 \n        then return x\n    else if n % 2 == 0 \n        then return\
    \ x_or_y(n/2, x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given number appears in a given array.", "    if n % 2 ==\
    \ 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers and returns the sum\
    \ of all even numbers in the array. \nWrite a function that takes an array of\
    \ numbers and returns the sum of all odd numbers in the array. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array. \nWrite a function that takes an array of numbers and returns the product\
    \ of all odd numbers in the array. \nWrite a function that takes an array of numbers\
    \ and returns the product of all even numbers in the array. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array that are divisible by 7. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 3.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 5. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 2. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 1. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array that are divisible by 4. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 6.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 8. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 10. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 11. \nWrite a\
    \ function that takes an array of numbers and returns the product of all numbers\
    \ in the array that are divisible by 12. \nWrite a function that takes an array\
    \ of numbers and returns the product of all numbers in the array that are divisible\
    \ by 14. \nWrite a function that takes an array of numbers and returns the product\
    \ of all numbers in the array that are divisible by 16. \nWrite a function that\
    \ takes an array of numbers and returns the product of all numbers in the array\
    \ that are divisible by 18. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 20.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 22. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 24. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 26. \nWrite a\
    \ function that takes an array of numbers and returns the product of all numbers\
    \ in the array that are divisible by 28. \nWrite a function that takes an array\
    \ of ", "    if n == 1 \n        then x\n        else y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ value appears in a given array.", "    if n == 1 \n        return x\n    else\n\
    \        if isPrime(n) == true\n            return y\n        else\n         \
    \   return x\n        end\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of prime numbers less than a given number.\
    \ \nThe function should take one argument, x, and return a value of type Int64.",
  "    if n == 1 \n        then return x\n        else return y\n    end\n    \n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.", "    if n == 1 \n        return x \n    else \n        return\
    \ y \nend\n</cell>\n<code language=julia-1.5>\n@assert x_or_y(7, 34, 12) == 34\n\
    @assert x_or_y(15, 8, 5) == 5\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector as input and returns a vector with the squared values of its\
    \ elements.", "    if n==2 \n        then return x\n        else return y\n  \
    \  end\n    if n%3==0 \n        then return x_or_y(n/3, x, y)\n        else return\
    \ x_or_y(n/3, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which prints the prime numbers less than a given number n. \nThe program should\
    \ print all the prime numbers less than or equal to n. \nThe program should print\
    \ all the prime numbers less than or equal to n. \nThe program should print all\
    \ the prime numbers less than or equal to n. \nThe program should print all the\
    \ prime numbers less than or equal to n. \nThe program should print all the prime\
    \ numbers less than or equal to n. \nThe program should print all the prime numbers\
    \ less than or equal to n. \nThe program should print all the prime numbers less\
    \ than or equal to n. \nThe program should print all the prime numbers less than\
    \ or equal to n. \nThe program should print all the prime numbers less than or\
    \ equal to n. \nThe program should print all the prime numbers less than or equal\
    \ to n. \nThe program should print all the prime numbers less than or equal to\
    \ n. \nThe program should print all the prime numbers less than or equal to n.\
    \ \nThe program should print all the prime numbers less than or equal to n. \n\
    The program should print all the prime numbers less than or equal to n. \nThe\
    \ program should print all the prime numbers less than or equal to n. \nThe program\
    \ should print all the prime numbers less than or equal to n. \nThe program should\
    \ print all the prime numbers less than or equal to n. \nThe program should print\
    \ all the prime numbers less than or equal to n. \nThe program should print all\
    \ the prime numbers less than or equal to n. \nThe program should print all the\
    \ prime numbers less than or equal to n. \nThe program should print all the prime\
    \ numbers less than or equal to n. \nThe program should print all the prime numbers\
    \ less than or equal to n. \nThe program should print all the prime numbers less\
    \ than or equal to n. \nThe program should print all the prime numbers less than\
    \ or equal to n. \nThe program should print all the prime numbers less than or\
    \ equal to n. \nThe program should print all the prime numbers less than or equal\
    \ to n. \nThe program should print all the prime numbers less than or equal to\
    \ n. \nThe program should print all the prime numbers less than or equal to n.\
    \ \nThe program should print all the prime numbers less than or equal to n. \n\
    The program should print all the prime numbers less than or equal to n. \nThe\
    \ program should print all the prime numbers less than or equal to n. \nThe program\
    \ should print all the prime numbers less than or equal to n. \nThe program should\
    \ print all the prime numbers less than or equal to n. \nThe program should print\
    \ all the prime numbers less than or equal to n. \n", "    if n == 1 \n      \
    \  return x\n    else if n == 2 \n        return y\n    else if n % 2 == 0 \n\
    \        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2, y,\
    \ x)\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of divisors of a given number. \nFor example\
    \ if the number is 7 then it should return 3 because there are 3 divisors: 1,\
    \ 2, and 3.", "    if n == 1 \n        return x\n    else if n % 2 == 0 \n   \
    \     return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2, y, x)\n\
    end", "    if n == 2\n        y \n    else\n        x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the value of x if n is a prime number\
    \ and should return the value of y otherwise.", "    if n == 1 \n        then\
    \ return x\n        else return y\n    end\n    \n    if n % 2 == 0 \n       \
    \ then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n \
    \   end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints the square\
    \ of a given number. \nThe program should ask the user for a number and then print\
    \ its square. \nThe program should ask the user for a number and then print its\
    \ square. \nThe program should ask the user for a number and then print its square.\
    \ \nThe program should ask the user for a number and then print its square. \n\
    The program should ask the user for a number and then print its square. \nThe\
    \ program should ask the user for a number and then print its square. \nThe program\
    \ should ask the user for a number and then print its square. \nThe program should\
    \ ask the user for a number and then print its square. \nThe program should ask\
    \ the user for a number and then print its square. \nThe program should ask the\
    \ user for a number and then print its square. \nThe program should ask the user\
    \ for a number and then print its square. \nThe program should ask the user for\
    \ a number and then print its square. \nThe program should ask the user for a\
    \ number and then print its square. \nThe program should ask the user for a number\
    \ and then print its square. \nThe program should ask the user for a number and\
    \ then print its square. \nThe program should ask the user for a number and then\
    \ print its square. \nThe program should ask the user for a number and then print\
    \ its square. \nThe program should ask the user for a number and then print its\
    \ square. \nThe program should ask the user for a number and then print its square.\
    \ \nThe program should ask the user for a number and then print its square. \n\
    The program should ask the user for a number and then print its square. \nThe\
    \ program should ask the user for a number and then print its square. \nThe program\
    \ should ask the user for a number and then print its square. \nThe program should\
    \ ask the user for a number and then print its square. \nThe program should ask\
    \ the user for a number and then print its square. \nThe program should ask the\
    \ user for a number and then print its square. \nThe program should ask the user\
    \ for a number and then print its square. \nThe program should ask the user for\
    \ a number and then print its square. \nThe program should ask the user for a\
    \ number and then print its square. \nThe program should ask the user for a number\
    \ and then print its square. \nThe program should ask the user for a number and\
    \ then print its square. \nThe program should ask the user for a number ", " \
    \   if n == 1 \n        return x \n    else \n        return y \nend \n</cell>\n\
    <code language=julia-1.5>\n@assert x_or_y(7, 34, 12) == 34\n@assert x_or_y(15,\
    \ 8, 5) == 5\n</cell>\n<text>\nExercise 3\nWrite a program which prints the following\
    \ string: \n\"The value of x is x if n is a prime number. \nThe value of y is\
    \ y if n is not a prime number.\"", "    if n == 1 \n        then return x \n\
    \        else return y \n    end\n    \n    for d in 2:(n-1) \n        if n%d\
    \ == 0 \n            then return x_or_y(n, x-1, y) \n            else return x_or_y(n,\
    \ x, y-1) \n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(15,\
    \ 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of prime numbers less than a given number. \nThe function should take one argument,\
    \ n, which should be an Int64.", "    if n % 2 == 0 \n        then x_or_y(n, x,\
    \ y)\n        else y\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.", "    if n % 2 == 0 \n        then return\
    \ x \n        else return y\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.", "    if n % 2 == 0 \n        then\
    \ return x\n        else return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the value of x if n is divisible by 3 and \nthe value of y if n\
    \ is divisible by 5 and should return the value of z if n is \ndivisible by both\
    \ 3 and 5 and should return -1 otherwise.", "    if n == 1 \n        then return\
    \ x\n    else if n == 2 \n        then return y\n    else if n % 2 == 0 \n   \
    \     then return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2, y,\
    \ x)\nend\n</cell>\n<text>\nExercise 4\nWrite a program which should return the\
    \ value of x if n is \n    a prime number and should return the value of y otherwise.",
  "    if n == 1 \n        return x \n    else \n        return y \nend \n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of elements in a vector which satisfy a certain condition. \nFor\
    \ example the function should return the number of elements in a vector which\
    \ satisfy the condition $x^2 + y^2 = z^2$. \nThe function should work for vectors\
    \ of any length.", "    if n == 1 \n        then return x \n    else \n      \
    \  if isPrime(n) \n            then return x \n        else \n            return\
    \ y \nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime numbers\
    \ less than or equal to n.", "    if n == 1 \n        then return x \n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the value of x if n is a prime number and should\
    \ return the value of y otherwise.", "    if n == 1 \n        then return x\n\
    \        else return y\n    end\n    \n    if n % 2 == 0 \n        then return\
    \ x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given number appears in a given array.", "    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\n    end\nend", "    if\
    \ n == 1 \n        then return x\n        else return y\n    end\n    \n    if\
    \ n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function which\
    \ takes an integer n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        return x\n    else if n\
    \ % 2 == 0 \n        return x_or_y(n-1, x, y)\n    else \n        return x_or_y(n-1,\
    \ y, x)\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints the prime\
    \ numbers between 1 and 100. \nThe program should print each prime number on a\
    \ separate line.", "    if n == 1 \n        then return x\n    else if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2,\
    \ y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ value appears in a given array.", "    if isPrime(n) == true\n        return\
    \ x\n    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.", "    if n % 2 == 0 \n        then\
    \ return y\n        else return x\n    end\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an integer n and returns the sum of its digits. \n\
    For example, sum_of_digits(123) = 1 + 2 + 3 = 6.", "    if n == 1 \n        then\
    \ return x\n        else return y\n    end\n    if n % 2 == 0 \n        then return\
    \ x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.", "    if n % 2 == 0\n        then return\
    \ y\n        else return x\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of numbers and returns the sum of all even numbers\
    \ in the array.", "    if n == 1\n        return x\n    else\n        return y\n\
    end", "    if n == 1\n        return x\n    else\n        return y\nend", "  \
    \  if n == 1 \n        then return x\n    else if n % 2 == 0 \n        then return\
    \ x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend", " \
    \   if isPrime(n) == true \n        then return x \n        else return y\n  \
    \  end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a number\
    \ n and returns the square of n if n is a prime number and returns the square\
    \ of -n otherwise.", "    if isPrime(n) == true\n        x \n    else\n      \
    \  y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return True if n is a prime number and False otherwise.", "    if n % 2 == 0\
    \ \n        then return x \n        else return y\n    end\nend", "    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is a prime number\
    \ and should return the value of y otherwise.", "    if n == 2 || n == 3 || n\
    \ == 5\n        return y\n    else\n        return x\nend", "    if n == 1 \n\
    \        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function which returns the value of x if n is a prime number and should return\
    \ the value of y otherwise.", "    if n % 2 == 0 \n        then return x \n  \
    \      else return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which takes a number n and returns the square of n if n is \n    a prime number\
    \ and returns the cube of n otherwise.", "    if n == 1 \n        then return\
    \ x\n    else if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else\
    \ \n        then return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a program which takes as\
    \ input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        then return x \n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that takes in three numbers\
    \ and returns the sum of the squares of the first two numbers and the sum of the\
    \ squares of the last two numbers. \nThe function should return two numbers. \n\
    The function should return nothing if the input numbers are less than or equal\
    \ to zero.", "    if n == 1 \n        then return x\n        else return y\n \
    \   end\n    \n    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n \
    \       else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which takes a number n and returns the value of x if n is\
    \ a prime number and returns the value of y otherwise.", "    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return True if n is divisible by 3 and\
    \ False otherwise.", "    if n == 1 \n        return x\n    else if n % 2 == 0\
    \ \n        return x_or_y(n-1, x, y)\n    else \n        return x_or_y(n-1, y,\
    \ x)\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n == 1 \n        return x \n    else \n        return y \nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.",
  "    if isPrime(n) == true\n        return x\n    else\n        return y\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which takes as input a number n and returns\
    \ the square of n. \nThe function should raise an error if n is not a positive\
    \ integer.", "    if n == 1 \n        then return x \n        else return y \n\
    \    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y) \n \
    \       else return x_or_y(n/2, y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the factorial of a given number.\
    \ \nFor example factorial(5) == 120", "    if isPrime(n) == true \n        then\
    \ return x \n        else return y\n    end\nend", "    if n % 2 == 0 \n     \
    \   then return y\n        else return x\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.", "    if n == 1\n      \
    \  return x\n    else\n        return y\nend", "    if n == 1 \n        then x\n\
    \    else if n % 2 == 0 \n        then x_or_y(n / 2, x, y)\n    else \n      \
    \  then x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor example factorial(5) == 120.", "    if\
    \ n == 1 \n        then return x\n    else if n % 2 == 0 \n        then return\
    \ x_or_y(n/2, x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which takes as\
    \ input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        return x\n    else if n\
    \ == 2 \n        return y\n    else if n % 2 == 0 \n        return x_or_y(n /\
    \ 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.", " \
    \   if n == 1 \n        then return x\n        else return y\n    end\n    \n\
    \    if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the value of x if n is a prime number and should return the value of y otherwise.",
  "    if n==2 \n        return x \n    else \n        return y \nend", "    if n\
    \ == 1 \n        then return x\n        else return y\n    end\n    \n    if n\
    \ % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a program which takes\
    \ as input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        return x\n    else if n\
    \ % 2 == 0 \n        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n\
    \ / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.", "    if isPrime(n) == true\n        return x\n    else\n\
    \        return y\nend", "    if n==2 || n==3 || n==5 || n==7 || n==11 || n==13\
    \ || n==17 || n==19 || n==23 || n==29 || n==31 || n==37 || n==43 || n==59 || n==63\
    \ || n==67 || n==71 \n    then y\n    else x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that will return the number of digits in an integer.\
    \ \nThe function should take an Int64 argument and return the number of digits\
    \ in the argument. \nThe function should raise an error if the argument is not\
    \ an Int64.", "    if isPrime(n) == true\n        return x\n    else\n       \
    \ return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers and returns the number of elements that are greater than\
    \ or equal to 5", "    if n % 2 == 0 \n        then return y\n        else return\
    \ x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the factorial of a number. \nFor example factorial(3) == 3 * 2 * 1.", "    if\
    \ isPrime(n) == true\n        return x\n    else\n        return y\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a program which takes a number as input\
    \ and prints out the square of \nthat number. \nFor example if the input is 10,\
    \ the output should be 100. \nIf the input is 100, the output should be 10000.",
  "    if n % 2 == 0 \n        then return x \n        else return y\nend", "    if\
    \ n == 1\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        then x\n    else\n        if isPrime(n) \n            then y\n\
    \        else\n            x\n        end\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program that prints the square of the numbers from 1 to 100. \nThe\
    \ program should print each number on a separate line.", "    if n == 1 \n   \
    \     then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which prints the square of x if x is a prime number and prints\
    \ the square of y otherwise.", "    if n == 1 \n        then x\n    else if n\
    \ % 2 == 0 \n        then x_or_y(n/2, x, y)\n    else \n        y \nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function which takes in three numbers and returns\
    \ the sum of the squares of the first two numbers and the sum of the squares of\
    \ the last two numbers. \nThe function should only take in three numbers and return\
    \ three numbers.", "    if isPrime(n) == true\n        return y\n    else\n  \
    \      return x\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which\
    \ should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.", "    if n % 2 == 0 \n        then return y\n   \
    \     else return x\n    end\nend", "    if n == 1 \n        return x\n    else\
    \ if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the integers \nless than or\
    \ equal to $n$. \nThe factorial of 0 is 1.", "    if n == 1 \n        then x\n\
    \    else\n        if n % 2 == 0 \n            then x_or_y(n / 2, x, y)\n    \
    \    else\n            if n % 3 == 0 \n                then x_or_y(n / 3, x, y)\n\
    \            else\n                if n % 5 == 0 \n                    then x_or_y(n\
    \ / 5, x, y)\n                else\n                    if n % 7 == 0 \n     \
    \                   then x_or_y(n / 7, x, y)\n                    else\n     \
    \                   if n % 11 == 0 \n                            then x_or_y(n\
    \ / 11, x, y)\n                        else\n                            if n\
    \ % 13 == 0 \n                                then x_or_y(n / 13, x, y)\n    \
    \                        else\n                                if n % 17 == 0\
    \ \n                                    then x_or_y(n / 17, x, y)\n          \
    \                      else\n                                    if n % 19 ==\
    \ 0 \n                                        then x_or_y(n / 19, x, y)\n    \
    \                                else\n                                      \
    \  if n % 23 == 0 \n                                            then x_or_y(n\
    \ / 23, x, y)\n                                        else\n                \
    \                            if n % 29 == 0 \n                               \
    \                 then x_or_y(n / 29, x, y)\n                                \
    \            else\n                                                if n % 31 ==\
    \ 0 \n                                                    then x_or_y(n / 31,\
    \ x, y)\n                                                else\n              \
    \                                      if n % 37 == 0 \n                     \
    \                                   then x_or_y(n / 37, x, y)\n              \
    \                                      else\n                                \
    \                        if n % 41 == 0 \n                                   \
    \                         then x_or_y(n / 41, x, y)\n                        \
    \                                else\n                                      \
    \                      if n % 43 == 0 \n                                     \
    \                           then x_or_y(n / 43, x, y)\n                      \
    \                                      else\n                                \
    \                                if n % 47 == 0 \n                           \
    \                                         then x_or_y(n / 47, x, y)\n        \
    \                                                        else\n              \
    \                                                      if n % 49 == 0 \n     \
    \                                                                   then x_or_y(n\
    \ / 49, x, y)\n                                                              \
    \      else\n                                                                \
    \                        if n % 53 == 0 \n                                   \
    \                         then x_or_y(n / 53, x, y)\n                        \
    \                                else\n                                      \
    \                      if n % 59 == 0 \n                                     \
    \                           then x_or_y(n / 59, x, y)\n                      \
    \                                      else\n                                \
    \                                if n % 61 == 0 \n                           \
    \                                         then x_or_y(n / 61, x, y)\n        \
    \                                                        else\n              \
    \                                                      if n % 67 == 0 \n     \
    \                                                                   then x_or_y(n\
    \ / 67, x, y)\n                                                              \
    \      else\n                                                        if n % 71\
    \ == 0 \n                                                            then x_or_y(n\
    \ / 71, x, y)\n                                                        else\n\
    \                                                            if n % 73 == 0 \n\
    \                                                                then x_or_y(n\
    \ / 73, x, y)\n                                                            else\n\
    \                                                                if n % 79 ==\
    \ 0 \n                                                                    then\
    \ x_or_y(n / 79, x, y)\n                                                     \
    \           else\n                                                           \
    \         if n % 83 == 0 \n                                                  \
    \                      then x_or_y(n / 83, x, y)\n                           \
    \                                         else\n                             \
    \                           if n % 89 == 0 \n                                \
    \                            then x_or_y(n ", "    if n == 1 \n        then return\
    \ x\n    else if n == 2 \n        then return y\n    else if n % 2 == 0\n    \
    \    then return x_or_y(n / 2, x, y)\n    else return x_or_y(n / 2, y, x)\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given value appears in a given array.", "    if n == 1 \n\
    \        then return x \n    else \n        if isPrime(n) \n            then return\
    \ x \n        else \n            return y \nend \n</cell>\n<text>\nExercise 3\n\
    Write a program which should return the value of x if n is \n    a prime number\
    \ and should return the value of y otherwise.", "    if n == 1 \n        then\
    \ return x\n        else return y\n    end\n    \n    if n % 2 == 0 \n       \
    \ then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which takes an integer n and returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.", "    if isPrime(n) == true\n\
    \        return x\n    else\n        return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.", "    if n == 1 \n\
    \        return x\n    else if n == 2 \n        return y\n    else if n % 2 ==\
    \ 0 \n        return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2,\
    \ y, x)\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes as input\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.", "    if n == 1 \n        return x\n    else if n % 2\
    \ == 0 \n        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n\
    \ / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.", "    if n % 2 == 0 \n       \
    \ then x_or_y(n / 2, x, y)\n        else y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.", "    if n == 1 \n        return\
    \ x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n    else \n  \
    \      return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the sum\
    \ of the squares of the integers in the vector.", "    if n % 2 == 0 \n      \
    \  then x_or_y(n / 2, x, y)\n        else y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.", "    if n == 1 \n        then return x\n    else\
    \ if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the product of two numbers. \nThe function should take two numbers as arguments\
    \ and return the product of those two numbers. \nThe function should raise an\
    \ error if the arguments are of different types. \nThe function should raise an\
    \ error if the arguments are negative. \nThe function should raise an error if\
    \ the arguments are zero.", "    if n == 1 \n        return x \n    else \n  \
    \      return y \nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers and returns the sum of the squares of the numbers.", " \
    \   if n == 1 \n        then return x\n        else return y\n    end\n    if\
    \ n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which\
    \ should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.", "    if n == 1 \n        return x \n    else \n\
    \        return y \nend \n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.", "    if n % 2 == 0 \n        then return y\n        else return\
    \ x\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function which returns the factorial of a number.", "    if n == 1 \n    \
    \    then return x\n        else return y\n    end\n    if n % 2 == 0 \n     \
    \   then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given number appears in a given\
    \ array.", "    if n == 1 \n        then return x\n    else if n == 2 \n     \
    \   then return y\n    else if n % 2 == 0 \n        then return x_or_y(n / 2,\
    \ x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a number n and returns the number of digits\
    \ in the number n. \nFor example if n = 123 then your function should return 3.",
  "    if n == 2 || n == 3 || n == 5\n        return y\n    else\n        return x\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number. \nThe factorial of a number $n$ is defined as:", "    if n==2 ||\
    \ n==3 || n==5 || n==7 || n==11 || n==13 || n==17 || n==19 || n==23 || n==29 ||\
    \ n==31 || n==37 || n==43 || n==49 || n==59 || n==63 || n==67 || n==71 \n    \
    \    then y\n    else\n        x\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a program which should return the number of prime numbers less than a given\
    \ number. \nThe program should accept one argument which is the number to be tested.",
  "    if n == 1 \n        then return x\n        else return y\n    end\n    \n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a number. \nThe factorial of a number is defined as the product of all the\
    \ integers \nless than or equal to that number. \nFor example, 5! = 5 x 4 x 3\
    \ x 2 x 1 = 120. \nThe function should work for any positive integer $n$. \nThe\
    \ function should return $0$ for $n = 1$. \nThe function should return $n!$ for\
    \ $n \\ge 1$. \nThe function should work for any integer type.", "    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time x_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\n@time x_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.", "    if n == 1 \n     \
    \   return x \n    else \n        return y \nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes two vectors x and y and returns a vector of the cross\
    \ product of the two vectors.", "    if isPrime(n) == true \n        x \n    else\
    \ \n        y \n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which\
    \ should return the value of x if n is \n    a prime number and should return\
    \ the value of y otherwise.", "    if isPrime(n) == true\n        x \n    else\n\
    \        y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of digits in an integer. \nFor example the number 123 has 3 digits,\
    \ 42 has 2 digits, etc.", "    if isPrime(n) == true \n        x \n    else\n\
    \        y \n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers less than or equal to $n$. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that returns the factorial\
    \ of a number $n$ if $n$ is a prime number. \nWrite a function that returns the\
    \ factorial of a number $n$ if $n$ is not a prime number. \nWrite a function that\
    \ returns the factorial of a number $n$ if $n$ is neither a prime number nor $n$\
    \ is a prime number. \nWrite a function that returns the factorial of a number\
    \ $n$ if $n$ is neither a prime number nor $n$ is a prime number and $n$ is even.\
    \ \nWrite a function that returns the factorial of a number $n$ if $n$ is neither\
    \ a prime number nor $n$ is a prime number and $n$ is odd. \nWrite a function\
    \ that returns the factorial of a number $n$ if $n$ is neither a prime number\
    \ nor $n$ is a prime number and $n$ is neither even nor odd. \nWrite a function\
    \ that returns the factorial of a number $n$ if $n$ is neither a prime number\
    \ nor $n$ is a prime number and $n$ is neither even nor odd and $n$ is less than\
    \ or equal to 0.", "    if n == 1 \n        then return x\n        else return\
    \ y\n    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n\
    \        else return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ a prime number and should return the value of y otherwise.", "    if n % 2 ==\
    \ 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers and returns the sum\
    \ of the squares of the numbers.", "    if n % 2 == 0 \n        then return x\
    \ \n        else return y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function which takes a number as input and returns the number of digits in the\
    \ number.", "    if n == 1 \n        return x\n    else if n % 2 == 0 \n     \
    \   return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\n\
    end\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which prints the\
    \ numbers from 1 to 10 (both included) \nexcept for those divisible by 3 and 5.",
  "    if n == 1\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function which returns the factorial of a number.\
    \ \nThe function should accept one argument, x, and should return the factorial\
    \ of x.", "    if n % 2 == 0\n        then return y\n        else return x\n \
    \   end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.", "    if n == 1 \n        then return x\n        else return y\n\
    \    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n-1, x, x*y)\n\
    \        else return x_or_y(n-1, y, x*y)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.", "    if n == 1 \n     \
    \   then return x\n    else if n == 2 \n        then return y\n    else if n %\
    \ 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2,\
    \ y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a program which returns the number of prime numbers less than a given number.\
    \ \nThe function should take one argument which is the number to be tested.",
  "    if isPrime(n) == true\n        return y\n    else\n        return x\n    end\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a number as input\
    \ and returns the number of digits in that number. \nFor example the number 12345\
    \ has 5 digits, 1234 has 4 digits, 123 has 3 digits and 12 has 2 digits. \nThe\
    \ function should work for any number.", "    if n == 1 \n        then return\
    \ x\n        else return y\n    end\n    if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of divisors of n that are less than or equal to n.", "    if n == 1 \n\
    \        return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the value of x if n is a prime number and should return the value of y otherwise.",
  "    if n==1 \n        return x\n    else if n==2 \n        return y\n    else if\
    \ n==3 \n        return x+y\n    else if n==5 \n        return x-y\n    else if\
    \ n==7 \n        return x-y\n    else if n==11 \n        return x-y\n    else\
    \ if n==13 \n        return x-y\n    else if n==17 \n        return x-y\n    else\
    \ if n==19 \n        return x-y\n    else if n==23 \n        return x-y\n    else\
    \ if n==29 \n        return x-y\n    else if n==37 \n        return x-y\n    else\
    \ if n==43 \n        return x-y\n    else if n==51 \n        return x-y\n    else\
    \ if n==59 \n        return x-y\n    else if n==67 \n        return x-y\n    else\
    \ if n==73 \n        return x-y\n    else if n==81 \n        return x-y\n    else\
    \ if n==89 \n        return x-y\n    else if n==97 \n        return x-y\n    else\
    \ if n==103 \n        return x-y\n    else if n==111 \n        return x-y\n  \
    \  else if n==119 \n        return x-y\n    else if n==127 \n        return x-y\n\
    \    else if n==135 \n        return x-y\n    else if n==143 \n        return\
    \ x-y\n    else if n==151 \n        return x-y\n    else if n==159 \n        return\
    \ x-y\n    else if n==167 \n        return x-y\n    else if n==175 \n        return\
    \ x-y\n    else if n==183 \n        return x-y\n    else if n==191 \n        return\
    \ x-y\n    else if n==199 \n        return x-y\n    else if n==207 \n        return\
    \ x-y\n    else if n==215 \n        return x-y\n    else if n==223 \n        return\
    \ x-y\n    else if n==231 \n        return x-y\n    else if n==239 \n        return\
    \ x-y\n    else if n==247 \n        return x-y\n    else if n==255 \n        return\
    \ x-y\n    else if n==263 \n        return x-y\n    else if n==271 \n        return\
    \ x-y\n    else if n==279 \n        return x-y\n    else if n==287 \n        return\
    \ x-y\n    else ", "    if n == 1 \n        then return x\n        else return\
    \ y\n    end\n    \n    if n % 2 == 0 \n        then return x_or_y(n-1, x-y, y)\n\
    \        else return x_or_y(n-1, x, y-x)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the factorial of a number. \nThe function should\
    \ accept a number as its only argument. \nThe function should return an Int64\
    \ value.", "    if isPrime(n) == true \n        then return x \n        else return\
    \ y \n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers and\
    \ returns the sum of the squares of the numbers.", "    if isPrime(n) == true\n\
    \        return x\n    else\n        return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.",
  "    if n == 1 \n        then x\n    else if n % 2 == 0 \n        then x_or_y(n\
    \ / 2, x, y)\n    else \n        y \nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ program which prints the value of x if n is a prime number and prints the value\
    \ of y otherwise.", "    if n == 1 \n        then return x\n    else if n == 2\
    \ \n        then return y\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of prime numbers less than a given number. \nThe function should take\
    \ one parameter, n, which represents the upper limit of the prime numbers \nto\
    \ return.", "    if isPrime(n) == true\n        return x\n    else\n        return\
    \ y\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ array of numbers and returns the number of positive numbers in the array.",
  "    if n == 1 \n        then return x\n        else return y\n    end\n    if n\
    \ % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of prime numbers less than\
    \ a given number. \nThe function should take one argument, the number to check\
    \ for primality. \nThe function should return one integer which is the number\
    \ of prime numbers less than the given number.", "    if n == 1\n        return\
    \ x\n    else\n        return y\n    end\nend", "    if n == 1 \n        then\
    \ return x \n        else return y \n    end\n    \n    if n % 2 == 0 \n     \
    \   then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.", "    if n == 1 \n        then return x\n\
    \        else return y\n    end\n    if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which prints the square of every number from\
    \ 1 to 100. \nThe program should print each number on a separate line.", "   \
    \ if n==2 \n        then return x\n        else return y\n    end\n    \n    if\
    \ n%2==0 \n        then return x_or_y(n-1, x, 2*x)\n        else return x_or_y(n-1,\
    \ y, 2*y)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 2\nWrite a program which should return the value of\
    \ x if n is \n    a prime number and should return the value of y otherwise.",
  "    if n == 1 \n        then return x\n        else return y\n    end\n    \n \
    \   if n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return\
    \ x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function which returns the value\
    \ of x if n is a prime number and should return the value of y otherwise.", " \
    \   if n == 1 \n        then return x\n    else if n % 2 == 0 \n        then return\
    \ x_or_y(n / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        then return x\n        else return y\n    end\n    if isPrime(n)\
    \ \n        then return x\n        else return y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ which returns the number of prime factors of n.", "    if n == 1 \n        then\
    \ return x\n        else return y\n    end\n    \n    if n % 2 == 0 \n       \
    \ then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n \
    \   end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a number\
    \ as input and returns the factorial of that number. \nThe factorial of a number\
    \ $n$ is defined as:", "    if n % 2 == 0 \n        return x \n    else \n   \
    \     return y \nend", "    if n % 2 == 0 \n        return x \n    else \n   \
    \     return y \nend ", "    if n == 1 \n        then return x\n    else if n\
    \ % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n        then\
    \ return x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a program which returns the number of divisors of a given number. \nThe function\
    \ should take two arguments: an integer and a divisor. \nThe function should return\
    \ the number of divisors of that number. \nThe function should return the number\
    \ of divisors of that number if that number is \ndivisible by the divisor. \n\
    The function should return the number of divisors of that number if that number\
    \ is \ndivisible by the divisor and also if the number is divisible by the divisor\
    \ and \nalso if the number is divisible by the divisor and also if the number\
    \ is divisible \nby the divisor and also if the number is divisible by the divisor\
    \ and also if the \nnumber is divisible by the divisor and also if the number\
    \ is divisible by the divisor \nand also if the number is divisible by the divisor\
    \ and also if the number is divisible \nby the divisor and also if the number\
    \ is divisible by the divisor and also if the \nnumber is divisible by the divisor\
    \ and also if the number is divisible by the divisor \nand also if the number\
    \ is divisible by the divisor and also if the number is divisible \nby the divisor\
    \ and also if the number is divisible by the divisor and also if the \nnumber\
    \ is divisible by the divisor and also if the number is divisible by the divisor\
    \ \nand also if the number is divisible by the divisor and also if the number\
    \ is divisible \nby the divisor and also if the number is divisible by the divisor\
    \ and also if the \nnumber is divisible by the divisor and also if the number\
    \ is divisible by the divisor \nand also if the number is divisible by the divisor\
    \ and also if the number is divisible \nby the divisor and also if the number\
    \ is divisible by the divisor and also if the \nnumber is divisible by the divisor\
    \ and also if the number is divisible by the divisor \nand also if the number\
    \ is divisible by the divisor and also if the number is divisible \nby the divisor\
    \ and also if the number is divisible by the divisor and also if the \nnumber\
    \ is divisible by the divisor and also if the number is divisible by the divisor\
    \ \nand also if the number is divisible by the divisor and also if the number\
    \ is divisible \nby the divisor and also if the number is divisible by the divisor\
    \ and also if the \nnumber is divisible by the divisor and also if the number\
    \ is divisible by the divisor \nand also if the number is divisible by the divisor\
    \ and also if the number is divisible \nby the divisor and also if the number\
    \ is divisible by the divisor and also if the \nnumber is divisible by the divisor ",
  "    if isPrime(n) == true \n        x \n    else \n        y \n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.", "    if n\
    \ == 1 \n        return x \n    else \n        return y \nend", "    if n == 1\
    \ \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.",
  "    if n == 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend", "    if n % 2 == 0\n\
    \        x \n    else\n        y\n    end\nend", "    if n % 2 == 0 \n       \
    \ then return y\n        else return x\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

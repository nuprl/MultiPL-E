name: HumanEval_101_words_string
language: julia
prompt: "\"\"\"\n    You will be given a string of words separated by commas or spaces.\
  \ Your task is\n    to split the string into words and return an array of the words.\n\
  \    \n    For example:\n    words_string(\"Hi, my name is John\") == [\"Hi\", \"\
  my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three, four, five,\
  \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \"\"\
  \"\nfunction words_string(s::String)::Vector{String} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
  Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
  One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
  five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"\
  ])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
  , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
  \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
completions: ["    \n    words = split(s, \",\")\n    \n    return words\nend", " \
    \   \n    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words_string = split(s)\n    \n    return\
    \ words_string\nend", "    \n    words_string = \"\"\n    \n    for word in split(s)\n\
    \        words_string += word + \" \"\n    end\n    \n    words_string\nend\n\
    </cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    \n    words_string = \"\"\n    \n\
    \    for word in split(s, \", \")\n        words_string += word + \", \"\n   \
    \ end\n    \n    words_string[end-2:end]\nend\n</cell>\n<code language=julia-1.5>\n\
    @test words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n@test words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns the number of words in the\
    \ string.", "    \n    words = split(s)\n    \n    return words\nend", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words_string =\
    \ \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\n\
    \    end\n    \n    words_string = words_string[2:end]\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend", "    \n    words_string = \"\"\n    \n    for word\
    \ in split(s, \",\")\n        words_string += word\n    end\n    \n    return\
    \ words_string\nend", "    \n    words = split(s, \",\")\n    \n    return words\n\
    end", "    \n    words_string = \"\"\n    \n    for word in split(s)\n       \
    \ words_string += word + \", \"\n    end\n    \n    words_string = words_string[2:end]\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a string where all the words are capitalized.\
    \ \nFor example \"Hi, my name is John\" -> \"Hi, My Name Is John\"", "    \n \
    \   words = split(s, \",\")\n    \n    return words\nend", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end", "    \n    words_string = \"\"\n    \n    for word in split(s, \" \")\n\
    \        words_string += word\n    end\n    \n    return words_string\nend\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of words in the string.", "    words = split(s, \",\")\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    \n    words = split(s, \", \")\n \
    \   \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    words = split(s, \",\")\n    \n    return words\nend", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \", \")\n        words_string\
    \ += word + \", \"\n    end\n    \n    words_string = words_string[2:end]\n  \
    \  \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words_string =\
    \ \"\"\n    \n    for word in split(s, \" \")\n        words_string += word\n\
    \    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\
    \n    end\n    \n    words_string[end-2:end]\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_words that takes a string and returns the number of words in the string.",
  "    \n    words = split(s, \",\")\n    \n    return words\nend", "    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words = split(s, \", \")\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\n@assert words_string(\"One, two, three, four, five, six\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns a string where all\
    \ spaces are replaced by underscores and all commas are replaced by underscores.",
  "    \n    words = split(s)\n    \n    return words\nend", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\
    \n    end\n    \n    words_string = words_string[2:end]\n    \n    return split(words_string)\n\
    end\n</cell>\n<code language=julia-1.3>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    \n    words = split(s, \",\")\n  \
    \  \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s)\n        words_string\
    \ += word + \" \"\n    end\n    \n    return words_string.split(\" \")\nend\n\
    </cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of words in the string.", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    words = split(s)\n    \n    return words\nend", "    \n    words\
    \ = split(s)\n    \n    return words\nend", "    \n    words_string = split(s,\
    \ \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise: Write a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s, \"\
    ,\")\n    \n    return words\nend", "    \n    words_string = split(s, \",\")\n\
    \    words_string = split(s, \" \")\n    \n    return words_string\nend\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of words in the string.", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words = split(s)\n    \n  \
    \  return words\nend\n</cell>\n<code language=julia-1.0>\n@test words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n@test\
    \ words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    return words\nend\n</cell>\n<code language=julia-1.4>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \", \")\n    \n    return words\nend", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.4>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.4>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend\n</cell>\n<code language=julia-1.5>", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word\n    end\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    words =\
    \ split(s, \",\")\n    \n    return words\nend", "    \n    words_string = \"\"\
    \n    \n    for word in split(s, \",\")\n        words_string += word\n    end\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    words = split(s,\
    \ \", \")\n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function called words_strings\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ the string into words and return an array of words.", "    words = split(s,\
    \ \",\")\n    words = split(s, \" \")\n    return words\nend", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s,\
    \ \", \")\n    \n    return words\nend", "    \n    words_string = \"\"\n    \n\
    \    for word in split(s)\n        words_string += word + \", \"\n    end\n  \
    \  \n    words_string = words_string[2:end]\n    \n    return words_string\nend\n\
    </cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    words = split(s, \",\")\n    return\
    \ words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words = split(s, \",\")\n \
    \   \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\
    \ number of times each word appears in the input vector.", "    \n    words =\
    \ split(s)\n    \n    return words\nend", "    words = split(s, \" \")\n    return\
    \ words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three,\
    \ four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    words =\
    \ split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s, \"\
    ,\")\n    \n    return words\nend", "    \n    words = split(s)\n    \n    return\
    \ words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three,\
    \ four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns the same vector but with all words capitalized.",
  "    \n    words = split(s, \",\")\n    \n    return words\nend", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end", "    \n    words_string = \"\"\n    \n    for word in split(s, \",\")\n\
    \        words_string += word\n    end\n    \n    return words_string\nend\n</cell>\n\
    <code language=julia-1.4>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.4>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of words in the string.", "    words = split(s, \",\")\n    return words\nend\n\
    </cell>\n<code language=julia-0.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <code language=julia-0.5>\nwords_string(\"One, two, three, four, five, six\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ a string with all the characters in lower case. \nFor example \"Hi, my name\
    \ is John\" -> \"hi, my name is john\"", "    \n    words = split(s)\n    \n \
    \   return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi,\
    \ my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n\
    \    return words_string\nend", "    \n    words = split(s)\n    \n    return\
    \ words\nend", "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of words in the string.", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s, \",\")\n    \n    return\
    \ words\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of\
    \ words and returns the same vector but with all words capitalized.", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words = split(s)\n    \n  \
    \  return words\nend", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns a vector of words. Your function should split on spaces\
    \ and commas and then split each word on spaces. For example, words_string(\"\
    Hi, my name is John\") should return [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ].", "    \n    words = split(s)\n    \n    return words\nend", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s)\n    \n    return words_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"One, two, three, four, five, six\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns a string with all the words\
    \ capitalized. \nFor example, \ncapitalize_string(\"Hi, my name is John\") should\
    \ return \"Hi, My Name Is John\".", "    \n    words = split(s, \",\")\n    \n\
    \    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi,\
    \ my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words_string = split(s)\n \
    \   \n    return words_string\nend", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end", "    \n    words = split(s)\n    \n    return words\nend", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \" \"\
    \n    end\n    \n    return split(words_string)\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \", \")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\n@assert words_string(\"One, two, three, four, five, six\") ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of strings and returns a vector\
    \ of integers where the integer value is the index of the string in the original\
    \ vector.", "    words = split(s, \" \")\n    return words\nend", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend", "    words = split(s)\n   \
    \ \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    words = split(s, \",\")\n    \n  \
    \  return words\nend", "    \n    words_string = split(s, \", \")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of strings and returns a vector of strings where each string has been\
    \ concatenated with itself and separated by a space.", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\
    \n    end\n    \n    words_string = words_string[2:end]\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s)\n        words_string += word + \", \"\n    end\n\
    \    \n    words_string = words_string[2:end]\n    \n    return words_string\n\
    end", "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n<code\
    \ language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"One, two, three, four, five, six\")\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of strings and returns a vector of integers\
    \ representing the number of words in the string.", "    \n    words_string =\
    \ \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\n\
    \    end\n    \n    words_string = words_string[2:end]\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s, \",\")\n        words_string += word\n    end\n\
    \    \n    return words_string\nend", "    \n    words = split(s, \",\")\n   \
    \ \n    return words\nend", "    \n    words_string = \"\"\n    \n    for word\
    \ in split(s, \",\")\n        words_string += word\n    end\n    \n    return\
    \ words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns a string with all the words reversed.", "    \n \
    \   words = split(s, \",\")\n    \n    return words\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s)\n    \n    return words_string\nend", "    \n   \
    \ words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n \
    \   return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of strings. Each string in\
    \ the returned vector is the concatenation of the word and each word in the input\
    \ vector. \nFor example, \n    words_string([[\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"], [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]])\nshould\
    \ return \n    [\"HimynameisJohn\", \"Onetwothreefourfivesix\"]\nHint: use the\
    \ concat function.", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s)\n        words_string += word + \", \"\n    end\n\
    \    \n    words_string = words_string[2:end]\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s, \"\
    \ \")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \",\")\n        words_string\
    \ += word\n    end\n    \n    return words_string\nend", "    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words_string = \"\"\n    \n\
    \    for word in split(s)\n        words_string += word + \", \"\n    end\n  \
    \  \n    words_string = words_string[2:end]\n    \n    return words_string\nend",
  "    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ word_count(s::String)::Dict that returns a dictionary where the keys are words\
    \ and the values are the counts of the number of times that word appears in the\
    \ string.", "    \n    words = split(s, \",\")\n    \n    return words\nend",
  "    \n    words = split(s, \",\")\n    \n    return words\nend", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s)\n    \n    return words_string\nend", "    \n   \
    \ words = split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n\
    \    return words_string\nend", "    \n    words_string = split(s, \",\")\n  \
    \  words_string = split(s, \" \")\n    \n    return words_string\nend", "    words\
    \ = split(s, \", \")\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \",\")\n        words_string\
    \ += word\n    end\n    \n    return words_string\nend", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \", \"\
    \n    end\n    \n    words_string = words_string[2:end]\n    \n    return split(words_string)\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John,\
    \ my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John, my name is John, my name is John\")\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is John,\
    \ my name is John, my name is John, my name is John, my name is John, my name\
    \ is John, my name is John, my name is John, my name is John, my name is ", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.3>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \",\")\n        words_string\
    \ += word\n    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s)\n        words_string\
    \ += word + \" \"\n    end\n    \n    words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    @test words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"]\n@test words_string(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns a string with all the words\
    \ capitalized.", "    \n    words_string = split(s, \",\")\n    words_string =\
    \ split(s, \" \")\n    \n    return words_string\nend", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end", "    \n    words_string = split(s)\n    \n    return words_string\nend",
  "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend", "    \n    words =\
    \ split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \", \")\n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function count_words(s::String)::Int\
    \ that counts the number of words in a string.", "    \n    words_string = split(s)\n\
    \    return words_string\nend", "    \n    words = split(s, \",\")\n    \n   \
    \ return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of words in the string.", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    \n    words_string = split(s, \",\"\
    )\n    words_string = split(s, \" \")\n    \n    return words_string\nend\n</cell>\n\
    <code language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns a string with all\
    \ uppercase letters replaced by their lowercase counterparts.", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_words that takes a string and returns the number of words in the string.",
  "    \n    words = split(s)\n    \n    return words\nend", "    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    words_string = \"\"\n    \n\
    \    for word in split(s)\n        words_string += word + \" \"\n    end\n   \
    \ \n    words_string\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    words = split(s)\n    \n  \
    \  return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of strings and returns a vector of strings where each string\
    \ has been concatenated with itself n times.", "    \n    words = split(s)\n \
    \   \n    return words\nend", "    words = split(s, \",\")\n    return words\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of words in the string.", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s, \",\")\n        words_string += word\n    end\n\
    \    \n    return words_string\nend", "    \n    words = split(s, \",\")\n   \
    \ \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \",\")\n    return words\nend", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s)\n        words_string += word + \" \"\n    end\n\
    \    \n    words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    words = split(s,\
    \ \",\")\n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \",\")\n        words_string\
    \ += word + \" \"\n    end\n    \n    words_string\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a string where all spaces are replaced by underscores.",
  "    words = split(s, \", \")\n    return words\nend", "    \n    words_string =\
    \ split(s)\n    \n    return words_string\nend", "    \n    words_string = \"\"\
    \n    \n    for word in split(s, \",\")\n        words_string += word\n    end\n\
    \    \n    return words_string\nend", "    \n    words = split(s, \",\")\n   \
    \ \n    return words\nend", "    \n    words_string = \"\"\n    \n    for word\
    \ in split(s)\n        words_string += word + \", \"\n    end\n    \n    words_string\
    \ = words_string[2:end]\n    \n    return words_string\nend", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s, \",\")\n        words_string += word\n\
    \    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    words\
    \ = split(s, \", \")\n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend", "    \n    words =\
    \ split(s, \",\")\n    \n    return words\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_10_make_palindrome
language: julia
prompt: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
  \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
  \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
  \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
  \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
  \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
  \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
  ) == \"jerryrrej\")\nend\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

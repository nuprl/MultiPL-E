name: HumanEval_39_prime_fib
language: julia
prompt: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n \
  \   >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
  \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
  \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
  \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
  \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
  @test(candidate(10) == 433494437)\nend\n"
completions: ["    if n == 1 \n        1\n    else if n == 2 \n        2\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        return n\n    else if n == 2\n        return\
    \ 3\n    else if n == 3\n        return 5\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n    else\n\
    \        if prime_fib(n - 2) == true\n            prime_fib(n - 2)\n        else\n\
    \            prime_fib(n - 2) + prime_fib(n - 1)\n        end\n    end\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=julia,primes |>\n<code>", "    if n == 1\
    \ \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 10\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\n>>>\
    \ prime_fib(5)\n89\n>>> prime_fib(10)\n1307\n>>> prime_fib(20)\n524288\n>>> prime_fib(30)\n\
    896757\n>>> prime_fib(40)\n13743895347\n>>> prime_fib(50)\n23316899555\n>>> prime_fib(60)\n\
    56626899295\n>>> prime_fib(70)\n891429003707\n>>> prime_fib(80)\n1447233402467\n\
    >>> prime_fib(90)\n23316899555\n>>> prime_fib(100)\n43349443707\n>>> prime_fib(110)\n\
    706458231087\n>>> prime_fib(120)\n1447233402467\n>>> prime_fib(130)\n23316899555\n\
    >>> prime_fib(140)\n43349443707\n>>> prime_fib(150)\n706458231087\n>>> prime_fib(160)\n\
    1447233402467\n>>> prime_fib(170)\n23316899555\n>>> prime_fib(180)\n43349443707\n\
    >>> prime_fib(190)\n706458231087\n>>> prime_fib(200)\n1447233402467\n>>> prime_fib(210)\n\
    23316899555\n>>> prime_fib(220)\n43349443707\n>>> prime_fib(230)\n706458231087\n\
    >>> prime_fib(240)\n1447233402467\n>>> prime_fib(250)\n23316899555\n>>> prime_fib(260)\n\
    43349443707\n>>> prime_fib(270)\n706458231087\n>>> prime_fib(280)\n1447233402467\n\
    >>> prime_fib(290)\n23316899555\n>>> prime_fib(300)\n43349443707\n>>> prime_fib(310)\n\
    706458231087\n>>> prime_fib(320)\n1447233402467\n", "    if n < 2 || n == 1\n\
    \        return n\n    else if n == 2\n        return 3\n    else if n % 2 ==\
    \ 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19]\n    \"\"\"", "    if n < 2\n        2\n   \
    \ else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"", "    if n < 2 \n        then return n\n    else if n ==\
    \ 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a |>\n<| a tags=julia,fibonacci |>\n<code>", "    if\
    \ n == 1 \n        2\n    else \n        if n % 2 == 0 \n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        else \n            prime_fib(n - 1)\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer. Explain what you are\
    \ doing and why you did it.\n<|/ c |>\n<| c |>\nThis is not an answer. Explain\
    \ what you are doing and why you did it.\n<|/ c |>\n<| c |>\nThis is not an answer.\
    \ Explain what you are doing and why you did it.\n<|/ c |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n < 2 \n        then return n\n    else if n == 2 \n  \
    \      then return 1\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code\
    \ language=julia-1.5>", "    if n == 1 \n        2\n    else if n == 2 \n    \
    \    3\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<text>\nLet's test our new function prime_fib:", "    if n\
    \ < 2\n        2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n\
    \            prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis is not an\
    \ answer to the question. He asked for a recursive solution, not a looping one.\n\
    <|/ c |>\n<| c |>\nThis is not an answer to the question. He asked for a recursive\
    \ solution, not a looping one.\n<|/ c |>\n<| c |>\nThis is not an answer to the\
    \ question. He asked for a recursive solution, not a looping one.\n<|/ c |>\n\
    <| c |>\nThis is not an answer to the question. He asked for a recursive solution,\
    \ not a looping one.\n<|/ c |>\n<| c |>\nThis is not an answer to the question.\
    \ He asked for a recursive solution, not a looping one.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n        3\n  \
    \  else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n  \
    \  else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "    if n < 2 \n        then return n\n    else\
    \ if n == 2 \n        then return 1\n    else if n % 2 == 0 \n        then return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 0 || n == 1 \n        return n\n    else \n      \
    \  return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n\
    \    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n\
    \    else return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2\n        2\n\
    \    else\n        if n == 2\n            3\n        else\n            if n %\
    \ 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n            else\n\
    \                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n>>> prime_fib(10)\n55\n>>>\
    \ prime_fib(11)\n89\n>>> prime_fib(12)\n144\n>>> prime_fib(13)\n233\n>>> prime_fib(14)\n\
    377\n>>> prime_fib(15)\n610\n>>> prime_fib(16)\n987\n>>> prime_fib(17)\n1597\n\
    >>> prime_fib(18)\n2584\n>>> prime_fib(19)\n4181\n>>> prime_fib(20)\n6765\n>>>\
    \ prime_fib(21)\n10946\n>>> prime_fib(22)\n17711\n>>> prime_fib(23)\n28657\n>>>\
    \ prime_fib(24)\n46368\n>>> prime_fib(25)\n75025\n>>> prime_fib(26)\n121393\n\
    >>> prime_fib(27)\n196418\n>>> prime_fib(28)\n317811\n>>> prime_fib(29)\n514229\n\
    >>> prime_fib(30)\n832040\n>>> prime_fib(31)\n1346269\n>>> prime_fib(32)\n2178309\n\
    >>> prime_fib(33)\n3524578\n>>> prime_fib(34)\n5702887\n>>> prime_fib(35)\n9227465\n\
    >>> prime_fib(36)\n14930352\n>>> prime_fib(37)\n24157817\n>>> prime_fib(38)\n\
    39088169\n>>> prime_fib(39)\n63245986\n>>> prime_fib(40)\n102334155\n>>> prime_fib(41)\n\
    165580141\n>>> prime_fib(42)\n267914296\n>>> prime_fib(43)\n433494437\n>>> prime_fib(44)\n\
    701408733\n>>> prime_fib(45)\n1134903170\n>>> prime_fib(46)\n1836311903\n>>> prime_fib(47)\n\
    2971215073\n>>> prime_fib(48)\n4807526976\n>>> ", "    if n == 0 \n        1\n\
    \    else if n == 1 \n        2\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n   \
    \ else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n\
    \        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n == 3\n        return\
    \ 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else\n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.0>", "    if n < 2\n        1\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2\n      \
    \  return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ < 2\n        1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci,primes |>\n<| c |>\nThanks for the answer. I am not\
    \ familiar with Julia but this looks like a good solution. I am going to try it\
    \ out and see if it works.\n<|/ c |>\n<| c |>\nI added a Julia solution to the\
    \ answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for the Julia solution. I\
    \ will try it out and see if it works.\n<|/ c |>\n<| c |>\nI added a Julia solution\
    \ to the answer. Hope it helps.\n<|/ c |>\n<| a dscore=2 |>\nI wrote a Julia package\
    \ that does this for you. \nhttps://github.com/jrwlkx/Primes.jl\n<code>\njulia>\
    \ using Primes", "    if n == 0 \n        1\n    else if n == 1 \n        2\n\
    \    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n \
    \       return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_list returns list\
    \ of prime Fibonacci numbers.\n    >>> prime_fib_list()\n    [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89]\n\
    \    \"\"\"", "    if n == 1 \n        return 2\n    else if n == 2 \n       \
    \ return 3\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.4>",
  "    if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n % 2 ==\
    \ 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return n\n  \
    \  else if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 0 \n        0\n    else if n == 1 \n        1\n   \
    \ else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n    if\
    \ n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else\
    \ return prime_fib(3 * n + 1) + prime_fib(n / 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n  \
    \      return 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2\n        2\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>",
  "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.1>\nprime_fib(10)\n</cell>\n<code\
    \ language=julia-1.1>", "    if n < 2 \n        then return n\n    else \n   \
    \     prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns n-th number that is a Fibonacci number and it's also\
    \ prime.", "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else\
    \ if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n   \
    \     prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThis does not provide an answer to the question. Once you have sufficient\
    \ [reputation](https://stackoverflow.com/help/whats-reputation) you will be able\
    \ to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26867455)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I do not have enough reputation to comment on other people's posts.\
    \ I only have enough reputation to comment on answers. I thought this was an answer\
    \ to the question. Maybe I misunderstood the question?\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. My bad.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        1\n \
    \   else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.1>", "    if n == 1 \n        return 2\n    if n == 2 \n\
    \        return 3\n    if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 || n >\
    \ 100\n        error(\"n must be between 2 and 100\")\n    end\n    if n == 1\
    \ || n == 2\n        return n\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2\n        return n\n    else if n == 2\n        return\
    \ 3\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n_minus_2 = prime_fib(n\
    \ - 2)\n        fib_n_minus_1 = prime_fib(n - 1)\n        fib_n_minus_3 = prime_fib(n\
    \ - 3)\n        return fib_n_minus_3 + fib_n_minus_2 + fib_n_minus_1\nend\n</cell>\n\
    <code language=julia-1.4>\nprime_fib(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\nWrite\
    \ a function that returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a ", "    if n < 2\n        prime_fib(n+1)\n    else\n      \
    \  if n % 2 == 0\n            prime_fib(n + 2)\n        else\n            if n\
    \ % 3 == 0\n                prime_fib(n + 3)\n            else\n             \
    \   if n % 5 == 0\n                    prime_fib(n + 5)\n                else\n\
    \                    if n % 7 == 0\n                        prime_fib(n + 7)\n\
    \                    else\n                        prime_fib(n + 6)\n    end\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    if n < 2\n  \
    \      1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(10)\n</cell>\n<code language=julia-1.0>",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n == 3\n        return 5\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\n    end\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2\n        2\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n == 3\n        return\
    \ 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        if n % 2 == 0\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        else\n            prime_fib(n - 1)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2 \n        then return n\n \
    \   else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 || n == 1 \n \
    \       then return n\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        else return prime_fib(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 1 \n        return 2\n    else if n == 2 \n        return 3\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2 \n        return n\n    else if n ==\
    \ 2 \n        return 3\n    else if n == 3 \n        return 5\n    else if n %\
    \ 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n   \
    \     return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers from 1 to n.\n\
    \    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\nI wrote a Julia package to calculate Fibonacci numbers. It is very fast\
    \ and accurate. \nhttps://github.com/gokulkrishna/Fibonacci.jl\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>", "    if n < 2 \n        then return n\n    else\
    \ if n == 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe `prime_fib` function can\
    \ be simplified to `return n <= 2 ? n : prime_fib(n - 1) + prime_fib(n - 2)`.\n\
    <|/ c |>\n<| a tags=julia,fibonacci |>\nThe most efficient way is to use memoization:\n\
    <code>", "    if n < 2 || n > 100\n        error(\"n must be between 2 and 100\"\
    )\n    end\n    if n == 2\n        return n\n    elseif n == 3\n        return\
    \ 5\n    elseif n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>", "    if n < 2\n        2\n    else\n    \
    \    prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n == 0\n        1\n    else if n == 1\n        2\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n     \
    \   then return n\n    else if n == 2 \n        then return 1\n    else if n ==\
    \ 3 \n        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 0 || n == 1 \n        then return n\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=1\
    \ |>\n<code>", "    if n == 0 || n == 1 \n        return n\n    else \n      \
    \  return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if n == 0 \n        then return 1\n    else if n == 1 \n        then return\
    \ 2\n    else \n        fib_n_1 = prime_fib(n - 1)\n        fib_n_2 = prime_fib(n\
    \ - 2)\n        return fib_n_1 + fib_n_2\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n == 1 then return\
    \ 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n /\
    \ 2)\n    if n % 3 == 0 then return prime_fib(n / 3)\n    return prime_fib(n /\
    \ 2) + prime_fib(n / 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n    else\n\
    \        prime_fib(n-2) + prime_fib(n-1)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2 \n        return n\n    else if n ==\
    \ 2 \n        return 3\n    else if n == 3 \n        return 5\n    else if n %\
    \ 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n   \
    \     return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\n\
    end\n</cell>\n<text>\nExercise 10\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nHint: use recursion.", "    if n\
    \ == 0 || n == 1 \n        return n\n    else \n        return prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        return n\n    else if n == 2 \n        return\
    \ 3\n    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 3) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n   \
    \ prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return n\n  \
    \  else if n == 2\n        return 3\n    else if n == 3\n        return 5\n  \
    \  else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n  \
    \  else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n  \
    \      return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else \n  \
    \      prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThe `prime_fib` function can be written more concisely as `return\
    \ n < 2 ? n : prime_fib(n - 1) + prime_fib(n - 2)`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your comment. I just wanted to show that Julia has some nice features that\
    \ can make code more concise and efficient.\n<|/ c |>\n<| a |>\n<code>", "   \
    \ if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n % 2 ==\
    \ 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n == 1 \n        2\n    else if n == 2 \n        3\n   \
    \ else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that calculates the factorial of a number.", "    if n ==\
    \ 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n    else\n\
    \        if prime_fib(n - 2) == prime_fib(n - 1)\n            prime_fib(n - 2)\n\
    \        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is not an answer to the\
    \ question. He is asking for a recursive solution. Your answer is a looping solution.\n\
    <|/ c |>\n<| c |>\nI believe this to be the correct answer. Recursion is what\
    \ I was looking for. Thanks!\n<|/ c |>\n<| c |>\nThis is not an answer to the\
    \ question. He is asking for a recursive solution. Your answer is a looping solution.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n\
    <|/ a |>\n<| a dscore=0 |>\n<code>", "    if n < 2\n        2\n    else\n    \
    \    prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        if prime_fib(n - 1) == n\n         \
    \   prime_fib(n - 1)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis code does\
    \ not work. `prime_fib(5)` returns `89` but `prime_fib(4)` returns `13`.\n<|/\
    \ c |>\n<| c |>\nThanks for your comment. I fixed the code now.\n<|/ c |>\n<|\
    \ c |>\nThis code does not work. `prime_fib(5)` returns `89` but `prime_fib(4)`\
    \ returns `13`.\n<|/ c |>\n<| c |>\nThanks for your comment. I fixed the code\
    \ now.\n<|/ c |>\n<| c |>\nThis code does not work. `prime_fib(5)` returns `89`\
    \ but `prime_fib(4)` returns `13`.\n<|/ c |>\n<| a tags=julia,fibonacci,primes\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        1\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a number as an argument and returns its\
    \ square root.\nThe square root of a number $x$ is defined as:", "    if n < 2\
    \ \n        return n\n    else if n == 2 \n        return 3\n    else if n ==\
    \ 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n\
    \    else if n == 3 \n        return 5\n    else if n % 2 == 0 \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n <\
    \ 2 \n        then return n\n    else if n == 2 \n        then return 1\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "    if n == 0 then return 1\n    if n == 1 then\
    \ return 2\n    if n % 2 == 0 then return prime_fib(n / 2)\n    return prime_fib(3\
    \ * n + 1) + prime_fib(n / 2)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(5)\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2\n        1\n    else\n    \
    \    prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a number is prime\
    \ or not. \nThe function should return true or false depending on whether the\
    \ number is prime or not. \nThe function should take one argument and that argument\
    \ should be any number. \nThe function should return true if the number is prime\
    \ and false if the number is not prime.", "    if n < 2 \n        return n\n \
    \   else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(1)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(2)\n</cell>\n<code language=julia-1.5>\nprime_fib(3)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(4)\n</cell>\n<code language=julia-1.5>\nprime_fib(5)\n\
    </cell>\n<text>\nExercise 1\nWrite a function that calculates the sum of all prime\
    \ numbers less than a given number n.", "    if n < 2\n        2\n    else\n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return\
    \ n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n <\
    \ 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n == 1 then return 2\n    if\
    \ n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n    return\
    \ prime_fib(3 * n + 1) + 1\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n\
    </cell>\n<code language=julia-1.5>", "    if n < 2 \n        then return n\n \
    \   else if n == 2 \n        then return 1\n    else if n == 3 \n        then\
    \ return 2\n    else \n        fib_n = prime_fib(n - 1) + prime_fib(n - 2)\n \
    \       if fib_n % 2 == 0 \n            then return fib_n\n        else return\
    \ fib_n + 1\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>",
  "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n        3\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n < 2\n        1\n    else\n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nHint: Use recursion.", "    if n == 0 || n == 1 \n   \
    \     return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if n < 2\n        2\n    else\n\
    \        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2\n        prime_fib(n)\
    \ = n\n    else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n    end\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a |>\n<code>", "    if n == 0\
    \ || n == 1 \n        then return n\n        else return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n   \
    \ 5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        return n\n    else if n == 2\n        return 3\n    else\
    \ if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n\
    \        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(5)\n</cell>\n<text>\nThe Fibonacci sequence is defined by the recurrence\
    \ relation:", "    if n < 2 \n        return n\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n       \
    \ then return 2\n    else \n        fib_n = prime_fib(n - 2)\n        prime_fib_n\
    \ = prime_fib(n - 1)\n        return fib_n + prime_fib_n\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if n == 1 then return 2\n    if n == 2 then return\
    \ 3\n    if n % 2 == 0 then return prime_fib(n / 2)\n    else return prime_fib(3\
    \ * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that ", "    if n < 2 \n     \
    \   return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n   \
    \     return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <text>\nThe Fibonacci sequence is defined by the recurrence relation:", "    if\
    \ n < 2 \n        then return n\n    else if n == 2 \n        then return 1\n\
    \    else if n % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n    \
    \    then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>",
  "    if n == 0 || n == 1 \n        return n\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n == 0 || n == 1 \n        return n\n    else \n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0 \n   \
    \     1 \n    else if n == 1 \n        2 \n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2) \nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<text>\nThe Fibonacci numbers are the numbers in the following pattern:",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci,primes |>\n<| c |>\nThis is not the most\
    \ efficient solution. There are better ways to do this.\n<|/ c |>\n<| c |>\nI\
    \ agree, there are better ways to do this. But I wanted to show that it is possible\
    \ in Julia.\n<|/ c |>\n<| c |>\nThe `prime_fib` function can be written more efficiently\
    \ by using the [Sieve of Eratosthenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n\
    <|/ c |>\n<| c |>\nI agree with you. I just wanted to show that it is possible\
    \ in Julia.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else if n == 3 \n\
    \        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else if n == 3 \n        then return 2\n    else if n % 2 == 0\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n     \
    \   then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 1 \n        2\n    else\
    \ if n == 2 \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        if n == 2\n            3\n  \
    \      else\n            if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n            else\n                prime_fib(n - 1) + prime_fib(n - 3)\n\
    \        end\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n        3\n  \
    \  else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThe question is about `prime_fib`, not `fibonacci_number`.\n<|/\
    \ c |>\n<| c |>\nI thought the question was about prime numbers, not Fibonacci\
    \ numbers. I edited my answer to include a function that returns prime numbers.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    if n < 2\n        1\n    else\n    \
    \    prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 7: Write a function that returns the nth Fibonacci number and the sum of its\
    \ digits. \nHint: Use a recursive function.", "    if n < 2 \n        return n\n\
    \    else if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n\
    \    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2\n        1\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks if a number is prime or not. \nThe function should return\
    \ true or false depending on whether the number is prime or not. \nThe function\
    \ should accept one argument, n, which represents the number to be checked.\n\
    The function should return true if the number is prime and false otherwise.",
  "    if n < 2 \n        then return n\n    else if n == 2 \n        then return\
    \ 1\n    else if n == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        if fib_n % 2 == 0 \n            then return\
    \ fib_n\n        else return fib_n + 1\nend\n</cell>\n<text>\nExercise 5\nWrite\
    \ a function that returns the number of prime numbers between two given numbers.",
  "    if n == 0 || n == 1 \n        return n\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2 \n        return n\n    else if n == 2 \n        return 3\n    else\
    \ if n == 3 \n        return 5\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n<code>",
  "    if n == 1 \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    \    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n\
    \    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    else return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        2\n\
    \    else if n == 2 \n        3\n    else \n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<code language=julia-1.5>\nprime_fib(5)\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"", "    if n < 2 \n        then return n\n    else if n == 2 \n   \
    \     then return 1\n    else if n == 3 \n        then return 2\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"", "    if n < 2\n        2\n    else\n        if prime_fib(n\
    \ - 1) == n\n            prime_fib(n - 1)\n        else\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>>\
    \ prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n  \
    \  89\n    \"\"\"", "    if n < 2\n        return n\n    else if n == 2\n    \
    \    return 3\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>",
  "    if n < 2\n        2\n    else\n        if prime_fib(n - 2) == prime_fib(n -\
    \ 1)\n            prime_fib(n - 2)\n        else\n            prime_fib(n - 1)\
    \ + prime_fib(n - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 then return 2\n\
    \    if n == 2 then return 3\n    if n == 3 then return 5\n    if n == 4 then\
    \ return 13\n    if n == 5 then return 89\n    if n == 6 then return 131\n   \
    \ if n == 7 then return 233\n    if n == 8 then return 341\n    if n == 9 then\
    \ return 521\n    if n == 10 then return 891\n    if n == 11 then return 1343\n\
    \    if n == 12 then return 2853\n    if n == 13 then return 5643\n    if n ==\
    \ 14 then return 10289\n    if n == 15 then return 16610\n    if n == 16 then\
    \ return 25827\n    if n == 17 then return 41869\n    if n == 18 then return 67653\n\
    \    if n == 19 then return 113433\n    if n == 20 then return 1771193\n    if\
    \ n == 21 then return 28657143\n    if n == 22 then return 46363487\n    if n\
    \ == 23 then return 75022967\n    if n == 24 then return 122001619\n    if n ==\
    \ 25 then return 196857863\n    if n == 26 then return 317560477\n    if n ==\
    \ 27 then return 514229557\n    if n == 28 then return 832046721\n    if n ==\
    \ 29 then return 1346269717\n    if n == 30 then return 2189142639\n    if n ==\
    \ 31 then return 3415895407\n    if n == 32 then return 5521728369\n    if n ==\
    \ 33 then return 8912691783\n    if n == 34 then return 1396263797\n    if n ==\
    \ 35 then return 2338127913\n    if n == 36 then return 4654739519\n    if n ==\
    \ 37 then return 7309883071\n    if n == 38 then return 11536026871\n    if n\
    \ == 39 then return 17875591613\n    if n == 40 then return 2868477027\n    if\
    \ n == 41 then return 4184179621\n    if n == 42 then return 6765576765\n    if\
    \ n == 43 then return 11343316610\n    if n == 44 then return 17711928657\n  \
    \  if n == 45 then return 28657142855\n    if n == 46 then return 41869113433\n\
    \    if n == 47 then return 6765317711\n    if n == 48 then return 11343316610\n\
    \    if n == 49 then return 17711928657\n    if n == 50 then return 28657142855\n\
    \    if n == 51 then return 41869113433\n    if n == 5", "    if n < 2\n     \
    \   1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n   \
    \     2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2\
    \ |>\n<code>", "    if n < 2 \n        then return n\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then return\
    \ n\n        else return prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.1>", "    if n == 0\n        0\n    elseif n == 1\n   \
    \     1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n   \
    \     2\n    else if n == 2 \n        3\n    else \n        prime_fib(n-1) + prime_fib(n-2)\n\
    end\n</cell>\n<text>\nExercise 10\nWrite a function that returns the factorial\
    \ of a number.", "    if n == 0 || n == 1 \n        return n\n    else \n    \
    \    return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        prime_fib(n)\
    \ = n\n    else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a number\
    \ is prime or not. \nThe function should take one argument, an integer number.\n\
    The function should return true if the number is prime and false otherwise.\n\
    The function should return nothing but a boolean value.\nThe function should raise\
    \ an error if the argument is not an integer.\nThe function should raise an error\
    \ if the argument is negative.\nThe function should raise an error if the argument\
    \ is zero.\nThe function should raise an error if the argument is greater than\
    \ or equal to 2.\nThe function should raise an error if the argument is less than\
    \ or equal to 0.", "    if n < 2\n        2\n    else\n        if prime_fib(n\
    \ - 1) == n\n            prime_fib(n - 1)\n        else\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        end\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        1\n    else\
    \ if n == 1\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer, but a comment\
    \ on the question. Also, please format your code properly.\n<|/ c |>\n<| c |>\n\
    This is not an answer, but a comment on the question. Also, please format your\
    \ code properly.\n<|/ c |>\n<| c |>\nThis is not an answer, but a comment on the\
    \ question. Also, please format your code properly.\n<|/ c |>\n<| c |>\nThis is\
    \ not an answer, but a comment on the question. Also, please format your code\
    \ properly.\n<|/ c |>\n<| c |>\nThis is not an answer, but a comment on the question.\
    \ Also, please format your code properly.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    if n == 0 then return 1\n    if n == 1 then return 2\n    if n % 2 == 0 then\
    \ return prime_fib(n - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1)\
    \ + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n == 1\
    \ \n        2\n    else if n == 2 \n        3\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>", "    if n\
    \ == 1 then return 2\n    if n == 2 then return 3\n    if n == 3 then return 5\n\
    \    if n % 2 == 0 then return prime_fib(n / 2) else prime_fib(3 * n + 2)\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        if prime_fib(n - 1) == n\n  \
    \          prime_fib(n - 1)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n\
    </cell>\n<text>\nThe function prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.", "    if n == 1 \n        2\n    else if n == 2\
    \ \n        3\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n < 2\n        1\n    else\n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\
    \"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n \
    \   3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n \
    \   >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n   \
    \ else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a tags=julia,fibonacci |>\nThe answer by is great, but I wanted to add\
    \ that you can also use recursion to solve this problem. \n<code>", "    if n\
    \ == 0 \n        then return 1\n    else if n == 1 \n        then return 2\n \
    \   else \n        fib_n_1 = prime_fib(n - 1)\n        fib_n_2 = prime_fib(n -\
    \ 2)\n        return fib_n_1 + fib_n_2\nend\n</cell>\n<code language=julia-1.0>",
  "    if n == 0 \n        0\n    else if n == 1 \n        1\n    else \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=0\
    \ |>\n<code>", "    if n < 2\n        2\n    else\n        prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        2\n    else\n\
    \        if prime_fib(n - 2) == prime_fib(n - 1)\n            prime_fib(n - 2)\n\
    \        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>", "    if n < 2\n        prime_fib(n)\n\
    \    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nprime_fib(10)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the n-th Fibonacci number that is prime.", "    if n <\
    \ 2\n        2\n    else\n        prime_fib(n-2) + prime_fib(n-1)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 0\n    \
    \    0\n    else\n        if n == 1\n            1\n        else\n           \
    \ if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n       \
    \     else\n                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n\
    \    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>",
  "    if n < 2\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n == 0 || n == 1 \n        return n\n    else if n % 2 == 0 \n  \
    \      return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        1\n    else\n\
    \        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        1\n  \
    \  else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>", "    if n == 1 \n        2\n    else if n == 2 \n    \
    \    3\n    else if n % 2 == 0 \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    else \n        prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n == 1 \n        return\
    \ 2\n    elif n == 2 \n        return 3\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n        return n\n  \
    \  else if n == 2\n        return 3\n    else if n % 2 == 0\n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code\
    \ language=julia-1.5>", "    if n < 2 \n        then return n\n    else if n ==\
    \ 2 \n        then return 1\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2\n        2\n    else\n        if prime_fib(n - 2) == prime_fib(n\
    \ - 1)\n            prime_fib(n - 2)\n        else\n            prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n        end\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci,primes\
    \ |>\n<| a tags=julia,fibonacci,primes |>\nThe first thing that comes to mind\
    \ is to use memoization. \n<code>", "    if n < 2 \n        return n\n    else\
    \ if n == 2 \n        return 3\n    else if n == 3 \n        return 5\n    else\
    \ if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2 \n        then\
    \ return n\n    else if n == 2 \n        then return 1\n    else \n        prime_fib(n\
    \ - 2)\n        prime_fib(n - 1)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia\
    \ |>\n<code>", "    if n == 0 || n == 1 \n        return n\n    else \n      \
    \  return prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that calculates the\
    \ factorial of a number.", "    if n == 1 \n        return 2\n    else if n ==\
    \ 2 \n        return 3\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"", "    if n < 2 \n        then return n\n    else if n == 2 \n        then\
    \ return 1\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nI believe this should be `prime_fib(n - 1) + prime_fib(n\
    \ - 2)` instead of `prime_fib(n - 2) + prime_fib(n - 1)`\n<|/ c |>\n<| c |>\n\
    Thanks, I fixed it.\n<|/ c |>\n<| a dscore=2 |>\nThe accepted answer by is correct,\
    \ but I thought I'd add an alternative that doesn't require recursion:\n<code>",
  "    if n == 0\n        1\n    else\n        if n % 2 == 0\n            prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        else\n            prime_fib(n - 1)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"", "    if n < 2\n     \
    \   prime_fib(n+1)\n    else\n        if prime_fib(n-1) == 0 || prime_fib(n-2)\
    \ == 0 \n            prime_fib(n+1)\n        else\n            prime_fib(n-1)\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2\
    \ \n        return n\n    else if n == 2 \n        return 3\n    else if n ==\
    \ 3 \n        return 5\n    else if n % 2 == 0 \n        return prime_fib(n -\
    \ 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>", "    if n < 2 \n        return\
    \ n\n    else if n == 2 \n        return 3\n    else if n == 3 \n        return\
    \ 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(4)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that calculates the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:", "    if n < 2\n        2\n    else\n        if\
    \ n == 1\n            3\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=1 |>\n<code>", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        1\n    else if n % 2 == 0 \n\
    \        prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n -\
    \ 1) + prime_fib(n - 3)\nend\n</cell>\n<text>\nExercise 10\nWrite a function that\
    \ returns the nth number that is a Fibonacci number and it's also prime.", " \
    \   if n < 2\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_list\
    \ returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

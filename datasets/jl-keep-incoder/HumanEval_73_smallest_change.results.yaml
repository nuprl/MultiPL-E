name: HumanEval_73_smallest_change
language: julia
results:
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7f4a4d4v.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7f4a4d4v.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfynii1ji.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpfynii1ji.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpfynii1ji.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfynii1ji.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfynii1ji.jl:12\n   [2] top-level scope at /tmp/tmpfynii1ji.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfynii1ji.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfynii1ji.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 3\nGiven a string, find the length of the longest substring without repeating\
    \ characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_4iuz0vq.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_4iuz0vq.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of times\
    \ a given element appears in an array. For example, given [1,2,2,3,3,4,4,5,5,5,5,6,6,6,6],\
    \ the function should return 3.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ygcednr.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4ygcednr.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg41vy1_0.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpg41vy1_0.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpg41vy1_0.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpg41vy1_0.jl:12\n   [2] top-level scope at /tmp/tmpg41vy1_0.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg41vy1_0.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg41vy1_0.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwgv84575.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpwgv84575.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpwgv84575.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nWrite a function that returns true if the given string\
    \ is a palindrome (that is, a word or phrase that is the same forwards and backwards).\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpit2l1wli.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpit2l1wli.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjzxcby84.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpjzxcby84.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpjzxcby84.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjzxcby84.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjzxcby84.jl:12\n   [2] top-level scope at /tmp/tmpjzxcby84.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjzxcby84.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjzxcby84.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = length(arr)-1\
    \ to 1 \n        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ i+1)\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem\
    \ 7: Palindrome Partitioning\nGiven a string, find all possible palindrome partitions\
    \ of that string. For example, given \"aab\", return [\"\", \"a\",\"a\",\"b\"\
    ]. Given \"ab\", return [\"\", \"a\",\"b\"].\nusing Test\n\n@testset begin\n\n\
    candidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\
    \t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) ==\
    \ 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1])\
    \ == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\
    \t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"1\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoiemwgts.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoiemwgts.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        if a > arr[smallest_change]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 7: Find the longest palindromic substring in arr\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz_61jbo0.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz_61jbo0.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5rzc8i0_.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp5rzc8i0_.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rzc8i0_.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5rzc8i0_.jl:12\n   [2] top-level scope at /tmp/tmp5rzc8i0_.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rzc8i0_.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5rzc8i0_.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        smallest_change = min(smallest_change, x - arr[smallest_change])\n\
    \    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that checks if a number is palindrome or not. \nA palindrome is a number that\
    \ is the same when read from left to right and from right to left.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbs79j8yt.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbs79j8yt.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nA palindromic number reads the same both ways. The\
    \ largest palindrome made from the product of two 2-digit numbers is 9009 = 91\
    \ x 99.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0vstybag.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0vstybag.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 4\nWrite a function that takes an array of integers and returns the number\
    \ of elements in the array that are less than the average of the array. For example,\
    \ if the array is [4, 6, 10, 2, 7, 1, 3], the function should return 2, since\
    \ there are two elements that are less than the average of the array.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2k6taitw.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2k6taitw.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Inf\
    \ \n    \n    for x in arr \n        if x == reverse(arr[x]) \n            smallest_change\
    \ = x \n            break\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 9\nWrite a function that returns the number of elements in a vector that\
    \ satisfy a condition. For example, if the vector is [1,2,3,4,5,6,7,8,9], then\
    \ your function should return 5 because there are 5 numbers in the vector that\
    \ satisfy the condition: 6 < x < 9. Your function should work for vectors of any\
    \ length.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplbi9ovez.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplbi9ovez.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven an array arr of integers, find the minimum number\
    \ of elements that\nneed to be changed to make the array palindromic. A palindromic\
    \ array is an array that\nis read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpadezhqe_.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpadezhqe_.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 4\nWrite a function that takes in an array of integers\
    \ and returns the number of palindromic arrays in that array.\nusing Test\n\n\
    @testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5,\
    \ 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp55q_r10j.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp55q_r10j.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp55i36tpm.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp55i36tpm.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = largest * 10\n    smallest = smallest * 10\n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    largest = largest * 10\n \
    \   smallest = smallest * 10\n    largest = largest * 10\n    smallest = smallest\
    \ * 10\n    largest = lar\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3fmw8pf5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp3fmw8pf5.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp3fmw8pf5.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n        end\n    end\n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppaei_y6h.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppaei_y6h.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    minimum = minimum(arr)\n\
    \    \n    for i = minimum, length(arr)-1 do\n        if arr[i] != reverse(arr[i])\
    \ \n            minimum = i\n        end\n    end\n    \n    return minimum\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven an array arr of integers, find the minimum number\
    \ of elements that\nneed to be changed to make the array palindromic. A palindromic\
    \ array is an array that\nis read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmperucs6qt.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmperucs6qt.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_p740yjo.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp_p740yjo.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp_p740yjo.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p740yjo.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp_p740yjo.jl:12\n   [2] top-level scope at /tmp/tmp_p740yjo.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p740yjo.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p740yjo.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x != arr[end-1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnbpg762p.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnbpg762p.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    largest\
    \ = maximum(arr)\n    smallest_change = largest\n    for x in arr\n        if\
    \ x != largest\n            smallest_change = smallest_change + 1\n          \
    \  largest = x\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzs88_fdw.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzs88_fdw.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ smallest_change = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ smallest_change = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ smallest_change = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ smallest_change = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ smallest_change = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n\
    \    smalle\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaki46p9i.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpaki46p9i.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpaki46p9i.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return 0\n\
    \    \n    largest = largest * 10\n    smallest = smallest * 10\n    \n    largest\
    \ = largest * 10\n    smallest = smallest * 10\n    \n    largest = largest *\
    \ 10\n    smallest = smallest * 10\n    \n    largest = largest * 10\n    smallest\
    \ = smallest * 10\n    \n    largest = largest * 10\n    smallest = smallest *\
    \ 10\n    \n    largest = largest * 10\n    smallest = smallest * 10\n    \n \
    \   largest = largest * 10\n    smallest = smallest * 10\n    \n    largest =\
    \ largest * 10\n    smallest = smallest * 10\n    \n    largest = largest * 10\n\
    \    smallest = smallest * 10\n    \n    largest = largest * 10\n    smallest\
    \ = smallest * 10\n    \n    largest = largest * 10\n    smallest = smallest *\
    \ 10\n    \n    largest = largest * 10\n    smallest = smallest * 10\n    \n \
    \   largest = largest * 10\n    smallest = smallest * 10\n    \n    largest =\
    \ largest * 10\n    smallest = smallest * 10\n    \n    largest = largest * 10\n\
    \    smallest = smallest * 10\n    \n    largest = largest * 10\n    smallest\
    \ = smallest * 10\n    \n    largest = largest * 10\n    smallest = smallest *\
    \ 10\n    \n    largest = largest * 10\n    smallest = smallest * 10\n    \n \
    \   largest = largest * 10\n    smallest = smallest * 10\n    \n    largest =\
    \ largest * 10\n    smallest = smallest * 10\n    \n    largest = largest * 10\n\
    \    smallest = smallest * 10\n    \n    largest = largest * 10\n    smallest\
    \ = smallest * 10\n    \n    largest = largest * 10\n    smallest = smallest *\
    \ 10\n    \n    largest = largest * 10\n    smallest = smallest * 10\n    \n \
    \   largest = largest * 10\n    smallest = smallest * 10\n    \n    largest =\
    \ largest * 10\n    smalle\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3ph1b7oc.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3ph1b7oc.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if smallest_change > length(arr)\n            break\n    end\n    \n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the longest palindromic substring in arr\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyudwa8mw.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyudwa8mw.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ a in arr\n        smallest_change = smallest_change + 1\n        if a != reverse(arr)\n\
    \            smallest_change = smallest_change - 1\n        end\n    end\n   \
    \ return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 7: Find the longest palindromic substring\nGiven a string, find the length\
    \ of the longest palindromic substring.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ucungez.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6ucungez.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to -1 \n        if arr[i] > arr[i+1] \n   \
    \         smallest_change = smallest_change + 1\n        else \n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of integers\
    \ and returns the number of elements in the array that are less than the average\
    \ of the array.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpufkemknq.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpufkemknq.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        if a > arr[smallest_change]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns an array of all permutations\
    \ of an input array. For example, permutations([1,2,3]) should return [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]].\
    \ Make sure your function works with multidimensional arrays.\nusing Test\n\n\
    @testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5,\
    \ 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiuomuznj.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpiuomuznj.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi5xrwzdk.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpi5xrwzdk.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpi5xrwzdk.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for a in arr\n        if a < arr[smallest_change]\n            smallest_change\
    \ = i\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 2, 1])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given element appears in an array. For example, if the array\
    \ is [1, 1, 2, 3, 4, 4, 5], then your function should return 3 because there are\
    \ 3 1's in the array.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp61ajukb0.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp61ajukb0.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for i = length(arr) - 2 to 1 \n        if arr[i] > arr[i+1] \n          \
    \  smallest_change = smallest_change + 1\n        else \n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"1\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpik1nwfem.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpik1nwfem.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzwzmrie8.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpzwzmrie8.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwzmrie8.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwzmrie8.jl:12\n   [2] top-level scope at /tmp/tmpzwzmrie8.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwzmrie8.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwzmrie8.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) downto 1 do\n        if arr[i] > arr[length(arr)-i-1]\
    \ then\n            smallest_change = i\n        end\n    end\n    \n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"1\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdpesgpsr.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdpesgpsr.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptgz7a_df.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptgz7a_df.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + smallest_change(x)\n\
    \    end\n    \n    return smallest_change\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzwvsg9zg.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: objects\
    \ of type Int64 are not callable\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level scope at /tmp/tmpzwvsg9zg.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:27\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: objects of type Int64 are not callable\n\
    \  Stacktrace:\n   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzwvsg9zg.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:28\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: objects of type Int64 are not callable\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpzwvsg9zg.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:29\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: objects of type Int64 are not callable\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpzwvsg9zg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:30\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: objects of type Int64 are not callable\n \
    \ Stacktrace:\n   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzwvsg9zg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:31\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: objects of type Int64 are not callable\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpzwvsg9zg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:32\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: objects of type Int64 are not callable\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpzwvsg9zg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpzwvsg9zg.jl:33\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: objects of type Int64 are not callable\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpzwvsg9zg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpzwvsg9zg.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzwvsg9zg.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwvsg9zg.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ for i = 1:length(arr)\n        if arr[i] != reverse(arr[i])\n            smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n        end\n    end\n\
    \    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp317jdjh2.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp317jdjh2.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the longest palindromic substring in an array\
    \ of strings\nGiven an array of strings, find the longest palindromic substring.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv9fq1sol.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv9fq1sol.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the largest palindromic subarray\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaqcfswxt.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaqcfswxt.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-1)\n    for i = smallest_change : length(arr)-1\
    \ \n        if arr[i] != reverse(arr[i])\n            smallest_change = i\n  \
    \      end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5x10ni8a.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5x10ni8a.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxo7q7y8i.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpxo7q7y8i.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo7q7y8i.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpxo7q7y8i.jl:12\n   [2] top-level scope at /tmp/tmpxo7q7y8i.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo7q7y8i.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxo7q7y8i.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest \n        return\
    \ largest\n    \n    change = 0\n    \n    for i = 1:largest\n        if arr[i]\
    \ != largest\n            change += 1\n            \n            if arr[i] !=\
    \ smallest \n                change += 1\n                \n            if arr[i]\
    \ != largest \n                change += 1\n                \n            if arr[i]\
    \ != smallest \n                change += 1\n                \n            if\
    \ arr[i] != largest \n                change += 1\n                \n        \
    \    if arr[i] != smallest \n                change += 1\n                \n \
    \           if arr[i] != largest \n                change += 1\n             \
    \   \n            if arr[i] != smallest \n                change += 1\n      \
    \          \n            if arr[i] != largest \n                change += 1\n\
    \                \n            if arr[i] != smallest \n                change\
    \ += 1\n                \n            if arr[i] != largest \n                change\
    \ += 1\n                \n            if arr[i] != smallest \n               \
    \ change += 1\n                \n            if arr[i] != largest \n         \
    \       change += 1\n                \n            if arr[i] != smallest \n  \
    \              change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != smallest\
    \ \n                change += 1\n                \n            if arr[i] != largest\
    \ \n                change += 1\n                \n            if arr[i] != \n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprlhewg4l.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprlhewg4l.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        smallest_change = smallest_change + 1\n    end\n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp2zela2s.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp2zela2s.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n\
    <text>\nProblem 7\nWrite a function that returns true if the array arr has all\
    \ unique elements and false otherwise. For example,\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphs0u9bwp.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphs0u9bwp.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        smallest_change = smallest_change + 1\n     \
    \   if a != reverse(arr)\n            smallest_change = smallest_change - 1\n\
    \        end\n    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeb2gid2_.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeb2gid2_.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    minimum = 0\n    \n \
    \   for x in arr\n        if x == minimum\n            minimum = x\n        else\n\
    \            if minimum > x\n                minimum = x\n            else\n \
    \               if minimum == x\n                    minimum = x\n           \
    \     else\n                    if minimum < x\n                        minimum\
    \ = x\n                    else\n                        if minimum == x\n   \
    \                         minimum = x\n                        else\n        \
    \                    if minimum > x\n                                minimum =\
    \ x\n                            else\n                                if minimum\
    \ == x\n                                    minimum = x\n                    \
    \            else\n                                    if minimum < x\n      \
    \                                  minimum = x\n                             \
    \       else\n                                        if minimum == x\n      \
    \                                      minimum = x\n                         \
    \               else\n                                            if minimum >\
    \ x\n                                                minimum = x\n           \
    \                                 else\n                                     \
    \           if minimum == x\n                                                \
    \    minimum = x\n                                                else\n     \
    \                                               if minimum < x\n             \
    \                                           minimum = x\n                    \
    \                                else\n                                      \
    \                  if minimum == x\n                                         \
    \                   minimum = x\n                                            \
    \            else\n                                                          \
    \  if minimum > x\n                                                          \
    \      minimum = x\n                                                         \
    \   else\n                                                                if minimum\
    \ == x\n                                                                    minimum\
    \ = x\n                                                                else\n\
    \                                                                    if minimum\
    \ < x\n                                                                      \
    \  minimum = x\n                                                             \
    \       else\n                                                        if minimum\
    \ == x\n                                                            minimum =\
    \ x\n                                                        else\n          \
    \                                                  if minimum > x\n          \
    \                                                      minimum = x\n         \
    \                                                   else\n                   \
    \                                             if minimum == x\n              \
    \                                                      minimum = x\n         \
    \                                                       else\n               \
    \                                                     if minimum < x\n       \
    \                                                                 minimum = x\n\
    \                                                                    else\n  \
    \                                                      if minimum == x\n     \
    \                                                       minimum = x\n        \
    \                                                else\n                      \
    \                                      if minimum > x\n                      \
    \                                          minimum = x\n                     \
    \                                       else\n                               \
    \                                 if minimum == x\n                          \
    \                                          minimum = x\n                     \
    \                                           else\n                           \
    \                                         if minimum < x\n                   \
    \                                                     minimum = x\n          \
    \                                                          else\n            \
    \                                            if minimum == x\n               \
    \                                             minimum = x\n                  \
    \                                      else\n                                \
    \                            if minimum > x\n                                \
    \                                minimum = x\n                               \
    \                             else\n                                         \
    \                       if minimum == x\n                                    \
    \                                minimum = x\n                               \
    \                                 else\n                                     \
    \                               if minimum < x\n                             \
    \                                           minimum = x\n                    \
    \                                                else\n                      \
    \                                  if minimum == x\n                         \
    \                                   minimum = x\n                            \
    \                            else\n                                          \
    \                  if minimum > x\n                                          \
    \                      minimum = x\n                                         \
    \                   else\n                                                   \
    \             if minimum == x\n                                              \
    \                      minimum = x\n                                         \
    \                       else\n                                               \
    \                     if minimum < x\n                                       \
    \                                 minimum = x\n                              \
    \                                      else\n                                \
    \                        if minimum == x\n                                   \
    \                         minimum = x\n                                      \
    \                  else\n                                                    \
    \        if minimum > x\n                                                    \
    \            minimum = x\n                                                   \
    \         else\n                                                             \
    \   if minimum == x\n                                                        \
    \            minimum = x\n                                                   \
    \             else\n                                                         \
    \           if minimum < x\n                                                 \
    \                       minimum = x\n                                        \
    \                            else\n                                          \
    \              if minimum == x\n                                             \
    \               minimum = x\n                                                \
    \        else\n                                                            if\
    \ minimum > \nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxqhlra07.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxqhlra07.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    for x in arr\n        smallest_change = min(smallest_change, x - x)\n   \
    \ end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1fot4wgg.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1fot4wgg.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4av7rsyv.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp4av7rsyv.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4av7rsyv.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4av7rsyv.jl:12\n   [2] top-level scope at /tmp/tmp4av7rsyv.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4av7rsyv.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4av7rsyv.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbq6x5g87.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbq6x5g87.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbq6x5g87.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuvy7ofxp.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuvy7ofxp.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ for i = 1:length(arr)\n        if arr[i] != reverse(arr[i])\n            smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n        end\n    end\n\
    \    return smallest_change\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a dscore=1\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgda4zej8.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgda4zej8.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return largest\n\
    \    end\n    \n    change = largest - smallest\n    \n    if change == 0\n  \
    \      return largest\n    end\n    \n    change = change / 2\n    \n    if change\
    \ == 0\n        return largest\n    end\n    \n    change = change + 1\n    \n\
    \    if change == largest\n        return largest\n    end\n    \n    change =\
    \ change / 2\n    \n    if change == 0\n        return largest\n    end\n    \n\
    \    change = change + 1\n    \n    if change == largest\n        return largest\n\
    \    end\n    \n    change = change / 2\n    \n    if change == 0\n        return\
    \ largest\n    end\n    \n    change = change + 1\n    \n    if change == largest\n\
    \        return largest\n    end\n    \n    change = change / 2\n    \n    if\
    \ change == 0\n        return largest\n    end\n    \n    change = change + 1\n\
    \    \n    if change == largest\n        return largest\n    end\n    \n    change\
    \ = change / 2\n    \n    if change == 0\n        return largest\n    end\n  \
    \  \n    change = change + 1\n    \n    if change == largest\n        return largest\n\
    \    end\n    \n    change = change / 2\n    \n    if change == 0\n        return\
    \ largest\n    end\n    \n    change = change + 1\n    \n    if change == largest\n\
    \        return largest\n    end\n    \n    change = change / 2\n    \n    if\
    \ change == 0\n        return largest\n    end\n    \n    change = change + 1\n\
    \    \n    if change == largest\n        return largest\n    end\n    \n    change\
    \ = change / 2\n    \n    if change == 0\n        return largest\n    end\n  \
    \  \n    change = change + 1\n    \n    if change == largest\n        return largest\n\
    \    end\n    \n    change = change / 2\n    \n    if change == 0\n        return\
    \ largest\n    end\n    \n    change = change + 1\n    \n    if change == largest\n\
    \        return largest\n    end\n    \n    change = change / 2\n    \n    if\
    \ change == 0\n        return largest\n    end\n    \n    change = change + 1\n\
    \    \n    if change == largest\n        return largest\n    end\n    \n    change\
    \ = change / 2\n    \n    if change == 0\n        return largest\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb462bl2u.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpb462bl2u.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpb462bl2u.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Inf \n  \
    \  for x in arr \n        if x == reverse(arr[x]) \n            smallest_change\
    \ = min(smallest_change, length(arr)-x) \n        else \n            smallest_change\
    \ = min(smallest_change, length(arr)-x+1) \n    end \n    return smallest_change\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnwput788.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpnwput788.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpnwput788.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptdoiqq8g.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmptdoiqq8g.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmptdoiqq8g.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ a in arr\n        if a < arr[smallest_change]\n            smallest_change =\
    \ smallest_change\n        else\n            if a != arr[smallest_change]\n  \
    \              smallest_change = smallest_change + 1\n            end\n      \
    \  end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxb8em_hw.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxb8em_hw.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr)[1]\n            smallest_change = smallest_change\
    \ + 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps1dzp4y3.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps1dzp4y3.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr))\n    for i = 1:length(arr)\n       \
    \ if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr) - i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,3,2,1])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of times a given element appears in an array. For example,\
    \ the number of times 5 appears in [1,2,3,4,5,6,7,8,9,10] would be 5.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8itvnfb3.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8itvnfb3.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv9iugon6.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64)\n  Closest candidates are:\n\
    \    smallest_change(::Array{Int64,1}) at /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpv9iugon6.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpv9iugon6.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64)\n\
    \  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpv9iugon6.jl:12\n\
    \  Stacktrace:\n   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpv9iugon6.jl:12\n\
    \   [2] top-level scope at /tmp/tmpv9iugon6.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpv9iugon6.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpv9iugon6.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpv9iugon6.jl:12\n   [2] top-level scope at /tmp/tmpv9iugon6.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv9iugon6.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9iugon6.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 3\nGiven a binary search tree and a node in that tree, find the in-order\
    \ successor of that node in the BST.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuizwo6uh.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuizwo6uh.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw_0jfgoq.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpw_0jfgoq.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_0jfgoq.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpw_0jfgoq.jl:12\n   [2] top-level scope at /tmp/tmpw_0jfgoq.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw_0jfgoq.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_0jfgoq.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if smallest_change > length(arr)\n            break\n    end\n    \n    return\
    \ smallest_change\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes\
    \ an array of integers and returns the number of unique elements in the array.\
    \ For example,\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy4qwfvm6.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy4qwfvm6.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 ; i >= 0 ; i-- \n        smallest_change =\
    \ smallest_change + 1 if arr[i] != arr[i+1] \n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 3\nGiven a string, find the length of the longest substring without repeating\
    \ characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpiy4us72d.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpiy4us72d.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to -1 \n        if arr[i] > arr[i+1] \n   \
    \         smallest_change = smallest_change + 1\n        else \n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven an array, find the largest palindrome made from\
    \ the array.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5jfsazf9.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5jfsazf9.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest \n        return\
    \ largest\n    \n    changes = 0\n    \n    for x in arr\n        if x != largest\n\
    \            changes += 1\n            largest = largest * 10 + x\n          \
    \  smallest = smallest * 10 + x\n        elseif x == largest\n            largest\
    \ = largest * 10 + x\n        elseif x == smallest\n            smallest = smallest\
    \ * 10 + x\n        end\n    end\n    \n    return changes\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 2, 1])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\nusing Test\n\n\
    @testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5,\
    \ 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps1xwe658.jl:34\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps1xwe658.jl:34\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpirzvx74p.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpirzvx74p.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,1,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,1,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,1,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,5,6,7,8,9,0,1,0,0,0,0,0,0,1,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp36pf5_u_.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp36pf5_u_.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk_69c5qi.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpk_69c5qi.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69c5qi.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpk_69c5qi.jl:12\n   [2] top-level scope at /tmp/tmpk_69c5qi.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69c5qi.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_69c5qi.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5utyaqjh.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp5utyaqjh.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5utyaqjh.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5utyaqjh.jl:12\n   [2] top-level scope at /tmp/tmp5utyaqjh.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5utyaqjh.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5utyaqjh.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest \n        return\
    \ largest\n    \n    changes = 0\n    \n    for a in arr\n        if a > largest\
    \ \n            changes += 1\n            largest = a\n        elseif a < smallest\
    \ \n            changes += 1\n            smallest = a\n        else\n       \
    \     if a > largest - smallest \n                changes += 1\n             \
    \   largest = a\n            elseif a < smallest - largest \n                changes\
    \ += 1\n                smallest = a\n            else\n                largest\
    \ = a\n                smallest = a\n            end\n        end\n    end\n \
    \   \n    return changes\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a string, find the length of the longest substring\
    \ without repeating characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5w_jnjs_.jl:43\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5w_jnjs_.jl:43\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Inf\
    \ \n    \n    for x in arr \n        if x == reverse(arr[x]) \n            smallest_change\
    \ = x \n            break \n        else \n            smallest_change = Inf \n\
    \            break \n    end \n    return smallest_change \nend \n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem\
    \ 3\nGiven a binary search tree and a number x, find x such that root of BST is\
    \ x. \nFor example, given BST [1,null,2,null,3,null,4,null,null,5,null,6] and\
    \ x = 5, return 5.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprwhzln0f.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprwhzln0f.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpux0v501a.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpux0v501a.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpux0v501a.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n    end\n\
    \    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of times\
    \ a given value appears in an array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv9_6f8mc.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv9_6f8mc.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that checks if a number is palindrome\
    \ or not.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqinns31f.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqinns31f.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr))\n    for i = 1:length(arr)\n       \
    \ if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr) - i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a number is palindrome or not.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpny1c_lh6.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpny1c_lh6.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 7: Find the longest palindromic substring in an array of strings\nGiven\
    \ an array of strings, find the longest palindromic substring.\nusing Test\n\n\
    @testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5,\
    \ 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7k2upvun.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7k2upvun.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpknjv3a47.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpknjv3a47.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpknjv3a47.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpknjv3a47.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpknjv3a47.jl:12\n   [2] top-level scope at /tmp/tmpknjv3a47.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpknjv3a47.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknjv3a47.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr[x])\n            smallest_change = smallest_change\
    \ + 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.0>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 3\nGiven a binary\
    \ search tree and a node in it, find the in-order successor of that node. \nFor\
    \ example, given the following tree:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp988ooygu.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp988ooygu.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a binary search tree and a node in it, find\
    \ the in-order successor of that node in the BST.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr8wbqubg.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr8wbqubg.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-1)\n    for i = 1:length(arr)\n     \
    \   if arr[i] != arr[smallest_change]\n            smallest_change = i\n     \
    \   end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvriq9lco.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvriq9lco.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbv8fjt5w.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbv8fjt5w.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbv8fjt5w.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to -1 \n        smallest_change = smallest_change\
    \ + 1 \n        if arr[i] != arr[i+1] \n            break\n        end\n    end\n\
    \    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of elements in the vector that are greater than or equal\
    \ to 50\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph5kj65qc.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph5kj65qc.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    smallest_change = minimum(smallest_change, length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr) - i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp95jc611c.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp95jc611c.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that returns the number of palindromic\
    \ permutations of a string.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2b6ivag4.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2b6ivag4.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    for x in arr\n        if x == reverse(arr)\n            smallest_change =\
    \ smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n\
    <text>\nProblem 7\nWrite a function that returns the number of palindromic permutations\
    \ of a given string.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4zkbs_16.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4zkbs_16.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)\n            smallest_change =\
    \ smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of words in the string.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvfx7xue8.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvfx7xue8.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Inf \n  \
    \  for x in arr \n        if x == reverse(arr) \n            smallest_change =\
    \ x \n            break \n        else \n            smallest_change = min(smallest_change,\
    \ x-1)\n    end\n    return smallest_change\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that returns true if a given string is a palindrome and false\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwnwcdtnq.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwnwcdtnq.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr4xn_2l4.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpr4xn_2l4.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpr4xn_2l4.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpr4xn_2l4.jl:12\n   [2] top-level scope at /tmp/tmpr4xn_2l4.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr4xn_2l4.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4xn_2l4.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpazmrzngv.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpazmrzngv.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpazmrzngv.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = length(arr):-1:1\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ i+1)\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nThe\
    \ function smallest_change is now complete. Let's test it on a few examples:\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7643vje9.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7643vje9.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for i = length(arr) - 1, j = length(arr) - 1, k = 0; i >= 0 || j >=\
    \ 0 || k >= 0; i--, j--, k++\n        if arr[i] > arr[j]\n            smallest_change\
    \ = k\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn2fgo33p.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpn2fgo33p.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n        end\n    end\n    return smallest_change\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,julia |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxy3bawvx.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxy3bawvx.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5tk7y5xd.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp5tk7y5xd.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp5tk7y5xd.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp5tk7y5xd.jl:12\n   [2] top-level scope at /tmp/tmp5tk7y5xd.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5tk7y5xd.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tk7y5xd.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to -1 \n        if arr[i] > arr[i+1] \n   \
    \         smallest_change = smallest_change + 1\n        elseif arr[i] < arr[i+1]\
    \ \n            smallest_change = smallest_change - 1\n        end\n    end\n\
    \    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a number is prime\
    \ or not. You may want to use the Sieve of Eratosthenes algorithm for this.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv1fagayu.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv1fagayu.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqfvyg825.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpqfvyg825.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpqfvyg825.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqfvyg825.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqfvyg825.jl:12\n   [2] top-level scope at /tmp/tmpqfvyg825.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqfvyg825.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqfvyg825.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr)-i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgrpyc39d.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgrpyc39d.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    largest\
    \ = maximum(arr)\n    smallest_change = largest\n    for x in arr\n        if\
    \ x == largest\n            smallest_change = largest\n            break\n   \
    \     elseif x == smallest_change\n            smallest_change = x\n        else\n\
    \            smallest_change = smallest_change\n        end\n    end\n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsq732iut.jl:27\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsq732iut.jl:27\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr))\n    for i = 1:smallest_change\n   \
    \     if arr[i] != reverse(arr[i])\n            smallest_change = i\n        \
    \    break\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nThe function smallest_change\
    \ is now implemented in the file smallest_change.jl.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfb6hk3l5.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfb6hk3l5.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 ; i >= 0 ; i-- \n        \n        if arr[i]\
    \ > arr[i+1] \n            smallest_change = smallest_change + 1\n           \
    \ arr[i] = arr[i+1]\n            arr[i+1] = arr[i]\n        else \n          \
    \  smallest_change = smallest_change + 1\n            arr[i] = arr[i+1]\n    \
    \        arr[i+1] = arr[i]\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplhtzv7mp.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmplhtzv7mp.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ += 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpijqjxh0o.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpijqjxh0o.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1suixw_j.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp1suixw_j.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp1suixw_j.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1suixw_j.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp1suixw_j.jl:12\n   [2] top-level scope at /tmp/tmp1suixw_j.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1suixw_j.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1suixw_j.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if x != reverse(arr)[1]\n            smallest_change = smallest_change - 1\n\
    \        end\n    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that returns true if the given string is a palindrome and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpamyr5jhb.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpamyr5jhb.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if x != reverse(arr)\n            smallest_change = smallest_change - 1\n\
    \        end\n    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 2, 1])\n</cell>\n<text>\nProblem 3\nGiven a binary search tree and a node\
    \ in that tree, find the in-order successor of that node in the tree. \nFor example,\
    \ given the following tree:\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_14ye3x.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph_14ye3x.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a number is palindrome or not. For example,\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfgaa3qht.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfgaa3qht.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a binary search tree and a node in it, find\
    \ the in-order successor of that node in the BST.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnyvmhyqe.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnyvmhyqe.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to 0 step -1\n        if arr[i] > arr[i+1]\n\
    \            smallest_change = smallest_change + 1\n        end\n    end\n   \
    \ \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"0\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8tamhe7b.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8tamhe7b.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 3\nGiven a binary search tree and a node in it, find the in-order successor\
    \ of that node in the BST.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0odcxtpy.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0odcxtpy.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 4\nWrite a function that returns true if the array arr\
    \ is sorted in ascending order, and false otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv4mx0rwn.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv4mx0rwn.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Inf\
    \ \n    for a in arr \n        if a < smallest_change \n            smallest_change\
    \ = a\n        end\n    end\n    return smallest_change\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns true if the given string is a palindrome,\
    \ false otherwise. For example, \n\"racecar\" is a palindrome, but \"racecarc\"\
    \ is not a palindrome.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ns8qejo.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1ns8qejo.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest \n        return\
    \ largest\n    \n    change = largest - smallest\n    \n    if change == 0 \n\
    \        return largest\n    \n    change = change / 2\n    \n    if change ==\
    \ 0 \n        return largest\n    \n    change = change + 1\n    \n    if change\
    \ == largest\n        return largest\n    \n    change = change + 1\n    \n  \
    \  if change == largest\n        return largest\n    \n    change = change + 1\n\
    \    \n    if change == largest\n        return largest\n    \n    change = change\
    \ + 1\n    \n    if change == largest\n        return largest\n    \n    change\
    \ = change + 1\n    \n    if change == largest\n        return largest\n    \n\
    \    change = change + 1\n    \n    if change == largest\n        return largest\n\
    \    \n    change = change + 1\n    \n    if change == largest\n        return\
    \ largest\n    \n    change = change + 1\n    \n    if change == largest\n   \
    \     return largest\n    \n    change = change + 1\n    \n    if change == largest\n\
    \        return largest\n    \n    change = change + 1\n    \n    if change ==\
    \ largest\n        return largest\n    \n    change = change + 1\n    \n    if\
    \ change == largest\n        return largest\n    \n    change = change + 1\n \
    \   \n    if change == largest\n        return largest\n    \n    change = change\
    \ + 1\n    \n    if change == largest\n        return largest\n    \n    change\
    \ = change + 1\n    \n    if change == largest\n        return largest\n    \n\
    \    change = change + 1\n    \n    if change == largest\n        return largest\n\
    \    \n    change = change + 1\n    \n    if change == largest\n        return\
    \ largest\n    \n    change = change + 1\n    \n    if change == largest\n   \
    \     return largest\n    \n    change = change + 1\n    \n    if change == largest\n\
    \        return largest\n    \n    change = change + 1\n    \n    if change ==\
    \ largest\n        return largest\n    \n    change = change + 1\n    \n    if\
    \ change == largest\n        return largest\n    \n    change = change + 1\n \
    \   \n    if change == largest\n        return largest\n    \n    change = change\
    \ + 1\n    \n    if change == largest\n        return largest\n    \n    change\
    \ = change \nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkarlwvf7.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkarlwvf7.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        smallest_change = smallest_change + 1\n        if smallest_change\
    \ > length(arr)\n            break\n        if x == reverse(arr)[1]\n        \
    \    smallest_change = smallest_change - 1\n            break\n    end\n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc8o6l3av.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc8o6l3av.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    diff = largest - smallest\n    count = 0\n   \
    \ for i in arr\n        if i != largest\n            count += 1\n            if\
    \ diff == 0\n                return count\n            diff -= 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpory1vila.jl:26\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpory1vila.jl:26\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns the number of times a given element appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1nalby_u.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1nalby_u.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the longest palindromic substring\nGiven a string\
    \ s, find the longest palindromic substring in s. You may assume that the maximum\
    \ length of s is 1000.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe7ipwwkm.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe7ipwwkm.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if x == reverse(arr)[1]\n            return smallest_change\n        end\n\
    \    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4vguw6tm.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4vguw6tm.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 8\nGiven a binary tree and a node in it, find the in-order successor of\
    \ that node. \nFor example, given the following tree:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeav3_kgz.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeav3_kgz.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsf8gh1_u.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpsf8gh1_u.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpsf8gh1_u.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp06jxst7z.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp06jxst7z.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp06jxst7z.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp06jxst7z.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp06jxst7z.jl:12\n   [2] top-level scope at /tmp/tmp06jxst7z.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp06jxst7z.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06jxst7z.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 to -1 \n        if arr[i] > arr[i+1] \n   \
    \         smallest_change = smallest_change + 1\n        else \n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nA palindromic number reads the same both ways. The\
    \ largest palindrome made from the product of two 2-digit numbers is 9009 = 91\
    \ x 99.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe6vk6ijn.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe6vk6ijn.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr)[1]\n            smallest_change = smallest_change\
    \ + 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyndxwjjx.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyndxwjjx.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns an array of integers\
    \ such that each element in the array is either 0 or 1. For example:\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptumnu2pa.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptumnu2pa.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of palindromic\
    \ permutations of an input string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj100ozpr.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj100ozpr.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr)-i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.4>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<code language=julia-1.4>\n\
    smallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n\
    </cell>\n<code language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n\
    <code language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n</cell>\n<code\
    \ language=julia-1.4>\nsmallest_change([1,2,3,4,5,6,7,8,9,0])\n\nusing Test\n\n\
    @testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5,\
    \ 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyfzmbpuy.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyfzmbpuy.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr[x])\n            smallest_change = smallest_change\
    \ + 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 4, 3, 2, 2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,\
    \ 2, 3, 2, 1])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,3,2,1,2])\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,4,3,2,1,2])\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjtgg9w20.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjtgg9w20.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr))\n    for i = 1:length(arr)\n       \
    \ if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr) - i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 7: Find the largest palindromic subarray\nGiven an array arr of integers,\
    \ find the largest palindromic subarray. Palindromic subarrays are arrays that\
    \ read the same backwards and forwards. In one change, you can change one element\
    \ to any other element.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzz8awl6v.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzz8awl6v.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf8pegpbg.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpf8pegpbg.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpf8pegpbg.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n    for i = 1:length(arr)\n\
    \        if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr)-length(arr))\n        end\n    end\n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkn5ig2su.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkn5ig2su.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnef9p3kd.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnef9p3kd.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbo6mjsdy.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbo6mjsdy.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbo6mjsdy.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4eswc5qa.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp4eswc5qa.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp4eswc5qa.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp4eswc5qa.jl:12\n   [2] top-level scope at /tmp/tmp4eswc5qa.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4eswc5qa.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4eswc5qa.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfdhyycge.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64)\n  Closest candidates are:\n\
    \    smallest_change(::Array{Int64,1}) at /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpfdhyycge.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpfdhyycge.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64)\n\
    \  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpfdhyycge.jl:12\n\
    \  Stacktrace:\n   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpfdhyycge.jl:12\n\
    \   [2] top-level scope at /tmp/tmpfdhyycge.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpfdhyycge.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpfdhyycge.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpfdhyycge.jl:12\n   [2] top-level scope at /tmp/tmpfdhyycge.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfdhyycge.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfdhyycge.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return 0\n\
    \    \n    changes = 0\n    \n    for x in arr\n        if x != largest\n    \
    \        changes +=1\n        end\n    end\n    \n    return changes\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 8\nWrite a function that returns true if the array arr is sorted in ascending\
    \ order, and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd1c0_nq9.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd1c0_nq9.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if smallest_change > length(arr)\n            break\n    end\n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a string, find the length of the longest substring\
    \ without repeating characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptmo1dltk.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptmo1dltk.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if x != reverse(arr)\n            smallest_change = smallest_change - 1\n\
    \        end\n    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 4\nWrite a function\
    \ that returns the number of palindromic permutations of an array. For example,\
    \ given the array [1,2,3,4,5,6,7,8,9], your function should return 8.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2yzlkm0f.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2yzlkm0f.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    largest = largest * 2\n    smallest = smallest\
    \ * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n    \n  \
    \  largest = largest * 2\n    smallest = smallest * 2\n    \n    largest = largest\
    \ * 2\n    smallest = smallest * 2\n    \n    largest = largest * 2\n    smallest\
    \ = smallest * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n\
    \    \n    largest = largest * 2\n    smallest = smallest * 2\n    \n    largest\
    \ = largest * 2\n    smallest = smallest * 2\n    \n    largest = largest * 2\n\
    \    smallest = smallest * 2\n    \n    largest = largest * 2\n    smallest =\
    \ smallest * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n\
    \    \n    largest = largest * 2\n    smallest = smallest * 2\n    \n    largest\
    \ = largest * 2\n    smallest = smallest * 2\n    \n    largest = largest * 2\n\
    \    smallest = smallest * 2\n    \n    largest = largest * 2\n    smallest =\
    \ smallest * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n\
    \    \n    largest = largest * 2\n    smallest = smallest * 2\n    \n    largest\
    \ = largest * 2\n    smallest = smallest * 2\n    \n    largest = largest * 2\n\
    \    smallest = smallest * 2\n    \n    largest = largest * 2\n    smallest =\
    \ smallest * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n\
    \    \n    largest = largest * 2\n    smallest = smallest * 2\n    \n    largest\
    \ = largest * 2\n    smallest = smallest * 2\n    \n    largest = largest * 2\n\
    \    smallest = smallest * 2\n    \n    largest = largest * 2\n    smallest =\
    \ smallest * 2\n    \n    largest = largest * 2\n    smallest = smallest * 2\n\
    \    \n    lar\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdyrxl83i.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpdyrxl83i.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpdyrxl83i.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8osvsunh.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp8osvsunh.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp8osvsunh.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8osvsunh.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp8osvsunh.jl:12\n   [2] top-level scope at /tmp/tmp8osvsunh.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8osvsunh.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8osvsunh.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 9\nA palindromic number reads the same backwards and\
    \ forward. For example, 5321 is a palindromic number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2a44vbra.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2a44vbra.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Inf \n  \
    \  for x in arr \n        if x == reverse(arr) \n            smallest_change =\
    \ min(smallest_change, length(arr) - 1) \n        else \n            smallest_change\
    \ = min(smallest_change, length(arr) - 1) \n        end\n    end\n    return smallest_change\n\
    end\n</cell>\n<text>\nProblem 3\nWrite a function that takes a string and returns\
    \ the number of words in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps4_e5uq4.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps4_e5uq4.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven an array, find the minimum number of elements\
    \ that need to be changed to make the array palindromic. A palindromic array is\
    \ an array that is read the same backwards and forwards. In one change, you can\
    \ change one element to any other element.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn915jklj.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn915jklj.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbxpki7ti.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpbxpki7ti.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpbxpki7ti.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpbxpki7ti.jl:12\n   [2] top-level scope at /tmp/tmpbxpki7ti.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbxpki7ti.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbxpki7ti.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a number is palindrome\
    \ or not.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpijhoqpe_.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpijhoqpe_.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    largest = largest * largest\n    smallest\
    \ = smallest * smallest\n    \n    largest = largest * largest\n    smallest =\
    \ smallest * smallest\n    \n    largest = largest * largest\n    smallest = smallest\
    \ * smallest\n    \n    largest = largest * largest\n    smallest = smallest *\
    \ smallest\n    \n    largest = largest * largest\n    smallest = smallest * smallest\n\
    \    \n    largest = largest * largest\n    smallest = smallest * smallest\n \
    \   \n    largest = largest * largest\n    smallest = smallest * smallest\n  \
    \  \n    largest = largest * largest\n    smallest = smallest * smallest\n   \
    \ \n    largest = largest * largest\n    smallest = smallest * smallest\n    \n\
    \    largest = largest * largest\n    smallest = smallest * smallest\n    \n \
    \   largest = largest * largest\n    smallest = smallest * smallest\n    \n  \
    \  largest = largest * largest\n    smallest = smallest * smallest\n    \n   \
    \ largest = largest * largest\n    smallest = smallest * smallest\n    \n    largest\
    \ = largest * largest\n    smallest = smallest * smallest\n    \n    largest =\
    \ largest * largest\n    smallest = smallest * smallest\n    \n    largest = largest\
    \ * largest\n    smallest = smallest * smallest\n    \n    largest = largest *\
    \ largest\n    smallest = smallest * smallest\n    \n    largest = largest * largest\n\
    \    smallest = smallest * smallest\n    \n    largest = largest * largest\n \
    \   smallest = smallest * smallest\n    \n    largest = largest * largest\n  \
    \  smallest = smallest * smallest\n    \n    largest = largest * largest\n   \
    \ smallest = smallest * smallest\n    \n    largest = largest * largest\n    smallest\
    \ = smallest * smallest\n    \n    largest = largest * largest\n    smallest =\
    \ smallest * smallest\n    \n    largest = largest * largest\n    smallest = \n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ouuk6ml.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp5ouuk6ml.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp5ouuk6ml.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmsepfegz.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpmsepfegz.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpmsepfegz.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsepfegz.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpmsepfegz.jl:12\n   [2] top-level scope at /tmp/tmpmsepfegz.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsepfegz.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsepfegz.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplaardfjb.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmplaardfjb.jl:12\n   [2] top-level\
    \ scope at /tmp/tmplaardfjb.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmplaardfjb.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmplaardfjb.jl:12\n   [2] top-level scope at /tmp/tmplaardfjb.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaardfjb.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplaardfjb.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return 0\n\
    \    \n    largest = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n\
    \    \n    largest = largest / 10\n    smallest = smallest / 10\n    \n    largest\
    \ = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n  \
    \  largest = largest / 10\n    smallest = smallest / 10\n    \n    largest = largest\
    \ * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n    largest =\
    \ largest / 10\n    smallest = smallest / 10\n    \n    largest = largest * 10\
    \ + largest\n    smallest = smallest * 10 + smallest\n    \n    largest = largest\
    \ / 10\n    smallest = smallest / 10\n    \n    largest = largest * 10 + largest\n\
    \    smallest = smallest * 10 + smallest\n    \n    largest = largest / 10\n \
    \   smallest = smallest / 10\n    \n    largest = largest * 10 + largest\n   \
    \ smallest = smallest * 10 + smallest\n    \n    largest = largest / 10\n    smallest\
    \ = smallest / 10\n    \n    largest = largest * 10 + largest\n    smallest =\
    \ smallest * 10 + smallest\n    \n    largest = largest / 10\n    smallest = smallest\
    \ / 10\n    \n    largest = largest * 10 + largest\n    smallest = smallest *\
    \ 10 + smallest\n    \n    largest = largest / 10\n    smallest = smallest / 10\n\
    \    \n    largest = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n\
    \    \n    largest = largest / 10\n    smallest = smallest / 10\n    \n    largest\
    \ = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n  \
    \  largest = largest / 10\n    smallest = smallest / 10\n    \n    largest = largest\
    \ * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n    largest =\
    \ largest / 10\n    smallest = smallest / 10\n    \n    largest = largest * 10\
    \ + largest\n    smallest = smallest * 10 + smallest\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp39w1moel.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp39w1moel.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)\n            smallest_change +=\
    \ 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nQuestion 2.2\nWrite a function\
    \ that takes an array of integers and returns the number of elements in the array\
    \ that are greater than the average of the array. For example, if the array is\
    \ [1,2,3,4,5,6,7,8,9], the average is 5.5, so the function should return 4.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmqc5ff9k.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmqc5ff9k.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnmij__yv.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpnmij__yv.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpnmij__yv.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 9\nA palindromic number reads the same backwards and forward. For example,\
    \ 321 is a palindromic number while 321421 is a palindromic number.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeejajlle.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeejajlle.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr)[1]\n            smallest_change = smallest_change\
    \ + 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 3\nGiven a binary\
    \ search tree and a node in that tree, find the in-order successor of that node.\
    \ \nFor example, given the following tree:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt5q85211.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt5q85211.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ a given value appears in an array. For example, given [1,2,2,3,3,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbodeoi6t.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbodeoi6t.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        smallest_change = smallest_change + 1\n     \
    \   if x == reverse(arr)[1]\n            return smallest_change\n        end\n\
    \    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 7: Find the longest\
    \ palindromic substring\nGiven a string s, find the longest palindromic substring\
    \ in s. A palindromic substring is a substring that reads the same backwards and\
    \ forwards.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnze0bqon.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnze0bqon.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes a string and returns the\
    \ number of words in the string.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq1hclqsf.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq1hclqsf.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    minimum = 0\n    \n \
    \   for element in arr\n        if element == minimum\n            minimum = minimum\
    \ + 1\n        else\n            minimum = minimum - 1\n        end\n    end\n\
    \    \n    return minimum\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqoetc0o4.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqoetc0o4.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        if x == reverse(arr)\n            smallest_change += 1\n \
    \       end\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem 3\nGiven a string,\
    \ find the length of the longest substring without repeating characters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn2p83nyw.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn2p83nyw.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times a given element\
    \ appears in an array. For example, given [1,2,3,4,5,6,7], the function should\
    \ return 3 because 3 appears 3 times in the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk8syuewu.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk8syuewu.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the longest palindromic substring in an array\
    \ of strings\nGiven an array of strings, find the longest palindromic substring.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyivj8f3i.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyivj8f3i.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return 0\n\
    \    end\n    \n    change = largest - smallest\n    \n    if change == 0\n  \
    \      return 1\n    end\n    \n    change = change / 2\n    \n    if change ==\
    \ 1\n        return 2\n    end\n    \n    change = change / 2\n    \n    if change\
    \ == 1\n        return 3\n    end\n    \n    change = change / 2\n    \n    if\
    \ change == 1\n        return 4\n    end\n    \n    change = change / 2\n    \n\
    \    if change == 1\n        return 5\n    end\n    \n    change = change / 2\n\
    \    \n    if change == 1\n        return 6\n    end\n    \n    change = change\
    \ / 2\n    \n    if change == 1\n        return 7\n    end\n    \n    change =\
    \ change / 2\n    \n    if change == 1\n        return 8\n    end\n    \n    change\
    \ = change / 2\n    \n    if change == 1\n        return 9\n    end\n    \n  \
    \  change = change / 2\n    \n    if change == 1\n        return 10\n    end\n\
    \    \n    change = change / 2\n    \n    if change == 1\n        return 11\n\
    \    end\n    \n    change = change / 2\n    \n    if change == 1\n        return\
    \ 12\n    end\n    \n    change = change / 2\n    \n    if change == 1\n     \
    \   return 13\n    end\n    \n    change = change / 2\n    \n    if change ==\
    \ 1\n        return 14\n    end\n    \n    change = change / 2\n    \n    if change\
    \ == 1\n        return 15\n    end\n    \n    change = change / 2\n    \n    if\
    \ change == 1\n        return 16\n    end\n    \n    change = change / 2\n   \
    \ \n    if change == 1\n        return 17\n    end\n    \n    change = change\
    \ / 2\n    \n    if change == 1\n        return 18\n    end\n    \n    change\
    \ = change / 2\n    \n    if change == 1\n        return 19\n    end\n    \n \
    \   change = change / 2\n    \n    if change == 1\n        return 20\n    end\n\
    \    \n    change = change / 2\n    \n    if change == 1\n        return 21\n\
    \    end\n    \n    change = change / 2\n    \n    if change == 1\n        return\
    \ 22\n    end\n    \n    change = change / 2\n    \n    if change == 1\n     \
    \   return 23\n    end\n    \n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo3o_x12b.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpo3o_x12b.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpo3o_x12b.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        smallest_change = smallest_change if x == reverse(arr[x])\n\
    \    end\n    return smallest_change\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"if\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpadq8ebfv.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpadq8ebfv.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        smallest_change = smallest_change + 1\n        if smallest_change\
    \ > length(arr)\n            break\n        if x == reverse(arr)[1]\n        \
    \    smallest_change = smallest_change - 1\n            break\n    end\n    return\
    \ smallest_change\nend\n</cell>\n<code language=julia-1.4>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements in the array that are less than or equal\
    \ to each other. For example:\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9op4q3j9.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9op4q3j9.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 ; i >= 0 ; i-- \n        smallest_change =\
    \ smallest_change + 1 \n        if arr[i] != reverse(arr[i]) \n            break\n\
    \        end\n    end\n    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnoe5udeu.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpnoe5udeu.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n\
    <text>\nProblem 3\nGiven a binary search tree and a node in it, find the in-order\
    \ successor of that node in the BST.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl4vfz2ao.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpl4vfz2ao.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times a given element\
    \ appears in an array. For example, given [1,2,3,4,5,6,7,8,9], the function should\
    \ return 3 because 3 appears 3 times in the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpisnysj5k.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpisnysj5k.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 3\nWrite a function that returns the number of times a given value appears\
    \ in an array. For example,\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp71yh6y75.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp71yh6y75.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    largest\
    \ = maximum(arr)\n    smallest_change = largest\n    for x in arr\n        if\
    \ x == largest\n            smallest_change = smallest_change + 1\n        elseif\
    \ x == smallest_change\n            smallest_change = smallest_change + 1\n  \
    \      else\n            smallest_change = smallest_change + 1\n        end\n\
    \    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzy3f_4z5.jl:26\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzy3f_4z5.jl:26\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of palindromic\
    \ permutations of a given string.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdchjh7py.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdchjh7py.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ += 1\n        end\n    end\n    return smallest_change\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\nProblem\
    \ 7: Find the largest palindromic subarray\nGiven a string, find the largest palindromic\
    \ substring in it.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gr4hywx.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1gr4hywx.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        if a > arr[smallest_change]\n            smallest_change\
    \ = i\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 3\nGiven a string, find the length of the longest substring without repeating\
    \ characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphm9c28fm.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphm9c28fm.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    diff = largest - smallest\n    count = 0\n   \
    \ for el in arr\n        if el == smallest || el == largest\n            count\
    \ += 1\n        else\n            if el == diff / 2\n                count +=\
    \ 1\n            else\n                count += 2\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nGiven a binary search tree and a node in it, find\
    \ the in-order successor of that node in the BST.\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcpdml5hk.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcpdml5hk.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        if a < arr[smallest_change]\n            smallest_change\
    \ = i\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp227wcw0m.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp227wcw0m.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr)\n            smallest_change =\
    \ smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of palindromic\
    \ permutations of an array. For example, if the input array is [1,2,3,4,5,6,7],\
    \ then the output should be 6 (1 2 3 4 5 6 7 and 7 6 5 4 3 2 1). Make sure to\
    \ account for duplicate permutations.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9kwm2efc.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9kwm2efc.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd2j1sl49.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpd2j1sl49.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpd2j1sl49.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpd2j1sl49.jl:12\n   [2] top-level scope at /tmp/tmpd2j1sl49.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd2j1sl49.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2j1sl49.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of elements in a vector that\
    \ are less than a given value.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9qt0wn1r.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9qt0wn1r.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_q_cfz2w.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_q_cfz2w.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Int64(0)\n\
    \    smallest_change = minimum(smallest_change, length(arr)-length(arr))\n   \
    \ for i = 1:length(arr)\n        if arr[i] != reverse(arr[i])\n            smallest_change\
    \ = minimum(smallest_change, length(arr)-length(arr))\n        end\n    end\n\
    \    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of elements in the array that are less than the mean\
    \ of the array. For example, if the array is [1,2,3,4,5,6,7,8,9], the function\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmj573itu.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmj573itu.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqa1d2idd.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpqa1d2idd.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpqa1d2idd.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpqa1d2idd.jl:12\n   [2] top-level scope at /tmp/tmpqa1d2idd.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqa1d2idd.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqa1d2idd.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr)-1)\n    for i = smallest_change, length(arr)-1\
    \ do \n        if arr[i] != reverse(arr[i]) \n            smallest_change = i\n\
    \            break\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    The function smallest_change is now complete. Let's test it on a few examples:\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn0fyx5ry.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn0fyx5ry.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    largest = maximum(arr)\n  \
    \  smallest = minimum(arr)\n    \n    if largest == smallest\n        return largest\n\
    \    end\n    \n    largest = largest * 10 + largest\n    smallest = smallest\
    \ * 10 + smallest\n    \n    largest = largest / 10\n    smallest = smallest /\
    \ 10\n    \n    largest = largest * 10 + largest\n    smallest = smallest * 10\
    \ + smallest\n    \n    largest = largest / 10\n    smallest = smallest / 10\n\
    \    \n    largest = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n\
    \    \n    largest = largest / 10\n    smallest = smallest / 10\n    \n    largest\
    \ = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n  \
    \  largest = largest / 10\n    smallest = smallest / 10\n    \n    largest = largest\
    \ * 10 + largest\n    smallest = smallest * 10 + smallest\n    \n    largest =\
    \ largest / 10\n    smallest = smallest / 10\n    \n    largest = largest * 10\
    \ + largest\n    smallest = smallest * 10 + smallest\n    \n    largest = largest\
    \ / 10\n    smallest = smallest / 10\n    \n    largest = largest * 10 + largest\n\
    \    smallest = smallest * 10 + smallest\n    \n    largest = largest / 10\n \
    \   smallest = smallest / 10\n    \n    largest = largest * 10 + largest\n   \
    \ smallest = smallest * 10 + smallest\n    \n    largest = largest / 10\n    smallest\
    \ = smallest / 10\n    \n    largest = largest * 10 + largest\n    smallest =\
    \ smallest * 10 + smallest\n    \n    largest = largest / 10\n    smallest = smallest\
    \ / 10\n    \n    largest = largest * 10 + largest\n    smallest = smallest *\
    \ 10 + smallest\n    \n    largest = largest / 10\n    smallest = smallest / 10\n\
    \    \n    largest = largest * 10 + largest\n    smallest = smallest * 10 + smallest\n\
    \    \n    largest = largest / 10\n    smallest = smallest / 10\n    \n    largest\
    \ = largest * 10 + largest\n    smallest = smallest * 10 + \nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5nrgbfas.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp5nrgbfas.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp5nrgbfas.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2pgpyvyz.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp2pgpyvyz.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp2pgpyvyz.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = Inf \n  \
    \  for x in arr \n        if x == reverse(arr[x]) \n            smallest_change\
    \ = min(smallest_change, x - 1) \n        else \n            smallest_change =\
    \ min(smallest_change, x - 1) \n    end \n    return smallest_change \nend \n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpomt9g0w9.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpomt9g0w9.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpomt9g0w9.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nA palindromic number reads the same backwards and\
    \ forward. For example, 321 is a palindromic number while 321421 is a not. Find\
    \ the sum of all palindromic numbers less than one million. The palindromic numbers\
    \ are all less than one million.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpksnoa8ai.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpksnoa8ai.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Problem 3\nGiven a binary search tree and a node in it, find the in-order successor\
    \ of that node. \nThe in-order successor of a node is the node with the smallest\
    \ value greater than the node's value.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4t9x10ge.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4t9x10ge.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp0emngy5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpp0emngy5.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpp0emngy5.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nA palindromic number reads the same backwards and\
    \ forward. For example, 321 is a palindromic number while 3211 is not a palindromic\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkrafclz8.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkrafclz8.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 8\nWrite a function that returns the number of palindromic\
    \ permutations of a given string.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdv3kerlm.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdv3kerlm.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = Int64(0)\n\
    \    \n    for i = length(arr) - 1 downto 1 do\n        if arr[i] != reverse(arr[i])\n\
    \            smallest_change = i\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<text>\nProblem 7\nWrite a function that takes an array of integers\
    \ and returns the number of unique elements in the array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7,\
    \ 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"1\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5ip96rf8.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5ip96rf8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    for\
    \ x in arr\n        smallest_change = smallest_change if x < smallest_change else\
    \ x\n    end\n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"if\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyn1slle0.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyn1slle0.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0r_pexm0.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level\
    \ scope at /tmp/tmp0r_pexm0.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp0r_pexm0.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmp0r_pexm0.jl:12\n   [2] top-level scope at /tmp/tmp0r_pexm0.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0r_pexm0.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0r_pexm0.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    minimum = Int.MaxValue\n\
    \    \n    for x in arr\n        if x < minimum\n            minimum = x\n   \
    \     end\n    end\n    \n    for x in arr\n        if x == minimum\n        \
    \    minimum = x\n        end\n    end\n    \n    return minimum\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<code language=julia-1.5>\n\
    smallest_change([1,2,3,4,5,6,7,8,9])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements in the array\
    \ that are less than or equal to zero.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpydarx33v.jl:29\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpydarx33v.jl:29\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change(arr, 0, length(arr)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjrc3bsng.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4\n  MethodError: no method\
    \ matching smallest_change(::Array{Int64,1}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    smallest_change(::Array{Int64,1}) at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n\
    \   [1] smallest_change(::Array{Int64,1}) at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level\
    \ scope at /tmp/tmpjrc3bsng.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:20\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:21\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:22\n  Test threw exception\n  Expression: candidate([1,\
    \ 4, 4, 2]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:23\n  Test threw exception\n  Expression: candidate([1,\
    \ 2, 3, 2, 1]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:24\n  Test threw exception\n  Expression: candidate([3,\
    \ 1, 1, 3]) == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:25\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: no method matching smallest_change(::Array{Int64,1}, ::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1}) at\
    \ /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrc3bsng.jl:26\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  MethodError: no method matching smallest_change(::Array{Int64,1},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n  Stacktrace:\n   [1] smallest_change(::Array{Int64,1})\
    \ at /tmp/tmpjrc3bsng.jl:12\n   [2] top-level scope at /tmp/tmpjrc3bsng.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrc3bsng.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrc3bsng.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7: Find the longest palindromic substring in an array\
    \ of strings\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t\
    @test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyiw3rkyf.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyiw3rkyf.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for a in arr\n        if a < arr[smallest_change]\n            smallest_change\
    \ = i\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 3\nWrite a function that returns the number of palindromic permutations\
    \ of a given string.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpati4z1i1.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpati4z1i1.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)\n            smallest_change\
    \ += 1\n        end\n    end\n    \n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n<code\
    \ language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\nProblem\
    \ 8\nA palindromic number reads the same backwards and forward. For example, 121\
    \ is a palindromic number while 123444332211 is a palindromic number.\nusing Test\n\
    \n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3,\
    \ 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2,\
    \ 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3c81k1r6.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3c81k1r6.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    return smallest_change\nend\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n\
    <text>\nProblem 3\nA palindromic number reads the same both ways. The largest\
    \ palindrome made from the product of two 2-digit numbers is 9009 = 91 x 99.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2dob4r5w.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2dob4r5w.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    \n\
    \    for x in arr\n        if x == reverse(arr[x])\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a string, find the length of the longest substring\
    \ without repeating characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvyhlyqyj.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvyhlyqyj.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    smallest_change = 0\n    smallest_change\
    \ = minimum(smallest_change, length(arr))\n    for i = 1:length(arr)\n       \
    \ if arr[i] != reverse(arr[i])\n            smallest_change = minimum(smallest_change,\
    \ length(arr) - i)\n        end\n    end\n    return smallest_change\nend\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n</cell>\n<text>\n\
    Problem 4\nWrite a function that returns true if the given string is a palindrome.\
    \ For example, \n\"racecar\" is a palindrome, but \"madam\" is not a palindrome.\n\
    using Test\n\n@testset begin\n\ncandidate = smallest_change;\n\t@test(candidate([1,\
    \ 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\
    \t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t\
    @test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\
    \t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwlbplshy.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwlbplshy.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) downto 1 do\n        if arr[i] != reverse(arr[i])\n\
    \            smallest_change = i\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 3\nGiven a string, find the length of the longest substring\
    \ without repeating characters.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"1\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpar0hcuz1.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpar0hcuz1.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyjf1qpak.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpyjf1qpak.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpyjf1qpak.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x != reverse(arr)\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns an array of all permutations\
    \ of a given string. For example, given \"abc\", your function should return [\"\
    abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"].\nusing Test\n\n@testset begin\n\
    \ncandidate = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) ==\
    \ 4)\n\t@test(candidate([1, 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4,\
    \ 2]) == 1)\n\t@test(candidate([1, 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3,\
    \ 2, 1]) == 0)\n\t@test(candidate([3, 1, 1, 3]) == 0)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate([0, 1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc0xnphln.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc0xnphln.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for x in arr\n        if x == reverse(arr)[1]\n            smallest_change\
    \ = smallest_change + 1\n        end\n    end\n    \n    return smallest_change\n\
    end\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<code language=julia-1.5>\nsmallest_change([1, 2, 3, 4, 3, 2, 2])\n</cell>\n\
    <code language=julia-1.5>\nsmallest_change([1, 2, 3, 2, 1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times a given element\
    \ appears in an array. For example,\nusing Test\n\n@testset begin\n\ncandidate\
    \ = smallest_change;\n\t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1,\
    \ 2, 3, 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdhxrcx0j.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdhxrcx0j.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    Given an array arr of integers, find the minimum number of\
    \ elements that\n    need to be changed to make the array palindromic. A palindromic\
    \ array is an array that\n    is read the same backwards and forwards. In one\
    \ change, you can change one element to any other element.\n\n    For example:\n\
    \    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4,\
    \ 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0\n    \"\"\"\nfunction\
    \ smallest_change(arr::Vector{Int64})::Int64 \n    \n    smallest_change = 0\n\
    \    \n    for i = length(arr) - 2 ; i >= 0 ; i-- \n        \n        if arr[i]\
    \ > arr[i+1] \n            smallest_change = smallest_change + 1\n        else\
    \ \n            smallest_change = smallest_change + 1\n        end\n    end\n\
    \    \n    return smallest_change\nend\n</cell>\n<code language=julia-1.5>\nsmallest_change([1,2,3,5,4,7,9,6])\n\
    </cell>\n<text>\nProblem 7\nWrite a function that takes a vector of integers and\
    \ returns the number of unique elements in the vector. \nFor example, unique([1,1,2,3])\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = smallest_change;\n\
    \t@test(candidate([1, 2, 3, 5, 4, 7, 9, 6]) == 4)\n\t@test(candidate([1, 2, 3,\
    \ 4, 3, 2, 2]) == 1)\n\t@test(candidate([1, 4, 2]) == 1)\n\t@test(candidate([1,\
    \ 4, 4, 2]) == 1)\n\t@test(candidate([1, 2, 3, 2, 1]) == 0)\n\t@test(candidate([3,\
    \ 1, 1, 3]) == 0)\n\t@test(candidate([1]) == 0)\n\t@test(candidate([0, 1]) ==\
    \ 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid operator \"--\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgpy5vy2v.jl:15\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpgpy5vy2v.jl:15\n"
  exit_code: 1
  status: Exception

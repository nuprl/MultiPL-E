name: HumanEval_108_count_nums
language: julia
prompt: "\"\"\"\n    Write a function count_nums which takes an array of integers\
  \ and returns\n    the number of elements which has a sum of digits > 0.\n    If\
  \ a number is negative, then its first signed digit will be negative:\n    e.g.\
  \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
  \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
  \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3,\
  \ 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
  \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\
  \t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
completions: ["    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n    for x in arr\n  \
    \      if x < 0\n            sum += abs(x)\n        else\n            sum += x\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n    \
    \        count += 1\n        else\n            count += count_nums(digits(x))\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums(digits(-1234))\n\
    </cell>\n<text>\nExercise\nWrite a function count_nums which takes an array of\
    \ integers and returns\n    the number of elements which has a sum of digits >\
    \ 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x < 0\n            count += abs(x)\n        else\n    \
    \        count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 1, -10, 0, 1])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += count_nums(digits(x))\n        else\n\
    \            count += count_nums(digits(-x)) + 1\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-1234))\n</cell>\n\
    <text>\nExercise\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += x\n        else\n            count += abs(x)\n      \
    \  end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5,\
    \ -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_",
  "    sum = 0\n    for x in arr\n        if x < 0\n            sum += abs(x)\n  \
    \      else\n            sum += x\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    sum = 0\n    for x in arr\n        sum += x\n        if sum >\
    \ 0\n            return sum\n        else\n            sum -= x\n        end\n\
    \    end\n    return 0\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>>\
    \ count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>>\
    \ count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>>\
    \ count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>>\
    \ count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>>\
    \ count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1,\
    \ 2, -3]) == 2\n>>> count_nums([-1, 2, -3]) == 2\n>>> count_nums([-1, 2, -3])\
    \ == 2\n>>> count_nums([", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-2, -5, -10, -15, -20, -25, -27, -29, -32,\
    \ -35, -38, -39, -44, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,\
    \ -49, -49, -49, -49, -49", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n\
    \        else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(-123))\n</cell>\n\
    <text>\nExercise: Write a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.", "    count = 0\n   \
    \ for x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        else\n            if x < 0\n             \
    \   count += abs(x)\n            else\n                count += x\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -10, -15, -20, -25, -35, -45])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -22, -24, -23, -25, -26])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28,\
    \ -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44,\
    \ -45])\n3\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26,\
    \ -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42,\
    \ -43, -44, -45])\n3\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,\
    \ -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,\
    \ -40, -41, -42, -43, -44, -45])\n3\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20,\
    \ -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36,\
    \ -37, -38", "    count = 0\n    for x in arr\n        if x > 0 \n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1,11,-11])\n</cell>\n<code language=julia-1.0>\ncount_nums([1, 1,\
    \ 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            count += x\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 4\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1, 2, -3]) ==\
    \ 4\n>>> count_nums([1, 2, -3]) == 4\n>>> ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, -1, 1, 2, -2, 3,\
    \ -3, 4, -4, -5, -5, -6, -7, -8, -9, -10, -10, -11])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == ",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        else\n        \
    \    count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1,1,2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n\
    \            count += abs(x)\n        else\n            count += 1\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2,\
    \ and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n\
    \    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        else\n            count\
    \ += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -10, -15, -20, -25, -27, -29, -32, -35, -37, -39, -44, -47,\
    \ -49, -54, -59, -61, -64, -67, -71, -74, -77, -79, -84, -89, -92, -97])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -5, -7, -9, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -1,\
    \ 1, 2, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        elseif x < 0\n            count += abs(x)\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([-1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -", "    count = 0\n    for x in arr\n        if x >\
    \ 0 \n            count += count_nums(digits(x))\n        else\n            count\
    \ += count_nums(digits(-x)) + 1\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        else\n            count += x\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf no number\
    \ is negative, then the function should return 0.\ne.g. [1, 1, 2] has signed digits\
    \ 1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n\
    >>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_num", "    count = 0\n    for\
    \ n in arr\n        if n > 0\n            count += n\n        else\n         \
    \   count += n\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 2\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_", "    count = 0\n    for x in arr\n        if x > 0 \n      \
    \      count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2,\
    \ and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n\
    \    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n\
    \    for x in arr\n        if x > 0\n            sum += x\n        else\n    \
    \        sum -= x\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise: Write a function that takes an array of\
    \ integers and returns the number of elements which has a sum of digits < 0.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        elseif x < 0\n           \
    \ count += abs(x)\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_digits(arr::Vector{Int64})::Int64 which returns the number\
    \ of digits in an array.\nFor example, count_digits([-2, -1, 0, 1, 2]) == 3.\n\
    The function count_digits should work for any array type.", "    count = 0\n \
    \   for x in arr\n        if x > 0 \n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2,\
    \ and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n\
    \    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n    for x in arr\n\
    \        if x > 0 \n            sum += x\n        else\n            sum += -x\
    \ \n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([-1, -2, -3, -4]) ==\
    \ 3\n>>> count_nums([-1, -2, -3, -4, -5]) == 3\n>>> count_nums([-1, -2, -3, -4,\
    \ -5, -6, -7, -8]) == 3\n>>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9])\
    \ == 3\n>>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11]) == 3\n\
    >>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13]) == 3\n\
    >>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15])\
    \ == 3\n>>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15, -16, -17]) == 3\n>>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10, -11, -12, -13, -14, -15, -16, -17, -18]) == 3\n>>> count_nums([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19])\
    \ == 3\n>>> count_nums([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15, -16, -17, -18, -19, -20, -21]) == 3\n>>> count_nums([-1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22]) == 3\n>>> ", "    count = 0\n    for n in arr\n        if n > 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\ncount_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -5, -7, -9, -10, -12, -14, -16, -17, -19, -20, -21])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n>>> count_nums([-1, -10, -12, -14, -16, -17, -19,\
    \ -20, -21])\n2\n</text>\n<code language=julia-1.0>", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        else\n        \
    \    count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, \n             -18, -21, -20, -22, -23, -24, -25, -26, -27, -28, -29, -32,\
    \ -33, -34, -35, -36, \n             -37, -38, -39, -40, -41, -42, -43, -44, -45])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += 1\n        elseif x == 0\n            count += 1\n        else\n  \
    \          count += count_nums(digits(x))\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -22,\
    \ -24, -23, -25, -26, -27, -28, -29, -32, -34, -36, -38, -39, -44, -47, -49, -50,\
    \ -52, -53, -54, -55, -57, -58, -59, -62, -64, -66, -68, -70, -72, -74, -76, -78,\
    \ -79, -84, -87, -89, -91, -93, -95, -97, -99, -100, -102, -104, -106, -108, -110,\
    \ -111, -112, -114, -115, -116, -117, -119, -121, -123, -125, -127, -128, -129,\
    \ -131, -132, -134, -136, -138, -140, -142, -144, -146, -148, -150, -152, -154,\
    \ -156, -158, -160]) == 4\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += count_nums(-x)\n   \
    \     else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, 3, -3, 4, -4, 5, -5, 6, -6,\
    \ 7])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3])\
    \ == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3])\
    \ == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>>\
    \ count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3])\
    \ == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3])\
    \ == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>>\
    \ count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3])\
    \ == 3\n>>> count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, -2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x < 0\n            count += 1\n        else\n            count +=\
    \ digits(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf no number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8]) ==\
    \ 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9]) == 4\n>>> count_nums([1,\
    \ 2, 3, 4, -5, -6, -7, -8, 9, 10]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7,\
    \ -8, 9, 10, 11]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13]) ==\
    \ 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14]) == 4\n\
    >>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15]) == 4\n\
    >>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16]) ==\
    \ 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7,\
    \ -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == 4\n>>> count_nums([1,\
    \ 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\
    \ == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22]) == 4\n>>> count_nums([1, 2, 3, 4, -5, -6, ", " \
    \   count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        else\n        \
    \    count += abs(x)\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -22, -24, -23, -25, -27, -29,\
    \ -32, -34, -36, -38, -42, -44, -47, -49, -54, -56, -58, -62, -64, -66, -68, -72,\
    \ -74, -76, -78, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86,\
    \ -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88,\
    \ -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80,\
    \ -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82,\
    \ -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84,\
    \ -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86,\
    \ -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88,\
    \ -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80,\
    \ -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82,\
    \ -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84,\
    \ -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86,\
    \ -88, -80, -82, -84, -86, -88, -80, -82, -84", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        elseif x < 0\n           \
    \ count += abs(x)\n        else\n            count += 1\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <text>\nExercise: Write a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf an element has a negative\
    \ sign then its first signed digit will be negative:\ne.g. -123 has signed digits\
    \ -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n\
    >>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3", "    count = 0\n    for n in\
    \ arr\n        if n > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If all elements are negative, then the function should return 0.\ne.g. [-1, 1,\
    \ -3] is 0, [-1, -1, 1, -3] is 1, and [-1, -1, 1, -3] is 3.\nHint: use count_nums.",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function count_nums which takes an array of integers and returns\n    the\
    \ number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n    for\
    \ i in arr\n        sum += i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34,\
    \ -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40,\
    \ -42, -44, -46])\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6, -10, -12,\
    \ -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n\
    </cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6, -10, -12, -14, -16,\
    \ -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20,\
    \ -24, -26, -28, -32, -34, -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34,\
    \ -36, -38, -40, -42, -44, -46])\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40,\
    \ -42, -44, -46])\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -4, -6,\
    \ -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40, -42, -44,\
    \ -46])\n</cell>\n<code language=julia-1.", "    sum = 0\n    for i in arr\n \
    \       sum += i\n        if sum > 0\n            return sum\n        else\n \
    \           sum = 0\n    end\n    return 0\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, ", "    count = 0\n    for x in arr\n        if x >\
    \ 0 \n            count += 1\n        else\n            count += x\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += count_nums(x::Vector{Int64})\n        else\n            count += 1\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise: Write a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    \    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for n in arr\n        if n > 0\n           \
    \ count += n\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([-1, 1, -2, 3,\
    \ -4]) == 4\n>>> count_nums([1, 2, -3, 4]) == 4\n>>> count_nums([1, 2, -3, 4,\
    \ -5]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8]) == 4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10, -11]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16, -17]) == 4\n>>> count_nums([1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18]) == 4\n\
    >>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,\
    \ -16, -17, -18, -19]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9,\
    \ -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]) == 4\n>>> count_nums([1,\
    \ 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19,\
    \ -20, -21, -22]) == 4\n>>> count_nums([1, 2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23]) == 4\n", " \
    \   count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n \
    \       else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf all elements in the array are\
    \ negative, then the function should return 0.\ne.g. [-1, 1, -3] is 0, [1, 1,\
    \ 3] is 2, and [1, 1, -3] is 1.\nHint: Use count_nums.", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += count_nums(digits(x))\n  \
    \      else\n            count += count_nums(digits(-x))\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums(digits(123))\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for n in arr\n        if n > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4]) == 4\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3,\
    \ -4, -5, -6, -7, -8, -9]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4,\
    \ -5, -6, -7, -8, -9, -10, -11]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3,\
    \ -4, -5, -6, -7, -8, -9, -10, -11, -12]) == 4\n>>> count_nums([-1, -1, 1, -2,\
    \ 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13]) == 4\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14]) == 4\n\
    >>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -16, -17]) == 4\n>>> count_nums([-1, -1,\
    \ 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19]) == 4\n>>> count_nums([-1,\
    \ -1, 1, -2, 2, -3, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21]) == 4\n>>> count_nums([-1, -1, 1, -2, 2, -", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34,\
    \ -36, -38, -40, -42, -44, -46])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -4, -6, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 1, -2, 2, -3, 3, -4, 4])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) ==\
    \ 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 2, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-2, -4, -6, -10, -12, -14,\
    \ -16, -18, -21])\n</cell>\n<text>\nExercise\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If any number is negative, then its first signed digit will be negative:\ne.g.\
    \ -123 has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 2\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 4\n>>> count_nums([1,\
    \ 2, -3]) == 5\n>>> count_nums([1, 2, -3]) == 6\n>>> count_nums([1, 2, -3]) ==\
    \ 7\n>>> count_nums([1, 2, -3]) == 8\n>>> count_nums([1, 2, -3]) == 9\n>>> count_nums([1,\
    \ 2, -3]) == 10\n>>> count_nums([1, 2, -3]) == 11\n>>> count_nums([1, 2, -3])\
    \ == 12\n>>> count_nums([1, 2, -3]) == 13\n>>> count_nums([1, 2, -3]) == 14\n\
    >>> count_nums([1, 2, -3]) == 15\n>>> count_nums([1, 2, -3]) == 16\n>>> count_nums([1,\
    \ 2, -3]) == 17\n>>> count_nums([1, 2, -3]) == 18\n>>> count_nums([1, 2, -3])\
    \ == 19\n>>> count_nums([1, 2, -3]) == 20\n>>> count_nums([1, 2, -3]) == 21\n\
    >>> count_nums([1, 2, -3]) == 22\n>>> count_nums([1, 2, -3]) == 23\n>>> count_nums([1,\
    \ 2, -3]) == 24\n>>> count_nums([1, 2, -3]) == 25\n>>> count_nums([1, 2, -3])\
    \ == 26\n>>> count_nums([1, 2, -3]) == 27\n>>> count_nums([1, 2, -3]) == 28\n\
    >>> count_nums([1, 2, -3]) == 29\n>>> count_nums([1, 2, -3]) == 30\n>>> count_nums([1,\
    \ 2, -3]) == 31\n>>> count_nums([1, 2, -3]) == 32\n>>> count_nums([1, 2, -3])\
    \ == 33\n>>> count_nums([1, 2, -3]) == 34\n>>> count_nums([1, 2, -3]) == 35\n\
    >>> count_nums([1, 2, -3]) == 36\n>>> count_nums([1, 2, -3]) == 37\n>>> count_nums([1,\
    \ 2, -3]) == 38\n>>> count_nums([1, 2, -3]) == 39\n>>> ", "    count = 0\n   \
    \ for x in arr\n        if x > 0 \n            count += 1\n        else\n    \
    \        if x < 0\n                count += abs(x)\n            else\n       \
    \         count += x\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\nIf no number is positive, then the function should return 0.\ne.g. [1,\
    \ 1, 2] has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> ",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n\"\"\"", "    count = 0\n    for x in arr\n    \
    \    if x > 0 \n            count += 1\n        else\n            count += x\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -20, -24, -26, -28, -32, -34, -36, -38, -40,\
    \ -42, -44, -46])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -5, -7, -9, -10, -12, -15, -17, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += x\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise: Write a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits < 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for n in arr\n        if n > 0\n            count += 1\n        end\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        else\n            count += x\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        elseif x\
    \ < 0\n            count += abs(x)\n        else\n            count += 1\n   \
    \ end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8]) == 4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, 9]) == 4\n>>> count_nums([-1, -1, 1, 2, -3,\
    \ 4, -5, -6, -7, -8, -9]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, 10]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9,\
    \ 10, 11]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, 10,\
    \ 11, 12]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, 10,\
    \ 11, 12, 13]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9,\
    \ 10, 11, 12, 13, 14]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, 10, 11, 12, 13, 14, 15]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4,\
    \ -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16]) == 4\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16, 17]) == 4\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 4\n>>> count_nums([-1, -1, 1, 2,\
    \ -3, 4, -5, -6, -7, -8, -9, ", "    count = 0\n    for x in arr\n        if x\
    \ > 0 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\ncount_nums([-1, 1, -2, 2, 3, -3, 3, -4, 4,\
    \ -5, 5])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -4, -6, -8])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([-1, -1, 1, 2,\
    \ -3, 4]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5]) == 4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4,\
    \ -5, -6, -7, -8, -9]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10, -11]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16]) == 4\n>>> count_nums([-1, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17]) ==\
    \ 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15, -16, -17, -18]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19]) == 4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17,\
    \ -18, -19, -20, -21]) == 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7,\
    \ -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22]) ==\
    \ 4\n>>> count_nums([-1, -1, 1, 2, -3, 4, -5, -", "    count = 0\n    for x in\
    \ arr\n        if x < 0\n            sign = -1\n        else\n            sign\
    \ = 1\n        digits = sign * trunc(x::Int64)\n        count += digits\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -3,\
    \ 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 2, -3, 4])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    sum = 0\n    for i in arr\n        sum += i\n\
    \        if sum > 0\n            return sum\n        else\n            sum = 0\n\
    \    end\n    return 0\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -5, -6,\
    \ -7, -8])\n</cell>\n<text>\nExercise: Write a function that takes an array of\
    \ integers and returns the number of elements which has a sum of digits > 0.\n\
    \    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1, 1, -10, -100, -1000, -1000000000])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of elements in the array that have a sum of digits > 0.", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 2\n>>> count_nums([1, 2, -3]) == 1\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, ", "  \
    \  count = 0\n    for x in arr\n        if x < 0\n            count += abs(x)\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -8])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf there are two or more numbers with this property, then the\
    \ function should return the first one.\ne.g. [1, 1, 2] has two numbers with sum\
    \ greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1,\
    \ 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three\
    \ numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater\
    \ than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2,\
    \ 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers\
    \ with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than\
    \ 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has\
    \ three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with\
    \ sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n\
    [1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three\
    \ numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater\
    \ than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2,\
    \ 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers\
    \ with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than\
    \ 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has\
    \ three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with\
    \ sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n\
    [1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three\
    \ numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater\
    \ than 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2,\
    \ 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers\
    \ with sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum greater than\
    \ 0.\n[1, 1, 2, 3] has three numbers with sum greater than 0.\n[1, 1, 2, 3] has\
    \ three numbers with sum greater than 0.\n[1, 1, 2, 3] has three numbers with\
    \ sum greater than 0.\n[1, 1, 2, 3] has three numbers with sum ", "    count =\
    \ 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        else\n            count += x\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.3>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n\
    \    for i in arr\n        sum += i\n        if sum > 0\n            return sum\n\
    \        else\n            return sum + i\n    end\n    return 0\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n            count\
    \ += abs(x)\n        else\n            count += 1\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits < 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\n    e.g. -123 has\
    \ signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        else\n\
    \            count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += count_nums(digits(x))\n        else\n            count\
    \ += count_nums(digits(-x))\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums(digits(-123))\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9,\
    \ -10])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            count += x\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -4, -6, -10,\
    \ -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, -10, -100, -1000, -1000000000])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    sum = 0\n    for i in arr\n        if i > 0 \n            sum\
    \ += i\n        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            if x < 0\n\
    \                count += abs(x)\n            else\n                count += x\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-1, 11, -11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        else\n            count +=\
    \ x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function count_nums which takes an array of integers and returns\n    the number\
    \ of elements which has a sum of digits > 0.\n    If a number is negative, then\
    \ its first signed digit will be negative:\n    e.g. -123 has signed digits -1,\
    \ 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) ==\
    \ 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        elseif x < 0\n\
    \            count += abs(x)\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x < 0\n            count += abs(x)\n        else\n\
    \            count += 1\n    end\n    return count\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_nums([-2, -1, 0, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([]) ==\
    \ 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3])\
    \ == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>>\
    \ count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) == 3\n>>> count_nums([-1,\
    \ 2, -3]) == ", "    count = 0\n    for x in arr\n        if x > 0 \n        \
    \    count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, ", "    count = 0\n    for x in arr\n  \
    \      if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6,\
    \ -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -", "    count = 0\n    for x in\
    \ arr\n        if x > 0 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n\
    </cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    sum = 0\n    for x in arr\n        if x > 0\n            sum\
    \ += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        elseif x < 0\n            count += abs(x)\n\
    \        else\n            count += 1\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n\
    </cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5, -6, -7,\
    \ -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 3, -4, -5,\
    \ -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2,\
    \ 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\ncount_num",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        elseif x < 0\n            count += abs(x)\n    \
    \    else\n            count += 1\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x < 0\n            count += abs(x)\n        else\n    \
    \        count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of integers and returns the number of elements which has\
    \ a sum of digits < 0.\nIf a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits < 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([-1, -1, 1, 2, -3, 4, -5, -6, -7, -8, -9]) == 4\n>>> count_nums([-1,\
    \ -1, 1, 2, -3, 4, -5, -6, -7, -8, -9, -10, -20, -30, -40, -50, -60, -70, -80,\
    \ -90, -100, -110, -121, -130, -140, -150, -160, -170, -180, -190, -200, -201,\
    \ -210, -220, -230, -240, -250, -260, -270, -280, -290, -300, -301, -310, -311,\
    \ -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332, -333,\
    \ -334, -335, -336, -337, -338, -339, -340, -341, -342, -343, -344, -345, -346,\
    \ -347, -348, -349, -350, -351, -352, -353, -354, -355, -356, -357, -358, -359,\
    \ -360, -361, -362, -363, -364, -365, -366, -367, -368, -369, -370, -371, -372,\
    \ -373, -374, -375, -376, -377, -378, -379, -380])\n4\n</text>\n<code language=julia-1.3>",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           if x < 0\n                count += abs(x)\n            else\n    \
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-1,11,-11])\n</cell>\n<code language=julia-1.3>\n\
    count_nums([1,1,2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ < 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([-1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -", "    count\
    \ = 0\n    for x in arr\n        if x > 0 \n            count += 1\n        end\n\
    \    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 1, -2, 3, -4, -5, -6, -7, -8, -9])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -6, -7,\
    \ -8])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an\
    \ array of integers and returns\n    the number of elements which has a sum of\
    \ digits > 0.\n    If a number is negative, then its first signed digit will be\
    \ negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits < 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n\"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += count_nums(divrem(x,\
    \ 10))\n        else\n            count += count_nums(divrem(x, 10))\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.4>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            if x < 0\n                count\
    \ += abs(x)\n            else\n                count += x\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 3\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n\
    \            count += count_nums(-x)\n        else\n            count += 1\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2,\
    \ -1, 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which\
    \ takes an array of integers and returns\n    the number of elements which has\
    \ a sum of digits > 0.\n    If a number is negative, then its first signed digit\
    \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        else\n            if x < 0\n                count\
    \ += abs(x)\n            else\n                count += x\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_", "    count = 0\n    for x in\
    \ arr\n        if x < 0\n            sign = sign(x)\n            x = abs(x)\n\
    \        else\n            sign = 1\n        end\n        count += 1\n       \
    \ for y in digits(x)\n            if y > 0\n                count += 1\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ count_nums which takes an array of integers and returns\n    the number of elements\
    \ which has a sum of digits > 0.\n    If a number is negative, then its first\
    \ signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n\
    \    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>>\
    \ count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 1, -2, 2, -3, 3, -4,\
    \ 4, -5, 5])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\n\
    If no number is positive, then return 0.\nIf no number is negative, then return\
    \ 0.\nIf no number is zero, then return 1.\nIf all numbers are zero, then return\
    \ 0.\nIf all numbers are negative, then return 0.\nIf all numbers are positive,\
    \ then return 1.\nIf all numbers are integers, then return 1.\nIf all numbers\
    \ are floats, then return 1.\nIf all numbers are rationals, then return 1.\nIf\
    \ all numbers are complex, then return 1.\nIf all numbers are rational or complex,\
    \ then return 1.\nIf all numbers are rational or complex, then return 1.\nIf all\
    \ numbers are rational or complex, then return 1.\nIf all numbers are rational\
    \ or complex, then return 1.\nIf all numbers are rational or complex, then return\
    \ 1.\nIf all numbers are rational or complex, then return 1.\nIf all numbers are\
    \ rational or complex, then return 1.\nIf all numbers are rational or complex,\
    \ then return 1.\nIf all numbers are rational or complex, then return 1.\nIf all\
    \ numbers are rational or complex, then return 1.\nIf all numbers are rational\
    \ or complex, then return 1.\nIf all numbers are rational or complex, then return\
    \ 1.\nIf all numbers are rational or complex, then return 1.\nIf all numbers are\
    \ rational or complex, then return 1.\nIf all numbers are rational or complex,\
    \ then return 1.\nIf all numbers are rational or complex, then return 1.\nIf all\
    \ numbers are rational or complex, then return 1.\nIf all numbers are rational\
    \ or complex, then return 1.\nIf all numbers are rational or complex, then return\
    \ 1.\nIf all numbers are rational or complex, then return 1.\nIf all numbers are\
    \ rational or complex, then return 1.\nIf all numbers are rational or complex,\
    \ then return 1.\nIf all numbers are rational or complex, then return 1.\nIf all\
    \ numbers are rational or complex, then return 1.\nIf all numbers are rational\
    \ or complex, then return 1.\nIf all numbers are rational or complex, then return\
    \ 1.\nIf all numbers are rational or complex, then ", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        elseif x < 0\n\
    \            count += count_nums(-x)\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 2, -4, -6, -7,\
    \ -8])\n</cell>\n<text>\nExercise: Write a function that takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\nIf no number\
    \ is positive, then the function should return 0.\nFor example, count_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8]) == 4\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, 1])\
    \ == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1]) == 0\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8, -1, 1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6,\
    \ -7, -8, -1, 1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1,\
    \ -1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1,\
    \ 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, 1])\
    \ == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, -1, 1])\
    \ == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, -1, -1,\
    \ 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, -1,\
    \ -1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1,\
    \ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4,\
    \ -6, -7, -8, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]) == 0\ncount_nums([-2,\
    \ -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]) ==\
    \ 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, 1]) == 0\ncount_nums([-2, -1, 0, 2, -4, -6, -7, -8, -1, 1, -1, ",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            if x < 0\n                count += abs(x)\n         \
    \   else\n                count += x\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n           \
    \ count += abs(x)\n        else\n            count += 1\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([1, 1, 2])\n</cell>\n<text>\nExercise: Write a function that takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    sum = 0\n    for x in arr\n        if x > 0 \n            sum\
    \ += x\n        else\n            sum += -x \n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 1, 2, -3, 4])\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-1, 11, -11])\n</cell>\n<code language=julia-1.5>\ncount_nums([1,\
    \ 1, 2])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n    \
    \        count += abs(x)\n        else\n            count += 1\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of integers and returns the number of elements which has a sum of digits < 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1,\
    \ 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([-1, -1, 1, -3]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4])\
    \ == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5]) == 4\n>>> count_nums([-1, -1,\
    \ 1, -3, 2, -4, -5, -3]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5, -3, -4])\
    \ == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5, -3, -4, -5]) == 4\n>>> count_nums([-1,\
    \ -1, 1, -3, 2, -4, -5, -3, -4, -5, -4]) == 4\n>>> count_nums([-1, -1, 1, -3,\
    \ 2, -4, -5, -3, -4, -5, -4, -3]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4,\
    \ -5, -3, -4, -5, -4, -3, -2]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5,\
    \ -3, -4, -5, -4, -3, -2, -3]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5,\
    \ -3, -4, -5, -4, -3, -2, -3, -4]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4,\
    \ -5, -3, -4, -5, -4, -3, -2, -3, -4, -5]) == 4\n>>> count_nums([-1, -1, 1, -3,\
    \ 2, -4, -5, -3, -4, -5, -4, -3, -2, -3, -4, -5, -4]) == 4\n>>> count_nums([-1,\
    \ -1, 1, -3, 2, -4, -5, -3, -4, -5, -4, -3, -2, -3, -4, -5, -4, -3]) == 4\n>>>\
    \ count_nums([-1, -1, 1, -3, 2, -4, -5, -3, -4, -5, -4, -3, -2, -3, -4, -5, -4,\
    \ -3, -2]) == 4\n>>> count_nums([-1, -1, 1, -3, 2, -4, -5, -3, -4, -5, ", "  \
    \  count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.4>\ncount_nums([-1, 11, -11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for n in arr\n        if n > 0\n           \
    \ count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -4, -6, -10, -12, -14, -16, -18, -21])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\nIf any number is negative, then its first signed digit will\
    \ be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> ", "    count = 0\n    for x in arr\n\
    \        if x > 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of integers and returns\
    \ the number of elements which has a sum of digits < 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>>\
    \ count_nums([1, 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_num", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\nIf no number is positive, then return\
    \ 0.\nIf no number is negative, then return 0.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then return 1.\nIf no number is 0, then return\
    \ 1.\nIf no number is negative, then ", "    count = 0\n    for x in arr\n   \
    \     if x > 0 \n            count += count_nums(digits(x))\n        else\n  \
    \          count += count_nums(digits(-x)) + 1\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_nums(digits(-1234))\n</cell>\n<text>\n\
    Exercise 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,11,-11])\n\
    </cell>\n<text>\nExercise 2\nWrite a function count_nums which takes an array\
    \ of integers and returns\n    the number of elements which has a sum of digits\
    \ > 0.\n    If a number is negative, then its first signed digit will be negative:\n\
    \    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n\
    \    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n\
    \    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n          \
    \  count += 1\n        else\n            count += x\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_nums([-1, 11, -11])\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([1, 1, 2])\n</cell>\n<text>\nExercise 3\n\
    Write a function count_nums which takes an array of integers and returns\n   \
    \ the number of elements which has a sum of digits > 0.\n    If a number is negative,\
    \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
    \ -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11])\
    \ == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for\
    \ x in arr\n        if x > 0 \n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.3>\ncount_nums([-2, -1,\
    \ 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits < 0.\nIf a number is negative, then its first\
    \ signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n\
    >>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1,\
    \ 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) ==\
    \ 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        else\n \
    \           count += x\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\nIf no number is negative, then the function\
    \ should return 0.\ne.g. [1, 1, 2] has signed digits 1, 2, and 3.\n>>> count_nums([])\
    \ == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1, 1, 2]) == 3\n>>>\
    \ count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1,\
    \ 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) ==\
    \ 0\n>>> count_nums([1, 2, -3]) == 0\n>>> count_nums([1, 2, -3]) == 0\n>>> ",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      else\n            count += x\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for n in arr\n        if n < 0\n            n = -n\n        end\n       \
    \ if n < 10\n            count += 1\n        elseif n < 100\n            count\
    \ += 2\n        elseif n < 1000\n            count += 3\n        elseif n < 10000\n\
    \            count += 4\n        elseif n < 100000\n            count += 5\n \
    \       elseif n < 1000000\n            count += 6\n        elseif n < 10000000\n\
    \            count += 7\n        elseif n < 100000000\n            count += 8\n\
    \        elseif n < 1000000000\n            count += 9\n        elseif n < 10000000000\n\
    \            count += 10\n        elseif n < 100000000000\n            count +=\
    \ 11\n        elseif n < 1000000000000\n            count += 12\n        elseif\
    \ n < 10000000000000\n            count += 13\n        elseif n < 100000000000000\n\
    \            count += 14\n        elseif n < 1000000000000000\n            count\
    \ += 15\n        elseif n < 10000000000000000\n            count += 16\n     \
    \   elseif n < 100000000000000000\n            count += 17\n        elseif n <\
    \ 1000000000000000000\n            count += 18\n        elseif n < 10000000000000000000\n\
    \            count += 19\n        elseif n < 100000000000000000000\n         \
    \   count += 20\n        elseif n < 1000000000000000000000\n            count\
    \ += 21\n        elseif n < 10000000000000000000000\n            count += 22\n\
    \        elseif n < 100000000000000000000000\n            count += 23\n      \
    \  elseif n < 1000000000000000000000000\n            count += 24\n        elseif\
    \ n < 10000000000000000000000000\n            count += 25\n        elseif n <\
    \ 100000000000000000000000000\n            count += 26\n        elseif n < 1000000000000000000000000000\n\
    \            count += 27\n        elseif n < 10000000000000000000000000000\n \
    \           count += 28\n        elseif n < 100000000000000000000000000000\n \
    \           count += 29\n        elseif n < 1000000000000000000000000000000\n\
    \            count += 30\n        elseif n < 10000000000000000000000000000000\n\
    \            count += 31\n        elseif n < 100000000000000000000000000000000\n\
    \            count += 32\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 33\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 34\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 35\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 36\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 37\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 38\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 39\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 40\n        elseif n < 1000000000000000000000000000000000\n\
    \            count += 41\n        elseif n < 1000000000000000000000000000000000\n",
  "    count = 0\n    for x in arr\n        if x > 0 \n            count += 1\n  \
    \      end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\ncount_nums([-1,11,-11])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ elements which has a sum of digits > 0.\nIf any number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums([]) == 0\n>>> count_nums([-1, 11, -11]) == 1\n>>> count_nums([1,\
    \ 1, 2]) == 3\n>>> count_nums([1, 2, -3]) == 3\n>>> count_nums([-1, 2, -3]) ==\
    \ 3\n>>> count_nums([-1, 2, -3, 4]) == 3\n>>> count_nums([-1, 2, -3, 4, -5]) ==\
    \ 3\n>>> count_nums([-1, 2, -3, 4, -5, 6]) == 3\n>>> count_nums([-1, 2, -3, 4,\
    \ -5, 6, 7]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, 8]) == 3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, 6, -7, -8]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8,\
    \ 9]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9]) == 3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, 6, -7, -8, -9, 10]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6,\
    \ -7, -8, -9, -10, 11]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9,\
    \ -10, 11, 12]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9, -10, 11,\
    \ 12, 13]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9, -10, 11, 12,\
    \ 13, 14]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9, -10, 11, 12,\
    \ 13, 14, 15]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9, -10, 11,\
    \ 12, 13, 14, 15, 16]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6, -7, -8, -9,\
    \ -10, 11, 12, 13, 14, 15, 16, 17]) == 3\n>>> count_nums([-1, 2, -3, 4, -5, 6,\
    \ -7, -8, -9, -10, 11, 12, 13, 14, 15, 16, 17, 18]) == 3\n>>> count_nums([-1,\
    \ 2, -3, 4, -5, 6, -7, ", "    count = 0\n    for x in arr\n        if x > 0 \n\
    \            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.3>\ncount_nums([-2, -4, -6, -8])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    sum = 0\n\
    \    for x in arr\n        if x < 0\n            sum += abs(x)\n        else\n\
    \            sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise: Write a function that\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n   \
    \         count += 1\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.0>\ncount_nums([-2, -1, 1, 2, -3, 4, -5, -6, -7, -8])\n</cell>\n\
    <text>\nExercise 2\nWrite a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"", "    count = 0\n    for x in arr\n        if x > 0 \n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    count_nums([-1,11,-11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x < 0\n\
    \            count += count_nums(x::Vector{Int64})\n        else\n           \
    \ count += 1\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    count_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise 3\nWrite a function count_nums\
    \ which takes an array of integers and returns\n    the number of elements which\
    \ has a sum of digits > 0.\n    If a number is negative, then its first signed\
    \ digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n   \
    \ >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"", "    count = 0\n    for x in arr\n        if x > 0\
    \ \n            count += 1\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_nums([-2, -1, 0, 1, 2])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function count_nums which takes an array of integers and returns\n\
    \    the number of elements which has a sum of digits > 0.\n    If a number is\
    \ negative, then its first signed digit will be negative:\n    e.g. -123 has signed\
    \ digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11,\
    \ -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"", "    count = 0\n\
    \    for x in arr\n        if x > 0 \n            count += 1\n        end\n  \
    \  end\n    return count\nend\n</cell>\n<code language=julia-1.5>\ncount_nums([-1,\
    \ 11, -11])\n</cell>\n<text>\nExercise 2\nWrite a function count_nums which takes\
    \ an array of integers and returns\n    the number of elements which has a sum\
    \ of digits > 0.\n    If a number is negative, then its first signed digit will\
    \ be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
    \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2])\
    \ == 3\n    \"\"\""]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

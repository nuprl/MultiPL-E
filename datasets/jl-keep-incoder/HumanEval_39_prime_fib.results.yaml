name: HumanEval_39_prime_fib
language: julia
results:
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      1\n    else if n == 2 \n        2\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpciel3cis.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpciel3cis.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu1efxzf5.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu1efxzf5.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n == 3\n    \
    \    return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvk52qtny.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvk52qtny.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == true\n            prime_fib(n\
    \ - 2)\n        else\n            prime_fib(n - 2) + prime_fib(n - 1)\n      \
    \  end\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,primes |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnusmo6vy.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnusmo6vy.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 10\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n>>> prime_fib(5)\n\
    89\n>>> prime_fib(10)\n1307\n>>> prime_fib(20)\n524288\n>>> prime_fib(30)\n896757\n\
    >>> prime_fib(40)\n13743895347\n>>> prime_fib(50)\n23316899555\n>>> prime_fib(60)\n\
    56626899295\n>>> prime_fib(70)\n891429003707\n>>> prime_fib(80)\n1447233402467\n\
    >>> prime_fib(90)\n23316899555\n>>> prime_fib(100)\n43349443707\n>>> prime_fib(110)\n\
    706458231087\n>>> prime_fib(120)\n1447233402467\n>>> prime_fib(130)\n23316899555\n\
    >>> prime_fib(140)\n43349443707\n>>> prime_fib(150)\n706458231087\n>>> prime_fib(160)\n\
    1447233402467\n>>> prime_fib(170)\n23316899555\n>>> prime_fib(180)\n43349443707\n\
    >>> prime_fib(190)\n706458231087\n>>> prime_fib(200)\n1447233402467\n>>> prime_fib(210)\n\
    23316899555\n>>> prime_fib(220)\n43349443707\n>>> prime_fib(230)\n706458231087\n\
    >>> prime_fib(240)\n1447233402467\n>>> prime_fib(250)\n23316899555\n>>> prime_fib(260)\n\
    43349443707\n>>> prime_fib(270)\n706458231087\n>>> prime_fib(280)\n1447233402467\n\
    >>> prime_fib(290)\n23316899555\n>>> prime_fib(300)\n43349443707\n>>> prime_fib(310)\n\
    706458231087\n>>> prime_fib(320)\n1447233402467\n\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpno62gbwf.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpno62gbwf.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 || n ==\
    \ 1\n        return n\n    else if n == 2\n        return 3\n    else if n % 2\
    \ == 0\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n       \
    \ return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19]\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\
    \t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa3rksye5.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa3rksye5.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmjaeonmq.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmjaeonmq.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp48g3n84.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpp48g3n84.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else \n        if n % 2 == 0 \n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        else \n            prime_fib(n - 1)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis is not an answer. Explain what you are doing and why you did\
    \ it.\n<|/ c |>\n<| c |>\nThis is not an answer. Explain what you are doing and\
    \ why you did it.\n<|/ c |>\n<| c |>\nThis is not an answer. Explain what you\
    \ are doing and why you did it.\n<|/ c |>\n<| a tags=julia,fibonacci |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc7gz3fa9.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc7gz3fa9.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9e3phv01.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp9e3phv01.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphcg_c2gr.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphcg_c2gr.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdjjdarji.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdjjdarji.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<text>\nLet's test our new function prime_fib:\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6if2k3v6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6if2k3v6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n          \
    \  prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis is not an\
    \ answer to the question. He asked for a recursive solution, not a looping one.\n\
    <|/ c |>\n<| c |>\nThis is not an answer to the question. He asked for a recursive\
    \ solution, not a looping one.\n<|/ c |>\n<| c |>\nThis is not an answer to the\
    \ question. He asked for a recursive solution, not a looping one.\n<|/ c |>\n\
    <| c |>\nThis is not an answer to the question. He asked for a recursive solution,\
    \ not a looping one.\n<|/ c |>\n<| c |>\nThis is not an answer to the question.\
    \ He asked for a recursive solution, not a looping one.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnpj7gh2p.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnpj7gh2p.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi07fa6pf.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi07fa6pf.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\
    \t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpff_7iqey.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpff_7iqey.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=julia,fibonacci |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgyp3sdgo.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpgyp3sdgo.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfijuiv9v.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfijuiv9v.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    else return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvese3y58.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvese3y58.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if n == 2\n            3\n        else\n           \
    \ if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n       \
    \     else\n                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphbiwax2m.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphbiwax2m.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n>>> prime_fib(10)\n\
    55\n>>> prime_fib(11)\n89\n>>> prime_fib(12)\n144\n>>> prime_fib(13)\n233\n>>>\
    \ prime_fib(14)\n377\n>>> prime_fib(15)\n610\n>>> prime_fib(16)\n987\n>>> prime_fib(17)\n\
    1597\n>>> prime_fib(18)\n2584\n>>> prime_fib(19)\n4181\n>>> prime_fib(20)\n6765\n\
    >>> prime_fib(21)\n10946\n>>> prime_fib(22)\n17711\n>>> prime_fib(23)\n28657\n\
    >>> prime_fib(24)\n46368\n>>> prime_fib(25)\n75025\n>>> prime_fib(26)\n121393\n\
    >>> prime_fib(27)\n196418\n>>> prime_fib(28)\n317811\n>>> prime_fib(29)\n514229\n\
    >>> prime_fib(30)\n832040\n>>> prime_fib(31)\n1346269\n>>> prime_fib(32)\n2178309\n\
    >>> prime_fib(33)\n3524578\n>>> prime_fib(34)\n5702887\n>>> prime_fib(35)\n9227465\n\
    >>> prime_fib(36)\n14930352\n>>> prime_fib(37)\n24157817\n>>> prime_fib(38)\n\
    39088169\n>>> prime_fib(39)\n63245986\n>>> prime_fib(40)\n102334155\n>>> prime_fib(41)\n\
    165580141\n>>> prime_fib(42)\n267914296\n>>> prime_fib(43)\n433494437\n>>> prime_fib(44)\n\
    701408733\n>>> prime_fib(45)\n1134903170\n>>> prime_fib(46)\n1836311903\n>>> prime_fib(47)\n\
    2971215073\n>>> prime_fib(48)\n4807526976\n>>> \nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2m74st96.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2m74st96.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      1\n    else if n == 1 \n        2\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3aw0ddxp.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3aw0ddxp.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_65q_n0q.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_65q_n0q.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqb5hcp_w.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqb5hcp_w.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n == 3\n    \
    \    return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2p1r4e8u.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2p1r4e8u.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyeepbslp.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyeepbslp.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv_pn_oow.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv_pn_oow.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\nend\n</code>\n<|/ a\
    \ tags=julia,fibonacci,primes |>\n<| c |>\nThanks for the answer. I am not familiar\
    \ with Julia but this looks like a good solution. I am going to try it out and\
    \ see if it works.\n<|/ c |>\n<| c |>\nI added a Julia solution to the answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for the Julia solution. I will try\
    \ it out and see if it works.\n<|/ c |>\n<| c |>\nI added a Julia solution to\
    \ the answer. Hope it helps.\n<|/ c |>\n<| a dscore=2 |>\nI wrote a Julia package\
    \ that does this for you. \nhttps://github.com/jrwlkx/Primes.jl\n<code>\njulia>\
    \ using Primes\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9g0goip7.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9g0goip7.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      1\n    else if n == 1 \n        2\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkhl_jcbs.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkhl_jcbs.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list()\n    [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t\
    @test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo3rqt3la.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo3rqt3la.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      return 2\n    else if n == 2 \n        return 3\n    else if n % 2 == 0\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnjgr82my.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnjgr82my.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt82l0zqq.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt82l0zqq.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdyg5ji_d.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdyg5ji_d.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphdu8eszf.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphdu8eszf.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp91naz8a8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp91naz8a8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj8tkae8g.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj8tkae8g.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    else return prime_fib(3 * n + 1) + prime_fib(n / 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi5t9998d.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpi5t9998d.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpccnw50x5.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpccnw50x5.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwi1iaopf.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwi1iaopf.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0f8d0jt4.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0f8d0jt4.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.1>\nprime_fib(10)\n</cell>\n<code language=julia-1.1>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz2cb0amu.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz2cb0amu.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<text>\nExercise\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nusing Test\n\n@testset begin\n\n\
    candidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\
    \t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_9jbb2q.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmph_9jbb2q.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26867455)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I do not have enough reputation to comment on other people's posts.\
    \ I only have enough reputation to comment on answers. I thought this was an answer\
    \ to the question. Maybe I misunderstood the question?\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. My bad.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsbx85ndh.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsbx85ndh.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnajps37e.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnajps37e.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5f8wgizr.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5f8wgizr.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz8zjnud4.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz8zjnud4.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      return 2\n    if n == 2 \n        return 3\n    if n % 2 == 0 \n      \
    \  return prime_fib(n - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph7ks8_wo.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph7ks8_wo.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 || n >\
    \ 100\n        error(\"n must be between 2 and 100\")\n    end\n    if n == 1\
    \ || n == 2\n        return n\n    else\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2np_mkk7.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2np_mkk7.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpov1odip9.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpov1odip9.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n_minus_2 = prime_fib(n\
    \ - 2)\n        fib_n_minus_1 = prime_fib(n - 1)\n        fib_n_minus_3 = prime_fib(n\
    \ - 3)\n        return fib_n_minus_3 + fib_n_minus_2 + fib_n_minus_1\nend\n</cell>\n\
    <code language=julia-1.4>\nprime_fib(10)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that returns n-th number that is a Fibonacci number and it's also prime.\nWrite\
    \ a function that returns n-th number that is a Fibonacci number and it's also\
    \ prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a \nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t\
    @test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw6xiu4v4.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpw6xiu4v4.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    prime_fib(n+1)\n    else\n        if n % 2 == 0\n            prime_fib(n\
    \ + 2)\n        else\n            if n % 3 == 0\n                prime_fib(n +\
    \ 3)\n            else\n                if n % 5 == 0\n                    prime_fib(n\
    \ + 5)\n                else\n                    if n % 7 == 0\n            \
    \            prime_fib(n + 7)\n                    else\n                    \
    \    prime_fib(n + 6)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwdnwnnas.jl:33\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwdnwnnas.jl:33\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\nprime_fib(10)\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp70cfkxzt.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp70cfkxzt.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n == 3\n    \
    \    return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nprime_fib(4)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5_4tj7mc.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5_4tj7mc.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8yk3p21n.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8yk3p21n.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n == 3\n    \
    \    return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp131zt2__.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp131zt2__.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmgmn8e9p.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmgmn8e9p.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if n % 2 == 0\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        else\n            prime_fib(n - 1)\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2k30d_2j.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2k30d_2j.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_5ektd8v.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp_5ektd8v.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3arjq6el.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3arjq6el.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphl2rp8w2.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphl2rp8w2.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        then return n\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n        else return prime_fib(n - 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvux9ia11.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvux9ia11.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      return 2\n    else if n == 2 \n        return 3\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy0z9grs4.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy0z9grs4.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers from 1 to n.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpph3snkfo.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpph3snkfo.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\nI wrote a Julia package to calculate Fibonacci numbers. It is very fast\
    \ and accurate. \nhttps://github.com/gokulkrishna/Fibonacci.jl\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7tt0iy0j.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7tt0iy0j.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThe `prime_fib` function can be simplified to `return n <= 2 ? n : prime_fib(n\
    \ - 1) + prime_fib(n - 2)`.\n<|/ c |>\n<| a tags=julia,fibonacci |>\nThe most\
    \ efficient way is to use memoization:\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmm7m_y08.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpmm7m_y08.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 || n >\
    \ 100\n        error(\"n must be between 2 and 100\")\n    end\n    if n == 2\n\
    \        return n\n    elseif n == 3\n        return 5\n    elseif n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqu7w4qqp.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqu7w4qqp.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th number that is a\
    \ Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>>\
    \ prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n   \
    \ 13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsh5opnoj.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsh5opnoj.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0\n   \
    \     1\n    else if n == 1\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgfmw38dm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgfmw38dm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq_oyqn8l.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpq_oyqn8l.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        then return n\n    else \n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8748oqf3.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp8748oqf3.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyh1y8n64.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyh1y8n64.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptklownb6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptklownb6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      then return 1\n    else if n == 1 \n        then return 2\n    else \n\
    \        fib_n_1 = prime_fib(n - 1)\n        fib_n_2 = prime_fib(n - 2)\n    \
    \    return fib_n_1 + fib_n_2\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\
    \n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptzjya99r.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmptzjya99r.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    if n % 3 == 0 then return prime_fib(n / 3)\n    return prime_fib(n\
    \ / 2) + prime_fib(n / 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvshh6use.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvshh6use.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-2) + prime_fib(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8darbtf_.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8darbtf_.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpku34usqb.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpku34usqb.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm6iknf7n.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpm6iknf7n.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nHint: use recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3mi_o6qu.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp3mi_o6qu.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpena56i2z.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpena56i2z.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpspct5i88.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpspct5i88.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n == 3\n    \
    \    return 5\n    else if n % 2 == 0\n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else\n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9c6jv4sy.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9c6jv4sy.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2bx0le1i.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2bx0le1i.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThe `prime_fib` function can be written more concisely as `return\
    \ n < 2 ? n : prime_fib(n - 1) + prime_fib(n - 2)`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your comment. I just wanted to show that Julia has some nice features that\
    \ can make code more concise and efficient.\n<|/ c |>\n<| a |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\
    \t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) ==\
    \ 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpduavo9j2.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpduavo9j2.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps0lf4cb7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps0lf4cb7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp03u8rmzt.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp03u8rmzt.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ calculates the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_lvr2ica.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_lvr2ica.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp883ew7zv.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp883ew7zv.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n          \
    \  prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is\
    \ not an answer to the question. He is asking for a recursive solution. Your answer\
    \ is a looping solution.\n<|/ c |>\n<| c |>\nI believe this to be the correct\
    \ answer. Recursion is what I was looking for. Thanks!\n<|/ c |>\n<| c |>\nThis\
    \ is not an answer to the question. He is asking for a recursive solution. Your\
    \ answer is a looping solution.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzietznas.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzietznas.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa7jtnqt6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa7jtnqt6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm1qvzmil.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpm1qvzmil.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 1) == n\n            prime_fib(n -\
    \ 1)\n        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</code>\n<|/ a |>\n<| c |>\nThis code does not work. `prime_fib(5)`\
    \ returns `89` but `prime_fib(4)` returns `13`.\n<|/ c |>\n<| c |>\nThanks for\
    \ your comment. I fixed the code now.\n<|/ c |>\n<| c |>\nThis code does not work.\
    \ `prime_fib(5)` returns `89` but `prime_fib(4)` returns `13`.\n<|/ c |>\n<| c\
    \ |>\nThanks for your comment. I fixed the code now.\n<|/ c |>\n<| c |>\nThis\
    \ code does not work. `prime_fib(5)` returns `89` but `prime_fib(4)` returns `13`.\n\
    <|/ c |>\n<| a tags=julia,fibonacci,primes |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprlcf9k65.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprlcf9k65.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a number as an argument and returns its square root.\nThe square root\
    \ of a number $x$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa030l3mf.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa030l3mf.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9_9g7x6g.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9_9g7x6g.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpub8llp6m.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpub8llp6m.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqyoter1p.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqyoter1p.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 then\
    \ return 1\n    if n == 1 then return 2\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    return prime_fib(3 * n + 1) + prime_fib(n / 2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(5)\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\
    \t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) ==\
    \ 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqvdi9t9_.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqvdi9t9_.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi58_k7q1.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi58_k7q1.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a number\
    \ is prime or not. \nThe function should return true or false depending on whether\
    \ the number is prime or not. \nThe function should take one argument and that\
    \ argument should be any number. \nThe function should return true if the number\
    \ is prime and false if the number is not prime.\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1cd8ow2f.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp1cd8ow2f.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(1)\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(2)\n</cell>\n<code language=julia-1.5>\nprime_fib(3)\n</cell>\n<code\
    \ language=julia-1.5>\nprime_fib(4)\n</cell>\n<code language=julia-1.5>\nprime_fib(5)\n\
    </cell>\n<text>\nExercise 1\nWrite a function that calculates the sum of all prime\
    \ numbers less than a given number n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfqcmh17g.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfqcmh17g.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8q3akn86.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8q3akn86.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnrfkdkd_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnrfkdkd_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprtv68xnq.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprtv68xnq.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1w6lc2no.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1w6lc2no.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    return prime_fib(3 * n + 1) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(4)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4r7rwsf8.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp4r7rwsf8.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n        if fib_n % 2 == 0 \n            then return fib_n\n\
    \        else return fib_n + 1\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    prime_fib_list returns list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n\
    \    [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvip8qabp.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpvip8qabp.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(10)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo00jw6_c.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo00jw6_c.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuy62l0dv.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpuy62l0dv.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcttx2pv1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcttx2pv1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns n-th number that is\
    \ a Fibonacci number and it's also prime.\nHint: Use recursion.\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmjpqo1m7.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmjpqo1m7.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplxz1wk47.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplxz1wk47.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_list returns list of prime Fibonacci\
    \ numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13, 17, 19, 23]\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfblyh749.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfblyh749.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    prime_fib(n) = n\n    else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\
    \t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) ==\
    \ 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9otrff9m.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9otrff9m.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        then return n\n        else return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n   \
    \ 5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg1l4s67g.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpg1l4s67g.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(5)\n</cell>\n<text>\nThe Fibonacci sequence is defined by the recurrence\
    \ relation:\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv1tq66_f.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv1tq66_f.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4u47ubcd.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4u47ubcd.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n - 2)\n\
    \        prime_fib_n = prime_fib(n - 1)\n        return fib_n + prime_fib_n\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk9i46__x.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpk9i46__x.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    else return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(4)\n</cell>\n<text>\nExercise 2\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ returns n-th number that is a Fibonacci number and it's also prime.\nWrite a\
    \ function that returns n-th number that is a Fibonacci number and it's also prime.\n\
    Write a function that returns n-th number that is a Fibonacci number and it's\
    \ also prime.\nWrite a function that returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nWrite a function that returns n-th number that is a Fibonacci\
    \ number and it's also prime.\nWrite a function that returns n-th number that\
    \ is a Fibonacci number and it's also prime.\nWrite a function that returns n-th\
    \ number that is a Fibonacci number and it's also prime.\nWrite a function that\
    \ \nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0zen48pe.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp0zen48pe.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvbpvl250.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvbpvl250.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm03ne1ae.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpm03ne1ae.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <text>\nThe Fibonacci sequence is defined by the recurrence relation:\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa0he0k3l.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa0he0k3l.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgeo0vcz7.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpgeo0vcz7.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpezfefwbt.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpezfefwbt.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp33ab33d7.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp33ab33d7.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
    \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb97975n7.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpb97975n7.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ % 2 == 0 \n        then return prime_fib(n - 1) + prime_fib(n - 2)\n    else\
    \ \n        then return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"\n    prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n\
    \    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t\
    @test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyl3js2k8.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpyl3js2k8.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    prime_fib_list returns\
    \ list of prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgjuokxhu.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgjuokxhu.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd5_mnjps.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd5_mnjps.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      1 \n    else if n == 1 \n        2 \n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2) \nend\n</cell>\n<code language=julia-1.5>\nprime_fib(10)\n\
    </cell>\n<text>\nThe Fibonacci numbers are the numbers in the following pattern:\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9n7exohp.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9n7exohp.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci,primes |>\n<| c |>\nThis is not the most efficient\
    \ solution. There are better ways to do this.\n<|/ c |>\n<| c |>\nI agree, there\
    \ are better ways to do this. But I wanted to show that it is possible in Julia.\n\
    <|/ c |>\n<| c |>\nThe `prime_fib` function can be written more efficiently by\
    \ using the [Sieve of Eratosthenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n\
    <|/ c |>\n<| c |>\nI agree with you. I just wanted to show that it is possible\
    \ in Julia.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4mmgkjdq.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4mmgkjdq.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcyjcmsp3.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpcyjcmsp3.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,fibonacci |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgkd1kx0t.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpgkd1kx0t.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi_nspg4r.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi_nspg4r.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if n == 2\n            3\n        else\n           \
    \ if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n       \
    \     else\n                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n\
    \    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsa1i6sfl.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsa1i6sfl.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question is\
    \ about `prime_fib`, not `fibonacci_number`.\n<|/ c |>\n<| c |>\nI thought the\
    \ question was about prime numbers, not Fibonacci numbers. I edited my answer\
    \ to include a function that returns prime numbers.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr02x6syh.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr02x6syh.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <text>\nExercise 7: Write a function that returns the nth Fibonacci number and\
    \ the sum of its digits. \nHint: Use a recursive function.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpysxchh2x.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpysxchh2x.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe0q4l6ug.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe0q4l6ug.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a number is prime\
    \ or not. \nThe function should return true or false depending on whether the\
    \ number is prime or not. \nThe function should accept one argument, n, which\
    \ represents the number to be checked.\nThe function should return true if the\
    \ number is prime and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiuxi1x6c.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpiuxi1x6c.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else \n        fib_n = prime_fib(n - 1) +\
    \ prime_fib(n - 2)\n        if fib_n % 2 == 0 \n            then return fib_n\n\
    \        else return fib_n + 1\nend\n</cell>\n<text>\nExercise 5\nWrite a function\
    \ that returns the number of prime numbers between two given numbers.\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpll7yyo9_.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpll7yyo9_.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq5bdfqcy.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq5bdfqcy.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else \n        return prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ud3zbsr.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0ud3zbsr.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</code>\n<|/ a tags=julia |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpohofu7l_.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpohofu7l_.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n   \
    \ 5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfs9_g7v2.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfs9_g7v2.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\
    \t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgsqlcm85.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgsqlcm85.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n % 2 == 0 then return prime_fib(n\
    \ / 2)\n    else return prime_fib(3 * n + 1) - 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu7xikeet.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpu7xikeet.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n-1) +\
    \ prime_fib(n-2)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(5)\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn8xkjeoo.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn8xkjeoo.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptzxe7_5a.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptzxe7_5a.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else if n\
    \ == 3 \n        then return 2\n    else if n % 2 == 0 \n        then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        then return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpniukm24a.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpniukm24a.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 1) == n\n            prime_fib(n -\
    \ 1)\n        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n\
    \    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
    \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd9nadgx1.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd9nadgx1.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8n03hlcw.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8n03hlcw.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n          \
    \  prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n\
    \    prime_fib_iter returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n\
    \    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n    >>>\
    \ prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph0asss5h.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph0asss5h.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n == 3 then return 5\n    if n\
    \ == 4 then return 13\n    if n == 5 then return 89\n    if n == 6 then return\
    \ 131\n    if n == 7 then return 233\n    if n == 8 then return 341\n    if n\
    \ == 9 then return 521\n    if n == 10 then return 891\n    if n == 11 then return\
    \ 1343\n    if n == 12 then return 2853\n    if n == 13 then return 5643\n   \
    \ if n == 14 then return 10289\n    if n == 15 then return 16610\n    if n ==\
    \ 16 then return 25827\n    if n == 17 then return 41869\n    if n == 18 then\
    \ return 67653\n    if n == 19 then return 113433\n    if n == 20 then return\
    \ 1771193\n    if n == 21 then return 28657143\n    if n == 22 then return 46363487\n\
    \    if n == 23 then return 75022967\n    if n == 24 then return 122001619\n \
    \   if n == 25 then return 196857863\n    if n == 26 then return 317560477\n \
    \   if n == 27 then return 514229557\n    if n == 28 then return 832046721\n \
    \   if n == 29 then return 1346269717\n    if n == 30 then return 2189142639\n\
    \    if n == 31 then return 3415895407\n    if n == 32 then return 5521728369\n\
    \    if n == 33 then return 8912691783\n    if n == 34 then return 1396263797\n\
    \    if n == 35 then return 2338127913\n    if n == 36 then return 4654739519\n\
    \    if n == 37 then return 7309883071\n    if n == 38 then return 11536026871\n\
    \    if n == 39 then return 17875591613\n    if n == 40 then return 2868477027\n\
    \    if n == 41 then return 4184179621\n    if n == 42 then return 6765576765\n\
    \    if n == 43 then return 11343316610\n    if n == 44 then return 17711928657\n\
    \    if n == 45 then return 28657142855\n    if n == 46 then return 41869113433\n\
    \    if n == 47 then return 6765317711\n    if n == 48 then return 11343316610\n\
    \    if n == 49 then return 17711928657\n    if n == 50 then return 28657142855\n\
    \    if n == 51 then return 41869113433\n    if n == 5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqto0lixe.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpqto0lixe.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu7kkohvh.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu7kkohvh.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaer7t_79.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaer7t_79.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else \n        prime_fib(n - 1) + prime_fib(n - 2)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th\
    \ number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdttvwyxg.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpdttvwyxg.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9lqj38z8.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp9lqj38z8.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n        else return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.1>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt749718z.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpt749718z.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0\n   \
    \     0\n    elseif n == 1\n        1\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4sysx6bz.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4sysx6bz.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n-1) +\
    \ prime_fib(n-2)\nend\n</cell>\n<text>\nExercise 10\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsf0sj93t.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsf0sj93t.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5tei62w1.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5tei62w1.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    prime_fib(n) = n\n    else\n        prime_fib(n) = prime_fib(n-1) + prime_fib(n-2)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiys5_cp4.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpiys5_cp4.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a number is prime or not.\
    \ \nThe function should take one argument, an integer number.\nThe function should\
    \ return true if the number is prime and false otherwise.\nThe function should\
    \ return nothing but a boolean value.\nThe function should raise an error if the\
    \ argument is not an integer.\nThe function should raise an error if the argument\
    \ is negative.\nThe function should raise an error if the argument is zero.\n\
    The function should raise an error if the argument is greater than or equal to\
    \ 2.\nThe function should raise an error if the argument is less than or equal\
    \ to 0.\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplwq511ks.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplwq511ks.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 1) == n\n            prime_fib(n -\
    \ 1)\n        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppbbjyzyj.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppbbjyzyj.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0\n   \
    \     1\n    else if n == 1\n        2\n    else\n        prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer, but a\
    \ comment on the question. Also, please format your code properly.\n<|/ c |>\n\
    <| c |>\nThis is not an answer, but a comment on the question. Also, please format\
    \ your code properly.\n<|/ c |>\n<| c |>\nThis is not an answer, but a comment\
    \ on the question. Also, please format your code properly.\n<|/ c |>\n<| c |>\n\
    This is not an answer, but a comment on the question. Also, please format your\
    \ code properly.\n<|/ c |>\n<| c |>\nThis is not an answer, but a comment on the\
    \ question. Also, please format your code properly.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprh0ngmoj.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprh0ngmoj.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 then\
    \ return 1\n    if n == 1 then return 2\n    if n % 2 == 0 then return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else return prime_fib(n - 1) + prime_fib(n - 3)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp57k9cwaw.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp57k9cwaw.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpghs38jwv.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpghs38jwv.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 then\
    \ return 2\n    if n == 2 then return 3\n    if n == 3 then return 5\n    if n\
    \ % 2 == 0 then return prime_fib(n / 2) else prime_fib(3 * n + 2)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2xi1x5ad.jl:15\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmp2xi1x5ad.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 1) == n\n            prime_fib(n -\
    \ 1)\n        else\n            prime_fib(n - 1) + prime_fib(n - 2)\n        end\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcyrjfc8h.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcyrjfc8h.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <text>\nThe function prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn5sb29_a.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn5sb29_a.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter\
    \ returns n-th number that is a Fibonacci number and it's also prime.\n    >>>\
    \ prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n\
    \    5\n    >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnw4ng0o6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnw4ng0o6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4odzbqwp.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4odzbqwp.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpso_dc8e2.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpso_dc8e2.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\nThe answer by is\
    \ great, but I wanted to add that you can also use recursion to solve this problem.\
    \ \n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp390r9hh0.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp390r9hh0.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      then return 1\n    else if n == 1 \n        then return 2\n    else \n\
    \        fib_n_1 = prime_fib(n - 1)\n        fib_n_2 = prime_fib(n - 2)\n    \
    \    return fib_n_1 + fib_n_2\nend\n</cell>\n<code language=julia-1.0>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\
    \t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) ==\
    \ 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsa8x4ass.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpsa8x4ass.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else \n        prime_fib(n - 1)\
    \ + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3wxfiydm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3wxfiydm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphzarh935.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphzarh935.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n          \
    \  prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_rkyje3n.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_rkyje3n.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    prime_fib(n)\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n   \
    \ end\nend\n</cell>\n<code language=julia-1.3>\nprime_fib(10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the n-th Fibonacci number that is prime.\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmm47g2gg.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmm47g2gg.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n-2) + prime_fib(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns n-th number that is\
    \ a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp964jlht5.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp964jlht5.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0\n   \
    \     0\n    else\n        if n == 1\n            1\n        else\n          \
    \  if n % 2 == 0\n                prime_fib(n - 1) + prime_fib(n - 2)\n      \
    \      else\n                prime_fib(n - 1) + prime_fib(n - 3)\n        end\n\
    \    end\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) ==\
    \ 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_mcz8e2m.jl:28\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_mcz8e2m.jl:28\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2eow3tke.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2eow3tke.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else if n % 2 == 0 \n        return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc9ldq92h.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc9ldq92h.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n-1) + prime_fib(n-2)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgxs_oz9f.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgxs_oz9f.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp21nq9e9e.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp21nq9e9e.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      2\n    else if n == 2 \n        3\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    prime_fib_iter returns\
    \ n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n\
    \    2\n    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n \
    \   >>> prime_fib_iter(4)\n    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1)\
    \ == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4)\
    \ == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3ho0hk_d.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3ho0hk_d.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      return 2\n    elif n == 2 \n        return 3\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"n\" after end of expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi7mdhnye.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi7mdhnye.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    return n\n    else if n == 2\n        return 3\n    else if n % 2 == 0\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2)\n    else\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n<code language=julia-1.5>\n\
    prime_fib(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfiuohqxi.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfiuohqxi.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp9co65bj.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpp9co65bj.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if prime_fib(n - 2) == prime_fib(n - 1)\n          \
    \  prime_fib(n - 2)\n        else\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        end\n    end\nend\n</code>\n<|/ a tags=julia,fibonacci,primes\
    \ |>\n<| a tags=julia,fibonacci,primes |>\nThe first thing that comes to mind\
    \ is to use memoization. \n<code>\nusing Test\n\n@testset begin\n\ncandidate =\
    \ prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpekfe2wrq.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpekfe2wrq.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    prime_fib_iter returns n-th number that\
    \ is a Fibonacci number and it's also prime.\n    >>> prime_fib_iter(1)\n    2\n\
    \    >>> prime_fib_iter(2)\n    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n\
    \    13\n    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzh0u4brv.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzh0u4brv.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 2)\n        prime_fib(n - 1)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate =\
    \ prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3)\
    \ == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzbs78hw1.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpzbs78hw1.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 || n\
    \ == 1 \n        return n\n    else \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\nend\n</cell>\n<code language=julia-1.5>\nprime_fib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that calculates the factorial of a number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\
    \t@test(candidate(2) == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) ==\
    \ 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7)\
    \ == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9) == 514229)\n\t\
    @test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpem4mws4a.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpem4mws4a.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 1 \n  \
    \      return 2\n    else if n == 2 \n        return 3\n    else \n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm976ro_8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpm976ro_8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     then return n\n    else if n == 2 \n        then return 1\n    else \n \
    \       prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nI believe this should be `prime_fib(n - 1) + prime_fib(n - 2)` instead\
    \ of `prime_fib(n - 2) + prime_fib(n - 1)`\n<|/ c |>\n<| c |>\nThanks, I fixed\
    \ it.\n<|/ c |>\n<| a dscore=2 |>\nThe accepted answer by is correct, but I thought\
    \ I'd add an alternative that doesn't require recursion:\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpivhpflpc.jl:16\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpivhpflpc.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0\n   \
    \     1\n    else\n        if n % 2 == 0\n            prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n        else\n            prime_fib(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    prime_fib_iter returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib_iter(1)\n    2\n    >>> prime_fib_iter(2)\n\
    \    3\n    >>> prime_fib_iter(3)\n    5\n    >>> prime_fib_iter(4)\n    13\n\
    \    >>> prime_fib_iter(5)\n    89\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2) ==\
    \ 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp78_cx289.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp78_cx289.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    prime_fib(n+1)\n    else\n        if prime_fib(n-1) == 0 || prime_fib(n-2)\
    \ == 0 \n            prime_fib(n+1)\n        else\n            prime_fib(n-1)\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzalh6pnh.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzalh6pnh.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 1) + prime_fib(n - 3)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1fyj6c5q.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1fyj6c5q.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2 \n   \
    \     return n\n    else if n == 2 \n        return 3\n    else if n == 3 \n \
    \       return 5\n    else if n % 2 == 0 \n        return prime_fib(n - 1) + prime_fib(n\
    \ - 2)\n    else \n        return prime_fib(n - 3) + prime_fib(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\nprime_fib(4)\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that calculates the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptlimbexz.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptlimbexz.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    2\n    else\n        if n == 1\n            3\n        else\n           \
    \ prime_fib(n - 1) + prime_fib(n - 2)\nend\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpadr_l35r.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpadr_l35r.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n == 0 \n  \
    \      0\n    else if n == 1 \n        1\n    else if n % 2 == 0 \n        prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n    else \n        prime_fib(n - 1) + prime_fib(n -\
    \ 3)\nend\n</cell>\n<text>\nExercise 10\nWrite a function that returns the nth\
    \ number that is a Fibonacci number and it's also prime.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_fib;\n\t@test(candidate(1) == 2)\n\t@test(candidate(2)\
    \ == 3)\n\t@test(candidate(3) == 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5)\
    \ == 89)\n\t@test(candidate(6) == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8)\
    \ == 28657)\n\t@test(candidate(9) == 514229)\n\t@test(candidate(10) == 433494437)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0shk7mfi.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0shk7mfi.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"\n    prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n\
    \    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n\
    \    89\n    \"\"\"\nfunction prime_fib(n::Int64)::Int64 \n    if n < 2\n    \
    \    1\n    else\n        prime_fib(n - 1) + prime_fib(n - 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    prime_fib_list returns list of\
    \ prime Fibonacci numbers.\n    >>> prime_fib_list(10)\n    [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = prime_fib;\n\
    \t@test(candidate(1) == 2)\n\t@test(candidate(2) == 3)\n\t@test(candidate(3) ==\
    \ 5)\n\t@test(candidate(4) == 13)\n\t@test(candidate(5) == 89)\n\t@test(candidate(6)\
    \ == 233)\n\t@test(candidate(7) == 1597)\n\t@test(candidate(8) == 28657)\n\t@test(candidate(9)\
    \ == 514229)\n\t@test(candidate(10) == 433494437)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo7vux_ux.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo7vux_ux.jl:21\n"
  exit_code: 1
  status: Exception

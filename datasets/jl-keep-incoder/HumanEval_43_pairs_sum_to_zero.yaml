name: HumanEval_43_pairs_sum_to_zero
language: julia
prompt: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n   \
  \ it returns True if there are two distinct elements in the list that\n    sum to\
  \ zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n\
  \    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
  \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
  \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
  \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
  \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
  \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
completions: ["    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n  \
    \  pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    pairs = filter(x -> x[1] < 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x ->\
    \ x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pair", "    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0 \n            return true\n       \
    \ end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell", "    \n    sum = 0\n    for i in l\n \
    \       sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a list of integers as an input.\nIt returns True if\
    \ there are two distinct elements in the list that\nsum to zero, and False otherwise.\n\
    The function should work for lists of any length.\nFor example, pairs_sum_to_zero([1,3,-2,1])\
    \ returns True.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert pairs_sum_to_zero([1, 3, 5, 0]) == false\n@assert pairs_sum_to_zero([1,\
    \ 3, -2, 1]) == false\n@assert pairs_sum_to_zero([1, 2, 3, 7]) == false\n@assert\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == true\n@assert pairs_sum_to_zero([1])\
    \ == false\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers as an input, and returns true if the vector has all unique elements,\
    \ and false otherwise.\nFor example, a vector [1, 2, 3] has all unique elements,\
    \ so the function should return true.\nA vector [1, 3, 2] has all unique elements,\
    \ so the function should return false.\nA vector [1, 2, 3] has all non-unique\
    \ elements, so the function should return false.\nA vector [1, 3, 2] has all unique\
    \ and non-unique elements, so the function should return true.\nA vector [1, 3,\
    \ 2] has all unique and non-unique elements, so the function should return true.\n\
    A vector [1, 3, 2] has all unique and non-unique elements, so the function should\
    \ return true.\nA vector [1, 3, 2] has all unique and non-unique elements, so\
    \ the function should return true.\nA vector [1, 3, 2] has all unique and non-unique\
    \ elements, so the function should return true.\nA vector [1, 3, 2] has all unique\
    \ and non-unique elements, so the function should return true.\nA vector [1, 3,\
    \ 2] has all unique and non-unique elements, so the function should return true.\n\
    A vector [1, 3, 2] has all unique and non-unique elements, so the function should\
    \ return true.\nA vector [1, 3, 2] has all unique and non-unique elements, so\
    \ the function should return true.\nA vector [1, 3, 2] has all unique and non-unique\
    \ elements, so the function should return true.\nA vector [1, 3, 2] has all unique\
    \ and non-unique elements, so the function should return true.\nA vector [1, 3,\
    \ 2] has all unique and non-unique elements, so the function should return true.\n\
    A vector [1, 3, 2] has all unique and non-unique elements, so the function should\
    \ return true.\nA vector [1, 3, 2] has all unique and non-unique elements, so\
    \ the function should return true.\nA vector [1, 3, 2] has all unique and non-unique\
    \ elements, so the function should return true.\nA vector [1, 3, 2] has all unique\
    \ and non-unique elements, so the function should return true.\nA vector [1, 3,\
    \ 2] has all unique and non-unique elements, so the function ", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nQuestion 2.2: Write a function that takes a list of integers\
    \ as an input, and returns the number of pairs in the list that sum to zero.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of pairs in the list that sum to zero.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes a list of integers and\
    \ returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of pairs in the list that\
    \ sum to zero.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers and returns True if there are two distinct elements in the\
    \ list that sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    pairs = zip(l, l[1:end-1])\
    \ \n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] ==\
    \ 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x\
    \ -> x[1] > 0, ", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=", "    sum = 0\n    for i in l\n        sum += i\n  \
    \      if sum == 0\n            return true\n    return false\nend", "    \n \
    \   pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    \n    pairs = filter(x -> x[1] != 0, pairs) \n    \n    return length(pairs)\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</", "    \n    pairs =\
    \ zip(l, l[1:end-1]) \n    \n    for pair in pairs \n        if pair[1] == 0 \n\
    \            return true \n        else \n            return false \n    end\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function called pairs_sum_to_one_or_zero(l::Vector{Int64})::Bool\
    \ that takes a list of integers as an input.\nit returns True if there are two\
    \ distinct elements in the list that sum to one or zero, and False otherwise.\n\
    >>> pairs_sum_to_one_or_zero([1, 3, 5, 0])\nFalse\n>>> pairs_sum_to_one_or_zero([1,\
    \ 3, -2, 1])\nFalse\n>>> pairs_sum_to_one_or_zero([1, 2, 3, 7])\nFalse\n>>> pairs_sum_to_one_or_zero([2,\
    \ 4, -5, 3, 5, 7])\nTrue\n>>> pairs_sum_to_one_or_zero([1])\nFalse\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 1])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 0])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 2])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 3])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 4])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 5])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 6])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 7])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 8])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 9])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 10])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 11])\nTrue\n>>>\
    \ pairs_sum_to_one_or_zero([-1, -1, 1, 12])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 13])\nTrue\n>>> pairs_sum_to_one_or_zero([-1, -1, 1, 14])\nTrue\n>>>\
    \ pairs_sum_to_one_or_zero([-1, -1, 1, 15])\nTrue\n>>> pairs_sum_to_one_or_zero([-1,\
    \ -1, 1, 16])\nTrue\n>>> pairs_sum_to_", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert pairs_sum_to_zero([1, 3, 5, 0])\
    \ == false\n@assert pairs_sum_to_zero([1, 3, -2, 1]) == false\n@assert pairs_sum_to_zero([1,\
    \ 2, 3, 7]) == false\n@assert pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == true\n\
    @assert pairs_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks if a list contains all integers from 1 to n. For example,",
  "    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-2,1])\
    \ == false\n@assert pairs_sum_to_zero([1,2,3,7]) == false\n@assert pairs_sum_to_zero([2,4,-5,3,5,7])\
    \ == true\n@assert pairs_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    \n    sum = 0\n    for i in l\n \
    \       sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=juli", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n        \
    \    return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a list is increasing\n(ie. the difference\
    \ between successive elements is always smaller than the previous one).\nFor example\
    \ [1,2,3,4,5] should return true.\nFor example [1,2,3,4,5,6] should return false.\n\
    For example [1,2,3,4,5,6,7] should return false.\nFor example [1,2,3,4,5,6,7,8]\
    \ should return true.\nFor example [1,2,3,4,5,6,7,8,9] should return false.\n\
    For example [1,2,3,4,5,6,7,8,9,10] should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11]\
    \ should return true.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12] should return\
    \ false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13] should return false.\nFor\
    \ example [1,2,3,4,5,6,7,8,9,10,11,12,13,14] should return false.\nFor example\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15] should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]\
    \ should return false.\nFor example [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]\
    \ should return false.\nFor ", "    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the number of pairs\
    \ in the list that sum to zero.", "    l = sort(l)\n    pairs = zip(l[1:end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pair",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n   \
    \         return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and returns a list\
    \ of all positive integers that are less than the sum of the integers in the list.\
    \ For example, if the list is [5, 3, -2, 0, 7, 4], then the function should return\
    \ [5, 3, 7, 4], since 5 + 3 + 7 + 4 = 16.", "    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a list contains any negative\
    \ numbers.", "    sum = 0\n    for i in l\n        sum += i\n        if sum ==\
    \ 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,3])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,6])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,8])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,9])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,10])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,12])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,13])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,15])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,16])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,17])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,18])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,19])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,20])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,21])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,22])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<text>\nExercise 3: Write a function that returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.\nFor example, given [10, 0, 3, -5, 2, 7], it should return True.",
  "    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers and returns a list of all unique pairs of elements\
    \ in the list. \nFor example, given [1,2,3], it should return [[1,2],[1,3],[2,3]].\n\
    The function should return a list of lists, not a nested list.\nThe function should\
    \ return a list of tuples, not a nested tuple.\nThe function should return a list\
    \ of sets, not a nested set.\nThe function should return a list of dictionaries,\
    \ not a nested dictionary.\nThe function should return a list of booleans, not\
    \ a nested boolean.\nThe function should return a list of integers, not a nested\
    \ integer.\nThe function should return a list of floats, not a nested float.\n\
    The function should return a list of strings, not a nested string.\nThe function\
    \ should return a list of vectors, not a nested vector.\nThe function should return\
    \ a list of matrices, not a nested matrix.\nThe function should return a list\
    \ of arrays, not a nested array.\nThe function should return a list of tuples,\
    \ not a nested tuple.\nThe function should return a list of sets, not a nested\
    \ set.\nThe function should return a list of dictionaries, not a nested dictionary.\n\
    The function should return a list of booleans, not a nested boolean.\nThe function\
    \ should return a list of integers, not a nested integer.\nThe function should\
    \ return a list of floats, not a nested float.\nThe function should return a list\
    \ of strings, not a nested string.\nThe function should return a list of vectors,\
    \ not a nested vector.\nThe function should return a list of matrices, not a nested\
    \ matrix.\nThe function should return a list of arrays, not a nested array.\n\
    The function should return a list of tuples, not a nested tuple.\nThe function\
    \ should return a list of sets, not a nested set.\nThe function should return\
    \ a list of dictionaries, not a nested dictionary.\nThe function should return\
    \ a list of booleans, not a nested boolean.\nThe function should return a list\
    \ of integers, not a nested integer.\nThe function should return a list of floats,\
    \ not a nested float.\nThe function should return a list of strings, not a nested\
    \ string.\nThe function should return a list of vectors, not a nested vector.\n\
    The function should return a list of matrices, not a nested matrix.\nThe function\
    \ should return a list of arrays, not a nested array.\nThe function should return\
    \ a list of tuples, not a nested tuple.\nThe function should return a list of\
    \ sets, not a nested set.\nThe function should return a list of dictionaries,\
    \ not a nested dictionary.\nThe function should return a list of booleans, not\
    \ a nested boolean.\nThe function should return a list of integers, not a nested\
    \ integer.\nThe function should return a list of floats, not a nested float.\n\
    The function should return a list of strings, not a nested string.\nThe function\
    \ should return a list of vectors, not a nested vector.\nThe function should return\
    \ a list of matrices, not a nested matrix.\n", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n  \
    \          return true\n    return false\nend", "    l = sort(l)\n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that checks\
    \ if a list contains all unique elements. For example:", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a list of integers as an input, and returns True if the list contains any negative\
    \ integers, and False otherwise.", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0 \n            return true\n        end\n    end\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function called pairs_sum_to_zero(l::Vector{Int64})\
    \ that takes a list of integers as an input.\nIt returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.\nUse pairs_sum_to_zero\
    \ to solve the following problem:", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n", "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend", "    \n    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input.\nIt returns True if there are two distinct elements\
    \ in the list that\nsum to zero, and False otherwise.\nThe function should work\
    \ for lists of any length.\nFor example, pairs_sum_to_zero([1,3,-2,1,-5,2,-7,3,-9,4,-10,5])\
    \ should return True.", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0\n            return true\n    return false\nend", "    l = sort(l)\n\
    \    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    return length(pairs) == 0\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert pairs_sum_to_zero([1, 3, 5, 0]) ==\
    \ false\n@assert pairs_sum_to_zero([1, 3, -2, 1]) == false\n@assert pairs_sum_to_zero([1,\
    \ 2, 3, 7]) == false\n@assert pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == true\n\
    @assert pairs_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a list of integers as an input, and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] == 0, pairs)\n  \
    \  pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, ", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers\
    \ and returns True if there are two distinct elements in the list that sum to\
    \ zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a list of integers and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a list contains all unique elements.\
    \ \nThe function should take a list of integers as an input.\nThe function should\
    \ return True if all elements in the list are unique, and False otherwise.\nThe\
    \ function should return False for an empty list.\nThe function should return\
    \ False for a list with duplicate elements.\nThe function should return False\
    \ for a list with negative elements.\nThe function should return False for a list\
    \ with non-integer elements.\nThe function should return False for a list with\
    \ non-positive elements.\nThe function should return False for a list with non-negative\
    \ elements.\nThe function should return False for a list with non-finite elements.\n\
    The function should return False for a list with non-numeric elements.\nThe function\
    \ should return False for a list with non-integer or non-numeric elements.\nThe\
    \ function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with non-finite or non-numeric elements.\n\
    The function should return False for a list with non-integer or non-numeric elements.\n\
    The function should return False for a list with negative or non-numeric elements.\n\
    The function should return False for a list with ", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers as an input, and returns True if there are two\
    \ distinct elements in the list that sum to zero, and False otherwise.", "   \
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a list of integers as an input, and returns\
    \ the number of pairs in the list that sum to zero.", "    \n    sum = 0\n   \
    \ for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n    return false\nend", "    \n    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n        end\n    end\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n    sum =\
    \ 0\n    for x in l\n        sum += x\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of pairs in the list that sum to zero.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nProblem 7: Write a function that takes a vector of integers and\
    \ returns the number of pairs that sum to zero.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0 \n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == false\n@assert pairs_sum_to_zero([1,3,-5,0])\
    \ == false\n@assert pairs_sum_to_zero([1,3,-5,0]) == ", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n        \
    \    return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n        end\n    end\n    return false\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a list of integers and returns True if there\
    \ are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns the number of pairs in the list that sum to zero.", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns True if there are two distinct elements in the\
    \ list that sum to zero, and False otherwise.", "    \n    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n     \
    \   end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n   \
    \         return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=",
  "    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers and\
    \ returns True if there are two distinct elements in the list that sum to zero,\
    \ and False otherwise.", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    sum = 0\n    for i in l\n        sum += i\n     \
    \   if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n    return false\nend", "    sum = 0\n    for i in l\n \
    \       sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>", "    l = sort(l)\n    pairs = zip(l[1:end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] > 0, pairs)\n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == x[2], pairs)\n    return\
    \ length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a list contains all unique elements. \nFor example,\
    \ \n[1,2,2,3] returns true.\n[1,2,2,3] returns false.\n[1,2,2,4,5] returns true.\n\
    [1,2,2,4,5] returns false.\n[1,2,2,4,5,6] returns true.\n[1,2,2,4,5,6] returns\
    \ false.\n[1,2,2,4,5,6,7] returns true.\n[1,2,2,4,5,6,7] returns false.\n[1,2,2,4,5,6,7,8]\
    \ returns true.\n[1,2,2,4,5,6,7,8] returns false.\n[1,2,2,4,5,6,7,8,9] returns\
    \ true.\n[1,2,2,4,5,6,7,8,9] returns false.\n[1,2,2,4,5,6,7,8,9,10] returns true.\n\
    [1,2,2,4,5,6,7,8,9,10] returns false.\n[1,2,2,4,5,6,7,8,9,10,11] returns true.\n\
    [1,2,2,4,5,6,7,8,9,10,11] returns false.\n[1,2,2,4,5,6,7,8,9,10,11,12] returns\
    \ true.\n[1,2,2,4,5,6,7,8,9,10,11,12] returns false.\n[1,2,2,4,5,6,7,8,9,10,11,12,13]\
    \ returns true.\n[1,2,2,4,5,6,7,8,9,10,11,12,13] returns false.\n[1,2,2,4,5,6,7,8,9,10,11,12,13,14]\
    \ returns true.\n[1,2,2,4,5,6,7,8,9,10,11,12,13,14] returns false.\n[1,2,2,4,5,6,7,8,9,10,11,12,13,14,15]\
    \ returns true.\n[1,2,2,4,5,6,7,8,9,10,11,12,13,14,15] returns false.\n[1,2,2,4,5,6,7,8,9,10,11,12,13,14,15,16]\
    \ returns true.\n[1,2,2,4,5,6,7,8,9,", "    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n    return false\nend", "    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input and returns the number\
    \ of pairs in the list that sum to zero.", "    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a list contains all unique elements.\nThe function should take a list\
    \ of integers as an input.\nIt should return True if all the elements in the list\
    \ are unique, and False otherwise.\n>>> all_unique_elements([1, 2, 3, 1])\nTrue\n\
    >>> all_unique_elements([1, 2, 3, 2])\nFalse\n>>> all_unique_elements([1, 2, 3,\
    \ 3])\nFalse\n>>> all_unique_elements([1, 2, 3, 4])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 5])\nFalse\n>>> all_unique_elements([1, 2, 3, 6])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 7])\nFalse\n>>> all_unique_elements([1, 2, 3, 8])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 9])\nFalse\n>>> all_unique_elements([1, 2, 3, 10])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 11])\nFalse\n>>> all_unique_elements([1, 2, 3, 12])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 13])\nFalse\n>>> all_unique_elements([1, 2, 3, 14])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 15])\nFalse\n>>> all_unique_elements([1, 2, 3, 16])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 17])\nFalse\n>>> all_unique_elements([1, 2, 3, 18])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 19])\nFalse\n>>> all_unique_elements([1, 2, 3, 20])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 21])\nFalse\n>>> all_unique_elements([1, 2, 3, 22])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 23])\nFalse\n>>> all_unique_elements([1, 2, 3, 24])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 25])\nFalse\n>>> all_unique_elements([1, 2, 3, 26])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 27])\nFalse\n>>> all_unique_elements([1, 2, 3, 28])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 29])\nFalse\n>>> all_unique_elements([1, 2, 3, 30])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 31])\nFalse\n>>> all_unique_elements([1, 2, 3, 32])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 33])\nFalse\n>>> all_unique_elements([1, 2, 3, 34])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 35])\nFalse\n>>> all_unique_elements([1, 2, 3, 36])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 3, 37])\nFalse\n>>> all_unique_elements([1, 2, 3, ", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0 \n            return true\n        end\n    end\n    return\
    \ false\nend", "    sum = 0\n    for x in l\n        sum += x\n        if sum\
    \ == 0 \n            return true\n    return false\nend", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for i in\
    \ l\n        sum += i\n        if sum == 0\n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 3.3\nWrite a function that takes a list of integers\
    \ as an input, and returns True if there are two distinct elements in the list\
    \ that sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in l\n        sum\
    \ += x\n        if sum == 0 \n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0 \n            return true\n        end\n    end\n   \
    \ return false\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a list of integers and returns a list of all positive integers that are less\
    \ than the sum of the integers in the list. For example, if the list is [5, 3,\
    \ 7, 2, 6], your function should return [5, 3, 7]. Make sure your function returns\
    \ the correct result even if the list is empty.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0 \n            return true\n        end\n  \
    \  end\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a list contains all unique elements.\nThe function should take a list\
    \ of integers as an input.\nIt should return True if all the elements in the list\
    \ are unique, and False otherwise.\n>>> all_unique_elements([1, 2, 3])\nTrue\n\
    >>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2,\
    \ 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 1])\nFalse\n>>> all_unique_elements([1, 2, 2, 1])", "    sum = 0\n   \
    \ for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of pairs in the list that sum to zero.", "    pairs = zip(l, l[1:end-1])\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs)\
    \ \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs\
    \ = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x -> x[1] == 0, ", "  \
    \  \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input and returns the number\
    \ of pairs in the list that sum to zero.", "    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\
    \ \n    pairs = filter(x -> x[1] < 0, pairs) \n    pairs = filter(x -> x[1] ==\
    \ 0, pairs) \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x\
    \ -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n  \
    \  pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs) \n    pairs = filter(x -> x[1] != x[2], pair", "    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a list of integers as an input, and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    \n    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3: Write a function that tests whether a list is monotonic\nmonotonic\
    \ means that the difference between the maximum and minimum number in the list\
    \ equals zero.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=juli", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    pairs = zip(l, l[1:end-1]) \n    \n    sum = 0\n    for pair in pairs\n\
    \        sum += pair[1]\n        if sum == 0\n            return true\n      \
    \  end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    \n    pairs = zip(l[1:end-1], l[2:end])\n\
    \    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n \
    \   pairs = filter(x ", "    \n    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-", "    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n    return false\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that checks if a list contains all integers from\
    \ 1 to n (both included).", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.0>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.0>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a list of integers as an input, and returns True if\
    \ there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a list of integers and returns True if there are two distinct elements\
    \ in the list that sum to zero, and False otherwise.", "    sum = 0\n    for i\
    \ in l\n        sum += i\n        if sum == 0 \n            return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for x in l\n        sum += x\n        if sum == 0 \n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    \n    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n        end\n  \
    \  end\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a list of integers as an input, and returns True if there are two distinct\
    \ elements in the list that sum to zero, and False otherwise.", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs\
    \ = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n\
    \    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pair", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0 \n            return true\n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n         \
    \   return true\n        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</", "    sum = 0\n    for\
    \ i in l\n        sum += i\n        if sum == 0\n            return true\n   \
    \ return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of pairs\
    \ in the list that sum to zero.", "    sum = 0\n    for x in l\n        sum +=\
    \ x\n        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers as an input, and returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.", "    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0 \n            return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,3])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,6])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,8])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,9])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,10])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,11])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,12])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,14])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,15])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,16])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,17])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,18])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,19])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1,20])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,21])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1,22])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>", "    sum = 0\n    for i in l\n        sum += i\n \
    \       if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n         \
    \   return true\n    return false\nend", "    \n    pairs = zip(l, l[1:end-1])\
    \ \n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n\
    \    pairs = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] != 0, pairs)\n    \n    pairs = filter(x -> x[1] <\
    \ 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs =\
    \ filter(x -> x[1] != 0, pairs)\n    \n    pairs = filter(x -> x[1] < 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] != 0, pairs)\n    \n    pairs = filter(x -> x[1] < 0, pairs)\n    \n  \
    \  pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    \n    pairs = filter(x -> x[1] < 0, pairs)\n    \n    pairs =\
    \ filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n  \
    \  pairs = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] >\
    \ 0, pairs)\n    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] != 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1]", "    sum = 0\n    for i in l\n        sum += i\n\
    \        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of integers as an input,\
    \ and returns the number of integers in the list that sum to zero.", "    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend", "    l = sort(l)\n    pairs = zip(l[1:end-1],\
    \ l[2:end])\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x ->\
    \ x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pair",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0 \n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n        sum\
    \ += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n    \
    \    sum += i\n        if sum == 0\n            return true\n        end\n   \
    \ end\n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n   \
    \ sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n           \
    \ return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-", "    sum = 0\n\
    \    for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \        end\n    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=",
  "    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers as an input.\nIt returns\
    \ True if there are two distinct elements in the list that sum to zero, and False\
    \ otherwise.\nThe function should work for lists of any length.\nFor example,\
    \ if the input is [1,2,3,4,5,6,7,8,9,10], the function should return True.\nIf\
    \ the input is [1,2,3,4,5,6,7,8,9,10,11], the function should return False.\n\
    If the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14], the function should return\
    \ True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], the function should\
    \ return False.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16], the\
    \ function should return True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],\
    \ the function should return False.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\
    \ the function should return True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],\
    \ the function should return False.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\
    \ the function should return True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\
    \ the function should return False.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],\
    \ the function should return True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\
    \ the function should return False.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],\
    \ the function should return True.\nIf the input is [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,",
  "    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if sum\
    \ == 0\n            return true\n        end\n    end\n    return false\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.5>", " \
    \   sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n         \
    \   return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of pairs\
    \ in the list that sum to zero.", "    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a list of integers as an input, and returns True\
    \ if there are two distinct elements in the list that sum to zero, and False otherwise.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a list is increasing\n\
    (ie. the difference between successive elements is negative).\nThe function should\
    \ return true if the list is non-decreasing and false otherwise.\nThe function\
    \ should work for both lists of numbers and lists of strings.\nThe function should\
    \ work for lists of any length.\nThe function should work for lists of any type.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers and returns True if there are two distinct elements in the\
    \ list that sum to zero, and False otherwise.", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>", "    sum\
    \ = 0\n    for i in l\n        sum += i\n        if sum == 0\n            return\
    \ true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n@assert pairs_sum_to_zero([1,\
    \ 3, 5, 0]) == false\n@assert pairs_sum_to_zero([1, 3, -2, 1]) == false\n@assert\
    \ pairs_sum_to_zero([1, 2, 3, 7]) == false\n@assert pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7]) == true\n@assert pairs_sum_to_zero([1]) == false\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a list is sorted in ascending order.\
    \ Your function should take a list of integers as an input.", "    sum = 0\n \
    \   for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input, and returns the number of pairs in the list\
    \ that sum to zero.", "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x ->\
    \ x[1] > 0, pairs) \n    pairs = filter(x -> x[1] == 0, pairs) \n    pairs = filter(x\
    \ -> x[1] == x[2], pairs) \n    pairs = filter(x -> x[1] != 0, pairs) \n    pairs\
    \ = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs) \n    pairs =\
    \ filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1] != x[1], pairs)\
    \ \n    pairs = filter(x -> x[1] != x[2], pairs) \n    pairs = filter(x -> x[1]\
    \ != x[1], pairs) \n    pairs = filter(x -> x[1] != x[2], ", "    sum = 0\n  \
    \  for i in l\n        sum += i\n        if sum == 0\n            return true\n\
    \    return false\nend", "    sum = 0\n    for i in l\n        sum += i\n    \
    \    if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>",
  "    pairs = zip(l, l[1:end-1]) \n    pairs = filter(x -> x[1] > 0, pairs)\n   \
    \ pairs = filter(x -> x[1] == 0, pairs)\n    return length(pairs) == 0\nend\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n         \
    \   return true\n    return false\nend", "    \n    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a list contains all\
    \ unique elements.\nThe function should take a list of integers as an input.\n\
    It should return True if all the elements in the list are unique, and False otherwise.\n\
    The function should work for both sorted and unsorted lists.\nThe function should\
    \ work for empty lists as well.\n>>> all_unique_elements([1,2,3])\nTrue\n>>> all_unique_elements([1,2,2,3])\n\
    False\n>>> all_unique_elements([1,2,2,3,3])\nFalse\n>>> all_unique_elements([1,2,2,3,4])\n\
    False\n>>> all_unique_elements([1,2,2,3,5])\nFalse\n>>> all_unique_elements([1,2,2,3,6])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8])\nFalse\n>>> all_unique_elements([])\n\
    True\n>>> all_unique_elements([1,2,2,3,7,8,9])\nFalse\n>>> all_unique_elements([1,2,2,3,7,8,9,10])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11])\nFalse\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13])\nFalse\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15])\nFalse\n>>>\
    \ all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16])\nFalse\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17,18])\nFalse\n\
    >>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19])\nFalse\n\
    >>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\nFalse\n\
    >>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    False\n>>> all_unique_elements([1,2,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    False\n>>> all_unique_element", "    sum = 0\n    for x in l\n        sum += x\n\
    \        if sum == 0 \n            return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    sum = 0\n    for i in l\n        sum +=\
    \ i\n        if sum == 0\n            return true\n        end\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a list of integers as an input and returns a list of all integers in the list\
    \ that sum to zero.", "    sum = 0\n    for i in l\n        sum += i\n       \
    \ if sum == 0\n            return true\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of pairs in the list that sum to zero.",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend", "    sum = 0\n    for i in l\n       \
    \ sum += i\n        if sum == 0\n            return true\n    return false\nend",
  "    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n          \
    \  return true\n    return false\nend\n</cell>\n<text>\nExercise 3: Write a function\
    \ that checks if a list contains all unique elements.\nThe function should take\
    \ a list of integers as an input.\nIt should return True if all the elements in\
    \ the list are unique, and False otherwise.\n>>> all_unique_elements([1, 2, 3])\n\
    True\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nTrue\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([1,\
    \ 2, 2, 3])\nFalse\n>>> all_unique_elements([1, 2, 2, 3])\nFalse\n>>> all_unique_elements([",
  "    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of pairs in the list that sum to zero.",
  "    \n    pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    \n    return length(pairs) == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,-3,5])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,-", "    sum = 0\n    for i in l\n\
    \        sum += i\n        if sum == 0\n            return true\n        end\n\
    \    end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a list of integers as\
    \ an input, and returns True if there are two distinct elements in the list that\
    \ sum to zero, and False otherwise.", "    \n    sum = 0\n    for i in l\n   \
    \     sum += i\n        if sum == 0\n            return true\n        end\n  \
    \  end\n    return false\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>", "    sum = 0\n    for i in l\n      \
    \  sum += i\n        if sum == 0\n            return true\n    return false\n\
    end", "    \n    pairs = zip(l[1:end-1], l[2:end])\n    \n    sum = 0\n    for\
    \ pair in pairs\n        sum += pair[1]\n    end\n    \n    return sum == 0\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

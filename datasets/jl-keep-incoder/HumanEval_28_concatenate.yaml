name: HumanEval_28_concatenate
language: julia
prompt: "\"\"\" Concatenate list of strings into a single string\n    >>> concatenate([])\n\
  \    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'\n    \"\"\"\nfunction concatenate(strings::Vector{String})::String\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = concatenate;\n\t@test(candidate(Vector{String}([]))\
  \ == \"\")\n\t@test(candidate([\"x\", \"y\", \"z\"]) == \"xyz\")\n\t@test(candidate([\"\
  x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\")\nend\n"
completions: ["    strings = strings[:]\n    strings[end] = ''\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[2:end]\n    strings = strings[2:end]\n \
    \   strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n", "    \n    strings\
    \ = strings[:]\n    \n    if length(strings) == 0\n        return \"\"\n    \n\
    \    strings = strings[:]\n    \n    strings = strings[2:end]\n    \n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end]\
    \ = \"\"\n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end]\
    \ = \"\"\n    return join(strings, \"\")\nend", "    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == \"\"\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == \"\"\n        return strings[end]\n\
    \    end\n    \n    return first + last + strings[2:end]\nend", "    strings =\
    \ strings[:]\n    strings = strings[2:end]\n    return join(strings, \"\")\nend",
  "    strings = strings[:]\n    return join(strings, \"\", \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\"\
    )\nend", "    \n    strings = strings[2:end]\n    strings = strings[2:end]\n \
    \   strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings =\
    \ strings[:]\n    strings[end] = ''\n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert concatenate([\"a\", \"b\", \"c\"]) == \"abc\"\
    \n@assert concatenate([\"a\", \"b\", \"c\", \" \"]) == \"a b c \"\n@assert concatenate([\"\
    a\", \"b\", \"c\", \" \", \" \"]) == \"a b c \"\n@assert concatenate([\"a\", \"\
    b\", \"c\", \" \", \" \", \" \"]) == \"a b c \"\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a vector of strings and returns a new vector with each\
    \ string separated by a space. For example, [\"a\", \"b\", \"c\"] \u2192 [\"a\
    \ b\", \"c\"].", "    strings = strings[:]\n    strings = strings[2:end]\n   \
    \ return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n    if\
    \ length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    ", " \
    \   strings = strings[:]\n    return join(strings, \"\")\nend", "    \n    strings\
    \ = strings[:]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]", "    strings = strings[:]\n    strings[end] =\
    \ \"\"\n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings\
    \ = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>",
  "    strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[end-1:end]\n    \n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return \"\"\n    end\n    \n    first = strings[1]\n    \n   \
    \ if length(first) == 0 \n        return strings[2]\n    end\n    \n    last =\
    \ strings[end]\n    \n    if length(last) == 0\n        return strings[2]\n  \
    \  end\n    \n    strings[2] = first\n    \n    for i = 2:end\n        strings[i]\
    \ = strings[i-1] + last\n    end\n    \n    return join(strings, \"\")\nend\n\
    </cell>\n<code language=julia-1.5>", "    \n    strings = strings[:]\n    \n \
    \   if length(strings) == 0\n        return \"\"\n    end\n    \n    strings =\
    \ strings[end-1:end]\n    \n    if length(strings) == 0\n        return \"\"\n\
    \    end\n    \n    strings = strings[2:end]\n    \n    if length(strings) ==\
    \ 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n\
    \    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    if\
    \ length(strings) == 0\n        return \"\"\n    end\n    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    strings = strings[2:end]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    strings = string", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    \n    strings\
    \ = sort(strings)\n    \n    if length(strings) == 0\n        return ''\n    \n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend", " \
    \   \"\"\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    end\n    \n    strings = strings[2:end]\n    \n\
    \    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end]\
    \ = ''\n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    first\
    \ = strings[1]\n    \n    if length(first) == 0 \n        return strings[2]\n\
    \    end\n    \n    if first[1] == first[2]\n        return first[1] .. strings[2]\
    \ \n    end\n    \n    return first[1] .. strings[2] .. first[3] \nend\n</cell>\n\
    <code language=julia-1.5>", "    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\
    \n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n\
    \    if length(strings) == 0\n        return ''\n    end\n    \n    first = strings[1]\n\
    \    \n    if first == ''\n        return strings[2]\n    end\n    \n    last\
    \ = strings[end]\n    \n    if last == ''\n        return strings[1]\n    end\n\
    \    \n    return first + last \nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    return join(strings, \"\")\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns a string with each letter capitalized.",
  "    \"\"\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[1:end-1]\n    \n    return\
    \ join(strings, \"\")\nend", "    strings = sort(strings)\n    return join(strings,\
    \ \"\", \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend", "    \n    strings = sort(strings)\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
  "    \"\"\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end] = ''\n\
    \    return join(strings, \"\")\nend", "    \"\"\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend", "    strings = strings[:]\n  \
    \  strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = ''\n    return join(strings, \"\")\nend", " \
    \   strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\
    \")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[2:end]\n    return join(strings, \"\")\n\
    end", "    \n    strings = strings[:]\n    strings = strings[2:end]\n    strings\
    \ = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]", "    strings = sort(strings)\n\
    \    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend", "    \"\"\nend",
  "    strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.3>", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end]\
    \ = \"\"\n    return join(strings, \"\")\nend", "    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings = sort(strings)\n\
    \    return join(strings, \"\", \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    if length(strings)\
    \ == 1\n        return strings[1]\n    \n    strings = strings[2:end]\n    \n\
    \    return strings[1] ++ strings[2] ++ strings[3]\nend", "    \"\"\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of strings and returns\
    \ a vector of integers representing the number of times each string appears in\
    \ the vector. For example, if the input vector is [\"a\", \"b\", \"c\", \"a\"\
    , \"b\", \"a\", \"c\"], the output vector should be [1, 1, 2, 1, 1, 2, 1]. Hint:\
    \ use the built-in function count!", "    strings = strings[:]\n    strings[end]\
    \ = \"\"\n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    end\n    \n    first\
    \ = strings[1]\n    \n    if first == ''\n        return strings[2]\n    end\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\n\
    \    end\n    \n    return first + last \nend\n</cell>\n<text>\nThe function concatenate\
    \ is now available to us. Let's try it out on some examples:", "    strings =\
    \ strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend", " \
    \   strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\
    \")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend", "    strings = sort(strings)\n    strings = strings[2:end]\n  \
    \  return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", "   \
    \ strings = sort(strings)\n    return join(strings, \"\", \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend\n\
    </cell>\n<code language=julia-1.4>", "    \"\"\nend", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings =\
    \ strings[:]\n    strings[end] = ''\n    return join(strings, \"\")\nend", " \
    \   strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    strings\
    \ = strings[1:end-1]\n    return join(strings, \"\")\nend", "    \n    strings\
    \ = sort(strings)\n    \n    if length(strings) == 0\n        return \"\"\n  \
    \  \n    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend",
  "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ \"\"\n    \n    strings = strings[2:end]\n    \n    return join(strings, \"\"\
    )\nend", "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n\
    \        return ''\n    \n    strings = strings[2:end]\n    \n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end] = ''\n\
    \    return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n \
    \   \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", "    \n    strings\
    \ = strings[:]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings\
    \ = strings[2:end]\n    return join(strings, \"\")\nend", "    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.3>", " \
    \   strings = sort(strings)\n    return join(strings, \"\")\nend", "    strings\
    \ = sort(strings)\n    strings = strings[2:end]\n    return join(strings, \"\"\
    )\nend", "    strings = strings[:]\n    strings[end] = ''\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return \"\"\n    end\n    \n    first = strings[1]\n    \n   \
    \ if length(first) == 0 \n        return strings[2]\n    end\n    \n    if first[1]\
    \ == first[2]\n        return strings[1] + strings[2]\n    end\n    \n    return\
    \ strings[1] + strings[2] + strings[3]\nend\n</cell>\n<code language=julia-1.5>",
  "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\"\
    )\nend", "    strings = sort(strings)\n    return join(strings, \"\", \"\")\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    strings = strings[:]\n  \
    \  \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = sort(strings)\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.4>", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = strings[2:end]\n    return join(strings, \"\")\nend", "    \n   \
    \ strings = strings[2:end]\n    \n    if length(strings) == 0\n        return\
    \ ''\n    \n    strings = strings[1:end]\n    \n    return join(strings, \"\"\
    )\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>\n@test concatenate([\"\
    a\", \"b\", \"c\"]) == \"abc\"\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of strings and returns a vector of strings where each string\
    \ in the original vector is concatenated with the string \"-\".", "    \n    strings\
    \ = sort(strings)\n    \n    if length(strings) == 0\n        return ''\n    \n\
    \    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend", " \
    \   strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\
    \")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings) ==\
    \ 0\n        return ''\n    \n    strings = strings[end-1:end]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings = strings[2:end]\n    return join(strings, \"\")\n\
    end", "    strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\
    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n    strings\
    \ = strings[2:end]\n    return join(strings, \"\")\nend", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings =\
    \ strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend", " \
    \   \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ ''\n    end\n    \n    strings = strings[end-1:end]\n    \n    return join(strings,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.5>", "    \"\"\nend", "    \n  \
    \  strings = strings[:]\n    \n    if length(strings) == 0\n        return \"\"\
    \n    \n    strings = strings[2:end]\n    \n    return join(strings, \"\")\nend",
  "    \n    strings = sort(strings)\n    \n    if length(strings) == 0\n        return\
    \ ''\n    \n    first = strings[1]\n    \n    if first == ''\n        return strings[2]\n\
    \    \n    last = strings[end]\n    \n    if last == ''\n        return strings[1]\
    \ + strings[2]\n    \n    return first + last\nend", "    strings = strings[:]\n\
    \    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n\
    \    if length(strings) == 0\n        return \"\"\n    \n    strings = strings[2:end]\n\
    \    \n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[end-1:end]\n\
    \    \n    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[end-1:end]\n    \n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[2:end]\n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>",
  "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\"\
    )\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.5>", "    strings = strings[:]\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\"\
    )\nend", "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n\
    \        return ''\n    \n    strings = strings[end-1:end]\n    \n    return join(strings,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.5>", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings =\
    \ sort(strings)\n    return join(strings, \"\", \"\")\nend", "    strings = strings[:]\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ ''\n    \n    strings = strings[end-1:end]\n    \n    return join(strings, \"\
    \")\nend", "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n\
    \        return \"\"\n    end\n    \n    first = strings[1]\n    \n    if length(first)\
    \ == 0 \n        return strings[2]\n    end\n    \n    last = strings[end]\n \
    \   \n    if length(last) == 0\n        return strings[end]\n    end\n    \n \
    \   strings[end] = last[1:end]\n    \n    return join(strings, \"\")\nend\n</cell>\n\
    <code language=julia-1.5>", "    strings = strings[:]\n    strings[end] = ''\n\
    \    return join(strings, \"\")\nend", "    \n    strings = strings[:]\n    strings\
    \ = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]\n\
    \    strings = strings[2:end]\n    strings = strings[2:end]\n    strings = strings[2:end]",
  "    strings = strings[:]\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    \n    strings = strings[2:end]\n    \n    if length(strings)\
    \ == 0\n        return \"\"\n    \n    strings = strings[1:end]\n    \n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    end\n    \n    first = strings[1]\n    \n    if\
    \ first == ''\n        return strings[2]\n    end\n    \n    last = strings[end]\n\
    \    \n    if last == ''\n        return strings[1]\n    end\n    \n    return\
    \ first + last\nend\n</cell>\n<code language=julia-1.4>", "    \"\"\nend", " \
    \   strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\
    \")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\
    \n    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", " \
    \   strings = strings[:]\n    strings = strings[end-1:end]\n    return join(strings,\
    \ \"\")\nend", "    \"\"\nend\n</cell>\n<text>\nExercise: Write a function that\
    \ takes a vector of strings and returns a vector of strings where each string\
    \ is the concatenation of all the strings in the original vector. For example,\
    \ if the input vector is [\"a\", \"b\", \"c\"], the output vector should be [\"\
    abc\"].", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = ''\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[:]\n    \n    if ", " \
    \   \"\"\nend", "    \n    strings = sort(strings)\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[2:end]\n    \n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[end-1:end]\n\
    \    return join(strings, \"\")\nend", "    strings = strings[:]\n    return join(strings,\
    \ \"\", \"\")\nend", "    \n    strings = strings[:]\n    \n    if length(strings)\
    \ == 0\n        return ''\n    \n    strings = strings[2:end]\n    \n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    strings = strings[1:end-1]\n\
    \    strings = strings[2:end]\n    strings = strings[1:end-1]\n    strings = strings[2:end]\n\
    \    strings = strings[1:end-1]\n    strings = strings[2:end]\n    ", "    strings\
    \ = strings[:]\n    strings = strings[2:end]\n    return join(strings, \"\")\n\
    end\n</cell>\n<code language=julia-1.5>", "    strings = strings[2:end]\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n \
    \   if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, '') \nend\n</cell>\n<code language=julia-1.5>",
  "    \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ \"\"\n    end\n    \n    strings = strings[2:end]\n    \n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = sort(strings)\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend\n</cell>\n<code language=julia-1.5>", "    strings = strings[:]\n\
    \    return join(strings, \"\", \"\")\nend", "    strings = strings[:]\n    strings[end]\
    \ = \"\"\n    return join(strings, \"\")\nend", "    strings = strings[:]\n  \
    \  strings[end] = \"\"\n    return join(strings, \"\")\nend", "    \n    strings\
    \ = strings[:]\n    \n    if length(strings) == 0\n        return ''\n    \n \
    \   strings = strings[2:end]\n    \n    return join(strings, \"\")\nend", "  \
    \  \n    strings = strings[:]\n    \n    if length(strings) == 0\n        return\
    \ \"\"\n    \n    strings = strings[end-1:end]\n    \n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend", "    strings = strings[:]\n    strings = strings[2:end]\n\
    \    return join(strings, \"\")\nend", "    \"\"\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of strings and returns a vector of strings\
    \ where each string is the concatenation of all the strings in the original vector.",
  "    strings = sort(strings)\n    strings = strings[2:end]\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    strings = strings[:]\n    strings\
    \ = strings[:]\n    strings = strings[:]\n    ", "    strings = strings[:]\n \
    \   strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\")\nend",
  "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\"\
    )\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return join(strings,\
    \ \"\")\nend", "    strings = strings[:]\n    strings[end] = \"\"\n    return\
    \ join(strings, \"\")\nend\n</cell>\n<code language=julia-1.5>", "    strings\
    \ = strings[:]\n    strings[end] = ''\n    return join(strings, \"\")\nend", " \
    \   strings = strings[:]\n    strings[end] = \"\"\n    return join(strings, \"\
    \")\nend", "    \n    strings = sort(strings)\n    \n    if length(strings) ==\
    \ 0\n        return ''\n    \n    strings = strings[2:end]\n    \n    return join(strings,\
    \ \"\")\nend", "    \"\"\nend", "    strings = strings[:]\n    strings[end] =\
    \ \"\"\n    return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return ''\n    \n    strings = strings[1:end-1]\n\
    \    \n    return join(strings, \"\")\nend", "    \n    strings = strings[2:end]\n\
    \    \n    if length(strings) == 0\n        return \"\"\n    end\n    \n    strings\
    \ = strings[2:end]\n    \n    return join(strings, \"\")\nend", "    \n    strings\
    \ = strings[2:end]\n    \n    if length(strings) == 0\n        return \"\"\n \
    \   end\n    \n    return join(strings, \"\")\nend", "    strings = strings[:]\n\
    \    strings = strings[2:end]\n    return join(strings, \"\")\nend", "    strings\
    \ = strings[:]\n    return join(strings, \"\")\nend", "    strings = strings[:]\n\
    \    strings[end] = \"\"\n    return join(strings, \"\")\nend", "    strings =\
    \ strings[:]\n    return join(strings, \"\")\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

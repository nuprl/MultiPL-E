name: HumanEval_133_sum_squares
language: julia
prompt: "\"\"\"You are given a list of numbers.\n    You need to return the sum of\
  \ squared numbers in the given list,\n    round each element in the list to the\
  \ upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should\
  \ be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7]\
  \ the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n \
  \   For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
  \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
  \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
  \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
  \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
  \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
  \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
completions: ["    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return\
    \ round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n  \
    \  return round(sum)\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squ", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum = sum + x^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i*i\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nFor\
    \ x = \u221A2 the output should be \u221A2\nFor x = \u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\
    \u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\u221A\uFFFD", "    sum\
    \ = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of positive integers less than or equal to n.", "    sum = 0\n  \
    \  for i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    sum = 0\n    for i in lst\n\
    \        sum += i*i\n    end\n    return sum\nend\n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nThis does not answer the question. OP asked how to round the numbers\
    \ to their ceiling first. Your solution rounds them to the nearest integer.\n\
    <|/ c |>\n<| c |>\nThe question was how to round the numbers to their ceiling\
    \ first. Your solution rounds them to the nearest integer. My solution rounds\
    \ them to the nearest integer.\n<|/ c |>\n<| c |>\nThe question was how to round\
    \ the numbers to their ceiling first. Your solution rounds them to the nearest\
    \ integer. My solution rounds them to the nearest integer.\n<|/ c |>\n<| c |>\n\
    The question was how to round the numbers to their ceiling first. Your solution\
    \ rounds them to the nearest integer. My solution rounds them to the nearest integer.\n\
    <|/ c |>\n<| c |>\nThe question was how to round the numbers to their ceiling\
    \ first. Your solution rounds them to the nearest integer. My solution rounds\
    \ them to the nearest integer.\n<|/ c |>\n<| a |>\nThe answer by is correct but\
    \ can be simplified a bit:\n<code>", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n    \
    \    sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take in a single number as input.\nThe function should return the square\
    \ root of the number as output.\nExamples:\nFor number = 2, the output should\
    \ be 1.414\nFor number = 5, the output should be 2.8284\nFor number = 10, the\
    \ output should be 5.3852\nFor number = 16, the output should be 10.0000\nFor\
    \ number = 25, the output should be 16.6667\nFor number = 100, the output should\
    \ be 100.0000\nFor number = 200, the output should be 200.0000\nFor number = 1001,\
    \ the output should be 1001.0000\nFor number = 1002, the output should be 1002.0000\n\
    For number = 1003, the output should be 1003.0000\nFor number = 1004, the output\
    \ should be 1004.0000\nFor number = 1005, the output should be 1005.0000\nFor\
    \ number = 1006, the output should be 1006.0000\nFor number = 1007, the output\
    \ should be 1007.0000\nFor number = 1008, the output should be 1008.0000\nFor\
    \ number = 1009, the output should be 1009.0000\nFor number = 1010, the output\
    \ should be 1010.0000\nFor number = 1011, the output should be 1011.0000\nFor\
    \ number = 1012, the output should be 1012.0000\nFor number = 1013, the output\
    \ should be 1013.0000\nFor number = 1014, the output should be 1014.0000\nFor\
    \ number = 1015, the output should be 1015.0000\nFor number = 1016, the output\
    \ should be 1016.0000\nFor number = 1017, the output should be 1017.0000\nFor\
    \ number = 1018, the output should be 1018.0000\nFor number = 1019, the output\
    \ should be 1019.0000\nFor number = 1020, the output should be 1020.0000\nFor\
    \ number = 1021, the output should be 1021.0000\nFor number = 1022, the output\
    \ should be 1022.0000\nFor number = 1023, the output should be 1023.0000\nFor\
    \ number = 1024, the output should be 1024.0000\nFor number = 1025, the output\
    \ should be 1025.0000\nFor number = 1026, the output should be 1026.0000\nFor\
    \ number = 10", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum = sum\
    \ + i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n     \
    \   sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.3>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.3>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.3>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 3", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Problem 7: Write a function that returns the number of elements in a vector that\
    \ are less than a given value.", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take in a single number as input, and output the square root of that\
    \ number. \nThe function should raise an error if the input is not a number.",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector as input and returns the sum\
    \ of the squares of the elements in the vector", "    sum = 0\n    for i in lst\n\
    \        sum += i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the squares of numbers in a given vector.", "    sum = 0\n    for\
    \ i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in lst\n        sum = sum + i^2\n    end\n    return sum\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't round the numbers to the ceiling first\n<|/ c\
    \ |>\n<| c |>\nThe question was about rounding numbers to the ceiling first. Your\
    \ solution doesn't do that.\n<|/ c |>\n<| c |>\nThe question was about rounding\
    \ numbers to the ceiling first. Your solution doesn't do that.\n<|/ c |>\n<| c\
    \ |>\nThe question was about rounding numbers to the ceiling first. Your solution\
    \ doesn't do that.\n<|/ c |>\n<| c |>\nThe question was about rounding numbers\
    \ to the ceiling first. Your solution doesn't do that.\n<|/ c |>\n<| a tags=julia,rounding\
    \ |>\n<code>", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n \
    \   return round(sum)\nend\n</code>\n<|/ a tags=julia,list |>\n<| a dscore=2 |>\n\
    <code>", "    sum = 0\n    for x in lst\n        sum = sum + x^2\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n  \
    \  end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of all the numbers in a\
    \ given list.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the first n integers in the given list.", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a list that satisfy a certain condition. \nFor example, for the list [1,2,3,4,5,6,7,8,9]\
    \ the function should return 3 because there are 3 elements in the list that satisfy\
    \ the condition: x>5.", "    sum = 0\n    for i in lst\n        sum += i*i\n \
    \   end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,function,list\
    \ |>\n<code>", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n \
    \   return sum\nend", "    sum = 0\n    for i in lst\n        sum += i*i\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the first\
    \ n numbers in a list.", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of all the numbers in a\
    \ given list.", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the first\
    \ n positive integers. \nExamples:\nFor n = 5 the output should be 25\nFor n =\
    \ 6 the output should be 49\nFor n = 7 the output should be 81\nFor n = 8 the\
    \ output should be 987\nFor n = 9 the output should be 991\nFor n = 10 the output\
    \ should be 1010\nFor n = 11 the output should be 1011\nFor n = 12 the output\
    \ should be 1012\nFor n = 13 the output should be 1013\nFor n = 14 the output\
    \ should be 1014\nFor n = 15 the output should be 1015\nFor n = 16 the output\
    \ should be 1016\nFor n = 17 the output should be 1017\nFor n = 18 the output\
    \ should be 1018\nFor n = 19 the output should be 1019\nFor n = 20 the output\
    \ should be 1020\nFor n = 21 the output should be 1021\nFor n = 22 the output\
    \ should be 1022\nFor n = 23 the output should be 1023\nFor n = 24 the output\
    \ should be 1024\nFor n = 25 the output should be 1025\nFor n = 26 the output\
    \ should be 1026\nFor n = 27 the output should be 1027\nFor n = 28 the output\
    \ should be 1028\nFor n = 29 the output should be 1029\nFor n = 30 the output\
    \ should be 1030\nFor n = 31 the output should be 1031\nFor n = 41 the output\
    \ should be 1041\nFor n = 42 the output should be 1042\nFor n = 43 the output\
    \ should be 1043\nFor n = 44 the output should be 1044\nFor n = 45 the output\
    \ should be 1045\nFor n = 46 the output should be 1046\nFor n = 47 the output\
    \ should be 1047\nFor n = 48 the output should be 1048\nFor n = 49 the output\
    \ should be 1049\nFor n = 50 the output should be 1050\nFor n = 51 the output\
    \ should be 1051\nFor n = 52 the output should be 1052\nFor n = 53 the output\
    \ should be 1053\nFor n = 54 the output should be 1054\n", "    sum = 0\n    for\
    \ i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the square root of a number.", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the square root of\
    \ a number.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n  \
    \  return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,list |>\n<code>",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([-10,-5,0,5,10])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-10,-5,0,5,10])\n</cell", "    sum = 0\n    for i in lst\n      \
    \  sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a list of numbers and\
    \ returns the sum of the squares of the numbers in the list. \nThe function should\
    \ round the sum to the upper int(Ceiling) first.\nExamples:\nFor lst = [1,2,3]\
    \ the output should be 14\nFor lst = [1,4,9] the output should be 98\nFor lst\
    \ = [1,3,5,7] the output should be 84\nFor lst = [1.4,4.2,0] the output should\
    \ be 29\nFor lst = [-2.4,1,1] the output should be 6", "    sum = 0\n    for i\
    \ in lst\n        sum += i * i\n    end\n    return sum\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis does not answer the question. The question asks for an efficient\
    \ way to compute the sum of the squares of numbers in a vector, not the sum of\
    \ the squares of the numbers in the vector.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ my answer is not the most efficient one, but I thought it would be a good starting\
    \ point to understand the concept of vectorization. Thanks for your comment!\n\
    <|/ c |>\n<| c |>\nI agree with you, my answer is not the most efficient one,\
    \ but I thought it would be a good starting point to understand the concept of\
    \ vectorization. Thanks for your comment!\n<|/ c |>\n<| a |>\nThe most efficient\
    \ way is to use broadcasting - \n<code>\njulia> function sum_squares(lst::Vector{Float64})::Int64\n\
    \           return sum(lst*lst)\n       end\nsum_squares (generic function with\
    \ 1 method)", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n  \
    \  return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the maximum of a list of numbers.",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a list that\
    \ satisfy a given condition. For example, if the condition is that all elements\
    \ in the list are positive, then the function should return 3 for lst = [1,2,3].",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of all the numbers in a\
    \ given list.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i*i\n\
    \    end\n    return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,list\
    \ |>\n<code>", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument, x, and return the square root of x.\nExamples:\nFor\
    \ x = 2, the function should return 1.414\nFor x = -2, the function should return\
    \ -1.414\nFor x = 0, the function should return 0\nFor x = 1, the function should\
    \ return 1\nFor x = 1.5, the function should return 1.414\nFor x = -1.5, the function\
    \ should return -1.414\nFor x = 1.5, the function should return 1.414\nFor x =\
    \ -1.5, the function should return -1.414\nFor x = 100, the function should return\
    \ 100.00\nFor x = -100, the function should return -100.00\nFor x = -1000, the\
    \ function should return -1000", "    sum = 0\n    for i in lst\n        sum =\
    \ sum + i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,-2,3,5])\n</cell>\n<code language=julia-1.0>\n\
    sum_s", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument and return a Float64 number.", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of numbers and returns the product\
    \ of the numbers in the list. \nThe function should round each number in the list\
    \ to the upper int(Ceiling) first.\nExamples:\nFor lst = [1,2,3] the output should\
    \ be 6\nFor lst = [1,4,9] the output should be 27\nFor lst = [1,3,5,7] the output\
    \ should be 142\nFor lst = [1.4,4.2,0] the output should be 24\nFor lst = [-2.4,1,1]\
    \ the output should be -6\n    ", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector as input and returns its mean\
    \ value.", "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number.", "   \
    \ sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squ", "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n \
    \   return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n   \
    \ end\n    return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/27899814)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question. He asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He also\
    \ asked how to round the numbers to the nearest integer. He also asked how to\
    \ round the numbers to the nearest integer. He also asked how to round the numbers\
    \ to the nearest integer. He also asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He also\
    \ asked how to round the numbers to the nearest integer. He also asked how to\
    \ round the numbers to the nearest integer. He also asked how to round the numbers\
    \ to the nearest integer. He also asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He also\
    \ asked how to round the numbers to the nearest integer. He also asked how to\
    \ round the numbers to the nearest integer. He also asked how to round the numbers\
    \ to the nearest integer. He also asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He also\
    \ asked how to round the numbers to the nearest integer. He also asked how to\
    \ round the numbers to the nearest integer. He also asked how to round the numbers\
    \ to the nearest integer. He also asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He also\
    \ asked how to round the numbers to the nearest integer. He also asked how to\
    \ round the numbers to the nearest integer. He also asked how to round the numbers\
    \ to the nearest integer. He also asked how to round the numbers to the nearest\
    \ integer. He also asked how to round the numbers to the nearest integer. He ",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return round(sum)\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers and returns the sum\
    \ of the squares of the numbers in the list.", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for i in\
    \ lst\n        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n   \
    \ for i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "  \
    \  sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ round(sum)\nend\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    sum = 0\n\
    \    for i in lst\n        sum += i * i\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes in a vector of numbers and returns the\
    \ product of all the numbers in the vector.", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squ", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for i\
    \ in lst\n        sum += i^2\n    end\n    return round(sum)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares", " \
    \   sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a list that\
    \ satisfy a certain condition", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n    \
    \    sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of numbers and returns the mean\
    \ of the numbers in the vector. \nThe mean should be rounded to the nearest integer.",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of positive numbers in a\
    \ given list.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns the mean of the vector.",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns the sum of the squares\
    \ of the elements.\nExamples:\nFor v = [1,2,3] the output should be 14\nFor v\
    \ = [1,4,9] the output should be 98\nFor v = [1,3,5,7] the output should be 84\n\
    For v = [1.4,4.2,0] the output should be 29\nFor v = [-2.4,1,1] the output should\
    \ be 6", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n \
    \   return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Problem 3\nWrite a function that returns the number of elements in a list that\
    \ satisfy a given condition.", "    sum = 0\n    for i in lst\n        sum +=\
    \ i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the first element of\
    \ a vector", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the first\
    \ n positive integers less than or equal to n.", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThis doesn't work. `sum_squares([1.4, 4.2, 0])` returns `29` instead\
    \ of `6`.\n<|/ c |>\n<| c |>\nI edited my answer to fix the issue. Thanks for\
    \ pointing out!\n<|/ c |>\n<| a tags=julia,list |>\n<code>", "    sum = 0\n  \
    \  for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</code>\n\
    <|/ a tags=julia,list |>\n<| a dscore=2 |>\nIn Julia 1.3, you can use the sum\
    \ function with a comprehension:\n<code>\njulia> sum([x ^ 2 for x in 1:10])\n\
    55\n</code>\n<|/ a tags=julia,list |>\n<| a dscore=2 |>\nIn Julia 1.3 you can\
    \ use the sum function with a comprehension:\n<code>\njulia> sum([x ^ 2 for x\
    \ in 1:10])\n55\n</code>\n<|/ a tags=julia,list |>\n<| a tags=julia,list |>\n\
    In Julia 1.3 you can use the sum function with a comprehension:\n<code>\njulia>\
    \ sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    In Julia 1.3 you can use the sum function with a comprehension:\n<code>\njulia>\
    \ sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/ a tags=julia,list |>\n<| a dscore=1\
    \ |>\nIn Julia 1.3 you can use the sum function with a comprehension:\n<code>\n\
    julia> sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/ a tags=julia,list |>\n<| a\
    \ dscore=0 |>\nIn Julia 1.3 you can use the sum function with a comprehension:\n\
    <code>\njulia> sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/ a tags=julia,list\
    \ |>\n<| a tags=julia,list |>\nIn Julia 1.3 you can use the sum function with\
    \ a comprehension:\n<code>\njulia> sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\nIn Julia 1.3 you can use the sum function with\
    \ a comprehension:\n<code>\njulia> sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/\
    \ a tags=julia,list |>\n<| a |>\nIn Julia 1.3 you can use the sum function with\
    \ a comprehension:\n<code>\njulia> sum([x ^ 2 for x in 1:10])\n55\n</code>\n<|/\
    \ a tags=julia,list dscore=0 |>\n<| a tags=julia,list |>\nIn Julia 1.3 you can\
    \ use the sum function with a comprehension:\n<code>\njulia> sum([x ^ 2 for x\
    \ in 1:10])\n55\n</code>\n<|/ a dscore=0 |>\n<| a ", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([", "    sum = 0\n    for i in\
    \ lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the maximum of a list\
    \ of numbers.", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of positive integers less\
    \ than or equal to n.", "    sum = 0\n    for x in lst\n        sum += x^2\n \
    \   end\n    return sum\nend\n</code>\n<|/ a tags=julia,list |>\n<| a dscore=1\
    \ |>\n<code>", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the product of numbers in a given list.",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n\
    </code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't answer the question, which\
    \ is about rounding each element in the list to the upper int(Ceiling) first.\n\
    <|/ c |>\n<| a dscore=2 |>\nThe answer by is correct, but I wanted to add some\
    \ explanation as to why it works.\nThe reason why it works is because Julia is\
    \ vectorized. When you write for i in lst, Julia will automatically loop through\
    \ each element in the array and perform the operation on each element. \nThe reason\
    \ why it works is because Julia is vectorized. The reason why it works is because\
    \ Julia is vectorized. The reason why it works is because Julia is vectorized.\
    \ The reason why it works is because Julia is vectorized. The reason why it works\
    \ is because Julia is vectorized. The reason why it works is because Julia is\
    \ vectorized. The reason why it works is because Julia is vectorized. The reason\
    \ why it works is because Julia is vectorized. The reason why it works is because\
    \ Julia is vectorized. The reason why it works is because Julia is vectorized.\
    \ The reason why it works is because Julia is vectorized. The reason why it works\
    \ is because Julia is vectorized. The reason why it works is because Julia is\
    \ vectorized. The reason why it works is because Julia is vectorized. The reason\
    \ why it works is because Julia is vectorized. The reason why it works is because\
    \ Julia is vectorized. The reason why it works is because Julia is vectorized.\
    \ The reason why it works is because Julia is vectorized. The reason why it works\
    \ is because Julia is vectorized. The reason why it works is because Julia is\
    \ vectorized. The reason why it works is because Julia is vectorized. The reason\
    \ why it works is because Julia is vectorized. The reason why it works is because\
    \ Julia is vectorized. The reason why it works is because Julia is vectorized.\
    \ The reason why it works is because Julia is vectorized. The reason why it works\
    \ is because Julia is vectorized. The reason why it works is because Julia is\
    \ vectorized. The reason why it works is because Julia is vectorized. The reason\
    \ why it works is because Julia is vectorized. The reason why it works is because\
    \ Julia is vectorized. The reason why it works is because Julia is vectorized.\
    \ The reason why it works is because Julia is vectorized. The ", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 3", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squ", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return round(sum)\nend", "    sum = 0\n    for\
    \ i in lst\n        sum += i^2\n    end\n    return sum\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the maximum of a given list of numbers.\
    \ \nThe function should take a list of numbers as an argument and return the maximum\
    \ number in the list.", "    sum = 0\n    for x in lst\n        sum += x^2\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-1.4,4.2,0])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector as input and returns the dot product of the vectors.", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n   \
    \ return sum\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis does not answer\
    \ the question. OP wants to round the numbers to the nearest integer.\n<|/ c |>\n\
    <| c |>\nI agree with you. My answer was to give a hint on how to solve the problem\
    \ and to give a hint on how to solve the problem in general. Your answer is more\
    \ elegant and more general. Thanks for your comment.\n<|/ c |>\n<| a tags=julia\
    \ |>\n<code>", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the first element of a list", "    sum\
    \ = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the product of all the numbers in a given list.", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nProblem 7: Write a function that returns\
    \ the product of numbers in a given list.\nExamples:\nFor lst = [1,2,3] the output\
    \ should be 6\nFor lst = [1,4,9] the output should be 144\nFor lst = [1,3,5,7]\
    \ the output should be 1425\nFor lst = [1.4,4.2,0] the output should be 24.0\n\
    For lst = [-2.4,1,1] the output should be -6.0", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return round(sum)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes in a vector of numbers and returns the\
    \ sum of the squares of the even numbers in the vector.", "    sum = 0\n    for\
    \ i in lst\n        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</code>\n\
    <|/ a tags=julia,list |>\n<| a tags=julia,list |>\n<code>", "    sum = 0\n   \
    \ for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2", "    sum = 0\n    for i\
    \ in lst\n        sum += i * i\n    end\n    return sum\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,list |>\n<code>", "    sum = 0\n    for x in lst\n     \
    \   sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the first n integers in the given list.\nExamples:\nFor lst = [1,2,3] the\
    \ output should be 14\nFor lst = [1,4,9] the output should be 98\nFor lst = [1,3,5,7]\
    \ the output should be 84\nFor lst = [1.4,4.2,0] the output should be 29\nFor\
    \ lst = [-2.4,1,1] the output should be 6", "    sum = 0\n    for x in lst\n \
    \       sum += x^2\n    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squ", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return round(sum)\nend", "    sum =\
    \ 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "  \
    \  sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector and returns the sum of the absolute values of the elements in the vector.\
    \ \nFor example if v = [1,2,3] the output should be 6", "    sum = 0\n    for\
    \ i in lst\n        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squ", "    sum = 0\n    for x in lst\n        sum = sum + x^2\n    end\n \
    \   return sum\nend", "    sum = 0\n    for i in lst\n        sum += i*i\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns the product of all the numbers in a given\
    \ list.\nExamples:\nFor lst = [1,2,3] the output should be 6\nFor lst = [1,4,9]\
    \ the output should be 144\nFor lst = [1,3,5,7] the output should be 1425\nFor\
    \ lst = [1.4,4.2,0] the output should be 24.0\nFor lst = [-2.4,1,1] the output\
    \ should be -6.0", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the first\
    \ n positive integers. \nExamples:\nFor n = 2 the output should be 9\nFor n =\
    \ 10 the output should be 385\nFor n = 100 the output should be 479001600", " \
    \   sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n  \
    \  return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squ", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns the number of elements\
    \ that are not zero. \nFor example [0,0,0] should return 0.", "    sum = 0\n \
    \   for i in lst\n        sum += i*i\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the square root of a number. \nThe function should take one argument and return\
    \ a Float64 number.", "    sum = 0\n    for x in lst\n        sum += x^2\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i^2\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the square root of a number. \nThe function\
    \ should take one argument and return a Float64 number.", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return round(sum)\nend\n</code>\n\
    <|/ a tags=julia,list |>\n<| c |>\nThis doesn't work if you have a negative number\
    \ in the list\n<|/ c |>\n<| c |>\nIt doesn't work for negative numbers. Try it\
    \ out with `[-2.4, 1, 1]`.\n<|/ c |>\n<| c |>\nI didn't know that negative numbers\
    \ were a problem. Thanks for pointing it out. I've edited my answer to include\
    \ a solution for negative numbers.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. Try it out with `[-2.4, 1, 1]`.\n<|/ c |>\n<| c |>\nI didn't know that\
    \ negative numbers were a problem. Thanks for pointing it out. I've edited my\
    \ answer to include a solution for negative numbers.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n \
    \   return sum\nend", "    sum = 0\n    for i in lst\n        sum += i*i\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of numbers and returns the average\
    \ of those numbers. \nThe function should work for any type of numbers (Float64,\
    \ Int, ...).", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return round(sum)\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n   \
    \ return sum\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to round the numbers to their nearest integer before summing\
    \ them.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll delete\
    \ my answer if OP clarifies it.\n<|/ c |>\n<| c |>\nI guess I misunderstood the\
    \ question. I'll delete my answer if OP clarifies it.\n<|/ c |>\n<| c |>\nI guess\
    \ I misunderstood the question. I'll delete my answer if OP clarifies it.\n<|/\
    \ c |>\n<| c |>\nI guess I misunderstood the question. I'll delete my answer if\
    \ OP clarifies it.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    sum = 0\n    for\
    \ x in lst\n        sum = sum + x^2\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the maximum of a given list of numbers.", "    sum = 0\n    for i in lst\n \
    \       sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([", "    sum = 0\n    for i in\
    \ lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return round(sum)\nend", "    sum =\
    \ 0\n    for x in lst\n        sum += x^2\n    end\n    return round(sum)\nend",
  "    sum = 0\n    for x in lst\n        sum = sum + x^2\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return round(sum)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2", "    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a list that\
    \ satisfy a given condition.", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Problem 4\nWrite a function that returns the first element of a vector", "   \
    \ sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\nsum_squares([1,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4,1,1])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4,4.2,0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.",
  "    sum = 0\n    for x in lst\n        sum = sum + x^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1,4,9])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1,3,5,7])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,4.2,0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([-2.4,1,1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of elements in a vector that\
    \ satisfy a condition", "    sum = 0\n    for i in lst\n        sum += i*i\n \
    \   end\n    return sum\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

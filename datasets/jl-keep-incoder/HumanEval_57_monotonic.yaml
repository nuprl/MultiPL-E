name: HumanEval_57_monotonic
language: julia
prompt: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
  \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
  \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
  \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
  \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
  \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
  \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
completions: ["    l = sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1]\
    \ > l[i]\n            return false\n        end\n        i += 1\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    i = 2\n    while\
    \ i < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend", "    if length(l) == 0 \n        return\
    \ true\n    end\n    l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] > l[i+1]\
    \ for i in 2:end-1)\nend\n</cell>\n<code language=julia-1.3>\n@test monotonic([4,\
    \ 1, 0, -10])\n</cell>\n<text>\nExercise\nWrite a function that returns the first\
    \ element of a list that satisfies a predicate p.", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    if l[1] < l[2]\n     \
    \   return true\n    elseif l[1] > l[2]\n        return false\n    else\n    \
    \    return true\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false", "    if length(l) == 0 \n        return true\n    end\n\
    \    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] >\
    \ l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n        return\
    \ true\n    end\n    \n    if l[1] > l[3] \n        return false\n    end\n  \
    \  \n    if l[2] < l[3] \n        return true\n    end\n    \n    if l[2] > l[3]\
    \ \n        return false\n    end\n    \n    if l[3] < l[4] \n        return true\n\
    \    end\n    \n    if l[3] > l[4] \n        return false\n    end\n    \n   \
    \ if l[4] < l[5] \n        return true\n    end\n    \n    if l[4] > l[5] \n \
    \       return false\n    end\n    \n    if l[5] < l[6] \n        return true\n\
    \    end\n    \n    if l[5] > l[6] \n        return false\n    end\n    \n   \
    \ if l[6] < l[7] \n        return true\n    end\n    \n    if l[6] > l[7] \n \
    \       return false\n    end\n    \n    if l[7] < l[8] \n        return true\n\
    \    end\n    \n    if l[7] > l[8] \n        return false\n    end\n    \n   \
    \ if l[8] < l[9] \n        return true\n    end\n    \n    if l[8] > l[9] \n \
    \       return false\n    end\n    \n    if l[9] < l[10] \n        return true\n\
    \    end\n    \n    if l[9] > l[10] \n        return false\n    end\n    \n  \
    \  if l[10] < l[11] \n        return true\n    end\n    \n    if l[10] > l[11]\
    \ \n        return false\n    end\n    \n    if l[11] < l[12] \n        return\
    \ true\n    end\n    \n    if l[11] > l[12] \n        return false\n    end\n\
    \    \n    if l[12] < l[13] \n        return true\n    end\n    \n    if l[12]\
    \ > l[13] \n        return false\n    end\n    \n    if l[13] < l[14] \n     \
    \   return true\n    end\n    \n    if l[13] > l[14] \n        return false\n\
    \    end\n    \n    if l[14] < l[15] \n        return true\n    end\n    \n  \
    \  if l[14] > l[15] \n        return false\n    end\n    \n    if l[15] < l[16]\
    \ \n        return true\n    end\n    \n    if l[15] > l[16] \n        return\
    \ false\n    end\n    \n    if l[16] < l[", "    l = sort(l)\n    l = l[1..end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l =\
    \ l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n   \
    \ l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n\
    \    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    if l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    else\n        true\n    end\nend\n</code>\n<|/ a\
    \ dscore=4 |>\n<| c |>\nThis doesn't work for `monotonic([1,4,2,5])` because `l[1]\
    \ < l[2]` returns `true` but `l[2] < l[1]` returns `false`\n<|/ c |>\n<| c |>\n\
    I fixed the code by changing `l[1] < l[2]` to `l[1] < l[2]` and `l[2] < l[1]`\
    \ to `l[2] < l[1]`\n<|/ c |>\n<| c |>\nThis doesn't work for `monotonic([1,4,2,5])`\
    \ because `l[1] < l[2]` returns `true` but `l[2] < l[1]` returns `false`\n<|/\
    \ c |>\n<| c |>\nI fixed the code by changing `l[1] < l[2]` to `l[1] < l[2]` and\
    \ `l[2] < l[1]` to `l[2] < l[1]`\n<|/ c |>\n<| a dscore=4 |>\nI wrote a package\
    \ that does this for you:\n<code>\njulia> using LinearAlgebra", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    if l[1] < l[2] || l[2] < l[1]\n        return\
    \ true\n    else\n        return false\n    end\nend", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1..end-1]\n    if\
    \ l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n        return false\n\
    \    end\nend", "    if length(l) == 0 \n        return true\n    end\n    \n\
    \    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n  \
    \  \n    if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3]\
    \ \n        return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[1] < l[4] \n        return true\n    end\n    \n    if\
    \ l[1] > l[4] \n        return false\n    end\n    \n    if l[1] < l[5] \n   \
    \     return true\n    end\n    \n    if l[1] > l[5] \n        return false\n\
    \    end\n    \n    if l[1] < l[6] \n        return true\n    end\n    \n    if\
    \ l[1] > l[6] \n        return false\n    end\n    \n    if l[1] < l[7] \n   \
    \     return true\n    end\n    \n    if l[1] > l[7] \n        return false\n\
    \    end\n    \n    if l[1] < l[8] \n        return true\n    end\n    \n    if\
    \ l[1] > l[8] \n        return false\n    end\n    \n    if l[1] < l[9] \n   \
    \     return true\n    end\n    \n    if l[1] > l[9] \n        return false\n\
    \    end\n    \n    if l[1] < l[10] \n        return true\n    end\n    \n   \
    \ if l[1] > l[10] \n        return false\n    end\n    \n    if l[1] < l[11] \n\
    \        return true\n    end\n    \n    if l[1] > l[11] \n        return false\n\
    \    end\n    \n    if l[1] < l[12] \n        return true\n    end\n    \n   \
    \ if l[1] > l[12] \n        return false\n    end\n    \n    if l[1] < l[13] \n\
    \        return true\n    end\n    \n    if l[1] > l[13] \n        return false\n\
    \    end\n    \n    if l[1] < l[14] \n        return true\n    end\n    \n   \
    \ if l[1] > l[14] \n        return false\n    end\n    \n    if l[1] < l[15] \n\
    \        return true\n    end\n    \n    if l[1] > l[15] \n        return false\n\
    \    end\n    \n    if l[1] < l[16] \n        return true\n    end\n    \n   \
    \ if l[1] > l[16] \n        return false\n    end\n    \n    if l[1] < l[17] \n\
    \        return true\n    end\n    \n    if l[1] > l[17] \n        return false\n\
    \    end\n    \n    if l[1] < ", "    l = sort(l)\n    l = l[end:-1:1]\n    if\
    \ l[1] < l[2]\n        true\n    elseif l[1] > l[2]\n        false\n    else\n\
    \        monotonic(l)\n    end\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    if l[1] < l[2] || l[2] < l[1]\n        return true\n    else\n\
    \        return false\n    end\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  if length(l) == 0 \n        true\n    elseif length(l) == 1 \n        l ==\
    \ l[1]\n    else\n        l == sort(l)[1]\n    end\nend\n</cell>\n<text>\nThe\
    \ function monotonic returns true if the list elements are monotonically increasing\
    \ or decreasing.", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .>\
    \ 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l\
    \ .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l =\
    \ l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n   \
    \ l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]", "    l = sort(l)\n\
    \    if l[1] < l[2]\n        return true\n    elseif l[1] > l[2]\n        return\
    \ false\n    else\n        return true\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nI like the idea of using sort. However, the sort function does\
    \ not sort the list in-place. Instead, it returns a new sorted list. Thus, your\
    \ function will always return true.\n<|/ c |>\n<| c |>\nYes, you are right. I've\
    \ edited my answer to fix the problem.\n<|/ c |>\n<| a tags=julia |>\nHere's a\
    \ solution using sort!:\n<code>", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0]\n        return true\n    end\n    \n    if\
    \ l[1] > l[end]\n        return true\n    end\n    \n    if l[end] < l[1]\n  \
    \      return true\n    end\n    \n    return false\nend", "    l = sort(l)\n\
    \    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n            return\
    \ false\n        end\n        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    l = sort(l)\n    l = l[1:end-1]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:", "    if length(l) == 0 \n        return true\n    \n\
    \    if l[1] < l[0] \n        return false\n    \n    i = 2\n    while i < length(l)\n\
    \        if l[i] < l[i-1] \n            return false\n        i += 1\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return True is\
    \ list elements are monotonically increasing or decreasing.\n    >>> monotonic([1,\
    \ 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>>\
    \ monotonic([4, 1, 0, -10])\n    True\n    \"\"\"", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    return all(l[i] <= l[i+1] for i in 1:length(l)-1)\nend\n</cell>\n\
    <code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n    if l[1]\
    \ < l[2] || l[2] < l[1]\n        return true\n    else\n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n\
    \    if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] < l[3]\
    \ \n        return true\n    end\n    \n    if l[1] > l[3] \n        return false\n\
    \    end\n    \n    if l[1] < l[4] \n        return true\n    end\n    \n    if\
    \ l[1] > l[4] \n        return false\n    end\n    \n    if l[1] < l[5] \n   \
    \     return true\n    end\n    \n    if l[1] > l[5] \n        return false\n\
    \    end\n    \n    if l[1] < l[6] \n        return true\n    end\n    \n    if\
    \ l[1] > l[6] \n        return false\n    end\n    \n    if l[1] < l[7] \n   \
    \     return true\n    end\n    \n    if l[1] > l[7] \n        return false\n\
    \    end\n    \n    if l[1] < l[8] \n        return true\n    end\n    \n    if\
    \ l[1] > l[8] \n        return false\n    end\n    \n    if l[1] < l[9] \n   \
    \     return true\n    end\n    \n    if l[1] > l[9] \n        return false\n\
    \    end\n    \n    if l[1] < l[10] \n        return true\n    end\n    \n   \
    \ if l[1] > l[10] \n        return false\n    end\n    \n    if l[1] < l[11] \n\
    \        return true\n    end\n    \n    if l[1] > l[11] \n        return false\n\
    \    end\n    \n    if l[1] < l[12] \n        return true\n    end\n    \n   \
    \ if l[1] > l[12] \n        return false\n    end\n    \n    if l[1] < l[13] \n\
    \        return true\n    end\n    \n    if l[1] > l[13] \n        return false\n\
    \    end\n    \n    if l[1] < l[14] \n        return true\n    end\n    \n   \
    \ if l[1] > l[14] \n        return false\n    end\n    \n    if l[1] < l[15] \n\
    \        return true\n    end\n    \n    if l[1] > l[15] \n        return false\n\
    \    end\n    \n    if l[1] < l[16] \n        return true\n    end\n    \n   \
    \ if l[1] > l[16] \n        return false\n    end\n    \n    if l[1] < l[17] \n\
    \        return true\n    end\n    \n    if l[1] > l[17] \n        return false\n\
    \    end\n    \n    if l[1] < ", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if\
    \ l[2] < l[3] \n        return true\n    end\n    \n    if l[3] < l[4] \n    \
    \    return true\n    end\n    \n    if l[4] < l[1] \n        return true\n  \
    \  end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .>\
    \ 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l\
    \ .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l =\
    \ l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n   \
    \ l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]", "    l = sort(l)\n    i = 2\n    while i < length(l)\n  \
    \      if l[i-1] > l[i]\n            return false\n        end\n        i += 1\n\
    \    return true\nend", "    l = sort(l)\n    l = l[1:end-1]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:end] .< l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .< l[2:end])]\n    l = l[findall(l[2:end] .> l[1:end-1])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[2:", "    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< 1]\n    l = l[l .> 0]\n    l = l[l .< 1]\n    l = l[l ", "    l = sort(l)\n\
    \    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n            return\
    \ false\n        end\n        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] == l[2] \n\
    \        return true\n    end\n    \n    if l[1] > l[2] \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end-1]\n    return all(l[i] > l[i+1] for i in 2:end-1)\nend\n</cell>\n\
    <code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1:end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l\
    \ .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n\
    \    l = l[l .> 0]\n    l = l[l .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l\
    \ .< length(l)-1]\n    l = l[l .> 0]\n    l = l[l .< length(l)", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    \n    if l[1] < l[2] \n     \
    \   return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if\
    \ l[1] == l[2] \n        return true\n    \n    if l[1] > l[2] \n        return\
    \ false\n    \n    if l[1] < l[2] \n        return true\n    \n    return false\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[1..end(l)]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    l = l[l .> 1]\n    l = l[l\
    \ .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n    l =\
    \ l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n   \
    \ l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l .> 1]\n\
    \    l = l[l .< end]\n    l = l[l .> 1]\n    l = l[l .< end]\n    l = l[l ", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    return all(l[1:end-1]\
    \ .> l[2:end])\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is\
    \ list elements are monotonically increasing or decreasing.\n    >>> monotonic([1,\
    \ 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>>\
    \ monotonic([4, 1, 0, -10])\n    True\n    \"\"\"", "    l = sort(l)\n    i =\
    \ 2\n    while i < length(l)\n        if l[i-1] > l[i]\n            return false\n\
    \        end\n        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(l) == 0 \n        return true\n    \n    if l[1] < l[2] \n      \
    \  return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if\
    \ l[1] < l[2] \n        return true\n    \n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1..end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> 0]\n    return l == l\n\
    end", "    l = sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1]\
    \ < l[i]\n            i += 1\n        elseif l[i-1] > l[i]\n            i -= 1\n\
    \        else\n            return false\n        end\n    end\n    return true\n\
    end", "    if length(l) == 0 \n        return true\n    end\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] > l[2] \n        return true\n    end\n  \
    \  \n    return false\nend", "    l = sort(l)\n    i = 2\n    while i < length(l)\n\
    \        if l[i-1] > l[i]\n            return false\n        end\n        i +=\
    \ 1\n    return true\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    end\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] >\
    \ l[2] \n        return false\n    end\n    \n    return monotonic(l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) == 0\
    \ \n        return true\n    end\n    \n    l = l[end]\n    \n    if l<l[1] \n\
    \        return true\n    end\n    \n    if l>l[end] \n        return false\n\
    \    end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if\
    \ l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2] \n     \
    \   return true\n    end\n    \n    if l[2]>l[end] \n        return false\n  \
    \  end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end]\
    \ \n        return false\n    end\n    \n    if l[1]<l[2] \n        return true\n\
    \    end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n   \
    \ if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n   \
    \     return false\n    end\n    \n    if l[1]<l[2] \n        return true\n  \
    \  end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n    if\
    \ l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n      \
    \  return false\n    end\n    \n    if l[1]<l[2] \n        return true\n    end\n\
    \    \n    if l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2]\
    \ \n        return true\n    end\n    \n    if l[2]>l[end] \n        return false\n\
    \    end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if\
    \ l[2]>l[end] \n        return false\n    end\n    \n    if l[1]<l[2] \n     \
    \   return true\n    end\n    \n    if l[2]>l[end] \n        return false\n  \
    \  end\n    \n    if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end]\
    \ \n        return false\n    end\n    \n    if l[1]<l[2] \n        return true\n\
    \    end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n   \
    \ if l[1]<l[2] \n        return true\n    end\n    \n    if l[2]>l[end] \n   \
    \     return false\n    end\n    \n    if l[1]<l[2] \n        return true\n  \
    \  end\n    \n    if l[2]>l[end] \n        return false\n    end\n    \n    if\
    \ l[1]<l[2] \n        return true\n    end\n    \n", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    end\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] >\
    \ l[2] \n        return false\n    end\n    \n    if l[1] > l[2] \n        return\
    \ true\n    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.4>",
  "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    \n    l = sort(l)\n    if l[1] < l[end] \n        return true\n    \n   \
    \ return false\nend", "    l = sort(l)\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n    l = l[1..end(l)]\n\
    \    l = l[1..end", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> 1]\n    return l == l\nend", "    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    i = 2\n    while i < length(l)\n\
    \        if l[i-1] > l[i]\n            return false\n        end\n        i +=\
    \ 1\n    return true\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n\
    \    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l =\
    \ l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n   \
    \ l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]", "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .>\
    \ 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l\
    \ .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n    l =\
    \ l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n   \
    \ l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]\n    l = l[l .< end]\n\
    \    l = l[l .> 0]\n    l = l[l .< end]\n    l = l[l .> 0]", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    end\n    \n    l = sort(l)\n\
    \    \n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n   \
    \     return false\n    elseif l[1] == l[2] \n        return true\n    end\n \
    \   \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif\
    \ l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n        return\
    \ true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return\
    \ true\n    elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2]\
    \ \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2]\
    \ \n        return true\n    elseif l[1] > l[2] \n        return false\n    elseif\
    \ l[1] == l[2] \n        return true\n    end\n    \n    l = sort(l)\n    \n \
    \   if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n        return\
    \ false\n    elseif l[1] == l[2] \n        return true\n    end\n    \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2]\
    \ \n        return false\n    elseif l[1] == l[2] \n        return true\n    end\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif\
    \ l[1] > l[2] \n        return false\n    elseif l[1] == l[2] \n        return\
    \ true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return\
    \ true\n    elseif l[1] > l[2] \n        return false\n    elseif l[1] == l[2]\
    \ \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2]\
    \ \n        return true\n    elseif l[1] > l[2] \n        return false\n    elseif\
    \ l[1] == l[2] \n        return true\n    end\n    \n    l = sort(l)\n    \n \
    \   if l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n        return\
    \ false\n    elseif l[1] == l[2] \n        return true\n    end\n    \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2]\
    \ \n        return false\n    elseif l[1] == l[2] \n        return true\n    end\n\
    \    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    elseif\
    \ l[1] > l[2] \n        return ", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] <= l[i+1] for i in 2:length(l)-1)\n\
    end", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    \n    if l[1] <\
    \ l[0]\n        return false\n    \n    if l[1] > l[end]\n        return true\n\
    \    \n    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n        \
    \    return false\n        i += 1\n    end\n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1,\
    \ 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\
    \"", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    i = length(l) - 1\n    while i > 0 && l[i]\
    \ > l[i-1]\n        i = i - 1\n    return i == 0\nend", "    l = sort(l)\n   \
    \ i = findfirst(x -> x > 0, l)\n    j = findfirst(x -> x < 0, l)\n    k = findfirst(x\
    \ -> x == 0, l)\n    if i == j\n        return true\n    elseif i == k\n     \
    \   return false\n    elseif j == k\n        return true\n    elseif j > i\n \
    \       return true\n    else\n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(l) == 0 \n        return true\n    \n \
    \   l = sort(l)\n    if l[1] < l[2] \n        return true\n    \n    l = sort(l)\n\
    \    if l[1] > l[2] \n        return true\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>", "    if length(l) == 0 \n        return true\n   \
    \ \n    if l[1] < l[0] \n        return false\n    \n    i = 2\n    while i <\
    \ length(l) \n        if l[i] < l[i-1] \n            return false\n        i +=\
    \ 1\n    return true\nend", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .>\
    \ l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l =\
    \ l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l =\
    \ l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    if\
    \ l[1] < l[2] || l[1] > l[3]\n        return false\n    elseif l[2] < l[1] ||\
    \ l[2] > l[3]\n        return true\n    else\n        return false\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    if l[1] < l[0]\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of numbers and returns\
    \ the sum of the numbers. If the list is empty, return 0.", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        true\n    elseif length(l) == 1 \n        l ==\
    \ l[1]\n    else\n        l == sort(l)[1]\n    end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| a |>\nI wrote a package for Julia that does this for you:\nhttps://github.com/jrwlk/monotonic\n\
    <code>\nusing Monotonic", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    if l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif l[1] > l[2] \n        true\n    elseif l[2]\
    \ > l[1] \n        false\n    elseif l[1] < l[2] \n        true\n    elseif l[2]\
    \ < l[1] \n        false\n    elseif ", "    l = sort(l)\n    if l[1] < l[2] \n\
    \        true\n    elseif l[1] > l[2] \n        false\n    else\n        monotonic(l[2:end-1])\
    \ \n    end\nend", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    return all(l[1:end-1] == l[2:end])\nend", "    l = sort(l)\n    l = l[end-1:end]\n\
    \    if l[1] < l[2]\n        return true\n    elseif l[1] > l[2]\n        return\
    \ false\n    else\n        return l[1] < l[2]\n    end\nend", "    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[0]\n        return false\n\
    \    \n    if l[1] > l[end]\n        return true\n    \n    i = 2\n    \n    while\
    \ i < length(l) \n        if l[i] < l[i-1]\n            return false\n       \
    \ \n        if l[i] > l[end]\n            return true\n        \n        i = i\
    \ + 1\n    end\n    \n    return true\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) < 2\n\
    \        return true\n    \n    if l[1] < l[2]\n        return true\n    \n  \
    \  if l[1] > l[2]\n        return false\n    \n    i = 2\n    while i < length(l)\
    \ \n        if l[i] < l[i-1]\n            return true\n        \n        if l[i]\
    \ > l[i-1]\n            return false\n        \n        i = i + 1\n    end\n \
    \   return true\nend", "    l = sort(l)\n    i = 2\n    while i < length(l)\n\
    \        if l[i] > l[i-1]\n            return false\n        end\n        i +=\
    \ 1\n    return true\nend", "    if length(l) == 0 \n        return true\n   \
    \ \n    if l[1] < l[2] \n        return true\n    \n    if l[2] < l[1] \n    \
    \    return false\n    \n    i = 2\n    \n    while i < length(l) \n        if\
    \ l[i] < l[i-1] \n            return true\n        \n        if l[i] > l[i-1]\
    \ \n            return false\n        \n        i += 1\n    end\n    \n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements\
    \ are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    True\n    \"\"\"", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[2]\
    \ \n        return true\n    end\n    \n    if l[2] < l[1] \n        return false\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ return true\nend\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n  \
    \  if l[1] < l[2] \n        true\n    elseif l[1] > l[2] \n        false\n   \
    \ elseif l[1] == l[2] \n        if l[2] < l[3] \n            true\n        elseif\
    \ l[2] > l[3] \n            false\n        elseif l[2] == l[3] \n            if\
    \ l[3] < l[4] \n                true\n            elseif l[3] > l[4] \n      \
    \          false\n            elseif l[3] == l[4] \n                if l[4] <\
    \ l[5] \n                    true\n                elseif l[4] > l[5] \n     \
    \               false\n                elseif l[4] == l[5] \n                \
    \    if l[5] < l[6] \n                        true\n                    elseif\
    \ l[5] > l[6] \n                        false\n                    elseif l[5]\
    \ == l[6] \n                        if l[6] < l[7] \n                        \
    \    true\n                        elseif l[6] > l[7] \n                     \
    \       false\n                        elseif l[6] == l[7] \n                \
    \            if l[7] < l[8] \n                                true\n         \
    \                   elseif l[7] > l[8] \n                                false\n\
    \                            elseif l[7] == l[8] \n                          \
    \      if l[8] < l[9] \n                                    true\n           \
    \                     elseif l[8] > l[9] \n                                  \
    \  false\n                                elseif l[8] == l[9] \n             \
    \                       if l[9] < l[10] \n                                   \
    \     true\n                                    elseif l[9] > l[10] \n       \
    \                                 false\n                                    elseif\
    \ l[9] == l[10] \n                                        if l[10] < l[11] \n\
    \                                            true\n                          \
    \              elseif l[10] > l[11] \n                                       \
    \     false\n                                        elseif l[10] == l[11] \n\
    \                                            if l[11] < l[12] \n             \
    \                                   true\n                                   \
    \         elseif l[11] > l[12] \n                                            \
    \    false\n                                            elseif l[11] == l[12]\
    \ \n                                                if l[12] < l[13] \n      \
    \                                              true\n                        \
    \                        elseif l[12] > l[13] \n                             \
    \                       false\n                                              \
    \  elseif l[12] == l[13] \n                                                  \
    \  if l[13] < l[14] \n                                                       \
    \ true\n                                                    elseif l[13] > l[14]\
    \ \n                                                        false\n          \
    \                                          elseif l[13] == l[14] \n          \
    \                                              if l[14] < l[15] \n           \
    \                                                 true\n                     \
    \                                   elseif l[14] > l[15] \n                  \
    \                                          false\n                           \
    \                             elseif l[14] == l[15] \n                       \
    \                                     if l[15] < l[16] \n                    \
    \                                            true\n", "    l = sort(l)\n    l\
    \ = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> ", "    if length(l) == 0 \n\
    \        return true\n    end\n    \n    if l[1] < l[2] \n        return false\n\
    \    end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false\n    end\n    \n    if l[1] < l[2] \n        return true\n \
    \   end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n    if\
    \ l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n    \
    \    return false", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) < 2 \n        return true\n\
    \    end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3] \n \
    \       return false\n    end\n    \n    if l[1] < l[4] \n        return true\n\
    \    end\n    \n    if l[1] > l[4] \n        return false\n    end\n    \n   \
    \ if l[1] < l[5] \n        return true\n    end\n    \n    if l[1] > l[5] \n \
    \       return false\n    end\n    \n    if l[1] < l[6] \n        return true\n\
    \    end\n    \n    if l[1] > l[6] \n        return false\n    end\n    \n   \
    \ if l[1] < l[7] \n        return true\n    end\n    \n    if l[1] > l[7] \n \
    \       return false\n    end\n    \n    if l[1] < l[8] \n        return true\n\
    \    end\n    \n    if l[1] > l[8] \n        return false\n    end\n    \n   \
    \ if l[1] < l[9] \n        return true\n    end\n    \n    if l[1] > l[9] \n \
    \       return false\n    end\n    \n    if l[1] < l[10] \n        return true\n\
    \    end\n    \n    if l[1] > l[10] \n        return false\n    end\n    \n  \
    \  if l[1] < l[11] \n        return true\n    end\n    \n    if l[1] > l[11] \n\
    \        return false\n    end\n    \n    if l[1] < l[12] \n        return true\n\
    \    end\n    \n    if l[1] > l[12] \n        return false\n    end\n    \n  \
    \  if l[1] < l[13] \n        return true\n    end\n    \n    if l[1] > l[13] \n\
    \        return false\n    end\n    \n    if l[1] < l[14] \n        return true\n\
    \    end\n    \n    if l[1] > l[14] \n        return false\n    end\n    \n  \
    \  if l[1] < l[15] \n        return true\n    end\n    \n    if l[1] > l[15] \n\
    \        return false\n    end\n    \n    if l[1] < l[16] \n        return true\n\
    \    end\n    \n    if l[1] > l[16] \n        return false\n    end\n    \n  \
    \  if l[1] < l[17] \n        return true\n    end\n    \n    if l[1] > l[17] \n\
    \        return false\n    end\n    \n    if l[1] < ", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    if length(l) == 0\
    \ \n        return true\n    \n    l = sort(l)\n    if l[1] < l[2] \n        return\
    \ true\n    \n    return false\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    return all(l[1:end-1] < l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n\
    \    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4,\
    \ 1, 0, -10])\n    True\n    \"\"\"", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    i\
    \ = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n            return false\n\
    \        i += 1\n    return true\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] <= l[i+1] for i in 1:end-1)\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[1:end-1]\n\
    \    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1] .>\
    \ l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:",
  "    if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[2]\
    \ \n        return true\n    end\n    \n    if l[1] > l[2] \n        return false\n\
    \    end\n    \n    if l[1] > l[2] \n        return true\n    end\n    \n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>", "    if length(l) == 0 \n \
    \       return true\n    \n    if l[1] < l[0] \n        return false\n    \n \
    \   if l[1] > l[end(l)]\n        return true\n    \n    i = 2\n    while i < length(l)\n\
    \        if l[i] > l[i-1]\n            return false\n        i += 1\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is\
    \ list elements are monotonically increasing or decreasing.\n    >>> monotonic([1,\
    \ 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>>\
    \ monotonic([4, 1, 0, -10])\n    True\n    \"\"\"", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    if l[1] < l[2] \n        return true\n    elseif l[1] > l[2]\
    \ \n        return false\n    elseif l[1]==l[2] \n        return l[1]==l[2]\n\
    \    elseif l[1] < l[2] \n        return true\n    elseif l[1] > l[2] \n     \
    \   return false\n    end\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work if `l` is an empty list. `l[end]` throws an error.\n<|/ c |>\n<| c |>\n\
    I fixed the code so it doesn't throw an error when `l` is an empty list.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for `l = [1, 2]`\n<|/ c |>\n<| c |>\nI fixed\
    \ the code so it doesn't throw an error when `l` is an empty list.\n<|/ c |>\n\
    <| a tags=julia,sorting |>\nThe answer by is correct, but I thought I'd add my\
    \ own answer because I wanted to show a more Julian way of doing this.\n<code>\n\
    julia> function monotonic(l)\n           if length(l)==0\n               return\
    \ true\n           elseif length(l)==1\n               return l[1]==l[2]\n   \
    \        elseif l[1]<l[2]\n               return true\n           elseif l[1]>l[2]\n\
    \               return false\n           elseif l[1]==l[2]\n               return\
    \ true\n           else\n               return l[1]<l[2]\n           end\n   \
    \    end\nmonotonic (generic function with 1 method)", "    if length(l) == 0\
    \ \n        return true\n    \n    if l[1] < l[2] \n        return true\n    \n\
    \    if l[2] < l[1] \n        return false\n    \n    if l[1] > l[2] \n      \
    \  return false\n    \n    return monotonic(l[2:end-1]) \nend", "    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] < l[2] \n        return true\n    end\n  \
    \  \n    return false\nend", "    l = sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] < l[i]\n\
    \            return false\n        end\n        i += 1\n    return true\nend",
  "    if length(l) == 0 \n        return true\n    \n    if l[1] < l[2] \n      \
    \  return true\n    \n    if l[1] > l[2] \n        return false\n    \n    if\
    \ l[1] < l[3] \n        return true\n    \n    if l[1] > l[3] \n        return\
    \ false\n    \n    if l[2] < l[3] \n        return true\n    \n    if l[2] > l[3]\
    \ \n        return false\n    \n    if l[3] < l[4] \n        return true\n   \
    \ \n    if l[3] > l[4] \n        return false\n    \n    if l[4] < l[5] \n   \
    \     return true\n    \n    if l[4] > l[5] \n        return false\n    \n   \
    \ if l[5] < l[6] \n        return true\n    \n    if l[5] > l[6] \n        return\
    \ false\n    \n    if l[6] < l[7] \n        return true\n    \n    if l[6] > l[7]\
    \ \n        return false\n    \n    if l[7] < l[8] \n        return true\n   \
    \ \n    if l[7] > l[8] \n        return false\n    \n    if l[8] < l[9] \n   \
    \     return true\n    \n    if l[8] > l[9] \n        return false\n    \n   \
    \ if l[9] < l[10] \n        return true\n    \n    if l[9] > l[10] \n        return\
    \ false\n    \n    if l[10] < l[11] \n        return true\n    \n    if l[10]\
    \ > l[11] \n        return false\n    \n    if l[11] < l[12] \n        return\
    \ true\n    \n    if l[11] > l[12] \n        return false\n    \n    if l[12]\
    \ < l[13] \n        return true\n    \n    if l[12] > l[13] \n        return false\n\
    \    \n    if l[13] < l[14] \n        return true\n    \n    if l[13] > l[14]\
    \ \n        return false\n    \n    if l[14] < l[15] \n        return true\n \
    \   \n    if l[14] > l[15] \n        return false\n    \n    if l[15] < l[16]\
    \ \n        return true\n    \n    if l[15] > l[16] \n        return false\n \
    \   \n    if l[16] < l[17] \n        return true\n    \n    if l[16] > l[17] \n\
    \        return false\n    \n    if l[17] < l[18] \n        return true\n    \n\
    \    if l[17] > l[18] \n        return false\n    \n    if l[18] < l[19] \n  \
    \      return true\n", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1::-1]\n    l =\
    \ l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l", "    l = sort(l)\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ all(l[i] > l[i+1] for i in 1:length(l)-1)\nend", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .>\
    \ l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[1:end-1]\n    l\
    \ = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> ", "    if length(l) == 0 \n        return true\n    \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    \n    if l[1] >\
    \ l[2] \n        return false\n    \n    if l[1] == l[2] \n        return true\n\
    \    \n    return false\nend", "    if length(l) < 2 \n        return true\n \
    \   end\n    \n    l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    return false\nend\n\
    </cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n \
    \   return all(l[i] <= l[i+1] for i in 1:length(l)-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"", "    if\
    \ length(l) == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n\
    \    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n\
    \        return false\n    end\n    \n    if l[1] < l[3] \n        return true\n\
    \    end\n    \n    if l[1] > l[3] \n        return false\n    end\n    \n   \
    \ if l[1] < l[4] \n        return true\n    end\n    \n    if l[1] > l[4] \n \
    \       return false\n    end\n    \n    if l[1] < l[5] \n        return true\n\
    \    end\n    \n    if l[1] > l[5] \n        return false\n    end\n    \n   \
    \ if l[1] < l[6] \n        return true\n    end\n    \n    if l[1] > l[6] \n \
    \       return false\n    end\n    \n    if l[1] < l[7] \n        return true\n\
    \    end\n    \n    if l[1] > l[7] \n        return false\n    end\n    \n   \
    \ if l[1] < l[8] \n        return true\n    end\n    \n    if l[1] > l[8] \n \
    \       return false\n    end\n    \n    if l[1] < l[9] \n        return true\n\
    \    end\n    \n    if l[1] > l[9] \n        return false\n    end\n    \n   \
    \ if l[1] < l[10] \n        return true\n    end\n    \n    if l[1] > l[10] \n\
    \        return false\n    end\n    \n    if l[1] < l[11] \n        return true\n\
    \    end\n    \n    if l[1] > l[11] \n        return false\n    end\n    \n  \
    \  if l[1] < l[12] \n        return true\n    end\n    \n    if l[1] > l[12] \n\
    \        return false\n    end\n    \n    if l[1] < l[13] \n        return true\n\
    \    end\n    \n    if l[1] > l[13] \n        return false\n    end\n    \n  \
    \  if l[1] < l[14] \n        return true\n    end\n    \n    if l[1] > l[14] \n\
    \        return false\n    end\n    \n    if l[1] < l[15] \n        return true\n\
    \    end\n    \n    if l[1] > l[15] \n        return false\n    end\n    \n  \
    \  if l[1] < l[16] \n        return true\n    end\n    \n    if l[1] > l[16] \n\
    \        return false\n    end\n    \n    if l[1] < l[17] \n        return true\n\
    \    end\n    \n    if l[1] > l[17] \n        return false\n    end\n    \n  \
    \  if l[1] < ", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n \
    \   l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[2] \n        return false\n    end\n    \n   \
    \ if l[1] > l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    return false\nend\n</cell>\n<code language=julia-1.5>", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] > l[i+1] for i in 1:length(l))\n\
    end", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    return all(l[1:end-1]\
    \ < l[2:end])\nend", "    l = sort(l)\n    l = l[1..end-1]\n    return all(l[i]\
    \ <= l[i+1] for i in 1:end-1)\nend\n</cell>\n<code language=julia-1.5>", "   \
    \ if length(l) == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n\
    \        return true\n    end\n    \n    if l[2] < l[3] \n        return true\n\
    \    end\n    \n    if l[3] < l[4] \n        return true\n    end\n    \n    if\
    \ l[4] < l[1] \n        return true\n    end\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    return all(l[i] <= l[i+1] for i in 2:length(l)-1)\n\
    end\n</cell>\n<code language=julia-1.5>", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    return all(l[1:end-1] == l[2:end])\nend", "    l = sort(l)\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> ", "    l = sort(l)\n    l =\
    \ l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l =\
    \ l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[1]]\n    l = l[", "    if length(l) == 0 \n        return true\n\
    \    end\n    \n    if l[1] < l[0] \n        return false\n    end\n    \n   \
    \ if l[1] > l[end] \n        return true\n    end\n    \n    if l[end] < l[1]\
    \ \n        return false\n    end\n    \n    if l[end] > l[end-1] \n        return\
    \ true\n    end\n    \n    if l[end-1] < l[end-2] \n        return false\n   \
    \ end\n    \n    if l[end-1] > l[end-3] \n        return true\n    end\n    \n\
    \    if l[end-2] < l[end-3] \n        return false\n    end\n    \n    if l[end-2]\
    \ > l[end-4] \n        return true\n    end\n    \n    if l[end-3] < l[end-4]\
    \ \n        return false\n    end\n    \n    if l[end-3] > l[end-5] \n       \
    \ return true\n    end\n    \n    if l[end-4] < l[end-5] \n        return false\n\
    \    end\n    \n    if l[end-4] > l[end-6] \n        return true\n    end\n  \
    \  \n    if l[end-5] < l[end-6] \n        return false\n    end\n    \n    if\
    \ l[end-5] > l[end-7] \n        return true\n    end\n    \n    if l[end-6] <\
    \ l[end-7] \n        return false\n    end\n    \n    if l[end-6] > l[end-8] \n\
    \        return true\n    end\n    \n    if l[end-7] < l[end-8] \n        return\
    \ false\n    end\n    \n    if l[end-7] > l[end-9] \n        return true\n   \
    \ end\n    \n    if l[end-8] < l[end-9] \n        return false\n    end\n    \n\
    \    if l[end-8] > l[end-10] \n        return true\n    end\n    \n    if l[end-9]\
    \ < l[end-10] \n        return false\n    end\n    \n    if l[end-9] > l[end-11]\
    \ \n        return true\n    end\n    \n    if l[end-10] < l[end-11] \n      \
    \  return false\n    end\n    \n    if l[end-10] > l[end-12] \n        return\
    \ true\n    end\n    \n    if l[end-11] < l[end-12] \n        return false\n \
    \   end\n    \n    if l[end-11] > l[end-13] \n        return true\n    end\n \
    \   \n    if l[end-12] < l[end-13] \n        return false\n    end\n    ", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ l = sort(l)\n    \n    if l[1] < l[2] \n        return true\n    end\n    \n\
    \    if l[1] > l[2] \n        return false\n    end\n    \n    if l[1] == l[2]\
    \ \n        return true\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    return false\nend", "    if length(l) == 0 \n        return\
    \ true\n    end\n    \n    if l[1] < l[0]\n        return true\n    end\n    \n\
    \    if l[1] > l[end]\n        return true\n    end\n    \n    if l[1] < l[end-1]\n\
    \        return false\n    end\n    \n    if l[end] > l[end-1]\n        return\
    \ false\n    end\n    \n    return monotonic(tail(l))\nend", "    l = sort(l)\n\
    \    l = l[1..end-1]\n    if l[1] < l[2]\n        true\n    elseif l[1] > l[2]\n\
    \        false\n    else\n        monotonic(l[1..end-1])\n    end\nend\n</code>\n\
    <|/ a tags=julia,sorting |>\n<| a tags=julia,sorting |>\nThe function below is\
    \ based on a previous answer by John Kennedy and is based on a previous answer\
    \ by John Kennedy but is more efficient and more robust in some cases. \n<code>",
  "    l = sort(l)\n    l = l[1..end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l =\
    \ l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l =\
    \ l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[1..end(l)]\n    l = l[l .> l[1]]\n    l = l[l .< l[end(l)]]\n    return\
    \ l == l\nend\n</cell>\n<code language=julia-1.5>\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10])\
    \ == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert @time monotonic([4,\
    \ 1, 0, -10]) == true\n@assert @time monotonic([4, 1, 0, -10]) == true\n@assert\
    \ @time monotonic([4, ", "    if length(l) == 0 \n        return true\n    end\n\
    \    \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] >\
    \ l[2] \n        return false\n    end\n    \n    if l[1] < l[3] \n        return\
    \ true\n    end\n    \n    if l[1] > l[3] \n        return false\n    end\n  \
    \  \n    if l[2] < l[3] \n        return true\n    end\n    \n    if l[2] > l[3]\
    \ \n        return false\n    end\n    \n    if l[3] < l[4] \n        return true\n\
    \    end\n    \n    if l[3] > l[4] \n        return false\n    end\n    \n   \
    \ if l[4] < l[5] \n        return true\n    end\n    \n    if l[4] > l[5] \n \
    \       return false\n    end\n    \n    if l[5] < l[6] \n        return true\n\
    \    end\n    \n    if l[5] > l[6] \n        return false\n    end\n    \n   \
    \ if l[6] < l[7] \n        return true\n    end\n    \n    if l[6] > l[7] \n \
    \       return false\n    end\n    \n    if l[7] < l[8] \n        return true\n\
    \    end\n    \n    if l[7] > l[8] \n        return false\n    end\n    \n   \
    \ if l[8] < l[9] \n        return true\n    end\n    \n    if l[8] > l[9] \n \
    \       return false\n    end\n    \n    if l[9] < l[10] \n        return true\n\
    \    end\n    \n    if l[9] > l[10] \n        return false\n    end\n    \n  \
    \  if l[10] < l[11] \n        return true\n    end\n    \n    if l[10] > l[11]\
    \ \n        return false\n    end\n    \n    if l[11] < l[12] \n        return\
    \ true\n    end\n    \n    if l[11] > l[12] \n        return false\n    end\n\
    \    \n    if l[12] < l[13] \n        return true\n    end\n    \n    if l[12]\
    \ > l[13] \n        return false\n    end\n    \n    if l[13] < l[14] \n     \
    \   return true\n    end\n    \n    if l[13] > l[14] \n        return false\n\
    \    end\n    \n    if l[14] < l[15] \n        return true\n    end\n    \n  \
    \  if l[14] > l[15] \n        return false\n    end\n    \n    if l[15] < l[16]\
    \ \n        return true\n    end\n    \n    if l[15] > l[16] \n        return\
    \ false\n    end\n    \n    if l[16] < l[", "    l = sort(l)\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    i = 2\n    while i < length(l)\n        if\
    \ l[i-1] > l[i]\n            return false\n        end\n        i += 1\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.3>", "    if length(l) == 0 \n  \
    \      true\n    else\n        if l[1] < l[2] \n            true\n        else\n\
    \            if l[2] < l[1] \n                true\n            else\n       \
    \         if l[1] < l[3] \n                    true\n                else\n  \
    \                  if l[3] < l[1] \n                        true\n           \
    \         else\n                        false\n            end\n        end\n\
    \    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis does not provide an\
    \ answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/17878294)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to know if\
    \ there is a function that can tell if a list of numbers is monotonically increasing\
    \ or decreasing. He also wants to know if there is a function that can tell if\
    \ a list of numbers is monotonically increasing or decreasing. He also wants to\
    \ know if there is a function that can tell if a list of numbers is monotonically\
    \ increasing or decreasing. He also wants to know if there is a function that\
    \ can tell if a list of numbers is monotonically increasing or decreasing.\n<|/\
    \ c |>\n<| c |>\nI believe this does answer the question. He wants to know if\
    \ there is a function that can tell if a list of numbers is monotonically increasing\
    \ or decreasing. He also wants to know if there is a function that can tell if\
    \ a list of numbers is monotonically increasing or decreasing. He also wants to\
    \ know if there is a function that can tell if a list of numbers is monotonically\
    \ increasing or decreasing. He also wants to know if there is a function that\
    \ can tell if a list of numbers is monotonically increasing or decreasing.\n<|/\
    \ c |>\n<| c |>\nI believe this does answer the question. He wants to know if\
    \ there is a function that can tell if a list of numbers is monotonically increasing\
    \ or decreasing. He also wants to know if there is a function that can tell if\
    \ a list of numbers is monotonically increasing or decreasing. He also wants to\
    \ know if there is a function that can tell if a list of numbers is monotonically\
    \ increasing or decreasing. He also wants to know if there is a function that\
    \ can tell if a list of numbers is monotonically increasing or decreasing.\n<|/\
    \ c |>\n<| c |>\nI believe this does answer the question. He wants to know if\
    \ there is a function that can tell if a list of numbers is monoton", "    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    if length(l) == 0 \n        return true\n    end\n    \n   \
    \ if l[1] < l[0]\n        return false\n    end\n    \n    if l[1] > l[end]\n\
    \        return true\n    end\n    \n    i = 2\n    \n    while i < length(l)\
    \ \n        if l[i] < l[i-1] \n            return false\n        end\n       \
    \ \n        if l[i] > l[end]\n            return true\n        end\n        \n\
    \        i += 1\n    end\n    \n    return true\nend\n</cell>\n<text>\nTest your\
    \ monotonic function with some vectors.", "    l = sort(l)\n    i = 2\n    while\
    \ i < length(l)\n        if l[i-1] > l[i]\n            return false\n        end\n\
    \        i += 1\n    return true\nend\n</cell>\n<code language=julia-1.5>", " \
    \   l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l", "    l = sort(l)\n    l = l[end:-1:1]\n    l\
    \ = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

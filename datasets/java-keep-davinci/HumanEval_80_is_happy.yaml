name: HumanEval_80_is_happy
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a string s.\n    // Your task is to check\
  \ if the string is happy or not.\n    // A string is happy if its length is at least\
  \ 3 and every 3 consecutive letters are distinct\n    // For example:\n    // is_happy(a)\
  \ => False\n    // is_happy(aa) => False\n    // is_happy(abcd) => True\n    //\
  \ is_happy(aabb) => False\n    // is_happy(adb) => True\n    // is_happy(xyy) =>\
  \ False\n    public static boolean isHappy(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
  a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
  abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
  adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
  iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n    }\n\
  \n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

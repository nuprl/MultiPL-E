name: HumanEval_18_how_many_times
language: python
prompt: "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find\
  \ how many times a given substring can be found in the original string. Count overlaping\
  \ cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa',\
  \ 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('', 'x') == 0\n    assert candidate('xyxyxyx',\
  \ 'x') == 4\n    assert candidate('cacacacac', 'cac') == 4\n    assert candidate('john\
  \ doe', 'john') == 1\n\ndef test_check():\n    check(how_many_times)\n\ntest_check()\n"
completions: ["    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i +\
    \ len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    if not string\
    \ or not substring:\n        return 0\n    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    count = 0\n    for i in range(len(string)):\n   \
    \     if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    count = 0\n    for i in range(len(string)):\n   \
    \     if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\
    \n", "    if not string or not substring:\n        return 0\n    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(substring, string))\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum(1 for _ in re.finditer(rf'(?={substring})', string))\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(f'(?={substring})', string))\n\n", "    return sum(1 for\
    \ _ in re.finditer(substring, string))\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(f'(?={substring})', string))\n\n", "    count = 0\n    for i in\
    \ range(len(string)):\n        if string[i:i + len(substring)] == substring:\n\
    \            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    if not string or not substring:\n        return 0\n    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    if not string or not substring:\n        return 0\n    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return len([i for i in\
    \ range(len(string)) if string.startswith(substring, i)])\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    if not string or not substring:\n\
    \        return 0\n    return sum(1 for _ in re.finditer(rf'(?={substring})',\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    if not substring:\n        return 0\n    return len([i for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    if not\
    \ string or not substring:\n        return 0\n    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i +\
    \ len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    if not string or not substring:\n\
    \        return 0\n    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    count = 0\n    for i in\
    \ range(len(string)):\n        if string[i:i + len(substring)] == substring:\n\
    \            count += 1\n    return count\n\n", "    return sum(1 for _ in re.finditer(substring,\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n", "    return\
    \ sum(1 for _ in re.finditer(substring, string))\n\n", "    return len([i for\
    \ i in range(len(string)) if string.startswith(substring, i)])\n\n", "    if not\
    \ string or not substring:\n        return 0\n    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(substring, string))\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    if substring == '':\n        return 0\n    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ return sum(1 for _ in re.finditer(substring, string))\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    return sum(1 for _ in re.finditer(rf'(?={substring})',\
    \ string))\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:i + len(substring)] ==\
    \ substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(f'(?={substring})', string))\n\n", "    if not string or\
    \ not substring:\n        return 0\n    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(substring, string))\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    count = 0\n    for i in range(len(string)):\n   \
    \     if string[i:].startswith(substring):\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum(1 for _ in re.finditer(rf'(?={substring})', string))\n\n", "   \
    \ count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(rf'(?=({substring}))', string))\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i +\
    \ len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    if not string or not substring:\n        return 0\n    return len([i for i\
    \ in range(len(string)) if string.startswith(substring, i)])\n\n", "    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    if not string or not substring:\n        return 0\n    return len([i for i\
    \ in range(len(string)) if string.startswith(substring, i)])\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    count = 0\n\
    \    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return sum(1 for _ in re.finditer(substring,\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:].startswith(substring):\n            count += 1\n    return count\n\
    \n", "    return sum(1 for _ in re.finditer(rf'(?={substring})', string))\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})',\
    \ string))\n\n", "    if not substring:\n        return 0\n    if not string:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    if not string or not substring:\n        return 0\n    return len([i for i\
    \ in range(len(string)) if string.startswith(substring, i)])\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return sum(1\
    \ for _ in re.finditer(rf'(?={substring})', string))\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    if not string or not substring:\n\
    \        return 0\n    return string.count(substring)\n\n", "    if not string\
    \ or not substring:\n        return 0\n    return sum(1 for _ in re.finditer(substring,\
    \ string))\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ sum(1 for _ in re.finditer(substring, string))\n\n", "    return sum(1 for _\
    \ in re.finditer(f'(?={substring})', string))\n\n", "    return len([i for i in\
    \ range(len(string)) if string.startswith(substring, i)])\n\n", "    return sum(1\
    \ for i in range(len(string)) if string.startswith(substring, i))\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    if not string or not substring:\n\
    \        return 0\n    return sum(1 for _ in re.finditer(substring, string))\n\
    \n", "    return sum(1 for _ in re.finditer(rf'(?={substring})', string))\n\n",
  "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    if not string\
    \ or not substring:\n        return 0\n    return sum(string[i:].startswith(substring)\
    \ for i in range(len(string)))\n\n", "    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    if not string or not substring:\n        return 0\n\
    \    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    count = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not substring:\n        return 0\n    count = 0\n    for i in range(len(string)):\n\
    \        if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    return sum(1 for _ in re.finditer(rf'(?={substring})',\
    \ string))\n\n", "    return sum(1 for _ in re.finditer(substring, string))\n\n",
  "    return sum(1 for _ in re.finditer(rf'(?={substring})', string))\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(substring, string))\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    if len(substring)\
    \ == 0:\n        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\
    \n", "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    return\
    \ sum(1 for _ in re.finditer(substring, string))\n\n", "    if len(substring)\
    \ == 0:\n        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if len(substring) == 0:\n        return 0\n    if len(string)\
    \ == 0:\n        return 0\n    return len(string.split(substring)) - 1\n\n", " \
    \   return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n", "    return sum(1\
    \ for _ in re.finditer(rf'(?={substring})', string))\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(f'(?={substring})', string))\n\n", "    if not string or not substring:\n\
    \        return 0\n    return sum(1 for _ in re.finditer(substring, string))\n\
    \n", "    return sum(1 for i in range(len(string)) if string.startswith(substring,\
    \ i))\n\n", "    count = 0\n    for i in range(len(string)):\n        if string[i:i\
    \ + len(substring)] == substring:\n            count += 1\n    return count\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    if not string or not substring:\n        return 0\n    return sum(1\
    \ for _ in re.finditer(substring, string))\n\n", "    return sum(1 for _ in re.finditer(substring,\
    \ string))\n\n", "    count = 0\n    for i in range(len(string)):\n        if\
    \ string[i:i + len(substring)] == substring:\n            count += 1\n    return\
    \ count\n\n", "    if len(substring) == 0:\n        return 0\n    if len(string)\
    \ == 0:\n        return 0\n    count = 0\n    for i in range(len(string)):\n \
    \       if string[i:i + len(substring)] == substring:\n            count += 1\n\
    \    return count\n\n", "    if not string or not substring:\n        return 0\n\
    \    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n", "  \
    \  count = 0\n    for i in range(len(string)):\n        if string[i:].startswith(substring):\n\
    \            count += 1\n    return count\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum(1 for _ in re.finditer(substring, string))\n\n", "    return\
    \ sum(1 for i in range(len(string)) if string.startswith(substring, i))\n\n",
  "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n", "    count\
    \ = 0\n    for i in range(len(string)):\n        if string[i:i + len(substring)]\
    \ == substring:\n            count += 1\n    return count\n\n", "    return len([i\
    \ for i in range(len(string)) if string.startswith(substring, i)])\n\n", "   \
    \ if not string or not substring:\n        return 0\n    return sum(1 for _ in\
    \ re.finditer(f'(?={substring})', string))\n\n", "    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    return sum(1 for _ in re.finditer(substring,\
    \ string))\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ len([i for i in range(len(string)) if string.startswith(substring, i)])\n\n",
  "    return len([i for i in range(len(string)) if string.startswith(substring, i)])\n\
    \n", "    return sum(1 for _ in re.finditer(f'(?={substring})', string))\n\n",
  "    if len(substring) == 0:\n        return 0\n    return len([i for i in range(len(string))\
    \ if string.startswith(substring, i)])\n\n", "    if not string or not substring:\n\
    \        return 0\n    return len([i for i in range(len(string)) if string.startswith(substring,\
    \ i)])\n\n", "    if not string or not substring:\n        return 0\n    return\
    \ sum(1 for _ in re.finditer(substring, string))\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

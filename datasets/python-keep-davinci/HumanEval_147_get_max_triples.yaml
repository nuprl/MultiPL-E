name: HumanEval_147_get_max_triples
language: python
prompt: "def get_max_triples(n: int) -> int:\n    \"\"\"\n    You are given a positive\
  \ integer n. You have to create an integer array a of length n.\n        For each\
  \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the\
  \ number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j]\
  \ + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output:\
  \ 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid\
  \ triple is (1, 7, 13).\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5) == 1\n    assert candidate(6)\
  \ == 4\n    assert candidate(10) == 36\n    assert candidate(100) == 53361\n\ndef\
  \ test_check():\n    check(get_max_triples)\n\ntest_check()\n"
completions: ["    pass\n\n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k]\
    \ = i * i - i + 1 + j * j - j + 1 + k * k - k + 1\n    # a[i] + a[j] + a[k] =\
    \ (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i +\
    \ j + k) * (i + j + k - 1) + 2\n    # a[i] + a[j] + a[k] = (i + j + k) * (i +\
    \ j + k - 1) + 2\n    # (i + j + k) * (i + j + k - 1) % 3 == 0\n    # (i + j +\
    \ k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i\
    \ + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n\
    \    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3\
    \ == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j +\
    \ k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i\
    \ + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n\
    \    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3\
    \ == 0\n    # (i + j + k) % 3 == 0\n    # (i + j + k) % 3 == 0\n    # (i + j",
  "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    return sum(1 for i in range(n) for\
    \ j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n \
    \   return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j\
    \ + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for\
    \ i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j in range(i\
    \ + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n",
  "    return n * (n - 1) * (n - 2) // 6\n\n", "    # return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n    return sum(1 for i in range(1, n)\
    \ for j in range(i + 1, n) if (i * i - i + 1 + j * j - j + 1) % 3 == 0)\n\n",
  "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    return sum(1 for i in range(1, n)\
    \ for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j +\
    \ 1 + k*k - k + 1) % 3 == 0)\n\n", "    # 1 \u2264 n \u2264 10^5\n    # 1 \u2264\
    \ a[i] \u2264 10^9\n    # 1 \u2264 a[i] + a[j] + a[k] \u2264 10^9\n    # 1 \u2264\
    \ i < j < k \u2264 n\n    # a[i] + a[j] + a[k] is a multiple of 3\n    # a[i]\
    \ + a[j] + a[k] = 3 * x, where x is an integer\n    # a[i] + a[j] = 3 * x - a[k]\n\
    \    # a[i] + a[j] = 3 * x - (i * i - i + 1)\n    # a[i] + a[j] = 3 * x - i *\
    \ i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3\
    \ * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i] +\
    \ a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n  \
    \  # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i +\
    \ i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x\
    \ - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j]\
    \ = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i - 1\n    # a[i]\
    \ + a[j] = 3 * x - i * i + i - 1\n    # a[i] + a[j] = 3 * x - i * i + i", "  \
    \  # return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n    return\
    \ sum(1 for i in range(1, n) for j in range(i + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n - 1) for j\
    \ in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i\
    \ + 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in\
    \ range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i\
    \ in range(n - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j\
    \ in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1)\
    \ for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    if n <\
    \ 3:\n        return 0\n    if n == 3:\n        return 1\n    if n == 4:\n   \
    \     return 2\n    if n == 5:\n        return 4\n    if n == 6:\n        return\
    \ 7\n    if n == 7:\n        return 11\n    if n == 8:\n        return 16\n  \
    \  if n == 9:\n        return 22\n    if n == 10:\n        return 29\n    if n\
    \ == 11:\n        return 37\n    if n == 12:\n        return 46\n    if n == 13:\n\
    \        return 56\n    if n == 14:\n        return 67\n    if n == 15:\n    \
    \    return 79\n    if n == 16:\n        return 92\n    if n == 17:\n        return\
    \ 106\n    if n == 18:\n        return 121\n    if n == 19:\n        return 137\n\
    \    if n == 20:\n        return 154\n    if n == 21:\n        return 172\n  \
    \  if n == 22:\n        return 191\n    if n == 23:\n        return 211\n    if\
    \ n == 24:\n        return 232\n    if n == 25:\n        return 254\n    if n\
    \ == 26:\n        return 277\n    if n == 27:\n        return 301\n    if n ==\
    \ 28:\n        return 326\n    if n == 29:\n        return 352\n    if n == 30:\n\
    \        return 379\n    if n == 31:\n        return 407\n    if n == 32:\n  \
    \      return 436\n    if n == 33:\n        return 466\n    if n == 34:\n    \
    \    return 497\n    if n == 35:\n        return 529\n    if n == 36:\n      \
    \  return 562\n    if n == 37:\n        return 596\n    if n == 38:\n        return\
    \ 631\n    if n == 39:\n        return 667\n    if n == 40:\n        return 704\n\
    \    if n == 41:\n        return 742\n    if n == 42:\n        return 781\n  \
    \  if n == 43:\n        return 821\n    if n == 44:\n        return 862\n    if\
    \ n == 45:\n        return 904\n    if n == 46:\n        return 947\n    if n",
  "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", " \
    \   return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum([1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0])\n\n", "    if n < 3:\n        return 0\n    elif n == 3:\n\
    \        return 1\n    else:\n        return (n - 3) * (n - 2) // 2\n\n", "  \
    \  return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n  \
    \  count = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n\
    \            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k])\
    \ % 3 == 0:\n                    count += 1\n    return count\n\n", "    # a[i]\
    \ = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 3\n    #   \
    \                  = 3 * (i * i - i + 1)\n    #                     = 3 * a[i]\n\
    \    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] = 3 * a[i] - a[j] - a[k]\n  \
    \  # a[i] = 3 * a[i] - (3 * a[i] - a[i] - a[j] - a[k])\n    # a[i] = 2 * a[i]\
    \ - a[j] - a[k]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k]\
    \ = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] =\
    \ 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3\
    \ * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 *\
    \ a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n\
    \    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n  \
    \  # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 *", "    a =\
    \ [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1)\
    \ for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return\
    \ sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n)\
    \ if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # return\
    \ sum(1 for i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if\
    \ (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n    return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1)\
    \ % 3 == 0)\n", "    if n < 3:\n        return 0\n    return (n - 2) * (n - 1)\
    \ * n // 6\n\n", "    return sum([1 for i in range(1, n) for j in range(i+1, n)\
    \ for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0])\n\
    \n", "    # Time: O(n)\n    # Space: O(n)\n    # a[i] = i * i - i + 1\n    # a[i]\
    \ + a[j] + a[k] = i * i - i + 1 + j * j - j + 1 + k * k - k + 1\n    # a[i] +\
    \ a[j] + a[k] = i * i + j * j + k * k - i - j - k + 3\n    # a[i] + a[j] + a[k]\
    \ = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i\
    \ + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i\
    \ + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) +\
    \ 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    # a[i]\
    \ + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k]\
    \ = (i + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k)\
    \ * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k -\
    \ 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    #\
    \ a[i] + a[j] + a[k] = (i + j + k)", "    # return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    # and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1\n    # a[i] + a[j] + a[k] = i * i + j * j +\
    \ k * k - i - j - k + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k)\
    \ - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j\
    \ + k) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k)\
    \ + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n\
    \    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    #\
    \ a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i]\
    \ + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j]\
    \ + a[k] = (", "    return sum(1 for i in range(1, n) for j in range(i + 1, n)\
    \ for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return\
    \ sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j +\
    \ 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for\
    \ j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n         \
    \       if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n  \
    \  return count\n\n", "    if n < 3:\n        return 0\n    a = [i * i - i + 1\
    \ for i in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n     \
    \   for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n   \
    \             if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count +=\
    \ 1\n    return count\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 ==\
    \ 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n\
    \    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n         \
    \   for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0:\n                    count += 1\n    return count\n\n", "    a = [i * i -\
    \ i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n\
    \        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n\
    \                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count\
    \ += 1\n    return count\n\n", "    return sum(1 for i in range(1, n) for j in\
    \ range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 +\
    \ k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j\
    \ in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum([(n - i) * (n - i - 1) //\
    \ 2 for i in range(1, n) if (i * i - i + 1) % 3 == 0])\n\n", "    return sum(1\
    \ for i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1\
    \ for i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i\
    \ - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n\
    \        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n\
    \                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count\
    \ += 1\n    return count\n\n", "    return sum(1 for i in range(1, n - 1) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # a[i] = i * i - i + 1\n    # a[i]\
    \ + a[j] + a[k] = 3 * i * i - 3 * i + 1 + 3 * j * j - 3 * j + 1 + 3 * k * k -\
    \ 3 * k + 1\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i +\
    \ j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k) - 3 * (i\
    \ +", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for\
    \ i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k\
    \ in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n   \
    \                 count += 1\n    return count\n\n", "    return (n * (n - 1)\
    \ * (n - 2)) // 6\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return (n * (n - 1) * (n - 2)) // 6\n\n", "    return\
    \ n * (n - 1) * (n - 2) // 6\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    # print(a)\n    # count = 0\n    # for i in range(n - 2):\n   \
    \ #     for j in range(i + 1, n - 1):\n    #         for k in range(j + 1, n):\n\
    \    #             if (a[i] + a[j] + a[k]) % 3 == 0:\n    #                 count\
    \ += 1\n    # return count\n\n    # a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    # print(a)\n    # count = 0\n    # for i in range(n - 2):\n    #     for\
    \ j in range(i + 1, n - 1):\n    #         for k in range(j + 1, n):\n    #  \
    \           if (a[i] + a[j] + a[k]) % 3 == 0:\n    #                 count +=\
    \ 1\n    # return count\n\n    # a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    # print(a)\n    # count = 0\n    # for i in range(n - 2):\n    #     for\
    \ j in range(i + 1, n - 1):\n    #         for k in range(j + 1, n):\n    #  \
    \           if (a[i] + a[j] + a[k]) % 3 == 0:\n    #                 count +=\
    \ 1\n    # return count\n\n    # a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    # print(a)\n    # count = 0\n    # for i in range(n - 2):\n    #     for\
    \ j in range(i + 1, n - 1):\n    #         for k in range(j + 1, n):\n    #  \
    \           if (a[i] + a[j] + a[k]) % 3 == 0:\n    #                 count +=\
    \ 1\n    # return count\n\n    # a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    # print(a)\n    # count = 0\n    #", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i\
    \ + 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i\
    \ + 1 + 3 * j * j - 3 * j + 1 + 3 * k * k - 3 * k + 1\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k - i - j - k) + 3\n    # a[i] + a[j] + a[k] = 3\
    \ * (i * i + j * j + k * k - i - j - k + 1)\n    # a[i] + a[j] + a[k] = 3 * (i\
    \ * i + j * j + k * k - i - j - k + 1 - 1) + 3\n    # a[i] + a[j] + a[k] = 3 *\
    \ (i * i + j * j + k * k - i - j - k + 1 - 1 + 1)\n    # a[i] + a[j] + a[k] =\
    \ 3 * (i * i + j * j + k * k - i - j - k + 1 - 1 + 1 + 1) - 3\n    # a[i] + a[j]\
    \ + a[k] = 3 * (i * i + j * j + k * k - i - j - k + 1 - 1 + 1 + 1 - 1)\n    #\
    \ a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k - i - j - k + 1 - 1 + 1 + 1\
    \ - 1 + 1) - 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k - i - j\
    \ - k + 1 - 1 + 1 + 1 - 1 + 1 + 1)\n    # a[i] + a[j] + a[k] = 3 * (i *", "  \
    \  a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    a =\
    \ [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i\
    \ + 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    # return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in\
    \ range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i + j + k) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n)\
    \ for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i\
    \ + 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * (i * i - i +\
    \ 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3\
    \ * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] +\
    \ a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n\
    \    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k\
    \ * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j -\
    \ j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1)\
    \ + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 *\
    \ (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j]\
    \ + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n \
    \   # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k\
    \ * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 *", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(n)\
    \ for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1)\
    \ % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i + 1,\
    \ n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n\n", "    pass\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    a\
    \ = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    # return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n    return sum(1 for i in range(1, n)\
    \ for j in range(i + 1, n) if (i * i - i + 1 + j * j - j + 1) % 3 == 0)\n\n",
  "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    # return sum([1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0])\n    return sum([1 for i in range(1, n)\
    \ for j in range(i + 1, n) if (2 * i * i - 2 * i + 2 + 2 * j * j - 2 * j + 2)\
    \ % 3 == 0])\n\n", "    return sum(1 for i in range(n) for j in range(i+1, n)\
    \ for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0)\n\
    \n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in\
    \ range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \n", "    # create array\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n \
    \   # count triples\n    count = 0\n    for i in range(n - 2):\n        for j\
    \ in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n           \
    \     if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return\
    \ count\n\n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n)\
    \ for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return\
    \ sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j +\
    \ 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    # return sum(1 for i in range(n)\
    \ for j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1\
    \ + k*k - k + 1) % 3 == 0)\n    return sum(1 for i in range(n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i + j*j + k*k) % 3 == 0)\n\n", "    return sum(1\
    \ for i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i\
    \ * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # a[i] = i\
    \ * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 3 = 3 * (i * i -\
    \ i + 1)\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 *\
    \ a[j]\n    # a[i] + a[j] + a[k] = 3 * a[k]\n    # a[i] + a[j] + a[k] = 3 * a[i]\
    \ = 3 * a[j] = 3 * a[k]\n    # a[i] = a[j] = a[k]\n    # a[i] = a[j] = a[k] =\
    \ 1, 3, 7, 13, 21, 31, 43, 57, 73, 91, 111, 133, 157, 183, 211, 241, 273, 307,\
    \ 343, 381, 421, 463, 507, 553, 601, 651, 703, 757, 813, 871, 931, 993, 1057,\
    \ 1123, 1191, 1261, 1333, 1407, 1483, 1561, 1641, 1723, 1707, 1891, 1977, 2065,\
    \ 2155, 2247, 2341, 2437, 2535, 2635, 2737, 2841, 2947, 3055, 3165, 3277, 3391,\
    \ 3507, 3625, 3745, 3867, 3991, 4117, 4245, 4375, 4507, 4641, 4777, 4915, 5055,\
    \ 5197, 5341, 5487, 5635, 5785, 5937, 6091, 6247, 6405, 6565, 6727, 6891, 7057,\
    \ 7225, 7395, 7567, 7741, 7917, 8095, 8275, 8457, 8641, 8827, 9015, 9205, 9397,\
    \ 9591, 9787, 9985, 10185, 10387, 10591, 10797, 11005, 11215, 11427, 11641, 11857,",
  "    return (n * (n - 1) * (n - 2)) // 6\n\n", "    # a[i] = i * i - i + 1\n   \
    \ # a[i] + a[j] + a[k] = i * i - i + 1 + j * j - j + 1 + k * k - k + 1\n    #\
    \                     = i * i + j * j + k * k - i - j - k + 3\n    #         \
    \            = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    #            \
    \         = (i + j + k) * (i + j + k - 1) + 2\n    #                     = (i\
    \ + j + k) * (i + j + k - 1) + 1 + 1\n    #                     = (i + j + k)\
    \ * (i + j + k - 1) + (1 + 1)\n    #                     = (i + j + k) * (i +\
    \ j + k - 1) + (2)\n    #                     = (i + j + k) * (i + j + k - 1)\
    \ + (2 - 1)\n    #                     = (i + j + k) * (i + j + k - 1) + (3 -\
    \ 2)\n    #                     = (i + j + k) * (i + j + k - 1) + (3 - 3)\n  \
    \  #                     = (i + j + k) * (i + j + k - 1) + (3 - 3)\n    #    \
    \                 = (i + j + k) * (i + j + k - 1) + (0)\n    #               \
    \      = (i + j + k) * (i + j + k - 1)\n    #                     = (i + j + k)\
    \ * (i + j + k - 1)\n    #                     = (i + j + k) * (i + j + k - 1)\n\
    \    #                     = (i + j + k) * (i + j + k - 1)\n    #            \
    \         = (i + j + k) * (i + j + k - 1)\n    #                     = (i + j\
    \ + k) * (i + j + k - 1)\n    #                     = (i + j + k) * (i + j + k\
    \ - 1)\n    #                     = (", "    # return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1)\
    \ % 3 == 0)\n    return sum(1 for i in range(1, n) for j in range(i+1, n) for\
    \ k in range(j+1, n) if (i+j+k) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for\
    \ j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n         \
    \       if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n  \
    \  return count\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    return\
    \ sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n)\
    \ if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # a[i]\
    \ = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 3\n    # i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1 = 3 * i * i - 3 * i + 3\n    # i *\
    \ i + j * j + k * k - i - j - k + 1 + 1 + 1 = 3 * i * i - 3 * i + 3\n    # i *\
    \ i + j * j + k * k - i - j - k + 3 = 3 * i * i - 3 * i + 3\n    # i * i + j *\
    \ j + k * k - i - j - k = 3 * i * i - 3 * i\n    # i * i + j * j + k * k - i -\
    \ j - k = 3 * i * i - 3 * i\n    # i * i + j * j + k * k - i - j - k = 3 * i *\
    \ i - 3 * i\n    # i * i + j * j + k * k - i - j - k = 3 * i * i - 3 * i\n   \
    \ # i * i + j * j + k * k - i - j - k = 3 * i * i - 3 * i\n    # i * i + j * j\
    \ + k * k - i - j - k = 3 * i * i - 3 * i\n    # i * i + j * j + k * k - i - j\
    \ - k = 3 * i * i - 3 * i\n    # i * i + j * j + k * k - i - j - k = 3 * i * i\
    \ - 3 * i\n    # i * i + j * j + k * k - i - j - k = 3 * i * i - 3 * i\n    #\
    \ i * i + j * j + k * k - i - j - k = 3 * i * i - 3 * i\n    # i * i + j * j +\
    \ k * k - i - j - k = 3 * i * i - 3 * i\n    # i * i + j * j + k * k - i - j -\
    \ k = 3 * i * i - 3", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n - 1) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    return\
    \ sum(1 for i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if\
    \ (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j in range(i\
    \ + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n",
  "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n\n", " \
    \   return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in range(j\
    \ + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", " \
    \   return sum(1 for i in range(1, n) for j in range(i+1, n) for k in range(j+1,\
    \ n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0)\n\n", "    a = [i\
    \ * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2)\
    \ for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k])\
    \ % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i + 1,\
    \ n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i +\
    \ 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k\
    \ + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 ==\
    \ 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1\
    \ for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n)\
    \ if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n - 1) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n\
    \ - 2) // 6\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1, n)\
    \ for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0)\n\
    \n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in\
    \ range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * (i * i - i +\
    \ 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3\
    \ * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] +\
    \ a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n\
    \    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k\
    \ * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j -\
    \ j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1)\
    \ + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 *\
    \ (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j]\
    \ + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n \
    \   # a[i] + a[j] + a[k] = 3 * (i * i - i + 1) + 3 * (j * j - j + 1) + 3 * (k\
    \ * k - k + 1)\n    # a[i] + a[j] + a[k] = 3 *", "    return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j +\
    \ 1 + k*k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n", "    if n < 3:\n        return 0\n    return\
    \ (n - 2) * (n - 1) * n // 6\n\n", "    a = [i * i - i + 1 for i in range(1, n\
    \ + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i +\
    \ 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for k in\
    \ range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\
    \n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for\
    \ i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k\
    \ in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n   \
    \                 count += 1\n    return count\n\n", "    return sum(1 for i in\
    \ range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i\
    \ in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for\
    \ i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i\
    \ - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # Time Complexity:\
    \ O(n)\n    # Space Complexity: O(1)\n    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) if (i * i - i + 1 + j * j - j + 1 + (i + j) * (i + j) -\
    \ i - j + 1) % 3 == 0)\n\n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] +\
    \ a[k] = 3 * i * i - 3 * i + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i - i + 1)\n\
    \    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[j]\n  \
    \  # a[i] + a[j] + a[k] = 3 * a[k]\n    # a[i] + a[j] + a[k] = 3 * a[i] = 3 *\
    \ a[j] = 3 * a[k]\n    # a[i] = a[j] = a[k]\n    # a[i] = a[j] = a[k] = 3 * a[i]\
    \ / 3\n    # a[i] = a[j] = a[k] = a[i]\n    # a[i] = a[j] = a[k] = a[j]\n    #\
    \ a[i] = a[j] = a[k] = a[k]\n    # a[i] = a[j] = a[k] = a[i] = a[j] = a[k]\n \
    \   # a[i] = a[j] = a[k]\n    # a[i] = a[j] = a[k] = a[i]\n    # a[i] = a[j] =\
    \ a[k] = a[j]\n    # a[i] = a[j] = a[k] = a[k]\n    # a[i] = a[j] = a[k] = a[i]\
    \ = a[j] = a[k]\n    # a[i] = a[j] = a[k]\n    # a[i] = a[j] = a[k] = a[i]\n \
    \   # a[i] = a[j] = a[k] = a[j]\n    # a[i] = a[j]", "    if n < 3:\n        return\
    \ 0\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for\
    \ i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k\
    \ in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n   \
    \                 count += 1\n    return count\n\n", "    return sum(1 for i in\
    \ range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i\
    \ in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for\
    \ i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i\
    \ - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i - i\
    \ + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j\
    \ in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3\
    \ == 0)\n\n", "    # return sum(1 for i in range(1, n) for j in range(i + 1, n)\
    \ for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n    return sum(1 for i in range(1, n) for j in range(i + 1, n) if\
    \ (i * i - i + 1 + j * j - j + 1) % 3 == 0)\n\n", "    # a[i] = i * i - i + 1\n\
    \    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 3 = 3 * (i * i - i + 1) = 3 *\
    \ a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[j] + a[k] = 2 * a[i]\n  \
    \  # a[j] = a[i] + a[k] - a[i] = a[k]\n    # a[j] = a[k]\n    # a[i] + a[j] +\
    \ a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = a[i] + 2 * a[j]\n    # a[i] + a[j]\
    \ + a[k] = a[i] + 2 * a[k]\n    # a[i] + a[j] + a[k] = a[i] + 2 * a[i]\n    #\
    \ a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i]\
    \ + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] +\
    \ a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j]\
    \ + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] +\
    \ a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k",
  "    # Time complexity: O(n)\n    # Space complexity: O(n)\n    a = [i * i - i +\
    \ 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j in\
    \ range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    return sum(1 for\
    \ i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1+j*j-j+1+k*k-k+1)\
    \ % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i + 1,\
    \ n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n-1) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in\
    \ range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j\
    \ + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n              \
    \      count += 1\n    return count\n\n", "    # a[i] = i * i - i + 1\n    # a[i]\
    \ + a[j] + a[k] = 3 * i * i - 3 * i + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i\
    \ - i + 1)\n    # a[i] + a[j] + a[k] = 3 * a[i]\n    # a[i] + a[j] + a[k] = 3\
    \ * a[j]\n    # a[i] + a[j] + a[k] = 3 * a[k]\n    # a[i] + a[j] + a[k] = 3 *\
    \ a[i] = 3 * a[j] = 3 * a[k]\n    # a[i] = a[j] = a[k]\n    # a[i] = a[j] = a[k]\
    \ = a[i] = i * i - i + 1\n    # a[i] = a[j] = a[k] = i * i - i + 1\n    # a[i]\
    \ = a[j] = a[k] = i * i - i + 1\n    # a[i] = a[j] = a[k] = i * i - i + 1\n  \
    \  # a[i] = a[j] = a[k] = i * i - i + 1\n    # a[i] = a[j] = a[k] = i * i - i\
    \ + 1\n    # a[i] = a[j] = a[k] = i * i - i + 1\n    # a[i] = a[j] = a[k] = i\
    \ * i - i + 1\n    # a[i] = a[j] = a[k] = i * i - i + 1\n    # a[i] = a[j] = a[k]\
    \ = i * i - i + 1\n    # a[i] = a[j] = a[k] = i * i - i + 1\n    # a[i] = a[j]\
    \ = a[k] = i * i - i + 1\n    # a[i]", "    return sum([1 for i in range(1, n)\
    \ for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j\
    \ - j + 1 + k * k - k + 1) % 3 == 0])\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n - 1) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 +\
    \ j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j +\
    \ 1 + k*k - k + 1) % 3 == 0)\n", "    return sum(1 for i in range(1, n) for j\
    \ in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j +\
    \ 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n", "    if n < 3:\n        return 0\n    return\
    \ (n - 2) * (n - 1) * n // 6\n\n", "    a = [i * i - i + 1 for i in range(1, n\
    \ + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i +\
    \ 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * (i * i - i +\
    \ 1) + 3 * (j * j - j + 1) + 3 * (k * k - k + 1)\n    # a[i] + a[j] + a[k] = 3\
    \ * (i * i + j * j + k * k) - 3 * (i + j + k) + 3 * (3)\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in range(i\
    \ + 1, n - 1):\n            for k in range(j + 1, n):\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\
    \n", "    if n < 3:\n        return 0\n    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1)\
    \ for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return\
    \ sum(1 for i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if\
    \ (i*i-i+1+j*j-j+1+k*k-k+1) % 3 == 0)\n", "    pass\n\n", "    return sum([1 for\
    \ i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1 +\
    \ j*j-j+1 + k*j-k+1) % 3 == 0])\n\n", "    return sum(1 for i in range(1, n) for\
    \ j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k\
    \ - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1,\
    \ n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1) % 3 == 0)\n", " \
    \   a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k]\
    \ = (i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1)\n    # a[i] + a[j] + a[k]\
    \ = i * i + j * j + k * k - i - j - k + 3\n    # a[i] + a[j] + a[k] = i * i +\
    \ j * j + k * k - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i\
    \ + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j\
    \ + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n\
    \    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j]\
    \ + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i +\
    \ j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i +\
    \ j + k - 1) + 3\n    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n\
    \    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k - 1) + 3\n    # a[i] + a[j]\
    \ + a[k] = (i + j + k) * (i + j + k - 1)", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # 1 \u2264 n \u2264 10^5\n \
    \   # 1 \u2264 a[i] \u2264 10^9\n    # 1 \u2264 a[i] + a[j] + a[k] \u2264 10^9\n\
    \    # 1 \u2264 i < j < k \u2264 n\n    # a[i] + a[j] + a[k] is a multiple of\
    \ 3\n    # a[i] = i * i - i + 1\n    # a[j] = j * j - j + 1\n    # a[k] = k *\
    \ k - k + 1\n    # a[i] + a[j] + a[k] = i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1\n    # a[i] + a[j] + a[k] = i * i + j * j + k * k - i - j - k + 3\n\
    \    # a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    #\
    \ a[i] + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i]\
    \ + a[j] + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j]\
    \ + a[k] = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = (i + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i\
    \ + j + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] + a[j] + a[k] = (i + j\
    \ + k) * (i + j + k) - (i + j + k) + 3\n    # a[i] +", "    return sum(1 for i\
    \ in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    a = [i * i - i +\
    \ 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j in\
    \ range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1\
    \ for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n)\
    \ if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    if n < 3:\n        return 0\n\
    \    return (n - 2) * (n - 1) * n // 6\n\n", "    a = [i * i - i + 1 for i in\
    \ range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in\
    \ range(i + 1, n - 1):\n            for k in range(j + 1, n):\n              \
    \  if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return\
    \ count\n\n", "    return sum(1 for i in range(1, n) for j in range(i+1, n) for\
    \ k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0)\n\n",
  "    # a[i] = i * i - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 1 +\
    \ 3 * j * j - 3 * j + 1 + 3 * k * k - 3 * k + 1\n    # a[i] + a[j] + a[k] = 3\
    \ * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] =\
    \ 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k]\
    \ = 3 * (i * i + j * j + k * k) - 3 * (i +", "    a = [i * i - i + 1 for i in\
    \ range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for j in\
    \ range(i + 1, n - 1):\n            for k in range(j + 1, n):\n              \
    \  if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return\
    \ count\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1\
    \ for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n)\
    \ if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return n * (n - 1) * (n - 2)\
    \ // 6\n\n", "    pass\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in\
    \ range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    return sum(1 for\
    \ i in range(1, n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i\
    \ - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    return sum(1 for\
    \ i in range(1, n) for j in range(i+1, n) for k in range(j+1, n) if (i*i - i +\
    \ 1 + j*j - j + 1 + k*k - k + 1) % 3 == 0)\n\n", "    return sum(1 for i in range(1,\
    \ n) for j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0)\n\n", "    # return sum(1 for i in range(1,\
    \ n) for j in range(i+1, n) for k in range(j+1, n) if (i*i-i+1 + j*j-j+1 + k*k-k+1)\
    \ % 3 == 0)\n    return sum(1 for i in range(1, n) for j in range(i+1, n) for\
    \ k in range(j+1, n) if (i+j+k) % 3 == 0)\n\n", "    # a[i] = i * i - i + 1\n\
    \    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 3 + 3 * j * j - 3 * j + 3 + 3\
    \ * k * k - 3 * k + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i + j + k) + 9\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j + k * k)\
    \ - 3 * (i +", "    # return sum(1 for i in range(1, n) for j in range(i + 1,\
    \ n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k +\
    \ 1) % 3 == 0)\n    return sum(1 for i in range(1, n) for j in range(i + 1, n)\
    \ for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0)\n", "    # Time Complexity: O(n)\n    # Space Complexity: O(1)\n \
    \   # if n < 3:\n    #     return 0\n    # a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    # count = 0\n    # for i in range(n - 2):\n    #     for j in range(i\
    \ + 1, n - 1):\n    #         for k in range(j + 1, n):\n    #             if\
    \ (a[i] + a[j] + a[k]) % 3 == 0:\n    #                 count += 1\n    # return\
    \ count\n\n    # Time Complexity: O(n)\n    # Space Complexity: O(1)\n    if n\
    \ < 3:\n        return 0\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n \
    \   count = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n\
    \            if (a[i] + a[j]) % 3 == 0:\n                count += n - j - 1\n\
    \    return count\n\n", "    return n * (n - 1) * (n - 2) // 6\n\n", "    if n\
    \ < 3:\n        return 0\n    elif n == 3:\n        return 1\n    else:\n    \
    \    return n - 2\n\n", "    return sum(1 for i in range(1, n) for j in range(i\
    \ + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k -\
    \ k + 1) % 3 == 0)\n\n", "    if n < 3:\n        return 0\n    return (n - 2)\
    \ * (n - 1) * n // 6\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in\
    \ range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    # a[i] = i * i\
    \ - i + 1\n    # a[i] + a[j] + a[k] = 3 * i * i - 3 * i + 1 + 3 * j * j - 3 *\
    \ j + 1 + 3 * k * k - 3 * k + 1\n    # a[i] + a[j] + a[k] = 3 * (i * i + j * j\
    \ + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j *\
    \ j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i + j\
    \ * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i +\
    \ j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i * i\
    \ + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i *\
    \ i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i\
    \ * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i\
    \ * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i\
    \ * i + j * j + k * k) - 3 * (i + j + k) + 3\n    # a[i] + a[j] + a[k] = 3 * (i\
    \ * i + j * j + k * k) - 3 * (i +", "    return sum(1 for i in range(1, n) for\
    \ j in range(i + 1, n) for k in range(j + 1, n) if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

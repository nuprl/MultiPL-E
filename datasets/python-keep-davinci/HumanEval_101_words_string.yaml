name: HumanEval_101_words_string
language: python
prompt: "from typing import List\n\ndef words_string(s: str) -> List[str]:\n    \"\
  \"\"\n    You will be given a string of words separated by commas or spaces. Your\
  \ task is\n    to split the string into words and return an array of the words.\n\
  \    \n    For example:\n    words_string(\"Hi, my name is John\") == [\"Hi\", \"\
  my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three, four, five,\
  \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \"\"\
  \"\n"
tests: "def check(candidate):\n    assert candidate('Hi, my name is John') == ['Hi',\
  \ 'my', 'name', 'is', 'John']\n    assert candidate('One, two, three, four, five,\
  \ six') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('Hi,\
  \ my name') == ['Hi', 'my', 'name']\n    assert candidate('One,, two, three, four,\
  \ five, six,') == ['One', 'two', 'three', 'four', 'five', 'six']\n    assert candidate('')\
  \ == []\n    assert candidate('ahmed     , gamal') == ['ahmed', 'gamal']\n\ndef\
  \ test_check():\n    check(words_string)\n\ntest_check()\n"
completions: ["    return s.split()\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return re.split(r'[\\s,]+', s)\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[, ]+', s)", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return re.split(r'[\\s,]+', s)\n", "    return s.split()\n", "    return s.split()\n",
  "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return re.split(r'[\\s,]+',\
    \ s)\n", "    return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return re.split(r'[\\\
    s,]+', s)\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return re.split(r'[\\s,]+', s)\n",
  "    return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return re.split(r'[\\\
    s,]+', s)\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ s.split()\n", "    return s.split()\n", "    return s.split()\n", "    return\
    \ re.split(r'[\\s,]+', s)\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[\\s,]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return re.split(r'[\\s,]+',\
    \ s)\n", "    return s.split()\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return re.split(r'[\\s,]+', s)\n", "    return s.split()\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return re.split(r'[, ]+', s)\n", "    return s.split()\n",
  "    return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n", "    return s.split()\n", " \
    \   return s.split()\n", "    return s.split()\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

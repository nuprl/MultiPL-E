name: HumanEval_154_cycpattern_check
language: ruby
prompt: "# You are given 2 words. You need to return True if the second word or any\
  \ of its rotations is a substring in the first word\n# cycpattern_check(\"abcd\"\
  ,\"abd\") => False\n# cycpattern_check(\"hello\",\"ell\") => True\n# cycpattern_check(\"\
  whassup\",\"psus\") => False\n# cycpattern_check(\"abab\",\"baa\") => True\n# cycpattern_check(\"\
  efef\",\"eeff\") => False\n# cycpattern_check(\"himenss\",\"simen\") => True\ndef\
  \ cycpattern_check(a, b)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_cycpattern_check\n\
  \    candidate = method(:cycpattern_check)\n    assert_equal(false, candidate.call(\"\
  xyzw\", \"xyw\"))\n    assert_equal(true, candidate.call(\"yello\", \"ell\"))\n\
  \    assert_equal(false, candidate.call(\"whattup\", \"ptut\"))\n    assert_equal(true,\
  \ candidate.call(\"efef\", \"fee\"))\n    assert_equal(false, candidate.call(\"\
  abab\", \"aabb\"))\n    assert_equal(true, candidate.call(\"winemtt\", \"tinem\"\
  ))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

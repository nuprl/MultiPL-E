name: HumanEval_35_max_element
language: ruby
prompt: "# Return maximum element in the list.\n# >>> max_element([1, 2, 3])\n# 3\n\
  # >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\ndef max_element(l)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_element\n\
  \    candidate = method(:max_element)\n    assert_equal(3, candidate.call([1, 2,\
  \ 3]))\n    assert_equal(124, candidate.call([5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
  \ -10]))\n  end\nend\n"
completions: ["  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  return l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  max = l[0]\n  l.each do |x|\n    if x > max\n      max = x\n\
    \    end\n  end\n  return max\nend", "  l.max\nend", "  l.max\nend", "  max =\
    \ l[0]\n  l.each do |x|\n    if x > max\n      max = x\n    end\n  end\n  return\
    \ max\nend", "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |x|\n\
    \    if x > max\n      max = x\n    end\n  end\n  return max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  max = l[0]\n  l.each do |e|\n    if e > max\n      max = e\n    end\n\
    \  end\n  max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |i|\n    if i\
    \ > max\n      max = i\n    end\n  end\n  return max\nend", "  l.max\nend", " \
    \ max = l[0]\n  l.each do |i|\n    if i > max\n      max = i\n    end\n  end\n\
    \  return max\nend", "  max = l[0]\n  l.each do |i|\n    if i > max\n      max\
    \ = i\n    end\n  end\n  return max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "\tl.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |e|\n    if e > max\n\
    \      max = e\n    end\n  end\n  max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  max = l[0]\n  l.each do |x|\n    if x > max\n      max = x\n    end\n  end\n\
    \  return max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |e|\n    if e\
    \ > max\n      max = e\n    end\n  end\n  max\nend", "  l.max\nend", "  max =\
    \ l[0]\n  for i in l\n    if i > max\n      max = i\n    end\n  end\n  return\
    \ max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  max = l[0]\n  l.each do |i|\n    if i > max\n      max = i\n\
    \    end\n  end\n  return max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  max = l[0]\n  l.each do |x|\n    if x > max\n      max = x\n    end\n\
    \  end\n  return max\nend", "  max = l[0]\n  l.each do |x|\n    if x > max\n \
    \     max = x\n    end\n  end\n  return max\nend", "  l.max\nend", "  max = l[0]\n\
    \  l.each do |i|\n    if i > max\n      max = i\n    end\n  end\n  return max\n\
    end", "  l.max\nend", "  max = l[0]\n  l.each do |item|\n    if item > max\n \
    \     max = item\n    end\n  end\n  max\nend", "  l.max\nend", "  l.max\nend",
  "  max = l[0]\n  l.each do |e|\n    if e > max\n      max = e\n    end\n  end\n\
    \  max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |e|\n    if e > max\n\
    \      max = e\n    end\n  end\n  max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  l.max\nend", "  l.max\nend", "  # your code here\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  max = l[0]\n  l.each do |i|\n    if i > max\n      max = i\n    end\n\
    \  end\n  return max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  max = l[0]\n  l.each do |x|\n    if x > max\n      max = x\n\
    \    end\n  end\n  return max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  # your code here\nend",
  "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  max = l[0]\n\
    \  l.each do |i|\n    if i > max\n      max = i\n    end\n  end\n  max\nend",
  "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  max = l[0]\n  l.each do |i|\n    if i > max\n      max = i\n\
    \    end\n  end\n  max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend",
  "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |i|\n    if i > max\n\
    \      max = i\n    end\n  end\n  return max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each { |x| max = x if\
    \ x > max }\n  max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", "  l.max\n\
    end", "  max = l[0]\n  l.each do |i|\n    if i > max\n      max = i\n    end\n\
    \  end\n  return max\nend", "  l.max\nend", "  l.max\nend", "  l.max\nend", " \
    \ l.max\nend", "  l.max\nend", "  max = l[0]\n  l.each do |e|\n    if e > max\n\
    \      max = e\n    end\n  end\n  max\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

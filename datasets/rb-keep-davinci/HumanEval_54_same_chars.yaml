name: HumanEval_54_same_chars
language: ruby
prompt: "# Check if two words have the same characters.\n# >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n# True\n# >>> same_chars('abcd', 'dddddddabc')\n# True\n\
  # >>> same_chars('dddddddabc', 'abcd')\n# True\n# >>> same_chars('eabcd', 'dddddddabc')\n\
  # False\n# >>> same_chars('abcd', 'dddddddabce')\n# False\n# >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n# False\ndef same_chars(s0, s1)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_same_chars\n\
  \    candidate = method(:same_chars)\n    assert_equal(true, candidate.call(\"eabcdzzzz\"\
  , \"dddzzzzzzzddeddabc\"))\n    assert_equal(true, candidate.call(\"abcd\", \"dddddddabc\"\
  ))\n    assert_equal(true, candidate.call(\"dddddddabc\", \"abcd\"))\n    assert_equal(false,\
  \ candidate.call(\"eabcd\", \"dddddddabc\"))\n    assert_equal(false, candidate.call(\"\
  abcd\", \"dddddddabcf\"))\n    assert_equal(false, candidate.call(\"eabcdzzzz\"\
  , \"dddzzzzzzzddddabc\"))\n    assert_equal(false, candidate.call(\"aabb\", \"aaccc\"\
  ))\n  end\nend\n"
completions: ["  # your code here\nend", "  s0.chars.sort == s1.chars.sort\nend",
  "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend",
  "  # TODO: Implement this method.\n  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  return false if s0.length != s1.length\n  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort.join\
    \ == s1.chars.sort.join\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  # TODO: implement this method\n  s0.chars.sort ==\
    \ s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  # your code here\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  # TODO: implement this function\n  # s0.chars.sort == s1.chars.sort\n\
    \  s0.chars.sort.join == s1.chars.sort.join\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  # YOUR CODE HERE\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  # Your code here\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  # TODO: implement this function\n\
    \  s0.chars.sort == s1.chars.sort\nend", "  # Your code here\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # TODO:\
    \ implement this method\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # your code\
    \ here\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  # your code here\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # Your code\
    \ here\nend", "  # TODO: implement this function\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  # your code here\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # TODO:\
    \ Implement me!\n  # s0.chars.sort == s1.chars.sort\n  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  # your code here\nend", "  s0_chars\
    \ = s0.chars.sort\n  s1_chars = s1.chars.sort\n  s0_chars == s1_chars\nend", " \
    \ s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend",
  "  # Your code here\n  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort ==\
    \ s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # TODO: implement\
    \ this method\nend", "  return false if s0.length != s1.length\n  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  # TODO: implement this function\n  return false if\
    \ s0.length != s1.length\n  s0.chars.sort.join == s1.chars.sort.join\nend", " \
    \ s0.chars.sort == s1.chars.sort\nend", "  # Your code here\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # your code\
    \ here\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  # your code here\nend", "  # TODO: implement me\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  # TODO: Implement this method\n  # Check if two words\
    \ have the same characters.\n  # >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n\
    \  # True\n  # >>> same_chars('abcd', 'dddddddabc')\n  # True\n  # >>> same_chars('dddddddabc',\
    \ 'abcd')\n  # True\n  # >>> same_chars('eabcd', 'dddddddabc')\n  # False\n  #\
    \ >>> same_chars('abcd', 'dddddddabce')\n  # False\n  # >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddddabc')\n  # False\n  # TODO: Implement this method\n  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort\
    \ == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\nend", "  # your code\
    \ here\nend", "  s0.chars.sort == s1.chars.sort\nend", "  s0.chars.sort == s1.chars.sort\n\
    end", "  s0.chars.sort == s1.chars.sort\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

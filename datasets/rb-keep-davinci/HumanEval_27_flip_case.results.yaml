name: HumanEval_27_flip_case
language: ruby
results:
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp___q9yng\n\
    Started\n.\nFinished in 0.000185 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5405.41 tests/s, 16216.22 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpshc8mclm\n\
    Started\n.\nFinished in 0.000196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5102.04 tests/s, 15306.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxu2bxpxb\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpntwdyp0r\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps331dokk\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 14423.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp21vmnuj6\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 14285.71 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz7u1xs_n\n\
    Started\n.\nFinished in 0.000187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5347.59 tests/s, 16042.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpddtcgxuk\n\
    Started\n.\nFinished in 0.000219 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4566.21 tests/s, 13698.63 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvrlh0lc9\n\
    Started\n.\nFinished in 0.000227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4405.29 tests/s, 13215.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfdmpyfrt\n\
    Started\n.\nFinished in 0.000218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4587.16 tests/s, 13761.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmem5tdsp\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyq3v2wb8\n\
    Started\n.\nFinished in 0.000202 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4950.50 tests/s, 14851.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6u3r5zaj\n\
    Started\n.\nFinished in 0.000212 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4716.98 tests/s, 14150.94 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoaw3yc5l\n\
    Started\n.\nFinished in 0.000202 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4950.50 tests/s, 14851.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi9f80q9m\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmrf5ghxz\n\
    Started\n.\nFinished in 0.000215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4651.16 tests/s, 13953.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1if30468\n\
    Started\n.\nFinished in 0.000197 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5076.14 tests/s, 15228.43 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwalg6pjq\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi3cmdwsv\n\
    Started\n.\nFinished in 0.000196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5102.04 tests/s, 15306.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmr6vq6ax\n\
    Started\n.\nFinished in 0.000186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5376.34 tests/s, 16129.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoah84h3x\n\
    Started\n.\nFinished in 0.000184 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5434.78 tests/s, 16304.35 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpybwk7r\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7t6rwl0g\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpibxd0m3a\n\
    Started\n.\nFinished in 0.000506 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1976.28 tests/s, 5928.85 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbfzusnfv\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamqjnhs1\n\
    Started\n.\nFinished in 0.000498 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    2008.03 tests/s, 6024.10 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_hbikhy\n\
    Started\n.\nFinished in 0.000197 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5076.14 tests/s, 15228.43 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3eat8oi6\n\
    Started\n.\nFinished in 0.000223 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4484.30 tests/s, 13452.91 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvw56_1w9\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.split('').map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join('')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6uzho1y\n\
    Started\n.\nFinished in 0.000213 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4694.84 tests/s, 14084.51 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6f7k39y\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpesgl6c0p\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7msx9r5e\n\
    Started\n.\nFinished in 0.000313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    3194.89 tests/s, 9584.66 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5jtpmdm3\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvdtfjge9\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2dw9vas\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8xuapdg\n\
    Started\n.\nFinished in 0.000199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5025.13 tests/s, 15075.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzuw_hid\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnxq99l81\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86ob3cde\n\
    Started\n.\nFinished in 0.0002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5000.00 tests/s, 15000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphsfqixjs\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnn81vh2\n\
    Started\n.\nFinished in 0.0002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5000.00 tests/s, 15000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5yp5ypo\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4_inzynp\n\
    Started\n.\nFinished in 0.000227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4405.29 tests/s, 13215.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpptfn43mh\n\
    Started\n.\nFinished in 0.000213 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4694.84 tests/s, 14084.51 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3f3x737\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ley1qqm\n\
    Started\n.\nFinished in 0.000216 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4629.63 tests/s, 13888.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycl7u2nr\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpakb9wr3m\n\
    Started\n.\nFinished in 0.000211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4739.34 tests/s, 14218.01 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6xjlxj5k\n\
    Started\n.\nFinished in 0.000268 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    3731.34 tests/s, 11194.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz7nvpjr\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4s16oom\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 14423.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsn7ie1ys\n\
    Started\n.\nFinished in 0.000187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5347.59 tests/s, 16042.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86cjjwfp\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvjevjfzq\n\
    Started\n.\nFinished in 0.000224 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4464.29 tests/s, 13392.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3_pgm2y4\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsd1_0jn_\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw0tyower\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvhzvxy8e\n\
    Started\n.\nFinished in 0.000215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4651.16 tests/s, 13953.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpklzw34l6\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplhpozhgm\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmqxo0fa\n\
    Started\n.\nFinished in 0.000216 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4629.63 tests/s, 13888.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map do |char|\n    if char =~ /[a-z]/\n      char.upcase\n   \
    \ elsif char =~ /[A-Z]/\n      char.downcase\n    else\n      char\n    end\n\
    \  end.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfxurkaar\n\
    Started\n.\nFinished in 0.00023 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4347.83 tests/s, 13043.48 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3onyi4re\n\
    Started\n.\nFinished in 0.000227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4405.29 tests/s, 13215.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqglnu6v0\n\
    Started\n.\nFinished in 0.000217 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4608.29 tests/s, 13824.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0bsf3g5\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb45ypiyj\n\
    Started\n.\nFinished in 0.000186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5376.34 tests/s, 16129.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzprd4n53\n\
    Started\n.\nFinished in 0.000248 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4032.26 tests/s, 12096.77 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpptw59pzq\n\
    Started\n.\nFinished in 0.000377 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    2652.52 tests/s, 7957.56 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvu11ynbh\n\
    Started\n.\nFinished in 0.000203 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4926.11 tests/s, 14778.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65jgecg6\n\
    Started\n.\nFinished in 0.000215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4651.16 tests/s, 13953.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkghl7v1a\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 14563.11 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b73kuun\n\
    Started\n.\nFinished in 0.000205 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4878.05 tests/s, 14634.15 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqemi6ln\n\
    Started\n.\nFinished in 0.000229 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4366.81 tests/s, 13100.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5dcv_b64\n\
    Started\n.\nFinished in 0.000214 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4672.90 tests/s, 14018.69 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6x5d9vci\n\
    Started\n.\nFinished in 0.000205 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4878.05 tests/s, 14634.15 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyv5dt8xj\n\
    Started\n.\nFinished in 0.000198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5050.51 tests/s, 15151.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx15zghw7\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 14563.11 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6drgwco\n\
    Started\n.\nFinished in 0.000199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5025.13 tests/s, 15075.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw00su2xv\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmxek5f68\n\
    Started\n.\nFinished in 0.000211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4739.34 tests/s, 14218.01 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdpukr4jb\n\
    Started\n.\nFinished in 0.000228 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4385.96 tests/s, 13157.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi8no4ssa\n\
    Started\n.\nFinished in 0.00025 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4000.00 tests/s, 12000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4nvub927\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 14423.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp48jfqqhj\n\
    Started\n.\nFinished in 0.000235 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4255.32 tests/s, 12765.96 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpew6v8p_8\n\
    Started\n.\nFinished in 0.000202 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4950.50 tests/s, 14851.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvp3tkg2d\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputur_qcp\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzumsrr7\n\
    Started\n.\nFinished in 0.000215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4651.16 tests/s, 13953.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi_neq4z4\n\
    Started\n.\nFinished in 0.000187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5347.59 tests/s, 16042.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8djd_58\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dtl4psl\n\
    Started\n.\nFinished in 0.000187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5347.59 tests/s, 16042.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  flipped_string = \"\"\n  string.each_char do |char|\n    if char == char.upcase\n\
    \      flipped_string << char.downcase\n    else\n      flipped_string << char.upcase\n\
    \    end\n  end\n  flipped_string\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_flip_case\n    candidate = method(:flip_case)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"\
    Hello!\"))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagavqn29\n\
    Started\n.\nFinished in 0.000204 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4901.96 tests/s, 14705.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomepf41e\n\
    Started\n.\nFinished in 0.000232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4310.34 tests/s, 12931.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dlhnp0m\n\
    Started\n.\nFinished in 0.000223 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4484.30 tests/s, 13452.91 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlifrts3\n\
    Started\n.\nFinished in 0.003657 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    273.45 tests/s, 820.34 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphba2ru0d\n\
    Started\n.\nFinished in 0.000244 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4098.36 tests/s, 12295.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8o1l8mo\n\
    Started\n.\nFinished in 0.000192 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5208.33 tests/s, 15625.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3861is5q\n\
    Started\n.\nFinished in 0.000223 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4484.30 tests/s, 13452.91 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwq_ohqe\n\
    Started\n.\nFinished in 0.000218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4587.16 tests/s, 13761.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4v3n5iv\n\
    Started\n.\nFinished in 0.000558 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1792.11 tests/s, 5376.34 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe3qzagnb\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoxn7p4ly\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjswn80w3\n\
    Started\n.\nFinished in 0.000203 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4926.11 tests/s, 14778.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnuitomrx\n\
    Started\n.\nFinished in 0.000187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5347.59 tests/s, 16042.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  flipped_string = ''\n  string.each_char do |char|\n    if char == char.upcase\n\
    \      flipped_string += char.downcase\n    else\n      flipped_string += char.upcase\n\
    \    end\n  end\n  flipped_string\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_flip_case\n    candidate = method(:flip_case)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"\
    Hello!\"))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw3neb1p_\n\
    Started\n.\nFinished in 0.000248 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4032.26 tests/s, 12096.77 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpongwjkr1\n\
    Started\n.\nFinished in 0.000183 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5464.48 tests/s, 16393.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  flipped_string = \"\"\n  string.each_char do |char|\n    if char == char.upcase\n\
    \      flipped_string << char.downcase\n    else\n      flipped_string << char.upcase\n\
    \    end\n  end\n  flipped_string\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_flip_case\n    candidate = method(:flip_case)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"\
    Hello!\"))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp7xtj4t6\n\
    Started\n.\nFinished in 0.000224 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4464.29 tests/s, 13392.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprsl5xqdq\n\
    Started\n.\nFinished in 0.000264 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    3787.88 tests/s, 11363.64 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbdqnxdn\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv4eyyxca\n\
    Started\n.\nFinished in 0.000241 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4149.38 tests/s, 12448.13 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0446bwx\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 14285.71 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rn2opcn\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqrsp2wwu\n\
    Started\n.\nFinished in 0.000204 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4901.96 tests/s, 14705.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpxjpfww\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4dmigdni\n\
    Started\n.\nFinished in 0.000204 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4901.96 tests/s, 14705.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqsvjued\n\
    Started\n.\nFinished in 0.000557 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1795.33 tests/s, 5386.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2edsygy\n\
    Started\n.\nFinished in 0.000204 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4901.96 tests/s, 14705.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3_dslc2\n\
    Started\n.\nFinished in 0.000234 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4273.50 tests/s, 12820.51 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm6xcjg26\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzum51s_x\n\
    Started\n.\nFinished in 0.0002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5000.00 tests/s, 15000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6rscyxp\n\
    Started\n.\nFinished in 0.000214 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4672.90 tests/s, 14018.69 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd0v2nqxq\n\
    Started\n.\nFinished in 0.000198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5050.51 tests/s, 15151.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map do |char|\n    if char.match(/[a-z]/)\n      char.upcase\n\
    \    elsif char.match(/[A-Z]/)\n      char.downcase\n    else\n      char\n  \
    \  end\n  end.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_prj9w23\n\
    Started\n.\nFinished in 0.00023 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4347.83 tests/s, 13043.48 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mnejxxx\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xnv47cx\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvhdt3kzs\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmsss5uvu\n\
    Started\n.\nFinished in 0.000196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5102.04 tests/s, 15306.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpde58cccf\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpffmblc3x\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 14285.71 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupfq3ua2\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wzuxfiu\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 14563.11 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprfx5s1bs\n\
    Started\n.\nFinished in 0.000566 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1766.78 tests/s, 5300.35 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzd57q8n\n\
    Started\n.\nFinished in 0.000185 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5405.41 tests/s, 16216.22 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpel2ehoeu\n\
    Started\n.\nFinished in 0.000197 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5076.14 tests/s, 15228.43 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2pfckwg2\n\
    Started\n.\nFinished in 0.000535 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1869.16 tests/s, 5607.48 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jupgcxc\n\
    Started\n.\nFinished in 0.000199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5025.13 tests/s, 15075.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjca2qrtp\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5jyzm_rm\n\
    Started\n.\nFinished in 0.000192 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5208.33 tests/s, 15625.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc94euxkn\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7hgeseu7\n\
    Started\n.\nFinished in 0.000214 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4672.90 tests/s, 14018.69 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp90uyh5z0\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 14285.71 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20ucf48v\n\
    Started\n.\nFinished in 0.000203 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4926.11 tests/s, 14778.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fnxqrk\n\
    Started\n.\nFinished in 0.000275 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    3636.36 tests/s, 10909.09 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplep1_v5n\n\
    Started\n.\nFinished in 0.000184 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5434.78 tests/s, 16304.35 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcj9hxh7p\n\
    Started\n.\nFinished in 0.000186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5376.34 tests/s, 16129.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpucx865lx\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprxdn3brq\n\
    Started\n.\nFinished in 0.000229 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4366.81 tests/s, 13100.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp60yg8hxu\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu7ohxwxv\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5su9y52n\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfr59ht6t\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ix430zt\n\
    Started\n.\nFinished in 0.001868 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    535.33 tests/s, 1606.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9rkjubcd\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6_dd6c4\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzh_m_1b\n\
    Started\n.\nFinished in 0.000197 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5076.14 tests/s, 15228.43 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dxrvlo3\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsvggxeb0\n\
    Started\n.\nFinished in 0.000218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4587.16 tests/s, 13761.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxkynegd5\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps3b8lngc\n\
    Started\n.\nFinished in 0.000198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5050.51 tests/s, 15151.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xvgo85m\n\
    Started\n.\nFinished in 0.000227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4405.29 tests/s, 13215.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofsfn3e1\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c0di0pf\n\
    Started\n.\nFinished in 0.000185 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5405.41 tests/s, 16216.22 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo5flfp_0\n\
    Started\n.\nFinished in 0.001374 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    727.80 tests/s, 2183.41 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp67lzf49a\n\
    Started\n.\nFinished in 0.000221 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4524.89 tests/s, 13574.66 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8v1l3jz9\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 14925.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yvfss4w\n\
    Started\n.\nFinished in 0.000198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5050.51 tests/s, 15151.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt95fylr1\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0r1uyipq\n\
    Started\n.\nFinished in 0.000202 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4950.50 tests/s, 14851.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9kacbw2f\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp614hk9m\n\
    Started\n.\nFinished in 0.000203 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4926.11 tests/s, 14778.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31s5tmu3\n\
    Started\n.\nFinished in 0.000195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5128.21 tests/s, 15384.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1hm10027\n\
    Started\n.\nFinished in 0.000192 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5208.33 tests/s, 15625.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptgg7ig5c\n\
    Started\n.\nFinished in 0.000199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5025.13 tests/s, 15075.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywggpd4_\n\
    Started\n.\nFinished in 0.000196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5102.04 tests/s, 15306.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpda43nm1u\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpenvojgey\n\
    Started\n.\nFinished in 0.000409 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    2444.99 tests/s, 7334.96 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0grhn3u\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezdbny58\n\
    Started\n.\nFinished in 0.000189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5291.01 tests/s, 15873.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnu8qe058\n\
    Started\n.\nFinished in 0.000633 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1579.78 tests/s, 4739.34 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8lxe_ts1\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8hxhdi1q\n\
    Started\n.\nFinished in 0.000211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4739.34 tests/s, 14218.01 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp57f8hp8o\n\
    Started\n.\nFinished in 0.000193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5181.35 tests/s, 15544.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopp96vlw\n\
    Started\n.\nFinished in 0.00019 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5263.16 tests/s, 15789.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9roitnr\n\
    Started\n.\nFinished in 0.000188 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5319.15 tests/s, 15957.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcf1vxn_x\n\
    Started\n.\nFinished in 0.000186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5376.34 tests/s, 16129.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp049wuge9\n\
    Started\n.\nFinished in 0.0002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5000.00 tests/s, 15000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5032pwhi\n\
    Started\n.\nFinished in 0.000192 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5208.33 tests/s, 15625.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase\
    \ }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm3qp4pm3\n\
    Started\n.\nFinished in 0.000238 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4201.68 tests/s, 12605.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpstsxxef3\n\
    Started\n.\nFinished in 0.012637 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    79.13 tests/s, 237.40 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmy558sf\n\
    Started\n.\nFinished in 0.000217 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4608.29 tests/s, 13824.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7kekozlj\n\
    Started\n.\nFinished in 0.000254 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    3937.01 tests/s, 11811.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnzuue1t_\n\
    Started\n.\nFinished in 0.000196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5102.04 tests/s, 15306.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpek4iwed1\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 15463.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5idxjhx1\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 14423.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgjypii38\n\
    Started\n.\nFinished in 0.000191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5235.60 tests/s, 15706.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjqnpzp3w\n\
    Started\n.\nFinished in 0.000198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5050.51 tests/s, 15151.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0gw_w151\n\
    Started\n.\nFinished in 0.000174 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5747.13 tests/s, 17241.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ib5spo2\n\
    Started\n.\nFinished in 0.000186 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5376.34 tests/s, 16129.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\ndef flip_case(string)\n\
    \  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_flip_case\n    candidate = method(:flip_case)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"hELLO!\", candidate.call(\"Hello!\"\
    ))\n    assert_equal(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\", candidate.call(\"\
    These violent delights have violent ends\"))\n  end\nend\n"
  stdout: !!int ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc81cvmdc\n\
    Started\n.\nFinished in 0.000178 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5617.98 tests/s, 16853.93 assertions/s\n"
  exit_code: 0
  status: OK

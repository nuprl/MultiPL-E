name: HumanEval_36_fizz_buzz
language: ruby
results:
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe56aowf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe56aowf.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003051 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    327.76 tests/s, 655.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuqjfyum9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuqjfyum9.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.018513 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    54.02 tests/s, 108.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp18usrvsr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp18usrvsr.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.009907 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    100.94 tests/s, 201.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpueelb8re\n\
    Started\n.\nFinished in 0.037904 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    26.38 tests/s, 211.06 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ki0aei1\n\
    Started\n.\nFinished in 0.027935 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    35.80 tests/s, 286.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3tisr2m\n\
    Started\n.\nFinished in 0.0306 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    32.68 tests/s, 261.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzon0h0o9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzon0h0o9.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.00306 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    326.80 tests/s, 653.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzo2s9kg\n\
    Started\n.\nFinished in 0.023606 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    42.36 tests/s, 338.90 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      i.to_s.each_char do |c|\n    \
    \    count += 1 if c == '7'\n      end\n    end\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg991yf0d\n\
    Started\n.\nFinished in 0.038203 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    26.18 tests/s, 209.41 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp02fmzkqv\n\
    Started\n.\nFinished in 0.021243 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    47.07 tests/s, 376.59 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjmiegajy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjmiegajy.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.002958 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.07 tests/s, 676.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    count += 1 if (num % 11 == 0 || num % 13 == 0) && num.to_s.include?(\"\
    7\")\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl0mkewkq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl0mkewkq.rb:20:in\
    \ `test_fizz_buzz'\n     17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n\
    \     19:     assert_equal(0, candidate.call(50))\n  => 20:     assert_equal(2,\
    \ candidate.call(78))\n     21:     assert_equal(3, candidate.call(79))\n    \
    \ 22:     assert_equal(3, candidate.call(100))\n     23:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003027 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.36 tests/s, 660.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpwb2z3g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpwb2z3g.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.012844 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.86 tests/s, 155.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi6yg6zzr\n\
    Started\n.\nFinished in 0.023975 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    41.71 tests/s, 333.68 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29c1zspo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29c1zspo.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003221 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.46 tests/s, 310.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4rgw9c6k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4rgw9c6k.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.009534 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    104.89 tests/s, 104.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg9uvk_qr\n\
    Started\n.\nFinished in 0.057349 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    17.44 tests/s, 139.50 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?(\"7\") }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkb3ohqmu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkb3ohqmu.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    308.93 tests/s, 617.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Write your code here\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcsemh6dl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcsemh6dl.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    308.93 tests/s, 308.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).count { |i| (i % 11\
    \ == 0 || i % 13 == 0) && i.to_s.include?('7') }\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate =\
    \ method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjt466y0i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjt466y0i.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.004857 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    205.89 tests/s, 411.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk8b7f9af\n\
    Started\n.\nFinished in 0.041051 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    24.36 tests/s, 194.88 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf8f4nzl9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf8f4nzl9.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003251 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.60 tests/s, 307.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqzf1u2zg\n\
    Started\n.\nFinished in 0.045026 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    22.21 tests/s, 177.68 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mysirh_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mysirh_.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    146.71 tests/s, 146.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfeonx7r5\n\
    Started\n.\nFinished in 0.087823 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    11.39 tests/s, 91.09 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0cinz6y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0cinz6y.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.002947 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    339.33 tests/s, 339.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipmjy31t\n\
    Started\n.\nFinished in 0.064332 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.54 tests/s, 124.35 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxmpd13b5\n\
    Started\n.\nFinished in 0.074653 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    13.40 tests/s, 107.16 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2i2ibqf2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2i2ibqf2.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.025838 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    38.70 tests/s, 38.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_5nripu\n\
    Started\n.\nFinished in 0.023761 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    42.09 tests/s, 336.69 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjvhmg4w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjvhmg4w.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.002958 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.07 tests/s, 338.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8vzevzjy\n\
    Started\n.\nFinished in 0.023062 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    43.36 tests/s, 346.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7czxt_ex\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7czxt_ex.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003827 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    261.30 tests/s, 522.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9oy96lvv\n\
    Started\n.\nFinished in 0.021982 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.49 tests/s, 363.93 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppujddy1e\n\
    Started\n.\nFinished in 0.023614 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    42.35 tests/s, 338.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6ttn8qw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6ttn8qw.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.00297 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    336.70 tests/s, 336.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      num.to_s.each_char do |char|\n\
    \        count += 1 if char == \"7\"\n      end\n    end\n  end\n  count\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz6mx87y_\n\
    Started\n.\nFinished in 0.032736 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    30.55 tests/s, 244.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_hvxq5j\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_hvxq5j.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003248 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.88 tests/s, 307.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx7xnp7k1\n\
    Started\n.\nFinished in 0.039451 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    25.35 tests/s, 202.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if (num % 11 == 0 || num % 13 == 0) && num.to_s.include?(\"7\")\n\
    \      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_zhqrzn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_zhqrzn.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003001 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.22 tests/s, 666.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg89s2se\n\
    Started\n.\nFinished in 0.024241 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    41.25 tests/s, 330.02 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |x| x % 11\
    \ == 0 || x % 13 == 0 }.count { |x| x.to_s.include?(\"7\") }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5_w7cdr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5_w7cdr.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.04639 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    21.56 tests/s, 43.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptn50k5yv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptn50k5yv.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003068 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.95 tests/s, 325.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpst8ru0yr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpst8ru0yr.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.002968 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    336.93 tests/s, 673.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8n8q_5ld\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8n8q_5ld.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.004154 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    240.73 tests/s, 240.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfl8qry1n\n\
    Started\n.\nFinished in 0.080018 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    12.50 tests/s, 99.98 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeo_j8oct\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeo_j8oct.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.003001 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.22 tests/s, 333.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zm62xh2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zm62xh2.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003015 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.67 tests/s, 331.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5wylg2r\n\
    Started\n.\nFinished in 0.022043 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.37 tests/s, 362.93 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += 1 if i.to_s.include?('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fb0iaq9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fb0iaq9.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003138 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.67 tests/s, 637.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp633ax7pc\n\
    Started\n.\nFinished in 0.022268 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.91 tests/s, 359.26 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1kfubvms\n\
    Started\n.\nFinished in 0.076688 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    13.04 tests/s, 104.32 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |x| x % 11\
    \ == 0 || x % 13 == 0 }.count { |x| x.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplkqwd_ke\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplkqwd_ke.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003026 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.47 tests/s, 660.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6suhgpk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6suhgpk.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.00301 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.23 tests/s, 332.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_umz80me\n\
    Started\n.\nFinished in 0.066378 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.07 tests/s, 120.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy60y93bd\n\
    Started\n.\nFinished in 0.042469 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    23.55 tests/s, 188.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc5w5ymgg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc5w5ymgg.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003074 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.31 tests/s, 325.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp5k46jnn\n\
    Started\n.\nFinished in 0.022276 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.89 tests/s, 359.13 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpljdgh6ag\n\
    Started\n.\nFinished in 0.119552 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    8.36 tests/s, 66.92 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9at3ir0\n\
    Started\n.\nFinished in 0.098795 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    10.12 tests/s, 80.98 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp95u6uxve\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp95u6uxve.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003011 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.12 tests/s, 664.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp4xdbn9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp4xdbn9.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.034266 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    29.18 tests/s, 58.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpozfuuw0g\n\
    Started\n.\nFinished in 0.076466 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    13.08 tests/s, 104.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp25hfm3na\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp25hfm3na.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.039078 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    25.59 tests/s, 25.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6pq1adgp\n\
    Started\n.\nFinished in 0.151981 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    6.58 tests/s, 52.64 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7rlrxu_d\n\
    Started\n.\nFinished in 0.022064 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.32 tests/s, 362.58 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp14c72fcq\n\
    Started\n.\nFinished in 0.10943 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    9.14 tests/s, 73.11 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsett3794\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsett3794.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.009396 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    106.43 tests/s, 212.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdf_9l5c8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdf_9l5c8.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.019227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    52.01 tests/s, 52.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qgvnowu\n\
    Started\n.\nFinished in 0.108519 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    9.21 tests/s, 73.72 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi1mi37ye\n\
    Started\n.\nFinished in 0.068034 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    14.70 tests/s, 117.59 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy5bclj4g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy5bclj4g.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.00481 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    207.90 tests/s, 415.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzmk0y_7\n\
    Started\n.\nFinished in 0.090578 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    11.04 tests/s, 88.32 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpir3v6m2x\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpir3v6m2x.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003144 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.07 tests/s, 318.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp27ly_2gj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp27ly_2gj.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.016492 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    60.64 tests/s, 60.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp71lm42lg\n\
    Started\n.\nFinished in 0.047157 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    21.21 tests/s, 169.65 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt6xi4w24\n\
    Started\n.\nFinished in 0.045279 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    22.09 tests/s, 176.68 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmabbcq_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmabbcq_.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.62 tests/s, 320.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2nixmq3s\n\
    Started\n.\nFinished in 0.059323 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    16.86 tests/s, 134.85 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl3pl1ocj\n\
    Started\n.\nFinished in 0.062845 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.91 tests/s, 127.30 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt2y021wm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt2y021wm.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.079431 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    12.59 tests/s, 12.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp77g0z1qy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp77g0z1qy.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.040261 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    24.84 tests/s, 49.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |x| x % 11\
    \ == 0 || x % 13 == 0 }.count { |x| x.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp82rug_x_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp82rug_x_.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.008401 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    119.03 tests/s, 238.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphs37ye6q\n\
    Started\n.\nFinished in 0.055403 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    18.05 tests/s, 144.40 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0c67ej81\n\
    Started\n.\nFinished in 0.085321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    11.72 tests/s, 93.76 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9rgyu4s\n\
    Started\n.\nFinished in 0.055565 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    18.00 tests/s, 143.98 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqe7x2ir\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqe7x2ir.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.008657 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    115.51 tests/s, 115.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1a6hhrr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1a6hhrr.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003799 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    263.23 tests/s, 263.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).count { |i| i % 11\
    \ == 0 || i % 13 == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr3smln7p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr3smln7p.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003118 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.72 tests/s, 320.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select{|x| x % 11 ==\
    \ 0 || x % 13 == 0}.count{|x| x.to_s.include?(\"7\")}\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1nallwa\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1nallwa.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003587 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    278.78 tests/s, 557.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp946w_s89\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp946w_s89.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003159 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    316.56 tests/s, 316.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm12v0b9y\n\
    Started\n.\nFinished in 0.033864 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    29.53 tests/s, 236.24 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0m48bojz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0m48bojz.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.00308 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.68 tests/s, 324.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpem696ehc\n\
    Started\n.\nFinished in 0.025284 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    39.55 tests/s, 316.41 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9_0w3fk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9_0w3fk.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003341 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    299.31 tests/s, 299.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptiew85gb\n\
    Started\n.\nFinished in 0.043689 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    22.89 tests/s, 183.11 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbcpzv_wr\n\
    Started\n.\nFinished in 0.111546 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    8.96 tests/s, 71.72 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3erzr9kv\n\
    Started\n.\nFinished in 0.02195 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.56 tests/s, 364.46 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy660tfcf\n\
    Started\n.\nFinished in 0.061944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    16.14 tests/s, 129.15 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ym8icl5\n\
    Started\n.\nFinished in 0.023301 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    42.92 tests/s, 343.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfux1772b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfux1772b.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003322 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    301.02 tests/s, 301.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bg9hsnw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bg9hsnw.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.027856 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    35.90 tests/s, 35.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwvnltog9\n\
    Started\n.\nFinished in 0.081106 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    12.33 tests/s, 98.64 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaua2cmdv\n\
    Started\n.\nFinished in 0.022229 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.99 tests/s, 359.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmsysxr1e\n\
    Started\n.\nFinished in 0.039236 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    25.49 tests/s, 203.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx0o8hry2\n\
    Started\n.\nFinished in 0.073765 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    13.56 tests/s, 108.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpta_bbixl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpta_bbixl.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.003016 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.56 tests/s, 331.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd504czjp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd504czjp.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003219 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.66 tests/s, 621.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmlwinb2q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmlwinb2q.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.002954 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.52 tests/s, 338.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp41z8__91\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp41z8__91.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003048 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    328.08 tests/s, 656.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg4ixvqgm\n\
    Started\n.\nFinished in 0.022232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.98 tests/s, 359.84 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpshyxn_v1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpshyxn_v1.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.008789 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    113.78 tests/s, 113.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.split('').count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplst55zcn\n\
    Started\n.\nFinished in 0.057868 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    17.28 tests/s, 138.25 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    count += 1 if num % 11 == 0 || num % 13 == 0 && num.to_s.include?(\"\
    7\")\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr8e8ujmx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr8e8ujmx.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.003099 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    322.68 tests/s, 322.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplfi13b3e\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplfi13b3e.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003097 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    322.89 tests/s, 645.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc41r_yvu\n\
    Started\n.\nFinished in 0.110868 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    9.02 tests/s, 72.16 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqn_em5_4\n\
    Started\n.\nFinished in 0.091406 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    10.94 tests/s, 87.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).count { |i| i % 11\
    \ == 0 || i % 13 == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcg299u3b\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcg299u3b.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003068 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.95 tests/s, 325.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk8uy7v5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk8uy7v5.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.017297 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    57.81 tests/s, 57.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdtb2d_j\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdtb2d_j.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.004141 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    241.49 tests/s, 241.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsh2fxh6l\n\
    Started\n.\nFinished in 0.06803 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    14.70 tests/s, 117.60 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    count += 1 if num % 11 == 0 || num % 13 == 0 && num.to_s.include?(\"\
    7\")\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52c8z0g_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52c8z0g_.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.004315 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    231.75 tests/s, 231.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    count += 1 if num % 11 == 0 || num % 13 == 0 && num.to_s.include?(\"\
    7\")\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk1ml8hey\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk1ml8hey.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.023895 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.85 tests/s, 41.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9skcwcl\n\
    Started\n.\nFinished in 0.031541 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    31.70 tests/s, 253.64 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0 && i.to_s.include?(\"7\")\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4y4eduo5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4y4eduo5.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.030139 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    33.18 tests/s, 33.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += 1 if num.to_s.include?(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg43t_5pj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg43t_5pj.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.033877 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    29.52 tests/s, 59.04 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofy38t1g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofy38t1g.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003245 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    308.17 tests/s, 308.17 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkyv8dcle\n\
    Started\n.\nFinished in 0.024566 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    40.71 tests/s, 325.65 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxk1db0ta\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxk1db0ta.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006048 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    165.34 tests/s, 165.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkei5ix14\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkei5ix14.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003477 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    287.60 tests/s, 575.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphn8r9wkf\n\
    Started\n.\nFinished in 0.06146 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    16.27 tests/s, 130.17 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_h9qdz0\n\
    Started\n.\nFinished in 0.068919 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    14.51 tests/s, 116.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuwifnp5n\n\
    Started\n.\nFinished in 0.050623 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    19.75 tests/s, 158.03 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcodxp3j2\n\
    Started\n.\nFinished in 0.026143 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    38.25 tests/s, 306.01 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbb_q9roy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbb_q9roy.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.0035 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    285.71 tests/s, 571.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmadc5mr9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmadc5mr9.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003572 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    279.96 tests/s, 279.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy0y5xc34\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy0y5xc34.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.004989 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    200.44 tests/s, 200.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if i % 11 == 0 || i % 13 == 0\n  end\n  count\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4qolkvh4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4qolkvh4.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.002995 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.89 tests/s, 333.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwqsubhlv\n\
    Started\n.\nFinished in 0.025119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    39.81 tests/s, 318.48 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiacoqkdi\n\
    Started\n.\nFinished in 0.037783 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    26.47 tests/s, 211.74 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppo5qtvxq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppo5qtvxq.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.75 tests/s, 310.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzb12bo7f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzb12bo7f.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.004299 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    232.61 tests/s, 232.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      num.to_s.split('').each\
    \ do |digit|\n        count += 1 if digit == '7'\n      end\n    end\n  end\n\
    \  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp29eyi3n\n\
    Started\n.\nFinished in 0.104932 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    9.53 tests/s, 76.24 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |x| x % 11\
    \ == 0 || x % 13 == 0 }.count { |x| x.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc338y_h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc338y_h.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003253 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.41 tests/s, 614.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ay1ygds\n\
    Started\n.\nFinished in 0.058709 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    17.03 tests/s, 136.27 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.split('').count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uf1164f\n\
    Started\n.\nFinished in 0.098313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    10.17 tests/s, 81.37 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopdhr7yl\n\
    Started\n.\nFinished in 0.027863 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    35.89 tests/s, 287.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp83dbp7rp\n\
    Started\n.\nFinished in 0.022144 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.16 tests/s, 361.27 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdaduisqk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdaduisqk.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.019259 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    51.92 tests/s, 103.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.split('').count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wbct16u\n\
    Started\n.\nFinished in 0.077484 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    12.91 tests/s, 103.25 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.split('').count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpegxwpwnh\n\
    Started\n.\nFinished in 0.063086 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.85 tests/s, 126.81 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptb5rewwk\n\
    Started\n.\nFinished in 0.059131 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    16.91 tests/s, 135.29 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_58cm8l\n\
    Started\n.\nFinished in 0.067303 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    14.86 tests/s, 118.87 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).count { |i| i % 11\
    \ == 0 || i % 13 == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqw883cg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqw883cg.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<7>\n===============================================================================\n\
    \nFinished in 0.003072 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.52 tests/s, 325.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpla7dq3ip\n\
    Started\n.\nFinished in 0.029801 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    33.56 tests/s, 268.45 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    count += 1 if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?('7')\n\
    \  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvq_45a31\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvq_45a31.rb:20:in\
    \ `test_fizz_buzz'\n     17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n\
    \     19:     assert_equal(0, candidate.call(50))\n  => 20:     assert_equal(2,\
    \ candidate.call(78))\n     21:     assert_equal(3, candidate.call(79))\n    \
    \ 22:     assert_equal(3, candidate.call(100))\n     23:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003014 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.79 tests/s, 663.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyx2trbwn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyx2trbwn.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003337 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    299.67 tests/s, 599.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyay6_89k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyay6_89k.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.007417 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    134.83 tests/s, 269.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponfhvd9_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponfhvd9_.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.005825 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    171.67 tests/s, 171.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkw9n3qt4\n\
    Started\n.\nFinished in 0.022108 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    45.23 tests/s, 361.86 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7844ekza\n\
    Started\n.\nFinished in 0.088014 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    11.36 tests/s, 90.89 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9lw2xvm6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9lw2xvm6.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003292 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    303.77 tests/s, 303.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn67z7l7e\n\
    Started\n.\nFinished in 0.049582 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    20.17 tests/s, 161.35 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6x0b9bvs\n\
    Started\n.\nFinished in 0.063602 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.72 tests/s, 125.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  return 0 if n < 7\n  (7...n).select\
    \ { |i| i % 11 == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp121pnbrf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp121pnbrf.rb:17:in\
    \ `test_fizz_buzz'\n     14:   def test_fizz_buzz\n     15:     candidate = method(:fizz_buzz)\n\
    \     16:     assert_equal(0, candidate.call(50))\n  => 17:     assert_equal(2,\
    \ candidate.call(78))\n     18:     assert_equal(3, candidate.call(79))\n    \
    \ 19:     assert_equal(3, candidate.call(100))\n     20:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.005399 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    185.22 tests/s, 370.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsyskcn3i\n\
    Started\n.\nFinished in 0.111595 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    8.96 tests/s, 71.69 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kpt2ht8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kpt2ht8.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.58 tests/s, 627.16 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfk8ikxqw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfk8ikxqw.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003957 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    252.72 tests/s, 252.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7e_3ts3g\n\
    Started\n.\nFinished in 0.032173 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    31.08 tests/s, 248.66 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdi9wwdo6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdi9wwdo6.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003088 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.83 tests/s, 323.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqa261qk9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqa261qk9.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.002982 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    335.35 tests/s, 335.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # TODO: return the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13.\n  count = 0\n  (1..n).each do |i|\n    if i % 11 == 0 || i % 13 == 0\n\
    \      count += i.to_s.count(\"7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu3k6fy6s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu3k6fy6s.rb:23:in\
    \ `test_fizz_buzz'\n     20:   def test_fizz_buzz\n     21:     candidate = method(:fizz_buzz)\n\
    \     22:     assert_equal(0, candidate.call(50))\n  => 23:     assert_equal(2,\
    \ candidate.call(78))\n     24:     assert_equal(3, candidate.call(79))\n    \
    \ 25:     assert_equal(3, candidate.call(100))\n     26:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<3>\n===============================================================================\n\
    \nFinished in 0.009316 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    107.34 tests/s, 214.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3p3nq8kr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3p3nq8kr.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.00315 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    317.46 tests/s, 317.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count(\"\
    7\")\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptzkkeq3t\n\
    Started\n.\nFinished in 0.022412 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.62 tests/s, 356.95 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  (1...n).select { |i| i % 11\
    \ == 0 || i % 13 == 0 }.count { |i| i.to_s.include?('7') }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate\
    \ = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n    assert_equal(2,\
    \ candidate.call(78))\n    assert_equal(3, candidate.call(79))\n    assert_equal(3,\
    \ candidate.call(100))\n    assert_equal(6, candidate.call(200))\n    assert_equal(192,\
    \ candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n    assert_equal(8026,\
    \ candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf6sr1ys\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf6sr1ys.rb:16:in\
    \ `test_fizz_buzz'\n     13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n\
    \     15:     assert_equal(0, candidate.call(50))\n  => 16:     assert_equal(2,\
    \ candidate.call(78))\n     17:     assert_equal(3, candidate.call(79))\n    \
    \ 18:     assert_equal(3, candidate.call(100))\n     19:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.004056 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    246.55 tests/s, 493.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpor6dbfvz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpor6dbfvz.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003008 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.45 tests/s, 664.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      i.to_s.split('').each do |digit|\n\
    \        count += 1 if digit == '7'\n      end\n    end\n  end\n  count\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8euxsnbb\n\
    Started\n.\nFinished in 0.055053 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    18.16 tests/s, 145.31 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjmp25zq\n\
    Started\n.\nFinished in 0.044112 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    22.67 tests/s, 181.36 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1t69eld\n\
    Started\n.\nFinished in 0.132595 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    7.54 tests/s, 60.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptfiy4q96\n\
    Started\n.\nFinished in 0.02496 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    40.06 tests/s, 320.51 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9rr7u883\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9rr7u883.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.027859 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    35.90 tests/s, 71.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgsdca0xu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgsdca0xu.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.003137 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.78 tests/s, 318.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdb95abzs\n\
    Started\n.\nFinished in 0.139595 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    7.16 tests/s, 57.31 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # Your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprkplzcol\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprkplzcol.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.038047 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    26.28 tests/s, 26.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy9krpzg4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy9krpzg4.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.003723 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    268.60 tests/s, 537.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwskc0y7t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwskc0y7t.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.00359 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    278.55 tests/s, 278.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8vciwhr6\n\
    Started\n.\nFinished in 0.087631 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    11.41 tests/s, 91.29 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    count += 1 if num % 11 == 0 || num % 13 == 0 && num.to_s.include?(\"\
    7\")\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj39lvbvj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj39lvbvj.rb:19:in\
    \ `test_fizz_buzz'\n     16: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 17:   def test_fizz_buzz\n     18:     candidate = method(:fizz_buzz)\n  =>\
    \ 19:     assert_equal(0, candidate.call(50))\n     20:     assert_equal(2, candidate.call(78))\n\
    \     21:     assert_equal(3, candidate.call(79))\n     22:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<4>\n===============================================================================\n\
    \nFinished in 0.009505 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    105.21 tests/s, 105.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if (i % 11 == 0 || i % 13 == 0) && i.to_s.include?(\"7\")\n      count\
    \ += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n\
    \    assert_equal(0, candidate.call(50))\n    assert_equal(2, candidate.call(78))\n\
    \    assert_equal(3, candidate.call(79))\n    assert_equal(3, candidate.call(100))\n\
    \    assert_equal(6, candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n\
    \    assert_equal(639, candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n\
    \  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy_osjgrc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy_osjgrc.rb:22:in\
    \ `test_fizz_buzz'\n     19:   def test_fizz_buzz\n     20:     candidate = method(:fizz_buzz)\n\
    \     21:     assert_equal(0, candidate.call(50))\n  => 22:     assert_equal(2,\
    \ candidate.call(78))\n     23:     assert_equal(3, candidate.call(79))\n    \
    \ 24:     assert_equal(3, candidate.call(100))\n     25:     assert_equal(6, candidate.call(200))\n\
    <2> expected but was\n<1>\n===============================================================================\n\
    \nFinished in 0.004365 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    229.10 tests/s, 458.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbocev988\n\
    Started\n.\nFinished in 0.10295 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    9.71 tests/s, 77.71 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count(\"7\")\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv4i_6bta\n\
    Started\n.\nFinished in 0.056756 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    17.62 tests/s, 140.95 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcjoq7b9t\n\
    Started\n.\nFinished in 0.03284 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    30.45 tests/s, 243.61 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnp628zrl\n\
    Started\n.\nFinished in 0.039906 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    25.06 tests/s, 200.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3lqdzmfm\n\
    Started\n.\nFinished in 0.024913 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    40.14 tests/s, 321.12 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      num.to_s.each_char do |char|\n\
    \        count += 1 if char == \"7\"\n      end\n    end\n  end\n  count\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfromke3f\n\
    Started\n.\nFinished in 0.063959 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    15.64 tests/s, 125.08 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |i|\n    if i % 11 == 0 || i % 13 == 0\n      count += i.to_s.count('7')\n \
    \   end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcv_cvhfp\n\
    Started\n.\nFinished in 0.026138 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    38.26 tests/s, 306.07 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp_z72r5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp_z72r5.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.005718 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    174.89 tests/s, 174.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfc2brj9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfc2brj9.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.004138 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    241.66 tests/s, 241.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  count = 0\n  (1...n).each do\
    \ |num|\n    if num % 11 == 0 || num % 13 == 0\n      count += num.to_s.count('7')\n\
    \    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fizz_buzz\n    candidate = method(:fizz_buzz)\n    assert_equal(0,\
    \ candidate.call(50))\n    assert_equal(2, candidate.call(78))\n    assert_equal(3,\
    \ candidate.call(79))\n    assert_equal(3, candidate.call(100))\n    assert_equal(6,\
    \ candidate.call(200))\n    assert_equal(192, candidate.call(4000))\n    assert_equal(639,\
    \ candidate.call(10000))\n    assert_equal(8026, candidate.call(100000))\n  end\n\
    end\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmagm1sfk\n\
    Started\n.\nFinished in 0.022703 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    44.05 tests/s, 352.38 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
    # 2\n# >>> fizz_buzz(79)\n# 3\ndef fizz_buzz(n)\n  # your code here\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fizz_buzz\n\
    \    candidate = method(:fizz_buzz)\n    assert_equal(0, candidate.call(50))\n\
    \    assert_equal(2, candidate.call(78))\n    assert_equal(3, candidate.call(79))\n\
    \    assert_equal(3, candidate.call(100))\n    assert_equal(6, candidate.call(200))\n\
    \    assert_equal(192, candidate.call(4000))\n    assert_equal(639, candidate.call(10000))\n\
    \    assert_equal(8026, candidate.call(100000))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyxmf31yg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_fizz_buzz(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyxmf31yg.rb:15:in\
    \ `test_fizz_buzz'\n     12: class TestHumanEval < Test::Unit::TestCase\n    \
    \ 13:   def test_fizz_buzz\n     14:     candidate = method(:fizz_buzz)\n  =>\
    \ 15:     assert_equal(0, candidate.call(50))\n     16:     assert_equal(2, candidate.call(78))\n\
    \     17:     assert_equal(3, candidate.call(79))\n     18:     assert_equal(3,\
    \ candidate.call(100))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.00288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    347.22 tests/s, 347.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception

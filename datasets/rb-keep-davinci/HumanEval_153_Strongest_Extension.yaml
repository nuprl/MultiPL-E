name: HumanEval_153_Strongest_Extension
language: ruby
prompt: "# You will be given the name of a class (a string) and a list of extensions.\n\
  # The extensions are to be used to load additional classes to the class. The\n#\
  \ strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  # letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n# in the extension's name, the strength is given by the fraction CAP - SM. \n\
  # You should find the strongest extension and return a string in this \n# format:\
  \ ClassName.StrongestExtensionName.\n# If there are two or more extensions with\
  \ the same strength, you should\n# choose the one that comes first in the list.\n\
  # For example, if you are given \"Slices\" as the class and a list of the\n# extensions:\
  \ ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n# return 'Slices.SErviNGSliCes'\
  \ since 'SErviNGSliCes' is the strongest extension \n# (its strength is -1).\n#\
  \ Example:\n# for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n\
  def Strongest_Extension(class_name, extensions)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Strongest_Extension\n\
  \    candidate = method(:Strongest_Extension)\n    assert_equal(\"Watashi.eIGHt8OKe\"\
  , candidate.call(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]))\n    assert_equal(\"\
  Boku123.YEs.WeCaNe\", candidate.call(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\"]))\n    assert_equal(\"__YESIMHERE.NuLl__\", candidate.call(\"__YESIMHERE\"\
  , [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]))\n\
  \    assert_equal(\"K.TAR\", candidate.call(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
  , \"cosSo\"]))\n    assert_equal(\"__HAHA.123\", candidate.call(\"__HAHA\", [\"\
  Tab\", \"123\", \"781345\", \"-_-\"]))\n    assert_equal(\"YameRore.okIWILL123\"\
  , candidate.call(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\"\
  , \"-_-\"]))\n    assert_equal(\"finNNalLLly.WoW\", candidate.call(\"finNNalLLly\"\
  , [\"Die\", \"NowW\", \"Wow\", \"WoW\"]))\n    assert_equal(\"_.Bb\", candidate.call(\"\
  _\", [\"Bb\", \"91245\"]))\n    assert_equal(\"Sp.671235\", candidate.call(\"Sp\"\
  , [\"671235\", \"Bb\"]))\n  end\nend\n"
completions: ["  # your code here\nend", "\textensions.sort_by!{|x| [x.count(\"A-Z\"\
    ), x.count(\"a-z\")]}.reverse!\n\treturn class_name + \".\" + extensions[0]\n\
    end", "  # your code here\nend", "  strongest_extension = extensions.max_by do\
    \ |extension|\n    cap = extension.count('A-Z')\n    sm = extension.count('a-z')\n\
    \    cap - sm\n  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strength\
    \ = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n    cap =\
    \ extension.count('A-Z')\n    sm = extension.count('a-z')\n    if cap - sm > strength\n\
    \      strength = cap - sm\n      strongest_extension = extension\n    end\n \
    \ end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  # your code here\n  #puts extensions\n  #puts class_name\n  #puts extensions.max_by\
    \ { |x| x.count(\"A-Z\") - x.count(\"a-z\") }\n  class_name + \".\" + extensions.max_by\
    \ { |x| x.count(\"A-Z\") - x.count(\"a-z\") }\nend", "  strongest_extension =\
    \ extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  # your code here\nend", "  strongest_extension = extensions.max_by do |extension|\n\
    \    extension.count('A-Z') - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  strongest_extension = extensions.max_by { |extension|\
    \ extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "  # your code here\nend", "  strength = 0\n\
    \  strongest_extension = ''\n  extensions.each do |extension|\n    cap = extension.count('A-Z')\n\
    \    sm = extension.count('a-z')\n    if cap - sm > strength\n      strength =\
    \ cap - sm\n      strongest_extension = extension\n    end\n  end\n  return \"\
    #{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # Your code here\nend", "  strongest_extension = extensions.max_by do |extension|\n\
    \    extension.count('A-Z') - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strength = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n\
    \    cap = extension.count('A-Z')\n    sm = extension.count('a-z')\n    if cap\
    \ - sm > strength\n      strength = cap - sm\n      strongest_extension = extension\n\
    \    end\n  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strength = 0\n  strongest_extension\
    \ = \"\"\n  extensions.each do |extension|\n    cap = extension.count(\"A-Z\"\
    )\n    sm = extension.count(\"a-z\")\n    if cap - sm > strength\n      strength\
    \ = cap - sm\n      strongest_extension = extension\n    end\n  end\n  return\
    \ \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strength = 0\n  strongest_extension = \"\"\n  extensions.each do |extension|\n\
    \    cap = extension.count(\"A-Z\")\n    sm = extension.count(\"a-z\")\n    if\
    \ cap - sm > strength\n      strength = cap - sm\n      strongest_extension =\
    \ extension\n    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count(\"A-Z\"\
    ) - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  strongest_extension = extensions.max_by { |extension|\
    \ extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strength = 0\n  strongest_extension = \"\"\n  extensions.each do |extension|\n\
    \    cap = extension.count(\"A-Z\")\n    sm = extension.count(\"a-z\")\n    if\
    \ cap - sm > strength\n      strength = cap - sm\n      strongest_extension =\
    \ extension\n    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count(\"\
    A-Z\") - extension.count(\"a-z\")\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strength = 0\n  strongest_extension = \"\"\n  extensions.each do |extension|\n\
    \    extension_strength = extension.count(\"A-Z\") - extension.count(\"a-z\")\n\
    \    if extension_strength > strength\n      strength = extension_strength\n \
    \     strongest_extension = extension\n    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count(\"\
    A-Z\") - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count(\"\
    A-Z\") - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "  strongest_extension = ''\n  strongest_extension_strength\
    \ = 0\n  extensions.each do |extension|\n    strength = extension.count('A-Z')\
    \ - extension.count('a-z')\n    if strength > strongest_extension_strength\n \
    \     strongest_extension_strength = strength\n      strongest_extension = extension\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # Your code here\nend",
  "  # your code here\nend", "  # your code here\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count(\"A-Z\") - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  # your code here\n  strongest = 0\n  strongest_extension\
    \ = \"\"\n  extensions.each do |extension|\n    cap = extension.count(\"A-Z\"\
    )\n    sm = extension.count(\"a-z\")\n    strength = cap - sm\n    if strength\
    \ > strongest\n      strongest = strength\n      strongest_extension = extension\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count(\"A-Z\") - extension.count(\"\
    a-z\")\n  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = ''\n  strength = 0\n  extensions.each do |extension|\n    cap = extension.count('A-Z')\n\
    \    sm = extension.count('a-z')\n    if cap - sm > strength\n      strength =\
    \ cap - sm\n      strongest_extension = extension\n    end\n  end\n  return class_name\
    \ + '.' + strongest_extension\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "\textensions.sort_by!{|x| x.count(\"A-Z\"\
    ) - x.count(\"a-z\")}\n\treturn \"#{class_name}.#{extensions.last}\"\nend", " \
    \ strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.first\n  strongest_extension_strength\
    \ = 0\n  extensions.each do |extension|\n    strength = extension.count('A-Z')\
    \ - extension.count('a-z')\n    if strength > strongest_extension_strength\n \
    \     strongest_extension = extension\n      strongest_extension_strength = strength\n\
    \    end\n  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  extensions.map!\
    \ do |extension|\n    extension.split('').map do |letter|\n      if letter ==\
    \ letter.upcase\n        1\n      else\n        -1\n      end\n    end.reduce(:+)\n\
    \  end\n  class_name + '.' + extensions.each_with_index.max[1].to_s\nend", " \
    \ strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  # your code here\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count(\"A-Z\") - extension.count(\"a-z\")\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strength = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n\
    \    extension_strength = extension.count('A-Z') - extension.count('a-z')\n  \
    \  if extension_strength > strength\n      strength = extension_strength\n   \
    \   strongest_extension = extension\n    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # Your code here\n  # You can add helper functions if you want\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # Your code here\nend", "  # your code here\n  strongest = 0\n  strongest_extension\
    \ = ''\n  extensions.each do |extension|\n    cap = extension.count(\"A-Z\")\n\
    \    sm = extension.count(\"a-z\")\n    strength = cap - sm\n    if strength >\
    \ strongest\n      strongest = strength\n      strongest_extension = extension\n\
    \    end\n  end\n  return class_name + '.' + strongest_extension\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  extensions.map { |ext| [ext, ext.count(\"A-Z\") - ext.count(\"a-z\")] }\n   \
    \         .max_by { |_, strength| strength }\n            .first\n           \
    \ .prepend(\"#{class_name}.\")\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # Your code here\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count(\"A-Z\") - extension.count(\"a-z\")\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count(\"A-Z\") - extension.count(\"a-z\")\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strength = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n\
    \    cap = extension.count('A-Z')\n    sm = extension.count('a-z')\n    if cap\
    \ - sm > strength\n      strength = cap - sm\n      strongest_extension = extension\n\
    \    end\n  end\n  class_name + '.' + strongest_extension\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # Your code here\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  # Your code here\nend", "  # your code here\nend",
  "  # Your code here\n  strongest = 0\n  strongest_extension = \"\"\n  extensions.each\
    \ do |extension|\n    cap = extension.count(\"A-Z\")\n    sm = extension.count(\"\
    a-z\")\n    strength = cap - sm\n    if strength > strongest\n      strongest\
    \ = strength\n      strongest_extension = extension\n    end\n  end\n  return\
    \ \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend", " \
    \ strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  # your code here\nend", "  # Your code here\n  # Find the strongest extension\n\
    \  # Return the string in the format: ClassName.StrongestExtensionName\n  # If\
    \ there are two or more extensions with the same strength, you should\n  # choose\
    \ the one that comes first in the list.\n  # For example, if you are given \"\
    Slices\" as the class and a list of the\n  # extensions: ['SErviNGSliCes', 'Cheese',\
    \ 'StuFfed'] then you should\n  # return 'Slices.SErviNGSliCes' since 'SErviNGSliCes'\
    \ is the strongest extension \n  # (its strength is -1).\n  # Example:\n  # for\
    \ Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strength = 0\n  strongest_extension\
    \ = ''\n  extensions.each do |extension|\n    cap = extension.count('A-Z')\n \
    \   sm = extension.count('a-z')\n    if cap - sm > strength\n      strength =\
    \ cap - sm\n      strongest_extension = extension\n    end\n  end\n  class_name\
    \ + '.' + strongest_extension\nend", "  # your code here\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count(\"\
    A-Z\") - extension.count(\"a-z\")\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  # your code here\nend", "  # your code here\nend", "  # your code here\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count(\"A-Z\"\
    ) - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # your code here\nend", "  strongest_extension = extensions.first\n  strongest_extension_strength\
    \ = 0\n  extensions.each do |extension|\n    extension_strength = extension.count('A-Z')\
    \ - extension.count('a-z')\n    if extension_strength > strongest_extension_strength\n\
    \      strongest_extension = extension\n      strongest_extension_strength = extension_strength\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # Your code here\nend",
  "  # Your code here\nend", "  strongest_extension = extensions.max_by do |extension|\n\
    \    extension.count('A-Z') - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "  # your code here\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  # your code here\nend", "  strongest_extension = extensions.max_by { |extension|\
    \ extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # Your code goes here\nend", "  # your code here\nend", "  # your code\
    \ here\nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strength = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n\
    \    cap = extension.count('A-Z')\n    sm = extension.count('a-z')\n    if cap\
    \ - sm > strength\n      strength = cap - sm\n      strongest_extension = extension\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strength\
    \ = 0\n  strongest_extension = \"\"\n  extensions.each do |extension|\n    cap\
    \ = extension.count(\"A-Z\")\n    sm = extension.count(\"a-z\")\n    if (cap -\
    \ sm) > strength\n      strength = cap - sm\n      strongest_extension = extension\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  # Your code here\n  strongest_extension = nil\n  strongest_extension_strength\
    \ = 0\n  extensions.each do |extension|\n    strength = extension.count(\"A-Z\"\
    ) - extension.count(\"a-z\")\n    if strength > strongest_extension_strength\n\
    \      strongest_extension_strength = strength\n      strongest_extension = extension\n\
    \    end\n  end\n  return \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.count('A-Z') - extension.count('a-z')\n\
    \  end\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension\
    \ = extensions.max_by do |extension|\n    extension.chars.count { |char| char.match(/[A-Z]/)\
    \ } -\n    extension.chars.count { |char| char.match(/[a-z]/) }\n  end\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # Your code here\n  # You can add helper functions\n  strongest_extension = extensions.max_by\
    \ do |extension|\n    extension.count(\"A-Z\") - extension.count(\"a-z\")\n  end\n\
    \  \"#{class_name}.#{strongest_extension}\"\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # Your code here\n  strongest_extension = extensions.max_by { |extension|\
    \ extension.count(\"A-Z\") - extension.count(\"a-z\") }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  # your code here\nend", "  strongest_extension = extensions.max_by\
    \ { |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strength = 0\n  strongest_extension = ''\n  extensions.each do |extension|\n\
    \    cap = extension.count('A-Z')\n    sm = extension.count('a-z')\n    if cap\
    \ - sm > strength\n      strength = cap - sm\n      strongest_extension = extension\n\
    \    end\n  end\n  class_name + '.' + strongest_extension\nend", "  # your code\
    \ here\nend", "  # your code here\nend", "  # Your code here\nend", "  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # your code here\nend",
  "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  # Your code here\nend", "  strongest_extension = extensions.max_by {\
    \ |extension| extension.count('A-Z') - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\
    \nend", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  # Your code here\nend", "  # Your code here\nend", "  # your code here\n  strongest_extension\
    \ = extensions.max_by { |extension| extension.count('A-Z') - extension.count('a-z')\
    \ }\n  \"#{class_name}.#{strongest_extension}\"\nend", "  # Your code here\nend",
  "  ext_strength = {}\n  extensions.each do |ext|\n    ext_strength[ext] = ext.count('A-Z')\
    \ - ext.count('a-z')\n  end\n  class_name + '.' + ext_strength.max_by{|k,v| v}.first\n\
    end", "  strongest_extension = extensions.max_by { |extension| extension.count('A-Z')\
    \ - extension.count('a-z') }\n  \"#{class_name}.#{strongest_extension}\"\nend",
  "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end", "  strongest_extension = extensions.max_by do |extension|\n    extension.count('A-Z')\
    \ - extension.count('a-z')\n  end\n  \"#{class_name}.#{strongest_extension}\"\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_138_is_equal_to_sum_even
language: ruby
prompt: "# Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n# Example\n# is_equal_to_sum_even(4) == False\n# is_equal_to_sum_even(6)\
  \ == False\n# is_equal_to_sum_even(8) == True\ndef is_equal_to_sum_even(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_equal_to_sum_even\n\
  \    candidate = method(:is_equal_to_sum_even)\n    assert_equal(false, candidate.call(4))\n\
  \    assert_equal(false, candidate.call(6))\n    assert_equal(true, candidate.call(8))\n\
  \    assert_equal(true, candidate.call(10))\n    assert_equal(false, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(12))\n    assert_equal(false, candidate.call(13))\n\
  \    assert_equal(true, candidate.call(16))\n  end\nend\n"
completions: ["  # your code here\nend", "  return false if n < 8\n  (n - 8).step(0,\
    \ -2) do |i|\n    return true if is_equal_to_sum_even(i)\n  end\n  false\nend",
  "  # your code here\nend", "  # your code here\nend", "  return false if n < 8\n\
    \  return true if n == 8\n  (n - 8).step(2, -2).any? { |i| is_equal_to_sum_even(i)\
    \ }\nend", "  # your code here\nend", "  # your code here\nend", "  # TODO: implement\
    \ this method\nend", "  # Your code here\nend", "  # your code here\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  # Your code here\nend",
  "  # your code here\nend", "  return false if n < 8\n  return true if n == 8\n \
    \ (n - 8).even?\nend", "  # your code here\nend", "  # your code here\nend", " \
    \ (1..n).each do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n     \
    \   (1..n).each do |l|\n          return true if i + j + k + l == n && i.even?\
    \ && j.even? && k.even? && l.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  return false if n < 8\n  (n / 2).downto(2) do |i|\n    (i -\
    \ 1).downto(1) do |j|\n      (j - 1).downto(1) do |k|\n        (k - 1).downto(1)\
    \ do |l|\n          return true if i + j + k + l == n\n        end\n      end\n\
    \    end\n  end\n  false\nend", "  # Write your code here\nend", "  (1..n).each\
    \ do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n        (1..n).each\
    \ do |l|\n          if i + j + k + l == n && i.even? && j.even? && k.even? &&\
    \ l.even?\n            return true\n          end\n        end\n      end\n  \
    \  end\n  end\n  false\nend", "  # write your code here\nend", "  # your code\
    \ here\nend", "  # your code here\nend", "  # Write your code here\nend", "  #\
    \ your code here\nend", "  # your code here\nend", "  # Write your code here\n\
    end", "  if n % 2 == 0\n    return true\n  else\n    return false\n  end\nend",
  "  # your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  return false if n < 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n   \
    \   (j..n/2).each do |k|\n        (k..n/2).each do |l|\n          return true\
    \ if i + j + k + l == n\n        end\n      end\n    end\n  end\n  false\nend",
  "  # your code here\nend", "  # Write your code here\nend", "  # your code here\n\
    end", "  # your code here\nend", "  # your code here\nend", "  # your code here\n\
    end", "  # your code here\nend", "  return false if n < 8\n  return true if n\
    \ == 8\n  (n - 8).even?\nend", "  # Your code here\nend", "  # your code here\n\
    end", "  # your code here\nend", "  # your code here\nend", "  # your code here\n\
    end", "  # your code here\nend", "  # your code here\nend", "  # your code here\n\
    end", "  # Your code here\nend", "  # Your code here\nend", "  return false if\
    \ n < 8\n  (n / 2).downto(2) do |i|\n    return true if (n - i).even?\n  end\n\
    \  false\nend", "  # your code here\nend", "  # your code here\nend", "  return\
    \ false if n < 8\n  (1..n/2).each do |i|\n    (1..n/2).each do |j|\n      (1..n/2).each\
    \ do |k|\n        (1..n/2).each do |l|\n          return true if i + j + k + l\
    \ == n && i.even? && j.even? && k.even? && l.even?\n        end\n      end\n \
    \   end\n  end\n  false\nend", "  # Write your code here\nend", "  # your code\
    \ here\nend", "  # Write your code here\nend", "  return false if n < 8\n  return\
    \ true if n == 8\n  (n - 8).even?\nend", "  # your code here\nend", "  return\
    \ false if n < 8\n  (n / 2).downto(2) do |i|\n    return true if i.even? && (n\
    \ - i).even? && is_equal_to_sum_even(n - i)\n  end\n  false\nend", "  (1..n).each\
    \ do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n        (1..n).each\
    \ do |l|\n          return true if i + j + k + l == n && i.even? && j.even? &&\
    \ k.even? && l.even?\n        end\n      end\n    end\n  end\n  false\nend", " \
    \ (1..n).each do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n     \
    \   (1..n).each do |l|\n          return true if i + j + k + l == n && i.even?\
    \ && j.even? && k.even? && l.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  # your code here\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  # your code here\nend", "  # Write your code here\nend",
  "  # your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # Your code here\nend", "  return false if n < 8\n  return true if n == 8\n \
    \ (n-8).even?\nend", "  # your code here\nend", "  # your code here\nend", " \
    \ # your code here\nend", "  (1..n).each do |i|\n    (1..n).each do |j|\n    \
    \  (1..n).each do |k|\n        (1..n).each do |l|\n          return true if i\
    \ + j + k + l == n && i.even? && j.even? && k.even? && l.even?\n        end\n\
    \      end\n    end\n  end\n  false\nend", "  (1..n).each do |i|\n    (1..n).each\
    \ do |j|\n      (1..n).each do |k|\n        (1..n).each do |l|\n          return\
    \ true if i + j + k + l == n && i.even? && j.even? && k.even? && l.even?\n   \
    \     end\n      end\n    end\n  end\n  false\nend", "  # Your code here\nend",
  "  # your code here\nend", "  # Write your code here\nend", "  (1..n).each do |i|\n\
    \    (1..n).each do |j|\n      (1..n).each do |k|\n        (1..n).each do |l|\n\
    \          return true if i + j + k + l == n && i.even? && j.even? && k.even?\
    \ && l.even?\n        end\n      end\n    end\n  end\n  false\nend", "  # Write\
    \ your code here\nend", "  return false if n < 8\n  (2..n/2).each do |i|\n   \
    \ (i..n/2).each do |j|\n      (j..n/2).each do |k|\n        (k..n/2).each do |l|\n\
    \          return true if i + j + k + l == n\n        end\n      end\n    end\n\
    \  end\n  false\nend", "  # your code here\nend", "  # Your code here\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # Your code here\nend", "  (1..n).each do |a|\n    (1..n).each do |b|\n     \
    \ (1..n).each do |c|\n        (1..n).each do |d|\n          return true if a +\
    \ b + c + d == n && a.even? && b.even? && c.even? && d.even?\n        end\n  \
    \    end\n    end\n  end\n  false\nend", "  return false if n < 4\n  return true\
    \ if n == 4\n  (2..n/2).each do |x|\n    return true if x % 2 == 0 && is_equal_to_sum_even(n\
    \ - x)\n  end\n  false\nend", "  # your code here\nend", "  return false if n\
    \ < 8\n  (n - 8).step(by: -2) do |i|\n    return true if is_equal_to_sum_even(i)\n\
    \  end\n  false\nend", "  # Write your code here\nend", "  # your code here\n\
    end", "  # Write your code here\nend", "  # your code here\nend", "  return false\
    \ if n < 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n      (j..n/2).each\
    \ do |k|\n        (k..n/2).each do |l|\n          return true if i + j + k + l\
    \ == n\n        end\n      end\n    end\n  end\n  false\nend", "  # your code\
    \ here\nend", "  # your code here\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  # your code here\nend", "  # your code here\nend", "  #\
    \ your code here\nend", "  (1..n).each do |a|\n    (1..n).each do |b|\n      (1..n).each\
    \ do |c|\n        (1..n).each do |d|\n          if a + b + c + d == n && a.even?\
    \ && b.even? && c.even? && d.even?\n            return true\n          end\n \
    \       end\n      end\n    end\n  end\n  false\nend", "  return false if n <\
    \ 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n      (j..n/2).each do\
    \ |k|\n        (k..n/2).each do |l|\n          return true if i + j + k + l ==\
    \ n\n        end\n      end\n    end\n  end\n  false\nend", "  # write your code\
    \ here\nend", "  # Your code here\nend", "  # your code here\nend", "  (1..n).each\
    \ do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n        (1..n).each\
    \ do |l|\n          return true if i + j + k + l == n && i.even? && j.even? &&\
    \ k.even? && l.even?\n        end\n      end\n    end\n  end\n  false\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # your code here\nend", "  # your code here\nend", "  # Your code here\nend",
  "  # Your code here\nend", "  # Your code here\nend", "  (1..n/2).each do |i|\n\
    \    (1..n/2).each do |j|\n      (1..n/2).each do |k|\n        (1..n/2).each do\
    \ |l|\n          return true if i + j + k + l == n && i.even? && j.even? && k.even?\
    \ && l.even?\n        end\n      end\n    end\n  end\n  false\nend", "  return\
    \ false if n < 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n      (j..n/2).each\
    \ do |k|\n        (k..n/2).each do |l|\n          return true if i + j + k + l\
    \ == n\n        end\n      end\n    end\n  end\n  false\nend", "  return false\
    \ if n < 8\n  (n - 8).even?\nend", "  # Your code here\nend", "  # your code here\n\
    end", "  (1..n).each do |a|\n    (1..n).each do |b|\n      (1..n).each do |c|\n\
    \        (1..n).each do |d|\n          return true if a + b + c + d == n && a.even?\
    \ && b.even? && c.even? && d.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  (1..n).each do |a|\n    (1..n).each do |b|\n      (1..n).each\
    \ do |c|\n        (1..n).each do |d|\n          return true if a + b + c + d ==\
    \ n && a.even? && b.even? && c.even? && d.even?\n        end\n      end\n    end\n\
    \  end\n  false\nend", "  # your code here\nend", "  return false if n < 8\n \
    \ (1..n/2).each do |i|\n    (1..n/2).each do |j|\n      (1..n/2).each do |k|\n\
    \        (1..n/2).each do |l|\n          return true if i + j + k + l == n &&\
    \ i.even? && j.even? && k.even? && l.even?\n        end\n      end\n    end\n\
    \  end\n  false\nend", "  # Your code here\nend", "  # your code here\nend", " \
    \ # your code here\nend", "  # Write your code here\nend", "  # your code here\n\
    end", "  # Your code here\nend", "  # your code here\nend", "  # your code here\n\
    end", "  # your code here\nend", "  return false if n < 8\n  (2..n/2).each do\
    \ |i|\n    (i..n/2).each do |j|\n      (j..n/2).each do |k|\n        (k..n/2).each\
    \ do |l|\n          return true if i + j + k + l == n\n        end\n      end\n\
    \    end\n  end\n  false\nend", "  # your code here\nend", "  # your code here\n\
    end", "  return false if n < 8\n  return true if n % 2 == 0\n  false\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  # Your code here\nend",
  "  # your code here\nend", "  # your code here\nend", "  return false if n < 8\n\
    \  return true if n == 8\n  (n - 8).even?\nend", "  # Write your code here\nend",
  "  # Your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  (1..n).each do |i|\n    (1..n).each do |j|\n      (1..n).each do |k|\n      \
    \  (1..n).each do |l|\n          return true if i + j + k + l == n && i.even?\
    \ && j.even? && k.even? && l.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  # your code here\nend", "  # Your code here\nend", "  # Write\
    \ your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # your code here\nend", "  return false if n < 8\n  (2..n/2).each do |i|\n  \
    \  (i..n/2).each do |j|\n      (j..n/2).each do |k|\n        (k..n/2).each do\
    \ |l|\n          return true if i + j + k + l == n\n        end\n      end\n \
    \   end\n  end\n  false\nend", "  (1..n).each do |i|\n    (1..n).each do |j|\n\
    \      (1..n).each do |k|\n        (1..n).each do |l|\n          return true if\
    \ i + j + k + l == n && i.even? && j.even? && k.even? && l.even?\n        end\n\
    \      end\n    end\n  end\n  false\nend", "  return false if n % 2 != 0\n  return\
    \ true if n == 8\n  return false if n < 8\n  is_equal_to_sum_even(n - 8)\nend",
  "  (1..n).each do |a|\n    (1..n).each do |b|\n      (1..n).each do |c|\n      \
    \  (1..n).each do |d|\n          return true if a + b + c + d == n && a.even?\
    \ && b.even? && c.even? && d.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  # Write your code here\nend", "  # your code here\nend", " \
    \ return false if n < 8\n  return true if n == 8\n  (n - 8).even?\nend", "  #\
    \ your code here\nend", "  # your code here\nend", "  # your code here\nend",
  "  # TODO: implement this function\nend", "  # your code here\nend", "  # your code\
    \ here\nend", "  # Your code here\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  return false if n < 8\n  (n - 8).even?\nend", "  return\
    \ false if n < 8\n  (n - 8).even?\nend", "  return false if n < 8\n  return true\
    \ if n == 8\n  return true if n == 12\n  return true if n == 16\n  return true\
    \ if n == 20\n  return true if n == 24\n  return true if n == 28\n  return true\
    \ if n == 32\n  return true if n == 36\n  return true if n == 40\n  return true\
    \ if n == 44\n  return true if n == 48\n  return true if n == 52\n  return true\
    \ if n == 56\n  return true if n == 60\n  return true if n == 64\n  return true\
    \ if n == 68\n  return true if n == 72\n  return true if n == 76\n  return true\
    \ if n == 80\n  return true if n == 84\n  return true if n == 88\n  return true\
    \ if n == 92\n  return true if n == 96\n  return true if n == 100\n  return true\
    \ if n == 104\n  return true if n == 108\n  return true if n == 112\n  return\
    \ true if n == 116\n  return true if n == 120\n  return true if n == 124\n  return\
    \ true if n == 128\n  return true if n == 132\n  return true if n == 136\n  return\
    \ true if n == 140\n  return true if n == 144\n  return true if n == 148\n  return\
    \ true if n == 152\n  return true if n == 156\n  return true if n == 160\n  return\
    \ true if n == 164\n  return true if n == 168\n  return true if n == 172\n  return\
    \ true if n == 176\n  return true if n == 180\n  return true if n == 184\n  return\
    \ true if n == 188\n  return true if n == 192\n  return true if n == 196\n  return\
    \ true if n == 200\n  return true if n == 204\n  return true if n == 208\n  return\
    \ true if n == 212\n  return true if n == 216\n  return true if n == 220\n  return\
    \ true if n == 224\n  return true if n == 228\n  return true if n == 232\n  return\
    \ true if n == 236\n  return true if n == 240\n  return true if n == 244\n  return\
    \ true if n == 248\n  return true if n == 252\n  return true if n == 256", " \
    \ # your code here\nend", "  # your code here\nend", "  (1..n/2).each do |a|\n\
    \    (1..n/2).each do |b|\n      (1..n/2).each do |c|\n        (1..n/2).each do\
    \ |d|\n          return true if a + b + c + d == n && a.even? && b.even? && c.even?\
    \ && d.even?\n        end\n      end\n    end\n  end\n  false\nend", "  return\
    \ false if n < 8\n  (2..n-6).each do |i|\n    (i+2..n-4).each do |j|\n      (j+2..n-2).each\
    \ do |k|\n        (k+2..n).each do |l|\n          return true if i + j + k + l\
    \ == n\n        end\n      end\n    end\n  end\n  false\nend", "  return false\
    \ if n < 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n      (j..n/2).each\
    \ do |k|\n        (k..n/2).each do |l|\n          return true if i + j + k + l\
    \ == n\n        end\n      end\n    end\n  end\n  false\nend", "  return false\
    \ if n < 8\n  (2..n/2).each do |i|\n    (i..n/2).each do |j|\n      (j..n/2).each\
    \ do |k|\n        (k..n/2).each do |l|\n          return true if i + j + k + l\
    \ == n\n        end\n      end\n    end\n  end\n  false\nend", "  # your code\
    \ here\nend", "  # Your code here\nend", "  # your code here\nend", "  # Your\
    \ code here\nend", "  return false if n % 2 != 0\n  return false if n < 8\n  return\
    \ true if n == 8\n  for i in 2..n/2\n    for j in 2..n/2\n      for k in 2..n/2\n\
    \        for l in 2..n/2\n          return true if i + j + k + l == n\n      \
    \  end\n      end\n    end\n  end\n  return false\nend", "  return false if n\
    \ < 4\n  return true if n == 4\n  (2..n-2).each do |i|\n    (i..n-i).each do |j|\n\
    \      (j..n-i-j).each do |k|\n        return true if i + j + k + (n - i - j -\
    \ k) == n\n      end\n    end\n  end\n  false\nend", "  # your code here\nend",
  "  (1..n/2).each do |i|\n    (1..n/2).each do |j|\n      (1..n/2).each do |k|\n\
    \        (1..n/2).each do |l|\n          return true if i+j+k+l == n && i.even?\
    \ && j.even? && k.even? && l.even?\n        end\n      end\n    end\n  end\n \
    \ false\nend", "  # your code here\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  (1..n).each do |i|\n    (1..n).each do |j|\n      (1..n).each\
    \ do |k|\n        (1..n).each do |l|\n          return true if i + j + k + l ==\
    \ n && i.even? && j.even? && k.even? && l.even?\n        end\n      end\n    end\n\
    \  end\n  false\nend", "  # your code here\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

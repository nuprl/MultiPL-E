name: HumanEval_161_solve
language: ruby
results:
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tg_ksgv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tg_ksgv.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.027907 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    35.83 tests/s, 71.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphg29n0ew\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphg29n0ew.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    347.22 tests/s, 347.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzlgki42c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzlgki42c.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003091 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.52 tests/s, 647.04 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r0_ftvi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r0_ftvi.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004196 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    238.32 tests/s, 476.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_23b1s3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_23b1s3.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002908 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    343.88 tests/s, 343.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcopvjp2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcopvjp2.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003639 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    274.80 tests/s, 274.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_weuly5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps_weuly5.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.020447 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    48.91 tests/s, 48.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprm9vrh7z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprm9vrh7z.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003215 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    311.04 tests/s, 622.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzj75t8vu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzj75t8vu.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003161 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    316.36 tests/s, 632.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8md8oss9\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8md8oss9.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003175 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    314.96 tests/s, 629.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvvf7odwv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvvf7odwv.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.024177 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.36 tests/s, 41.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxan4eg0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxan4eg0.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002961 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    337.72 tests/s, 675.45 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xz2yf8p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xz2yf8p.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002948 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    339.21 tests/s, 339.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6h6k2b4g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6h6k2b4g.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003081 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.57 tests/s, 649.14 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr(\"a-zA-Z\", \"A-Za-z\").reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_uvjdct4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_uvjdct4.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.00304 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    328.95 tests/s, 328.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyvbnrs1c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyvbnrs1c.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.008391 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    119.18 tests/s, 238.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgdi59m3i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgdi59m3i.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.011096 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    90.12 tests/s, 90.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpva7kcn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpva7kcn.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003004 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.89 tests/s, 665.78 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hd34qr1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hd34qr1.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003168 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.66 tests/s, 631.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptte72z6z\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptte72z6z.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00302 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.13 tests/s, 331.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4q2vdep\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4q2vdep.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00309 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.62 tests/s, 323.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tu63qlf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tu63qlf.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    347.22 tests/s, 347.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf7wx4g80\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf7wx4g80.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.75 tests/s, 621.50 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeuq8xnx5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeuq8xnx5.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.006579 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.00 tests/s, 304.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('A-Za-z', 'a-zA-Z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdfw0g9lz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdfw0g9lz.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.010637 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    94.01 tests/s, 94.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8_4gj5o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8_4gj5o.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002808 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    356.13 tests/s, 356.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp62ngn3pw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp62ngn3pw.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003023 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.80 tests/s, 661.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjcgxct39\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjcgxct39.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003015 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.67 tests/s, 663.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb2hgtemh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb2hgtemh.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003003 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.00 tests/s, 666.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xb5ys48\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xb5ys48.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.005706 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    175.25 tests/s, 350.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycehbonz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycehbonz.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.043289 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.10 tests/s, 46.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1i8a8o3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1i8a8o3.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.005198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    192.38 tests/s, 192.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph60wqgx8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph60wqgx8.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002985 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    335.01 tests/s, 335.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb6_0cnj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb6_0cnj.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003007 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.56 tests/s, 665.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8l1f9xog\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8l1f9xog.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.037456 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    26.70 tests/s, 53.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2cuf4px\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2cuf4px.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003279 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    304.97 tests/s, 609.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp74p6bwz1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp74p6bwz1.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003077 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.99 tests/s, 649.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_9r6m82d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_9r6m82d.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.006491 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.06 tests/s, 308.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphmcd1lhh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphmcd1lhh.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003408 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.43 tests/s, 586.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  if s.match(/[a-zA-Z]/)\n    s.swapcase\n\
    \  else\n    s.reverse\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n   \
    \ assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprgoamvd8\n\
    Started\n.\nFinished in 0.000216 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 8 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4629.63 tests/s, 37037.04 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplcsvu9vc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplcsvu9vc.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004425 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    225.99 tests/s, 451.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd3t8um_s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd3t8um_s.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003085 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.15 tests/s, 648.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyu1t3fv4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyu1t3fv4.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.005596 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    178.70 tests/s, 357.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp79gtc2k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp79gtc2k.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.003108 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    321.75 tests/s, 321.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n    s.chars.map { |c| c =~ /[a-z]/\
    \ ? c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpct6y6xpy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpct6y6xpy.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.011264 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    88.78 tests/s, 177.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3mwhnty8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3mwhnty8.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002846 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    351.37 tests/s, 351.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp33lbkc3s\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp33lbkc3s.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00289 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    346.02 tests/s, 346.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.reverse.tr('a-zA-Z', 'A-Za-z')\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpifp0ywrd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpifp0ywrd.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.005121 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    195.27 tests/s, 195.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c.match(/[a-z]/i)\
    \ ? c.swapcase : c }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29h69r5u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29h69r5u.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.016121 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    62.03 tests/s, 124.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprnum4vmh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprnum4vmh.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.006765 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.82 tests/s, 147.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpte0k0q6w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpte0k0q6w.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003768 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    265.39 tests/s, 530.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu54yr8oj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu54yr8oj.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002952 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.75 tests/s, 677.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp9igc7gi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp9igc7gi.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.006315 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.35 tests/s, 316.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmkbqmcz4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmkbqmcz4.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002991 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    334.34 tests/s, 334.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1aylr86c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1aylr86c.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002806 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    356.38 tests/s, 356.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4yg9y0tp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4yg9y0tp.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003086 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.04 tests/s, 648.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv8d3b8i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv8d3b8i.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00309 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.62 tests/s, 647.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6l2mmsa7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6l2mmsa7.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002997 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.67 tests/s, 667.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxfplkm_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxfplkm_.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003516 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    284.41 tests/s, 568.83 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3oiemdc2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3oiemdc2.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003255 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.22 tests/s, 614.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdlat34zp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdlat34zp.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002982 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    335.35 tests/s, 335.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkq7opmup\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkq7opmup.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.005425 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    184.33 tests/s, 368.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |char| char =~ /[a-z]/\
    \ ? char.upcase : char.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputzi8woe\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputzi8woe.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00577 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    173.31 tests/s, 346.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp45o9we_u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp45o9we_u.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003111 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    321.44 tests/s, 642.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr2eznn5m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr2eznn5m.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003311 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    302.02 tests/s, 302.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplw6f4dvp\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplw6f4dvp.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.02 tests/s, 331.02 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk9imhy4l\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk9imhy4l.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004428 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    225.84 tests/s, 451.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvjus_qwo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvjus_qwo.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.007241 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    138.10 tests/s, 276.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqghm33xh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqghm33xh.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002997 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.67 tests/s, 667.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeqxk63xo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeqxk63xo.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003136 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.88 tests/s, 637.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qvd7s1t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qvd7s1t.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003041 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    328.84 tests/s, 657.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |char| char =~ /[a-z]/\
    \ ? char.upcase : char.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqaaj8ng8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqaaj8ng8.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003142 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.27 tests/s, 636.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv4vg9jm\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv4vg9jm.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    311.43 tests/s, 311.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplgchl9b4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplgchl9b4.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003985 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    250.94 tests/s, 250.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5j3gg1k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5j3gg1k.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    308.93 tests/s, 617.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc8kbvf36\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc8kbvf36.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.024243 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.25 tests/s, 41.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrgcmhe0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrgcmhe0.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003256 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.13 tests/s, 614.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprckc620o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprckc620o.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.07161 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    13.96 tests/s, 27.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9qjyl1r\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn9qjyl1r.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.007008 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    142.69 tests/s, 142.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ou4y7e4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ou4y7e4.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003129 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.59 tests/s, 639.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tykkfp5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tykkfp5.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.038375 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    26.06 tests/s, 52.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20gf1mor\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20gf1mor.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.003048 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    328.08 tests/s, 328.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6ufcyc6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6ufcyc6.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.024397 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    40.99 tests/s, 81.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpudq1qpoy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpudq1qpoy.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.49 tests/s, 638.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6tycymwv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6tycymwv.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.006398 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.30 tests/s, 312.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz1jgd_yl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz1jgd_yl.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.015794 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    63.32 tests/s, 126.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ulsgn0w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ulsgn0w.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004249 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    235.35 tests/s, 470.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsgm5sq7v\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsgm5sq7v.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004225 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    236.69 tests/s, 473.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp59ry1jc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp59ry1jc.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.38 tests/s, 626.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc45opobx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc45opobx.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003063 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    326.48 tests/s, 652.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf_io57qq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf_io57qq.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003056 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    327.23 tests/s, 327.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0qi4z6o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0qi4z6o.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003103 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    322.27 tests/s, 644.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mr7ufmn\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1mr7ufmn.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003059 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    326.90 tests/s, 653.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp814dv0sr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp814dv0sr.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.004821 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    207.43 tests/s, 207.43 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvm23g9b8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvm23g9b8.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003224 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.17 tests/s, 620.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0i0l520u\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0i0l520u.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.005674 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    176.24 tests/s, 352.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpogbcv3_4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpogbcv3_4.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.02079 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    48.10 tests/s, 96.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| ('a'..'z').include?(c)\
    \ ? c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvk88is2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvk88is2.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004395 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    227.53 tests/s, 455.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmuy9rcp7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmuy9rcp7.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003056 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    327.23 tests/s, 327.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35tetlzh\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35tetlzh.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003993 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    250.44 tests/s, 500.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ud5vnsk\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ud5vnsk.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003191 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.38 tests/s, 626.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsqaurpjx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsqaurpjx.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003493 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    286.29 tests/s, 572.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofg86ujl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofg86ujl.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.82 tests/s, 329.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo47rctgy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo47rctgy.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003172 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.26 tests/s, 630.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ovko_ca\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ovko_ca.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003068 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.95 tests/s, 651.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxq1ic4jw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxq1ic4jw.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.010998 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    90.93 tests/s, 181.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzgx8r_o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzgx8r_o.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.006639 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    150.63 tests/s, 150.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo2l_hiru\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo2l_hiru.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003037 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.27 tests/s, 658.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphx6y7kz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphx6y7kz.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003717 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    269.03 tests/s, 269.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdf11e702\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdf11e702.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002989 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    334.56 tests/s, 334.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo_5tzv95\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo_5tzv95.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.49 tests/s, 638.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprxqxt97k\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprxqxt97k.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003079 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.78 tests/s, 649.56 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwj2mbt0l\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwj2mbt0l.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.11 tests/s, 666.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c.match(/[a-z]/i)\
    \ ? c.swapcase : c }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp804u_nql\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp804u_nql.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003013 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    331.90 tests/s, 663.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3avfbwfu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3avfbwfu.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002956 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.29 tests/s, 338.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0eoz1k2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0eoz1k2.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002807 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    356.25 tests/s, 356.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva0k9wvx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva0k9wvx.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002965 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    337.27 tests/s, 674.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2vzjcbt3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2vzjcbt3.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002909 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    343.76 tests/s, 343.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpes3tj1_t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpes3tj1_t.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003041 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    328.84 tests/s, 657.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppqgg33y8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppqgg33y8.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.021733 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.01 tests/s, 46.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpub5j3ufw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpub5j3ufw.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003085 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.15 tests/s, 648.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprunkfndf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprunkfndf.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.002988 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    334.67 tests/s, 334.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp58d7vjze\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp58d7vjze.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003093 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.31 tests/s, 646.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr(\"a-zA-Z\", \"A-Za-z\").reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz22iin_t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz22iin_t.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.006613 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    151.22 tests/s, 151.22 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnsdvr8n4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnsdvr8n4.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003222 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.37 tests/s, 620.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n    s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl1hte76\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl1hte76.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003022 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.91 tests/s, 330.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n    s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy460aa50\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy460aa50.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002905 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    344.23 tests/s, 344.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomkdakho\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomkdakho.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002984 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    335.12 tests/s, 670.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvgs5grxd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvgs5grxd.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003125 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.00 tests/s, 640.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp57g6hywc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp57g6hywc.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.041485 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    24.11 tests/s, 48.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.reverse.tr('a-zA-Z', 'A-Za-z')\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd8v1rlkz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd8v1rlkz.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.002997 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    333.67 tests/s, 333.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwy_lapf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwy_lapf.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002984 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    335.12 tests/s, 670.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp397k62u4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp397k62u4.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00308 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    324.68 tests/s, 649.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeecbxatx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeecbxatx.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003109 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    321.65 tests/s, 643.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ussax2w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ussax2w.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00341 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.26 tests/s, 586.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeb0sdc13\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeb0sdc13.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003031 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.92 tests/s, 659.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxw0y0f0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxw0y0f0.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002804 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    356.63 tests/s, 356.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx5dwysut\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx5dwysut.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003034 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.60 tests/s, 659.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqdio8bp3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqdio8bp3.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003664 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    272.93 tests/s, 545.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map{|x| x =~ /[a-z]/ ? x.upcase\
    \ : x.downcase}.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5s81f06a\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5s81f06a.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003127 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.80 tests/s, 639.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfrtng4o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfrtng4o.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003098 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    322.79 tests/s, 645.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ornpacb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ornpacb.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004074 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    245.46 tests/s, 490.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawoxk3s1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawoxk3s1.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003425 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    291.97 tests/s, 583.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphk4tkni8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphk4tkni8.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003133 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.18 tests/s, 638.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0zndhxo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0zndhxo.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002928 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    341.53 tests/s, 341.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmcwogzj7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmcwogzj7.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003011 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.12 tests/s, 332.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gws95ep\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gws95ep.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003117 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.82 tests/s, 641.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map{|c| c.match(/[a-z]/i)\
    \ ? c.swapcase : c}.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpu7yfk6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpu7yfk6.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003645 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    274.35 tests/s, 548.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4nwkhwdw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4nwkhwdw.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.005686 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    175.87 tests/s, 175.87 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpltcg_q93\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpltcg_q93.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003009 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.34 tests/s, 332.34 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp2qxrpbo\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp2qxrpbo.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003074 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    325.31 tests/s, 650.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp91ymg6sd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp91ymg6sd.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003039 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.06 tests/s, 658.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4ihs64f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4ihs64f.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003057 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    327.12 tests/s, 654.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3epahann\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3epahann.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002974 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    336.25 tests/s, 672.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfpr3es6d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfpr3es6d.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003097 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    322.89 tests/s, 322.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyl_no2o\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyl_no2o.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003061 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    326.69 tests/s, 653.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxrj6e2k4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxrj6e2k4.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00806 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    124.07 tests/s, 124.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbjtgo4eq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbjtgo4eq.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003123 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.20 tests/s, 320.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl6kh0pfw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl6kh0pfw.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.012615 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    79.27 tests/s, 79.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiblz1bk1\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiblz1bk1.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003089 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.73 tests/s, 647.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqx6peuvc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqx6peuvc.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003147 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    317.76 tests/s, 317.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptr09hece\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptr09hece.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003137 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.78 tests/s, 637.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp98bp5wyz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp98bp5wyz.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.041275 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    24.23 tests/s, 24.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkutgp0i2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkutgp0i2.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.054498 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    18.35 tests/s, 18.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy17zf1ve\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy17zf1ve.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.003012 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    332.01 tests/s, 332.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0sfiz1q\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0sfiz1q.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002806 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    356.38 tests/s, 356.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01q1onau\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01q1onau.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003175 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    314.96 tests/s, 629.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpioevkeni\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpioevkeni.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002785 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    359.07 tests/s, 359.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6dcveft\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw6dcveft.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.016964 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    58.95 tests/s, 117.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpef6yteq2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpef6yteq2.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002901 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    344.71 tests/s, 344.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmanjb7k_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmanjb7k_.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003026 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    330.47 tests/s, 660.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4pj9tt3h\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4pj9tt3h.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002955 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.41 tests/s, 676.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |char| char =~ /[a-z]/\
    \ ? char.upcase : char.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz2mn3h15\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz2mn3h15.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004158 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    240.50 tests/s, 481.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1rbd6mq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1rbd6mq.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002926 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    341.76 tests/s, 341.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.tr('a-zA-Z', 'A-Za-z').reverse\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcldnwt52\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcldnwt52.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"FdSa\">\n\ndiff:\n? FdSaSdF\n===============================================================================\n\
    \nFinished in 0.003031 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    329.92 tests/s, 329.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ujkopnb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ujkopnb.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00293 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    341.30 tests/s, 341.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbp11_9bd\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbp11_9bd.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004355 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    229.62 tests/s, 459.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0f9guu6x\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0f9guu6x.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.004973 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    201.09 tests/s, 201.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcr38gjpc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcr38gjpc.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003345 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    298.95 tests/s, 597.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi3n16cwx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi3n16cwx.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.006909 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    144.74 tests/s, 289.48 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpama2rwv8\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpama2rwv8.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004164 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    240.15 tests/s, 480.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoo5rs8wx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoo5rs8wx.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002921 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    342.35 tests/s, 342.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8y9ynu6g\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8y9ynu6g.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003736 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    267.67 tests/s, 535.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2oilvfl4\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2oilvfl4.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003477 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    287.60 tests/s, 287.60 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps7h_w0nr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps7h_w0nr.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002787 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    358.81 tests/s, 358.81 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsqpi84bq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsqpi84bq.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.19 tests/s, 626.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0qkxfqv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0qkxfqv.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.003833 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    260.89 tests/s, 260.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0niacv3p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0niacv3p.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003114 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    321.13 tests/s, 642.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r2kd37w\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6r2kd37w.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003147 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    317.76 tests/s, 635.53 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpl_h1dc\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpl_h1dc.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003224 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    310.17 tests/s, 620.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvurdyprb\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvurdyprb.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.00313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.49 tests/s, 638.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpudha4wxi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpudha4wxi.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.003118 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    320.72 tests/s, 641.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqggcm4d\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqggcm4d.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.00295 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    338.98 tests/s, 338.98 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpldp1g7gz\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpldp1g7gz.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002913 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    343.29 tests/s, 343.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, 'a-z' => 'A-Z',\
    \ 'A-Z' => 'a-z')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_solve\n    candidate = method(:solve)\n    assert_equal(\"aSdF\",\
    \ candidate.call(\"AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"\
    ))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\"\
    , candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"\
    #AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"\
    #$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"\
    #ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpumbs02iu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpumbs02iu.rb:17:in\
    \ `test_solve'\n     14: class TestHumanEval < Test::Unit::TestCase\n     15:\
    \   def test_solve\n     16:     candidate = method(:solve)\n  => 17:     assert_equal(\"\
    aSdF\", candidate.call(\"AsDf\"))\n     18:     assert_equal(\"4321\", candidate.call(\"\
    1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"ab\"))\n     20:\
    \     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n<\"aSdF\"> expected but\
    \ was\n<\"\">\n===============================================================================\n\
    \nFinished in 0.002909 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    343.76 tests/s, 343.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4azl931t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4azl931t.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.004211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    237.47 tests/s, 474.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp508uprx2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp508uprx2.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.005635 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    177.46 tests/s, 354.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_6ttrry\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_6ttrry.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002965 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    337.27 tests/s, 674.54 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.gsub(/[a-z]/i, &:swapcase)\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
    \    candidate = method(:solve)\n    assert_equal(\"aSdF\", candidate.call(\"\
    AsDf\"))\n    assert_equal(\"4321\", candidate.call(\"1234\"))\n    assert_equal(\"\
    AB\", candidate.call(\"ab\"))\n    assert_equal(\"#A@c\", candidate.call(\"#a@C\"\
    ))\n    assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"\
    2@6#\", candidate.call(\"#6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"\
    #$a^D\"))\n    assert_equal(\"#CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3t6rqen\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3t6rqen.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002838 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    352.36 tests/s, 704.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\ndef solve(s)\n  s.chars.map { |c| c =~ /[a-z]/ ?\
    \ c.upcase : c.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_solve\n    candidate = method(:solve)\n \
    \   assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n    assert_equal(\"4321\"\
    , candidate.call(\"1234\"))\n    assert_equal(\"AB\", candidate.call(\"ab\"))\n\
    \    assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n    assert_equal(\"#aSDFw^45\"\
    , candidate.call(\"#AsdfW^45\"))\n    assert_equal(\"2@6#\", candidate.call(\"\
    #6@2\"))\n    assert_equal(\"#$A^d\", candidate.call(\"#$a^D\"))\n    assert_equal(\"\
    #CCC\", candidate.call(\"#ccc\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3qdcx8b7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_solve(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3qdcx8b7.rb:18:in\
    \ `test_solve'\n     15:   def test_solve\n     16:     candidate = method(:solve)\n\
    \     17:     assert_equal(\"aSdF\", candidate.call(\"AsDf\"))\n  => 18:     assert_equal(\"\
    4321\", candidate.call(\"1234\"))\n     19:     assert_equal(\"AB\", candidate.call(\"\
    ab\"))\n     20:     assert_equal(\"#A@c\", candidate.call(\"#a@C\"))\n     21:\
    \     assert_equal(\"#aSDFw^45\", candidate.call(\"#AsdfW^45\"))\n<\"4321\"> expected\
    \ but was\n<\"1234\">\n\ndiff:\n? 1234321\n===============================================================================\n\
    \nFinished in 0.002762 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    362.06 tests/s, 724.11 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception

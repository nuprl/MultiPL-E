name: HumanEval_99_closest_integer
language: ruby
prompt: "# Create a function that takes a value (string) representing a number\n#\
  \ and returns the closest integer to it. If the number is equidistant\n# from two\
  \ integers, round it away from zero.\n# Examples\n# >>> closest_integer(\"10\")\n\
  # 10\n# >>> closest_integer(\"15.3\")\n# 15\n# Note:\n# Rounding away from zero\
  \ means that if the given number is equidistant\n# from two integers, the one you\
  \ should return is the one that is the\n# farthest from zero. For example closest_integer(\"\
  14.5\") should\n# return 15 and closest_integer(\"-14.5\") should return -15.\n\
  def closest_integer(value)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_closest_integer\n\
  \    candidate = method(:closest_integer)\n    assert_equal(10, candidate.call(\"\
  10\"))\n    assert_equal(15, candidate.call(\"14.5\"))\n    assert_equal(-16, candidate.call(\"\
  -15.5\"))\n    assert_equal(15, candidate.call(\"15.3\"))\n    assert_equal(0, candidate.call(\"\
  0\"))\n  end\nend\n"
completions: ["  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n   \
    \ value.round\n  end\nend", "  value = value.to_f\n  if value.to_i == value\n\
    \    value.to_i\n  else\n    value.to_i + (value > 0 ? 1 : -1)\n  end\nend", " \
    \ value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n    value.round\n\
    \  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n   \
    \ value.round\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n    value.round\n\
    \  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value % 1 == 0\n    return value.to_i\n  elsif\
    \ value % 1 < 0.5\n    return value.to_i\n  else\n    return value.to_i + 1\n\
    \  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value = value.to_f\n  if value % 1 == 0\n\
    \    value.to_i\n  else\n    value.round\n  end\nend", "  value = value.to_f\n\
    \  if value.round == value\n    value.round\n  else\n    value.round > value ?\
    \ value.round - 1 : value.round\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n   \
    \ value.round\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value = value.to_f\n  if value - value.to_i >= 0.5\n\
    \    value.ceil\n  else\n    value.floor\n  end\nend", "  value = value.to_f\n\
    \  if value % 1 == 0\n    return value.to_i\n  elsif value % 1 > 0.5\n    return\
    \ value.ceil\n  else\n    return value.floor\n  end\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value % 1 == 0\n    value.to_i\n  else\n    value.round\n  end\nend", " \
    \ value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n\
    \  else\n    value.round\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value - value.to_i >= 0.5\n    value.to_i + 1\n  else\n    value.to_i\n\
    \  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value % 1 == 0\n    value.to_i\n  else\n    value < 0 ? value.ceil : value.floor\n\
    \  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value == value.to_i\n    value.to_i\n  elsif\
    \ value > value.to_i\n    value.to_i + 1\n  else\n    value.to_i - 1\n  end\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value % 1 >= 0.5\n    value.ceil\n  else\n    value.floor\n  end\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  # your code here\nend", "  value.to_f.round\nend", "  value = value.to_f\n  if\
    \ value % 1 == 0\n    value.to_i\n  else\n    value.round\n  end\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value % 1 == 0\n    value.to_i\n  else\n   \
    \ value.round\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value = value.to_f\n  if value - value.to_i > 0.5\n\
    \    value.to_i + 1\n  else\n    value.to_i\n  end\nend", "  # Your code here\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value % 1 >= 0.5\n    value = value.ceil\n  else\n    value = value.floor\n\
    \  end\n  value\nend", "  value.to_f.round\nend", "  value.to_f.round\nend", " \
    \ value = value.to_f\n  if value % 1 == 0\n    value\n  elsif value % 1 > 0.5\n\
    \    value.ceil\n  else\n    value.floor\n  end\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend", "  value = value.to_f\n  if value < 0\n    value = value.ceil\n\
    \  else\n    value = value.floor\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value = value.to_f\n  if value.round == value\n    value.round\n  else\n\
    \    value.round(1)\n  end\nend", "  value.to_f.round\nend", "  value.to_f.round\n\
    end", "  value.to_f.round\nend", "  value.to_f.round\nend", "  value = value.to_f\n\
    \  if value % 1 == 0\n    value.to_i\n  else\n    value.round\n  end\nend", " \
    \ value.to_f.round\nend", "  value.to_f.round\nend", "  value.to_f.round\nend",
  "  value.to_f.round\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

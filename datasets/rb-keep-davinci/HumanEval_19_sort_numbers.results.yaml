name: HumanEval_19_sort_numbers
language: ruby
results:
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split(' ').sort_by { |num|\
    \ num_hash[num] }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk2vne0uz\n\
    Started\n.\nFinished in 0.000232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4310.34 tests/s, 21551.72 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by{|num| NUMBERS.index(num)}.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by{|num| NUMBERS.index(num)}.join(' ')\n\
    \                                ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppw4bi9u6.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.00316 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    316.46 tests/s, 316.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x000000010325f8b0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010325f860\
    \ @start_time=2022-07-28 16:13:52.097362 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000103298458\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010335f1e8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x000000010325f8b0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000103367cf8>, @failures=[], @errors=[#<Test::Unit::Error:0x000000010335f1e8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x000000010325f8b0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000103367af0 @a_proc=#<Proc:0x0000000103367b18\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4348869400>=>#<Proc:0x0000000103367b18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103367550\
    \ @a_proc=#<Proc:0x0000000103367578 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4348867960>=>#<Proc:0x0000000103367578 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001033670c8\
    \ @a_proc=#<Proc:0x00000001033670f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4348866800>=>#<Proc:0x00000001033670f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103366cb8\
    \ @a_proc=#<Proc:0x0000000103366ce0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4348865760>=>#<Proc:0x0000000103366ce0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9cuj8of.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.028603 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    34.96 tests/s, 34.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsla982v_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsla982v_.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004617 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    216.59 tests/s, 866.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  # TODO: your code here\n  numbers = numbers.split(\" \")\n  numbers.sort! {\
    \ |a, b| a <=> b }\n  numbers.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwvwnj_sg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwvwnj_sg.rb:18:in\
    \ `test_sort_numbers'\n     15:     candidate = method(:sort_numbers)\n     16:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     17:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 18:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     19:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     20:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     21:   end\n<\"three five nine\"> expected but was\n<\"five nine\
    \ three\">\n\ndiff:\n? five nine three five nine\n===============================================================================\n\
    \nFinished in 0.003411 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 3 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    293.17 tests/s, 879.51 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.map! do |num|\n    num_hash[num]\n  end\n  num_array.sort!\n  num_array.map!\
    \ do |num|\n    num_hash.key(num)\n  end\n  num_array.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpixcxli1s\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 24271.84 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  # TODO: implement me\n  numbers.split.sort_by { |number| number_to_int(number)\
    \ }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x0000000102d5aec8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102d5a4c8\
    \ @start_time=2022-07-28 16:13:52.138306 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102d94470\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102e5b1b0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102d5aec8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102e63cc0>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102e5b1b0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102d5aec8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102e63ab8 @a_proc=#<Proc:0x0000000102e63ae0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4343610080>=>#<Proc:0x0000000102e63ae0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102e63518\
    \ @a_proc=#<Proc:0x0000000102e63540 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4343608640>=>#<Proc:0x0000000102e63540 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102e63090\
    \ @a_proc=#<Proc:0x0000000102e630b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4343607480>=>#<Proc:0x0000000102e630b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102e62c80\
    \ @a_proc=#<Proc:0x0000000102e62ca8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4343606440>=>#<Proc:0x0000000102e62ca8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:8:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:8:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:15:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwpsxxsqs.rb:15:in\
    \ `test_sort_numbers'\n     12:   def test_sort_numbers\n     13:     candidate\
    \ = method(:sort_numbers)\n     14:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 15:     assert_equal(\"three\", candidate.call(\"three\"))\n     16:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     17:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     18:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010427 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    95.90 tests/s, 95.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcz1lpa40\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcz1lpa40.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004545 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    220.02 tests/s, 880.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x0000000101085758 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000101085708\
    \ @start_time=2022-07-28 16:13:52.205267 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010119d690\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001011945b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x0000000101085758 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x000000010119d1b8>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001011945b8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x0000000101085758 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010119cf88\
    \ @a_proc=#<Proc:0x000000010119cfb0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4313436080>=>#<Proc:0x000000010119cfb0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010119cad8\
    \ @a_proc=#<Proc:0x000000010119cb00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4313434880>=>#<Proc:0x000000010119cb00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010119c6a0\
    \ @a_proc=#<Proc:0x000000010119c6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4313433800>=>#<Proc:0x000000010119c6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010119c178\
    \ @a_proc=#<Proc:0x000000010119c1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4313432480>=>#<Proc:0x000000010119c1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdxc0977.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.007525 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    132.89 tests/s, 132.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv3drsusg\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv3drsusg.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.00464 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.52 tests/s, 862.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp865nkeyq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp865nkeyq.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004391 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    227.74 tests/s, 910.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4gon741\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4gon741.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004557 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    219.44 tests/s, 877.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps0fz8xfq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps0fz8xfq.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.006766 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.80 tests/s, 591.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzby57yi\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzby57yi.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.00485 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    206.19 tests/s, 824.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpom9yovd6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpom9yovd6.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.008791 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    113.75 tests/s, 455.01 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuua6_sad\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuua6_sad.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.014189 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    70.48 tests/s, 281.91 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmp2a0l6i.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.020208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    49.49 tests/s, 49.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|x,y| num_hash[x] <=> num_hash[y]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mxa6spd\n\
    Started\n.\nFinished in 0.000208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4807.69 tests/s, 24038.46 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000101177a30 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000101177a08\
    \ @start_time=2022-07-28 16:13:52.262017 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001011b0588\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001012772a0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000101177a30 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001012c3dd0>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001012772a0 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000101177a30 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001012c3bc8\
    \ @a_proc=#<Proc:0x00000001012c3bf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4314643440>=>#<Proc:0x00000001012c3bf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001012c3628\
    \ @a_proc=#<Proc:0x00000001012c3650 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4314642000>=>#<Proc:0x00000001012c3650 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001012c31a0\
    \ @a_proc=#<Proc:0x00000001012c31c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4314640840>=>#<Proc:0x00000001012c31c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001012c2d90\
    \ @a_proc=#<Proc:0x00000001012c2db8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4314639800>=>#<Proc:0x00000001012c2db8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqjgx8bk.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.023995 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.68 tests/s, 41.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |n| NUMBERS.index(n) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |n| NUMBERS.index(n) }.join(' ')\n\
    \                                ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak4aowu_.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    309.41 tests/s, 309.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split(' ').sort_by { |num|\
    \ number_hash[num] }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiwfg59dl\n\
    Started\n.\nFinished in 0.00022 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4545.45 tests/s, 22727.27 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdi80pxcy\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdi80pxcy.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005082 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    196.77 tests/s, 787.09 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzto1wvyr.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.013479 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    74.19 tests/s, 74.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000104b556d0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104b55680\
    \ @start_time=2022-07-28 16:13:52.428936 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010a871648\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010a868548\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000104b556d0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010a871198>, @failures=[], @errors=[#<Test::Unit::Error:0x000000010a868548\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000104b556d0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010a870f40 @a_proc=#<Proc:0x000000010a870f68\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4471590760>=>#<Proc:0x000000010a870f68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010a870a90\
    \ @a_proc=#<Proc:0x000000010a870ab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4471589560>=>#<Proc:0x000000010a870ab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010a870658\
    \ @a_proc=#<Proc:0x000000010a870680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4471588480>=>#<Proc:0x000000010a870680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010a870130\
    \ @a_proc=#<Proc:0x000000010a870158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4471587160>=>#<Proc:0x000000010a870158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y1b2pd.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.012274 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.47 tests/s, 81.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa6z93j5p\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa6z93j5p.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005199 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    192.34 tests/s, 769.38 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x000000010462ba10 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010462b970\
    \ @start_time=2022-07-28 16:13:52.42156 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104664540\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010482f230\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x000000010462ba10 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000104837d68>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x000000010482f230 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x000000010462ba10 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104837b60\
    \ @a_proc=#<Proc:0x0000000104837b88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4370693000>=>#<Proc:0x0000000104837b88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001048375c0\
    \ @a_proc=#<Proc:0x00000001048375e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4370691560>=>#<Proc:0x00000001048375e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104837138\
    \ @a_proc=#<Proc:0x0000000104837160 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4370690400>=>#<Proc:0x0000000104837160 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104836d28\
    \ @a_proc=#<Proc:0x0000000104836d50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4370689360>=>#<Proc:0x0000000104836d50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqt4_ja7e.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.007397 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.19 tests/s, 135.19 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.map! { |num| num_hash[num] }\n  num_array.sort!\n  num_array.map!\
    \ { |num| num_hash.key(num) }\n  num_array.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwp0c_ar3\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 23809.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.map! { |num| num_hash[num] }\n  num_array.sort!\n  num_array.map!\
    \ { |num| num_hash.key(num) }\n  num_array.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmws6i1ye\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 24271.84 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x00000001029a56e8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001029a5670\
    \ @start_time=2022-07-28 16:13:52.447593 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102d71600\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102d68500\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x00000001029a56e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102d71150>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102d68500\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x00000001029a56e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102d70ef8 @a_proc=#<Proc:0x0000000102d70f48\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4342615880>=>#<Proc:0x0000000102d70f48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d70a48\
    \ @a_proc=#<Proc:0x0000000102d70a70 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4342614640>=>#<Proc:0x0000000102d70a70 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d70610\
    \ @a_proc=#<Proc:0x0000000102d70638 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4342613560>=>#<Proc:0x0000000102d70638 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d700e8\
    \ @a_proc=#<Proc:0x0000000102d70110 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4342612240>=>#<Proc:0x0000000102d70110 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2kdfbjz.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.012973 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.08 tests/s, 77.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzehfmqbm.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003172 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.26 tests/s, 315.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b]\
    \ }\n  nums.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    nums.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n         \
    \               ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqlvbasz.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003228 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    309.79 tests/s, 619.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x000000010128fa08 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010128f968\
    \ @start_time=2022-07-28 16:13:52.449581 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001012c8560\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010138f278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010128fa08\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001013dbda8>, @failures=[], @errors=[#<Test::Unit::Error:0x000000010138f278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010128fa08\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001013dbba0 @a_proc=#<Proc:0x00000001013dbbc8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4315790280>=>#<Proc:0x00000001013dbbc8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013db600\
    \ @a_proc=#<Proc:0x00000001013db628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4315788840>=>#<Proc:0x00000001013db628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013db178\
    \ @a_proc=#<Proc:0x00000001013db1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4315787680>=>#<Proc:0x00000001013db1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013dad68\
    \ @a_proc=#<Proc:0x00000001013dad90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4315786640>=>#<Proc:0x00000001013dad90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpij7z33a8.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.014391 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    69.49 tests/s, 69.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001003fd788 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001003fd710\
    \ @start_time=2022-07-28 16:13:52.429915 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000103d1d658\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000103d14558\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001003fd788 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000103d1d1a8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000103d14558\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001003fd788 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000103d1cf50 @a_proc=#<Proc:0x0000000103d1cf78\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4359049080>=>#<Proc:0x0000000103d1cf78 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103d1caa0\
    \ @a_proc=#<Proc:0x0000000103d1cac8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4359047880>=>#<Proc:0x0000000103d1cac8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103d1c668\
    \ @a_proc=#<Proc:0x0000000103d1c690 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4359046800>=>#<Proc:0x0000000103d1c690 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103d1c140\
    \ @a_proc=#<Proc:0x0000000103d1c168 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4359045480>=>#<Proc:0x0000000103d1c168 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbic3jrs.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.020851 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    47.96 tests/s, 47.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x0000000100f59758 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100f59708\
    \ @start_time=2022-07-28 16:13:52.450948 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000101125690\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010111c5b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x0000000100f59758 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001011251b8>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x000000010111c5b8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x0000000100f59758 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000101124f88\
    \ @a_proc=#<Proc:0x0000000101124fb0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4312944560>=>#<Proc:0x0000000101124fb0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000101124ad8\
    \ @a_proc=#<Proc:0x0000000101124b00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4312943360>=>#<Proc:0x0000000101124b00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001011246a0\
    \ @a_proc=#<Proc:0x00000001011246c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4312942280>=>#<Proc:0x00000001011246c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000101124178\
    \ @a_proc=#<Proc:0x00000001011241a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4312940960>=>#<Proc:0x00000001011241a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnaztdr4i.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.007795 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    128.29 tests/s, 128.29 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_digit'\
    \ for #<TestHumanEval:0x0000000102bad738 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102bad710\
    \ @start_time=2022-07-28 16:13:52.589107 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102d7d630\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102d74530\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x0000000102bad738 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102d7d180>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102d74530\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x0000000102bad738 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102d7cf28 @a_proc=#<Proc:0x0000000102d7cf50\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4342665040>=>#<Proc:0x0000000102d7cf50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d7ca78\
    \ @a_proc=#<Proc:0x0000000102d7caa0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4342663840>=>#<Proc:0x0000000102d7caa0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d7c640\
    \ @a_proc=#<Proc:0x0000000102d7c668 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4342662760>=>#<Proc:0x0000000102d7c668 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d7c118\
    \ @a_proc=#<Proc:0x0000000102d7c140 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4342661440>=>#<Proc:0x0000000102d7c140 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprl5uvwot.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.019839 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    50.41 tests/s, 50.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000100702140 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001007020a0\
    \ @start_time=2022-07-28 16:13:52.568714 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010073c368\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100803198\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000100702140 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000100b0fcb0>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000100803198 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000100702140 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100b0faa8\
    \ @a_proc=#<Proc:0x0000000100b0fad0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4306565840>=>#<Proc:0x0000000100b0fad0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100b0f508\
    \ @a_proc=#<Proc:0x0000000100b0f530 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4306564400>=>#<Proc:0x0000000100b0f530 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100b0f080\
    \ @a_proc=#<Proc:0x0000000100b0f0a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4306563240>=>#<Proc:0x0000000100b0f0a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100b0ec70\
    \ @a_proc=#<Proc:0x0000000100b0ec98 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4306562200>=>#<Proc:0x0000000100b0ec98 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp0j64iek.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008877 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    112.65 tests/s, 112.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS[num] }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS[num] }.join(' ')\n  \
    \                                ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc6zckoph.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.004228 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    236.52 tests/s, 236.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000102ed5708 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102ed56e0\
    \ @start_time=2022-07-28 16:13:52.600048 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102fed690\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102fe45b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102ed5708 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102fed1b8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102fe45b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102ed5708 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102fecf88 @a_proc=#<Proc:0x0000000102fecfb0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4345221040>=>#<Proc:0x0000000102fecfb0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102fecad8\
    \ @a_proc=#<Proc:0x0000000102fecb00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4345219840>=>#<Proc:0x0000000102fecb00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102fec6a0\
    \ @a_proc=#<Proc:0x0000000102fec6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4345218760>=>#<Proc:0x0000000102fec6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102fec178\
    \ @a_proc=#<Proc:0x0000000102fec1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4345217440>=>#<Proc:0x0000000102fec1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1zvu_mo.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011849 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    84.40 tests/s, 84.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4ep6kgr\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4ep6kgr.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005241 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    190.80 tests/s, 763.21 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva59s8ql.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.019857 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    50.36 tests/s, 50.36 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3igec72z.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003165 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.96 tests/s, 315.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8nrwve.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.004095 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    244.20 tests/s, 244.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0wzq2s0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0wzq2s0.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004821 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    207.43 tests/s, 829.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe3m7jzvj\n\
    Started\n.\nFinished in 0.000229 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4366.81 tests/s, 21834.06 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x0000000100f83918 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100f838c8\
    \ @start_time=2022-07-28 16:13:52.603307 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000101070498\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104b3f1f0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000100f83918 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104b47d00>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000104b3f1f0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000100f83918 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104b47af8 @a_proc=#<Proc:0x0000000104b47b20\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4373904160>=>#<Proc:0x0000000104b47b20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b47558\
    \ @a_proc=#<Proc:0x0000000104b47580 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4373902720>=>#<Proc:0x0000000104b47580 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b470d0\
    \ @a_proc=#<Proc:0x0000000104b470f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4373901560>=>#<Proc:0x0000000104b470f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b46cc0\
    \ @a_proc=#<Proc:0x0000000104b46ce8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4373900520>=>#<Proc:0x0000000104b46ce8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbf5_u7uh.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009055 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.44 tests/s, 110.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x0000000102fd16e8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102fd1670\
    \ @start_time=2022-07-28 16:13:52.603797 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001030e9648\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001030e0548\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000102fd16e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001030e91c0>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001030e0548\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000102fd16e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001030e8f68 @a_proc=#<Proc:0x00000001030e8f90\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4346253200>=>#<Proc:0x00000001030e8f90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030e8a90\
    \ @a_proc=#<Proc:0x00000001030e8ab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4346251960>=>#<Proc:0x00000001030e8ab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030e8658\
    \ @a_proc=#<Proc:0x00000001030e8680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4346250880>=>#<Proc:0x00000001030e8680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030e8130\
    \ @a_proc=#<Proc:0x00000001030e8158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4346249560>=>#<Proc:0x00000001030e8158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppjopea5o.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009152 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    109.27 tests/s, 109.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rhg3287\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6rhg3287.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.009375 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    106.67 tests/s, 426.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ryazcm0\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ryazcm0.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004435 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    225.48 tests/s, 901.92 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers_array = numbers.split(' ')\n\
    \  numbers_array.sort! do |a, b|\n    numbers_hash[a] <=> numbers_hash[b]\n  end\n\
    \  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpln8iez_b\n\
    Started\n.\nFinished in 0.000213 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4694.84 tests/s, 23474.18 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphuphyzac\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphuphyzac.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.0045 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    222.22 tests/s, 888.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort! { |a, b| num_to_int(a) <=> num_to_int(b)\
    \ }\n  nums.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000104cea108 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104cea090\
    \ @start_time=2022-07-28 16:13:52.726739 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104d24380\
    \ @assertion_count=2, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104e9edf0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000104cea108 ...>\n\
    \  \n    nums.sort! { |a, b| num_to_int(a) <=> num_to_int(b) }\n             \
    \           ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000104ea7c70>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000104e9edf0 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000104cea108 ...>\n  \n    nums.sort!\
    \ { |a, b| num_to_int(a) <=> num_to_int(b) }\n                        ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104ea7a68\
    \ @a_proc=#<Proc:0x0000000104ea7a90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4377442960>=>#<Proc:0x0000000104ea7a90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104ea74c8\
    \ @a_proc=#<Proc:0x0000000104ea74f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4377441520>=>#<Proc:0x0000000104ea74f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104ea7040\
    \ @a_proc=#<Proc:0x0000000104ea7068 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4377440360>=>#<Proc:0x0000000104ea7068 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104ea6c30\
    \ @a_proc=#<Proc:0x0000000104ea6c58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4377439320>=>#<Proc:0x0000000104ea6c58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpff1683eo.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.008959 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.62 tests/s, 223.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| numeral_to_number(num) }.join(' ')\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x00000001006f1778 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001006f16d8\
    \ @start_time=2022-07-28 16:13:52.741982 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100809688\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100800588\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001006f1778\
    \ ...>\n  \n    numbers.split(' ').sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                       ^^^^^^^^^^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @stop_tag=#<Object:0x00000001008091b0>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000100800588\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001006f1778\
    \ ...>\n  \n    numbers.split(' ').sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                       ^^^^^^^^^^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100808f80\
    \ @a_proc=#<Proc:0x0000000100808fa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4303392680>=>#<Proc:0x0000000100808fa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100808ad0\
    \ @a_proc=#<Proc:0x0000000100808af8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4303391480>=>#<Proc:0x0000000100808af8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100808698\
    \ @a_proc=#<Proc:0x00000001008086c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4303390400>=>#<Proc:0x00000001008086c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100808170\
    \ @a_proc=#<Proc:0x0000000100808198 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4303389080>=>#<Proc:0x0000000100808198 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wlappbn.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.012847 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.84 tests/s, 77.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort! { |a, b| num_to_i(a) <=> num_to_i(b)\
    \ }\n  nums.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x00000001033225b8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000103322338\
    \ @start_time=2022-07-28 16:13:52.740425 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010335c498\
    \ @assertion_count=2, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000103422e68\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x00000001033225b8 ...>\n  \n\
    \    nums.sort! { |a, b| num_to_i(a) <=> num_to_i(b) }\n                     \
    \   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x000000010346fd08>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000103422e68 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x00000001033225b8 ...>\n  \n    nums.sort! {\
    \ |a, b| num_to_i(a) <=> num_to_i(b) }\n                        ^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010346fb00\
    \ @a_proc=#<Proc:0x000000010346fb28 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4349950760>=>#<Proc:0x000000010346fb28 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010346f560\
    \ @a_proc=#<Proc:0x000000010346f588 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4349949320>=>#<Proc:0x000000010346f588 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010346f0d8\
    \ @a_proc=#<Proc:0x000000010346f100 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4349948160>=>#<Proc:0x000000010346f100 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010346ecc8\
    \ @a_proc=#<Proc:0x000000010346ecf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4349947120>=>#<Proc:0x000000010346ecf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptntnjz5g.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.007357 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.92 tests/s, 271.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwt_knabs\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwt_knabs.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004476 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    223.41 tests/s, 893.66 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort_by! {|num| num_hash[num]}\n  num_array.join('\
    \ ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2bwo4hgj\n\
    Started\n.\nFinished in 0.000218 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4587.16 tests/s, 22935.78 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000104e53a08 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104e53968\
    \ @start_time=2022-07-28 16:13:52.769868 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104e8c588\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000105007278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000104e53a08 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000105053da8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000105007278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000104e53a08 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000105053ba0 @a_proc=#<Proc:0x0000000105053bc8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4379196360>=>#<Proc:0x0000000105053bc8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105053600\
    \ @a_proc=#<Proc:0x0000000105053628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4379194920>=>#<Proc:0x0000000105053628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105053178\
    \ @a_proc=#<Proc:0x00000001050531a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4379193760>=>#<Proc:0x00000001050531a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105052d68\
    \ @a_proc=#<Proc:0x0000000105052d90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4379192720>=>#<Proc:0x0000000105052d90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu61my3v7.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.013393 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    74.67 tests/s, 74.67 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split\n  num_array.sort!\
    \ { |a, b| num_hash[a] <=> num_hash[b] }\n  num_array.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwayq548t\n\
    Started\n.\nFinished in 0.000205 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4878.05 tests/s, 24390.24 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |a, b| NUMBERS[a]\
    \ <=> NUMBERS[b] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pfdy6b_.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003578 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    279.49 tests/s, 558.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_digit'\
    \ for #<TestHumanEval:0x0000000101315770 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000101315720\
    \ @start_time=2022-07-28 16:13:52.841762 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104f35660\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104f2c588\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x0000000101315770 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104f35188>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000104f2c588\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x0000000101315770 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104f34f58 @a_proc=#<Proc:0x0000000104f34f80\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4378021760>=>#<Proc:0x0000000104f34f80 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104f34aa8\
    \ @a_proc=#<Proc:0x0000000104f34ad0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4378020560>=>#<Proc:0x0000000104f34ad0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104f34670\
    \ @a_proc=#<Proc:0x0000000104f34698 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4378019480>=>#<Proc:0x0000000104f34698 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104f34148\
    \ @a_proc=#<Proc:0x0000000104f34170 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4378018160>=>#<Proc:0x0000000104f34170 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyzadbub.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.026772 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    37.35 tests/s, 37.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|x,y| num_hash[x] <=> num_hash[y]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxk4xwk31\n\
    Started\n.\nFinished in 0.000207 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4830.92 tests/s, 24154.59 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(\" \")\n  numbers_array.sort! { |x, y| NUMBERS[x]\
    \ <=> NUMBERS[y] }\n  numbers_array.join(\" \")\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |x, y| NUMBERS[x] <=> NUMBERS[y] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0mrafth.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003193 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.19 tests/s, 626.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoko3kji7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoko3kji7.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004662 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    214.50 tests/s, 858.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001006cfa60 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001006cfa38\
    \ @start_time=2022-07-28 16:13:52.896747 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100708608\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001007cf2d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001006cfa60 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010081be28>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001007cf2d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001006cfa60 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010081bbf8 @a_proc=#<Proc:0x000000010081bc20\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4303469600>=>#<Proc:0x000000010081bc20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010081b658\
    \ @a_proc=#<Proc:0x000000010081b680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4303468160>=>#<Proc:0x000000010081b680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010081b1d0\
    \ @a_proc=#<Proc:0x000000010081b1f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4303467000>=>#<Proc:0x000000010081b1f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010081adc0\
    \ @a_proc=#<Proc:0x000000010081ade8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4303465960>=>#<Proc:0x000000010081ade8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu29zbja.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.024101 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    41.49 tests/s, 41.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| NUMBERS.index(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |word| NUMBERS.index(word) }.join('\
    \ ')\n                                   ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyhk3qtpg.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.004264 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    234.52 tests/s, 234.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x0000000100a6eec8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100a6e770\
    \ @start_time=2022-07-28 16:13:52.910472 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100aa84c0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100d27200\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000100a6eec8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000100d2fd10>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000100d27200\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000100a6eec8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000100d2fb08 @a_proc=#<Proc:0x0000000100d2fb30\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4308794160>=>#<Proc:0x0000000100d2fb30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d2f568\
    \ @a_proc=#<Proc:0x0000000100d2f590 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4308792720>=>#<Proc:0x0000000100d2f590 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d2f0e0\
    \ @a_proc=#<Proc:0x0000000100d2f108 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4308791560>=>#<Proc:0x0000000100d2f108 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d2ecd0\
    \ @a_proc=#<Proc:0x0000000100d2ecf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4308790520>=>#<Proc:0x0000000100d2ecf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zese7q3.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011719 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.33 tests/s, 85.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyjgw9ya.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003136 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.88 tests/s, 318.88 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dn9xoj6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dn9xoj6.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005299 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    188.71 tests/s, 754.86 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(\" \")\n  num_array.sort! {|x,y| num_hash[x] <=> num_hash[y]}\n\
    \  num_array.join(\" \")\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxgze41nb\n\
    Started\n.\nFinished in 0.000209 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4784.69 tests/s, 23923.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs32cic7\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs32cic7.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.007965 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    125.55 tests/s, 502.20 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  numbers_array\
    \ = numbers.split(' ')\n  numbers_array.sort! {|a, b| numbers_hash[a] <=> numbers_hash[b]}\n\
    \  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp89s45ili\n\
    Started\n.\nFinished in 0.000207 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4830.92 tests/s, 24154.59 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x000000010527fa50 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010527fa28\
    \ @start_time=2022-07-28 16:13:53.037865 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001052b85f8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000108d83318\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010527fa50\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000108dcfe70>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000108d83318\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010527fa50\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000108dcfc40 @a_proc=#<Proc:0x0000000108dcfc68\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4443667560>=>#<Proc:0x0000000108dcfc68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000108dcf6a0\
    \ @a_proc=#<Proc:0x0000000108dcf6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4443666120>=>#<Proc:0x0000000108dcf6c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000108dcf218\
    \ @a_proc=#<Proc:0x0000000108dcf240 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4443664960>=>#<Proc:0x0000000108dcf240 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000108dcee08\
    \ @a_proc=#<Proc:0x0000000108dcee30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4443663920>=>#<Proc:0x0000000108dcee30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbc5ihhg.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.014735 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    67.87 tests/s, 67.87 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikhod5jf.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003128 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.69 tests/s, 319.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyu5io3lu\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyu5io3lu.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004565 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    219.06 tests/s, 876.23 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x00000001010d1770 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001010d1720\
    \ @start_time=2022-07-28 16:13:53.014645 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104aed6c0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104ae45c0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001010d1770\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104aed1e8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000104ae45c0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001010d1770\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104aecfb8 @a_proc=#<Proc:0x0000000104aecfe0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4373532640>=>#<Proc:0x0000000104aecfe0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aecb08\
    \ @a_proc=#<Proc:0x0000000104aecb30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4373531440>=>#<Proc:0x0000000104aecb30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aec6d0\
    \ @a_proc=#<Proc:0x0000000104aec6f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4373530360>=>#<Proc:0x0000000104aec6f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aec1a8\
    \ @a_proc=#<Proc:0x0000000104aec1d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4373529040>=>#<Proc:0x0000000104aec1d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmparald20u.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.042566 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.49 tests/s, 23.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35wdoaic\n\
    Started\n.\nFinished in 0.000238 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4201.68 tests/s, 21008.40 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphwk7cn_x\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphwk7cn_x.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004535 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    220.51 tests/s, 882.03 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl8mnsl7.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.014871 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    67.24 tests/s, 67.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd5re4kfy.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.006588 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    151.79 tests/s, 151.79 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.sort! { |a, b| num_hash[a] <=> num_hash[b] }\n  num_array.join(' ')\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpji8ds20h\n\
    Started\n.\nFinished in 0.000214 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4672.90 tests/s, 23364.49 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|x,y| num_hash[x] <=> num_hash[y]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfsu0fsag\n\
    Started\n.\nFinished in 0.000217 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4608.29 tests/s, 23041.47 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11e5rwle.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003175 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    314.96 tests/s, 314.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo71kpe_a\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo71kpe_a.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.007897 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    126.63 tests/s, 506.52 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x0000000104997f78 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104997f50\
    \ @start_time=2022-07-28 16:13:53.153351 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001049d05f8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010839f2e8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x0000000104997f78 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001083ebe18>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x000000010839f2e8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x0000000104997f78 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001083ebc10\
    \ @a_proc=#<Proc:0x00000001083ebc38 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4433296440>=>#<Proc:0x00000001083ebc38 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001083eb670\
    \ @a_proc=#<Proc:0x00000001083eb698 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4433295000>=>#<Proc:0x00000001083eb698 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001083eb1e8\
    \ @a_proc=#<Proc:0x00000001083eb210 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4433293840>=>#<Proc:0x00000001083eb210 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001083eadd8\
    \ @a_proc=#<Proc:0x00000001083eae00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4433292800>=>#<Proc:0x00000001083eae00 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppgql5ifu.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.042174 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.71 tests/s, 23.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMERALS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMERALS\n  \n    numbers.split.sort_by { |num| NUMERALS.index(num) }.join('\
    \ ')\n                                  ^^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6x0r0gt.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003589 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    278.63 tests/s, 278.63 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_digit'\
    \ for #<TestHumanEval:0x00000001024fe540 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001024fe2e8\
    \ @start_time=2022-07-28 16:13:53.209318 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000105e403d0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000107107180\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x00000001024fe540 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010710fc90>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000107107180\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_digit' for #<TestHumanEval:0x00000001024fe540 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_digit(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010710fa88 @a_proc=#<Proc:0x000000010710fab0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4413520560>=>#<Proc:0x000000010710fab0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010710f4e8\
    \ @a_proc=#<Proc:0x000000010710f510 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4413519120>=>#<Proc:0x000000010710f510 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010710f060\
    \ @a_proc=#<Proc:0x000000010710f088 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4413517960>=>#<Proc:0x000000010710f088 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010710ec50\
    \ @a_proc=#<Proc:0x000000010710ec78 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4413516920>=>#<Proc:0x000000010710ec78 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwyedokhe.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.055746 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    17.94 tests/s, 17.94 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfq_dd92.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009718 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    102.90 tests/s, 102.90 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000102793a08 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102793968\
    \ @start_time=2022-07-28 16:13:53.220119 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001027cc588\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102893278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102793a08 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001028dfda8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102893278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102793a08 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001028dfba0 @a_proc=#<Proc:0x00000001028dfbc8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4337826760>=>#<Proc:0x00000001028dfbc8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001028df600\
    \ @a_proc=#<Proc:0x00000001028df628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4337825320>=>#<Proc:0x00000001028df628 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001028df178\
    \ @a_proc=#<Proc:0x00000001028df1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4337824160>=>#<Proc:0x00000001028df1a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001028ded68\
    \ @a_proc=#<Proc:0x00000001028ded90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4337823120>=>#<Proc:0x00000001028ded90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaqulli3n.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.026313 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    38.00 tests/s, 38.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x000000010309d838 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010309d7c0\
    \ @start_time=2022-07-28 16:13:53.220889 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001031b56d0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001031ac5f8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x000000010309d838 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001031b51f8>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001031ac5f8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x000000010309d838 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001031b4fc8\
    \ @a_proc=#<Proc:0x00000001031b4ff0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4347088880>=>#<Proc:0x00000001031b4ff0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001031b4af0\
    \ @a_proc=#<Proc:0x00000001031b4b40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4347087680>=>#<Proc:0x00000001031b4b40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001031b46e0\
    \ @a_proc=#<Proc:0x00000001031b4708 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4347086600>=>#<Proc:0x00000001031b4708 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001031b41b8\
    \ @a_proc=#<Proc:0x00000001031b41e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4347085280>=>#<Proc:0x00000001031b41e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0z7smlw.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008644 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    115.69 tests/s, 115.69 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001023bd708 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001023bd668\
    \ @start_time=2022-07-28 16:13:53.196893 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102589640\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102580568\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001023bd708 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000102589168>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000102580568 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001023bd708 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102588f38\
    \ @a_proc=#<Proc:0x0000000102588f60 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4334325600>=>#<Proc:0x0000000102588f60 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102588a88\
    \ @a_proc=#<Proc:0x0000000102588ab0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4334324400>=>#<Proc:0x0000000102588ab0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102588650\
    \ @a_proc=#<Proc:0x0000000102588678 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4334323320>=>#<Proc:0x0000000102588678 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102588128\
    \ @a_proc=#<Proc:0x0000000102588150 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4334322000>=>#<Proc:0x0000000102588150 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj49cuiwf.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.059653 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    16.76 tests/s, 16.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000104a654c8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104a65450\
    \ @start_time=2022-07-28 16:13:53.244224 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104b7d540\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104b74440\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000104a654c8 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000104b7d090>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000104b74440 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000104a654c8 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b7ce38\
    \ @a_proc=#<Proc:0x0000000104b7ce60 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4374122080>=>#<Proc:0x0000000104b7ce60 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b7c988\
    \ @a_proc=#<Proc:0x0000000104b7c9b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4374120880>=>#<Proc:0x0000000104b7c9b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b7c550\
    \ @a_proc=#<Proc:0x0000000104b7c578 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4374119800>=>#<Proc:0x0000000104b7c578 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104b7c028\
    \ @a_proc=#<Proc:0x0000000104b7c050 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4374118480>=>#<Proc:0x0000000104b7c050 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6no6wgg.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.042008 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    23.80 tests/s, 23.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|x,y| num_hash[x] <=> num_hash[y]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fnghdg7\n\
    Started\n.\nFinished in 0.000205 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4878.05 tests/s, 24390.24 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2bskcrnr\n\
    Started\n.\nFinished in 0.000242 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4132.23 tests/s, 20661.16 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy2f49aa1\n\
    Started\n.\nFinished in 0.000209 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4784.69 tests/s, 23923.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxcuzrw25\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxcuzrw25.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004716 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    212.04 tests/s, 848.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |x, y| NUMBERS[x]\
    \ <=> NUMBERS[y] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |x, y| NUMBERS[x] <=> NUMBERS[y] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94idmbey.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003148 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    317.66 tests/s, 635.32 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph0n52idj.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003132 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    319.28 tests/s, 319.28 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b]\
    \ }\n  nums.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    nums.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n         \
    \               ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9yt0dzlz.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003198 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    312.70 tests/s, 625.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001048e7a10 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001048e7970\
    \ @start_time=2022-07-28 16:13:53.348037 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001049205b8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104a9f2b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001048e7a10 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104aebdc0>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000104a9f2b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001048e7a10 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104aebbb8 @a_proc=#<Proc:0x0000000104aebbe0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4373527520>=>#<Proc:0x0000000104aebbe0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aeb618\
    \ @a_proc=#<Proc:0x0000000104aeb640 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4373526080>=>#<Proc:0x0000000104aeb640 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aeb190\
    \ @a_proc=#<Proc:0x0000000104aeb1b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4373524920>=>#<Proc:0x0000000104aeb1b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104aead80\
    \ @a_proc=#<Proc:0x0000000104aeada8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4373523880>=>#<Proc:0x0000000104aeada8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghmt6zeh.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.053343 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    18.75 tests/s, 18.75 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptbkdjgqn\n\
    Started\n.\nFinished in 0.000227 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4405.29 tests/s, 22026.43 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |n| NUMBERS.index(n) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |n| NUMBERS.index(n) }.join(' ')\n\
    \                                ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsr93nkk.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003095 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    323.10 tests/s, 323.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x00000001029f24e8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001029f2290\
    \ @start_time=2022-07-28 16:13:53.410158 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102a2c418\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102af31d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x00000001029f24e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102b3fcd8>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102af31d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x00000001029f24e8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102b3fad0 @a_proc=#<Proc:0x0000000102b3faf8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4340316920>=>#<Proc:0x0000000102b3faf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102b3f530\
    \ @a_proc=#<Proc:0x0000000102b3f558 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4340315480>=>#<Proc:0x0000000102b3f558 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102b3f0a8\
    \ @a_proc=#<Proc:0x0000000102b3f0d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4340314320>=>#<Proc:0x0000000102b3f0d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102b3ec98\
    \ @a_proc=#<Proc:0x0000000102b3ecc0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4340313280>=>#<Proc:0x0000000102b3ecc0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpubg7dzyp.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010231 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    97.74 tests/s, 97.74 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v_7_ogq.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.016957 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    58.97 tests/s, 58.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |a, b| NUMBERS[a]\
    \ <=> NUMBERS[b] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4gca_u1r.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003486 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    286.86 tests/s, 573.72 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd31fw2tl\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd31fw2tl.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004887 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    204.62 tests/s, 818.50 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x000000010474b8c8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010474b850\
    \ @start_time=2022-07-28 16:13:53.40928 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104784498\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x000000010484b200\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x000000010474b8c8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104897d08>, @failures=[], @errors=[#<Test::Unit::Error:0x000000010484b200\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x000000010474b8c8 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104897b00 @a_proc=#<Proc:0x0000000104897b28\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4371086120>=>#<Proc:0x0000000104897b28 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104897560\
    \ @a_proc=#<Proc:0x0000000104897588 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4371084680>=>#<Proc:0x0000000104897588 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001048970d8\
    \ @a_proc=#<Proc:0x0000000104897100 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4371083520>=>#<Proc:0x0000000104897100 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104896cc8\
    \ @a_proc=#<Proc:0x0000000104896cf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4371082480>=>#<Proc:0x0000000104896cf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiks3ljcq.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010223 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    97.82 tests/s, 97.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.sort_by! { |num| num_hash[num] }\n  num_array.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpar5x8g2c\n\
    Started\n.\nFinished in 0.000194 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5154.64 tests/s, 25773.20 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |word| word_to_number(word) }.join(' ')\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001032d16e0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001032d16b8\
    \ @start_time=2022-07-28 16:13:53.425888 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010349d640\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000103494540\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001032d16e0 ...>\n\
    \  \n    numbers.split(' ').sort_by { |word| word_to_number(word) }.join(' ')\n\
    \                                        ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010349d190>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000103494540\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001032d16e0 ...>\n\
    \  \n    numbers.split(' ').sort_by { |word| word_to_number(word) }.join(' ')\n\
    \                                        ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010349cf38 @a_proc=#<Proc:0x000000010349cf88\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4350136200>=>#<Proc:0x000000010349cf88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010349ca88\
    \ @a_proc=#<Proc:0x000000010349cab0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4350134960>=>#<Proc:0x000000010349cab0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010349c650\
    \ @a_proc=#<Proc:0x000000010349c678 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4350133880>=>#<Proc:0x000000010349c678 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010349c128\
    \ @a_proc=#<Proc:0x000000010349c150 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4350132560>=>#<Proc:0x000000010349c150 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr965vk57.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.013402 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    74.62 tests/s, 74.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001050f38d0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001050f2ed0\
    \ @start_time=2022-07-28 16:13:53.448447 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010512c450\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001052ab1c8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001050f38d0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001052f7ca8>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001052ab1c8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001050f38d0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001052f7ac8 @a_proc=#<Proc:0x00000001052f7af0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4381965040>=>#<Proc:0x00000001052f7af0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001052f7528\
    \ @a_proc=#<Proc:0x00000001052f7550 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4381963600>=>#<Proc:0x00000001052f7550 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001052f70a0\
    \ @a_proc=#<Proc:0x00000001052f70c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4381962440>=>#<Proc:0x00000001052f70c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001052f6c90\
    \ @a_proc=#<Proc:0x00000001052f6cb8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4381961400>=>#<Proc:0x00000001052f6cb8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5azg3nxz.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.015814 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    63.24 tests/s, 63.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_map = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  numbers.split('\
    \ ').sort_by { |num| number_map[num] }.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpayiyk_em\n\
    Started\n.\nFinished in 0.000246 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4065.04 tests/s, 20325.20 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001006856e0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001006856b8\
    \ @start_time=2022-07-28 16:13:53.531092 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010079d668\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100794590\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001006856e0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010079d190>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000100794590\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001006856e0 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010079cf60 @a_proc=#<Proc:0x000000010079cf88\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4302950280>=>#<Proc:0x000000010079cf88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010079cab0\
    \ @a_proc=#<Proc:0x000000010079cad8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4302949080>=>#<Proc:0x000000010079cad8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010079c678\
    \ @a_proc=#<Proc:0x000000010079c6a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4302948000>=>#<Proc:0x000000010079c6a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010079c150\
    \ @a_proc=#<Proc:0x000000010079c178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4302946680>=>#<Proc:0x000000010079c178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fhph5d.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011681 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.61 tests/s, 85.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000102419788 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102419710\
    \ @start_time=2022-07-28 16:13:53.560455 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102531670\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102528570\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102419788 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001025311c0>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102528570\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000102419788 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102530f68 @a_proc=#<Proc:0x0000000102530fb8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4333965240>=>#<Proc:0x0000000102530fb8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102530ab8\
    \ @a_proc=#<Proc:0x0000000102530ae0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4333964000>=>#<Proc:0x0000000102530ae0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102530680\
    \ @a_proc=#<Proc:0x00000001025306a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4333962920>=>#<Proc:0x00000001025306a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102530158\
    \ @a_proc=#<Proc:0x0000000102530180 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4333961600>=>#<Proc:0x0000000102530180 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzt8347_.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011853 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    84.37 tests/s, 84.37 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.map! do |num|\n    num_hash[num]\n  end\n  num_array.sort!\n  num_array.map!\
    \ do |num|\n    num_hash.key(num)\n  end\n  num_array.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplju3_fhl\n\
    Started\n.\nFinished in 0.000209 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4784.69 tests/s, 23923.44 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hd8j8lj\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hd8j8lj.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004642 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.42 tests/s, 861.70 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x0000000104a9e750 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104a9e458\
    \ @start_time=2022-07-28 16:13:53.544428 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104ad8360\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104b9f168\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000104a9e750 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000104bebc70>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000104b9f168\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000104a9e750 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000104beba68 @a_proc=#<Proc:0x0000000104beba90\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4374575760>=>#<Proc:0x0000000104beba90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104beb4c8\
    \ @a_proc=#<Proc:0x0000000104beb4f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4374574320>=>#<Proc:0x0000000104beb4f0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104beb040\
    \ @a_proc=#<Proc:0x0000000104beb068 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4374573160>=>#<Proc:0x0000000104beb068 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104beac30\
    \ @a_proc=#<Proc:0x0000000104beac58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4374572120>=>#<Proc:0x0000000104beac58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpevrfdi_8.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010369 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.44 tests/s, 96.44 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |a, b| NUMBERS[a]\
    \ <=> NUMBERS[b] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp76x_uqow.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003161 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    316.36 tests/s, 632.71 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_b1ejcrm.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003256 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    307.13 tests/s, 307.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn03a38d1.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003165 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.96 tests/s, 315.96 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| NUMBERS.index(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |word| NUMBERS.index(word) }.join('\
    \ ')\n                                   ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqp0n8z2o.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.00317 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    315.46 tests/s, 315.46 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_num(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_num'\
    \ for #<TestHumanEval:0x00000001029f3910 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001029f38c0\
    \ @start_time=2022-07-28 16:13:53.577216 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102a2c508\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102af3220\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_num' for #<TestHumanEval:0x00000001029f3910 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_num(word) }.join(' ')\n      \
    \                             ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102afbd30>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102af3220\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_num' for #<TestHumanEval:0x00000001029f3910 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_num(word) }.join(' ')\n      \
    \                             ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102afbb28 @a_proc=#<Proc:0x0000000102afbb50\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4340038480>=>#<Proc:0x0000000102afbb50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102afb588\
    \ @a_proc=#<Proc:0x0000000102afb5b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4340037040>=>#<Proc:0x0000000102afb5b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102afb100\
    \ @a_proc=#<Proc:0x0000000102afb128 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4340035880>=>#<Proc:0x0000000102afb128 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102afacf0\
    \ @a_proc=#<Proc:0x0000000102afad18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4340034840>=>#<Proc:0x0000000102afad18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o3d3or1.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010462 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    95.58 tests/s, 95.58 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvckqy8su\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvckqy8su.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004611 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    216.87 tests/s, 867.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort_by! { |num| num_to_int(num) }\n  nums.join('\
    \ ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001046efaf0 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001046efa28\
    \ @start_time=2022-07-28 16:13:53.716846 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001047284b8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001047ef158\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001046efaf0 ...>\n\
    \  \n    nums.sort_by! { |num| num_to_int(num) }\n                          ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x000000010483bd28>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001047ef158 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001046efaf0 ...>\n  \n    nums.sort_by!\
    \ { |num| num_to_int(num) }\n                          ^^^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010483bb20\
    \ @a_proc=#<Proc:0x000000010483bb48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4370709320>=>#<Proc:0x000000010483bb48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010483b580\
    \ @a_proc=#<Proc:0x000000010483b5a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4370707880>=>#<Proc:0x000000010483b5a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010483b0f8\
    \ @a_proc=#<Proc:0x000000010483b120 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4370706720>=>#<Proc:0x000000010483b120 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010483ace8\
    \ @a_proc=#<Proc:0x000000010483ad10 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4370705680>=>#<Proc:0x000000010483ad10 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:8:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:8:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:8:in\
    \ `sort_by!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv335ytp.rb:16:in\
    \ `test_sort_numbers'\n     13:   def test_sort_numbers\n     14:     candidate\
    \ = method(:sort_numbers)\n     15:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 16:     assert_equal(\"three\", candidate.call(\"three\"))\n     17:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     18:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     19:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009003 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    111.07 tests/s, 111.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.map! do |num|\n    num_hash[num]\n  end\n  num_array.sort!\n  num_array.map!\
    \ do |num|\n    num_hash.key(num)\n  end\n  num_array.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprmwf7erz\n\
    Started\n.\nFinished in 0.00021 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4761.90 tests/s, 23809.52 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5cpb18uv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5cpb18uv.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.012293 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    81.35 tests/s, 325.39 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split.sort_by { |num| num_hash[num]\
    \ }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3bos8y0v\n\
    Started\n.\nFinished in 0.000237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4219.41 tests/s, 21097.05 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2m98ougj\n\
    Started\n.\nFinished in 0.000201 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4975.12 tests/s, 24875.62 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3njjzlj5\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3njjzlj5.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.021635 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.22 tests/s, 184.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  # TODO: implement this method\n  numbers = numbers.split(' ')\n  numbers.sort!\
    \ { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n  numbers.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n      \
    \                     ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26.rb:9:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26.rb:9:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26.rb:9:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26.rb:18:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyirs7z26.rb:18:in\
    \ `test_sort_numbers'\n     15:     candidate = method(:sort_numbers)\n     16:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     17:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 18:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     19:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     20:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     21:   end\n===============================================================================\n\
    \nFinished in 0.003187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    313.77 tests/s, 627.55 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp66xii66y.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003327 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    300.57 tests/s, 300.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split\n  numbers_array.sort_by! { |num| num_to_int(num)\
    \ }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000102542088 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102541f98\
    \ @start_time=2022-07-28 16:13:53.73591 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010257c3a0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001026430e0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000102542088 ...>\n\
    \  \n    numbers_array.sort_by! { |num| num_to_int(num) }\n                  \
    \                 ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x000000010268fc88>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001026430e0 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000102542088 ...>\n  \n    numbers_array.sort_by!\
    \ { |num| num_to_int(num) }\n                                   ^^^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010268fa80\
    \ @a_proc=#<Proc:0x000000010268faa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4335401640>=>#<Proc:0x000000010268faa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010268f4e0\
    \ @a_proc=#<Proc:0x000000010268f508 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4335400200>=>#<Proc:0x000000010268f508 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010268f058\
    \ @a_proc=#<Proc:0x000000010268f080 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4335399040>=>#<Proc:0x000000010268f080 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010268ec48\
    \ @a_proc=#<Proc:0x000000010268ec70 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4335398000>=>#<Proc:0x000000010268ec70 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:8:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:8:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:8:in\
    \ `sort_by!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpknt6_q.rb:16:in\
    \ `test_sort_numbers'\n     13:   def test_sort_numbers\n     14:     candidate\
    \ = method(:sort_numbers)\n     15:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 16:     assert_equal(\"three\", candidate.call(\"three\"))\n     17:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     18:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     19:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.017771 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    56.27 tests/s, 56.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001046eb900 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001046eb8d8\
    \ @start_time=2022-07-28 16:13:53.740943 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104724520\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001047eb238\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001046eb900 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001047f3d48>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001047eb238\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001046eb900 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001047f3b40 @a_proc=#<Proc:0x00000001047f3b68\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4370414440>=>#<Proc:0x00000001047f3b68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001047f35a0\
    \ @a_proc=#<Proc:0x00000001047f35c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4370413000>=>#<Proc:0x00000001047f35c8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001047f3118\
    \ @a_proc=#<Proc:0x00000001047f3140 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4370411840>=>#<Proc:0x00000001047f3140 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001047f2d08\
    \ @a_proc=#<Proc:0x00000001047f2d30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4370410800>=>#<Proc:0x00000001047f2d30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl03ig90i.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011747 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.13 tests/s, 85.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| NUMBERS.index(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |word| NUMBERS.index(word) }.join('\
    \ ')\n                                   ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj805lecl.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.0032 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    312.50 tests/s, 312.50 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001031b9668 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001031b9640\
    \ @start_time=2022-07-28 16:13:53.738843 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001032d1618\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001032c8540\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001031b9668 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001032d1140>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001032c8540 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001031b9668 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032d0f10\
    \ @a_proc=#<Proc:0x00000001032d0f38 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4348251960>=>#<Proc:0x00000001032d0f38 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032d0a60\
    \ @a_proc=#<Proc:0x00000001032d0a88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4348250760>=>#<Proc:0x00000001032d0a88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032d0628\
    \ @a_proc=#<Proc:0x00000001032d0650 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4348249680>=>#<Proc:0x00000001032d0650 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032d0100\
    \ @a_proc=#<Proc:0x00000001032d0128 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4348248360>=>#<Proc:0x00000001032d0128 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq50ryvm2.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009248 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    108.13 tests/s, 108.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000102fc1928 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102fc18d8\
    \ @start_time=2022-07-28 16:13:53.845914 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001030d9680\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001030d0580\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000102fc1928 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001030d91d0>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001030d0580 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000102fc1928 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030d8f78\
    \ @a_proc=#<Proc:0x00000001030d8fa0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4346187680>=>#<Proc:0x00000001030d8fa0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030d8ac8\
    \ @a_proc=#<Proc:0x00000001030d8af0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4346186480>=>#<Proc:0x00000001030d8af0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030d8690\
    \ @a_proc=#<Proc:0x00000001030d86b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4346185400>=>#<Proc:0x00000001030d86b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001030d8168\
    \ @a_proc=#<Proc:0x00000001030d8190 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4346184080>=>#<Proc:0x00000001030d8190 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51ajnw41.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008922 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    112.08 tests/s, 112.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000104985710 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001049856e8\
    \ @start_time=2022-07-28 16:13:53.878383 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104a9d648\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104a94548\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000104985710 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000104a9d198>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000104a94548 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000104985710 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104a9cf40\
    \ @a_proc=#<Proc:0x0000000104a9cf68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4373204840>=>#<Proc:0x0000000104a9cf68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104a9ca90\
    \ @a_proc=#<Proc:0x0000000104a9cab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4373203640>=>#<Proc:0x0000000104a9cab8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104a9c658\
    \ @a_proc=#<Proc:0x0000000104a9c680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4373202560>=>#<Proc:0x0000000104a9c680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104a9c130\
    \ @a_proc=#<Proc:0x0000000104a9c158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4373201240>=>#<Proc:0x0000000104a9c158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4zap3162.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009369 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    106.73 tests/s, 106.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnlc_95ic.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.003263 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    306.47 tests/s, 306.47 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw504fk9m\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw504fk9m.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.021549 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.41 tests/s, 185.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001031dba10 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001031db970\
    \ @start_time=2022-07-28 16:13:53.889704 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001032c8518\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000103493208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001031dba10 ...>\n\
    \  \n    numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\n    \
    \                                   ^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001034dfd60>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000103493208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001031dba10 ...>\n\
    \  \n    numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\n    \
    \                                   ^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001034dfb58 @a_proc=#<Proc:0x00000001034dfb80\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4350409600>=>#<Proc:0x00000001034dfb80 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001034df5b8\
    \ @a_proc=#<Proc:0x00000001034df5e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4350408160>=>#<Proc:0x00000001034df5e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001034df130\
    \ @a_proc=#<Proc:0x00000001034df158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4350407000>=>#<Proc:0x00000001034df158 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001034ded20\
    \ @a_proc=#<Proc:0x00000001034ded48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4350405960>=>#<Proc:0x00000001034ded48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65z5xyls.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.017781 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    56.24 tests/s, 56.24 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x00000001008ff970 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001008ff948\
    \ @start_time=2022-07-28 16:13:53.892969 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001009ec518\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100ab3208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001008ff970\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000100affd38>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000100ab3208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001008ff970\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000100affb30 @a_proc=#<Proc:0x0000000100affb58\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4306500440>=>#<Proc:0x0000000100affb58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100aff590\
    \ @a_proc=#<Proc:0x0000000100aff5b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4306499000>=>#<Proc:0x0000000100aff5b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100aff108\
    \ @a_proc=#<Proc:0x0000000100aff130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4306497840>=>#<Proc:0x0000000100aff130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100afecf8\
    \ @a_proc=#<Proc:0x0000000100afed20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4306496800>=>#<Proc:0x0000000100afed20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8h6qar4s.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.012919 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.41 tests/s, 77.41 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd00f4j3m.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.004028 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    248.26 tests/s, 248.26 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split.sort_by { |num| num_hash[num]\
    \ }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprgswe6wo\n\
    Started\n.\nFinished in 0.000212 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4716.98 tests/s, 23584.91 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0uurtb93\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0uurtb93.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005014 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    199.44 tests/s, 797.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mwvi6o2\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mwvi6o2.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.007596 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    131.65 tests/s, 526.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfpndc797\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfpndc797.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005164 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    193.65 tests/s, 774.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v08vtv3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2v08vtv3.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.0055 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    181.82 tests/s, 727.27 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo2ghx95c\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo2ghx95c.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004608 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    217.01 tests/s, 868.06 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprj877n4f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprj877n4f.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.009724 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    102.84 tests/s, 411.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ribjr3m\n\
    Started\n.\nFinished in 0.00024 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4166.67 tests/s, 20833.33 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwd8iwuy6.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.015468 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    64.65 tests/s, 64.65 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000102ac3930 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102ac3908\
    \ @start_time=2022-07-28 16:13:54.053969 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102afc500\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102bc3218\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000102ac3930 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000102c0fd20>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000102bc3218 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000102ac3930 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102c0fb18\
    \ @a_proc=#<Proc:0x0000000102c0fb40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4341168960>=>#<Proc:0x0000000102c0fb40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102c0f578\
    \ @a_proc=#<Proc:0x0000000102c0f5a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4341167520>=>#<Proc:0x0000000102c0f5a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102c0f0f0\
    \ @a_proc=#<Proc:0x0000000102c0f118 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4341166360>=>#<Proc:0x0000000102c0f118 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102c0ece0\
    \ @a_proc=#<Proc:0x0000000102c0ed08 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4341165320>=>#<Proc:0x0000000102c0ed08 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeeoe602x.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009187 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    108.85 tests/s, 108.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001030bff00 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001030bfed8\
    \ @start_time=2022-07-28 16:13:54.010941 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001030f85f8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000106acb2f8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001030bff00 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000106ad3e30>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000106acb2f8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001030bff00 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000106ad3c28 @a_proc=#<Proc:0x0000000106ad3c50\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4406983760>=>#<Proc:0x0000000106ad3c50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000106ad3688\
    \ @a_proc=#<Proc:0x0000000106ad36b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4406982320>=>#<Proc:0x0000000106ad36b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000106ad3200\
    \ @a_proc=#<Proc:0x0000000106ad3228 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4406981160>=>#<Proc:0x0000000106ad3228 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000106ad2df0\
    \ @a_proc=#<Proc:0x0000000106ad2e18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4406980120>=>#<Proc:0x0000000106ad2e18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytdaok5.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.011637 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    85.93 tests/s, 85.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001031a5758 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001031a56e0\
    \ @start_time=2022-07-28 16:13:54.056898 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001032bd668\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001032b4590\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001031a5758 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001032bd1b8>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001032b4590 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001031a5758 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032bcf60\
    \ @a_proc=#<Proc:0x00000001032bcf88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4348170120>=>#<Proc:0x00000001032bcf88 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032bcab0\
    \ @a_proc=#<Proc:0x00000001032bcad8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4348168920>=>#<Proc:0x00000001032bcad8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032bc678\
    \ @a_proc=#<Proc:0x00000001032bc6a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4348167840>=>#<Proc:0x00000001032bc6a0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032bc150\
    \ @a_proc=#<Proc:0x00000001032bc178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4348166520>=>#<Proc:0x00000001032bc178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1zdq40k2.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010065 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    99.35 tests/s, 99.35 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x0000000100ce5710 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100ce5698\
    \ @start_time=2022-07-28 16:13:54.033976 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100dfd5d0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100df44d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000100ce5710 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000100dfd120>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000100df44d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x0000000100ce5710 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000100dfcec8 @a_proc=#<Proc:0x0000000100dfcf18\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4309634840>=>#<Proc:0x0000000100dfcf18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100dfca18\
    \ @a_proc=#<Proc:0x0000000100dfca40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4309633600>=>#<Proc:0x0000000100dfca40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100dfc5e0\
    \ @a_proc=#<Proc:0x0000000100dfc608 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4309632520>=>#<Proc:0x0000000100dfc608 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100dfc0b8\
    \ @a_proc=#<Proc:0x0000000100dfc0e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4309631200>=>#<Proc:0x0000000100dfc0e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2u40rnyt.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.021443 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    46.64 tests/s, 46.64 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |num| NUMBERS.index(num) }.join(' ')\n\
    \                                  ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp39erwcmk.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.004235 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    236.13 tests/s, 236.13 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2id0zedf\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2id0zedf.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.007387 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    135.37 tests/s, 541.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x00000001012d56e8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001012d5670\
    \ @start_time=2022-07-28 16:13:54.056402 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001013ed620\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001013e4520\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001012d56e8\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001013ed148>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001013e4520\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x00000001012d56e8\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001013ecf18 @a_proc=#<Proc:0x00000001013ecf40\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4315860800>=>#<Proc:0x00000001013ecf40 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013eca68\
    \ @a_proc=#<Proc:0x00000001013eca90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4315859600>=>#<Proc:0x00000001013eca90 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013ec630\
    \ @a_proc=#<Proc:0x00000001013ec658 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4315858520>=>#<Proc:0x00000001013ec658 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001013ec108\
    \ @a_proc=#<Proc:0x00000001013ec130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4315857200>=>#<Proc:0x00000001013ec130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpck2w63i7.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.01413 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    70.77 tests/s, 70.77 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmul31va3\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmul31va3.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004513 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    221.58 tests/s, 886.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x00000001052d6288 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001052d6210\
    \ @start_time=2022-07-28 16:13:54.182461 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000105310280\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001053d7128\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x00000001052d6288 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000105423c30>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001053d7128\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x00000001052d6288 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000105423a28 @a_proc=#<Proc:0x0000000105423a50\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4383193680>=>#<Proc:0x0000000105423a50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105423488\
    \ @a_proc=#<Proc:0x00000001054234b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4383192240>=>#<Proc:0x00000001054234b0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105423000\
    \ @a_proc=#<Proc:0x0000000105423028 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4383191080>=>#<Proc:0x0000000105423028 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105422bf0\
    \ @a_proc=#<Proc:0x0000000105422c18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4383190040>=>#<Proc:0x0000000105422c18 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0564ujn.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.019271 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    51.89 tests/s, 51.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |a, b| number_to_i(a)\
    \ <=> number_to_i(b) }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x000000010322a778 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010322a138\
    \ @start_time=2022-07-28 16:13:54.191502 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000103264400\
    \ @assertion_count=2, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001033e2e80\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x000000010322a778 ...>\n\
    \  \n    numbers_array.sort! { |a, b| number_to_i(a) <=> number_to_i(b) }\n  \
    \                               ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001033ebcd8>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001033e2e80\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x000000010322a778 ...>\n\
    \  \n    numbers_array.sort! { |a, b| number_to_i(a) <=> number_to_i(b) }\n  \
    \                               ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001033ebad0 @a_proc=#<Proc:0x00000001033ebaf8\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4349410040>=>#<Proc:0x00000001033ebaf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001033eb530\
    \ @a_proc=#<Proc:0x00000001033eb558 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4349408600>=>#<Proc:0x00000001033eb558 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001033eb0a8\
    \ @a_proc=#<Proc:0x00000001033eb0d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4349407440>=>#<Proc:0x00000001033eb0d0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001033eac98\
    \ @a_proc=#<Proc:0x00000001033eacc0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4349406400>=>#<Proc:0x00000001033eacc0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyhd9_fc.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.009017 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.90 tests/s, 221.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000104ab1648 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000104ab1580\
    \ @start_time=2022-07-28 16:13:54.201412 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000104c81608\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000104c78508\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000104ab1648 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000104c81180>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000104c78508 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000104ab1648 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104c80f28\
    \ @a_proc=#<Proc:0x0000000104c80f50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4375187280>=>#<Proc:0x0000000104c80f50 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104c80a50\
    \ @a_proc=#<Proc:0x0000000104c80a78 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4375186040>=>#<Proc:0x0000000104c80a78 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104c80618\
    \ @a_proc=#<Proc:0x0000000104c80640 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4375184960>=>#<Proc:0x0000000104c80640 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000104c800f0\
    \ @a_proc=#<Proc:0x0000000104c80118 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4375183640>=>#<Proc:0x0000000104c80118 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35cegabc.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009207 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    108.61 tests/s, 108.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3mc2w468\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3mc2w468.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.006859 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    145.79 tests/s, 583.18 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x0000000102ea3848 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102ea2ec0\
    \ @start_time=2022-07-28 16:13:54.213709 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102edc490\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001069a3218\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102ea3848 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001069abd00>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001069a3218\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102ea3848 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001069abaf8 @a_proc=#<Proc:0x00000001069abb20\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4405771040>=>#<Proc:0x00000001069abb20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001069ab558\
    \ @a_proc=#<Proc:0x00000001069ab580 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4405769600>=>#<Proc:0x00000001069ab580 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001069ab0d0\
    \ @a_proc=#<Proc:0x00000001069ab0f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4405768440>=>#<Proc:0x00000001069ab0f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001069aacc0\
    \ @a_proc=#<Proc:0x00000001069aace8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4405767400>=>#<Proc:0x00000001069aace8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdgk00kr2.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.010381 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.33 tests/s, 96.33 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgk11stte\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgk11stte.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.00464 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.52 tests/s, 862.07 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort_by! { |num| num_to_i(num) }\n  nums.join('\
    \ ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x00000001030f5e20 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001030f5df8\
    \ @start_time=2022-07-28 16:13:54.208385 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000103130278\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001032af0b8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x00000001030f5e20 ...>\n  \n\
    \    nums.sort_by! { |num| num_to_i(num) }\n                          ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001032fbc88>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001032af0b8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x00000001030f5e20 ...>\n  \n    nums.sort_by!\
    \ { |num| num_to_i(num) }\n                          ^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032fba58\
    \ @a_proc=#<Proc:0x00000001032fba80 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4348426880>=>#<Proc:0x00000001032fba80 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032fb4b8\
    \ @a_proc=#<Proc:0x00000001032fb4e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4348425440>=>#<Proc:0x00000001032fb4e0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032fb030\
    \ @a_proc=#<Proc:0x00000001032fb058 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4348424280>=>#<Proc:0x00000001032fb058 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001032fac20\
    \ @a_proc=#<Proc:0x00000001032fac48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4348423240>=>#<Proc:0x00000001032fac48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:8:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:8:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:8:in\
    \ `sort_by!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv8az063.rb:16:in\
    \ `test_sort_numbers'\n     13:   def test_sort_numbers\n     14:     candidate\
    \ = method(:sort_numbers)\n     15:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 16:     assert_equal(\"three\", candidate.call(\"three\"))\n     17:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     18:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     19:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.007586 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    131.82 tests/s, 131.82 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split\n  numbers_array.sort! { |a, b| NUMBERS[a] <=>\
    \ NUMBERS[b] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkkwnjseu.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003139 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    318.57 tests/s, 637.15 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000102bda4b8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102bda490\
    \ @start_time=2022-07-28 16:13:54.216644 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102c14370\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102cdb178\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000102bda4b8 ...>\n\
    \  \n    numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\n    \
    \                                   ^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102d27c80>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102cdb178\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000102bda4b8 ...>\n\
    \  \n    numbers.split(' ').sort_by { |num| num_to_int(num) }.join(' ')\n    \
    \                                   ^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102d27a78 @a_proc=#<Proc:0x0000000102d27aa0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4342315680>=>#<Proc:0x0000000102d27aa0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d274d8\
    \ @a_proc=#<Proc:0x0000000102d27500 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4342314240>=>#<Proc:0x0000000102d27500 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d27050\
    \ @a_proc=#<Proc:0x0000000102d27078 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4342313080>=>#<Proc:0x0000000102d27078 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102d26c40\
    \ @a_proc=#<Proc:0x0000000102d26c68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4342312040>=>#<Proc:0x0000000102d26c68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhhbywe6.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.009035 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    110.68 tests/s, 110.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x000000010459b848 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010459aec0\
    \ @start_time=2022-07-28 16:13:54.200968 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001045d44b8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001047531e0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010459b848\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010475bcf0>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001047531e0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x000000010459b848\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010475bae8 @a_proc=#<Proc:0x000000010475bb10\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4369791760>=>#<Proc:0x000000010475bb10 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010475b548\
    \ @a_proc=#<Proc:0x000000010475b570 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4369790320>=>#<Proc:0x000000010475b570 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010475b0c0\
    \ @a_proc=#<Proc:0x000000010475b0e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4369789160>=>#<Proc:0x000000010475b0e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010475acb0\
    \ @a_proc=#<Proc:0x000000010475acd8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4369788120>=>#<Proc:0x000000010475acd8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppctea_x8.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.02808 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    35.61 tests/s, 35.61 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  # TODO: implement this method\n  num_hash = {'zero' => 0, 'one' => 1, 'two'\
    \ => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight'\
    \ => 8, 'nine' => 9}\n  num_array = numbers.split(' ')\n  num_array.sort! {|a,\
    \ b| num_hash[a] <=> num_hash[b]}\n  num_array.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpul67grbb\n\
    Started\n.\nFinished in 0.000206 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4854.37 tests/s, 24271.84 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x0000000100b73d00 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100b73cd8\
    \ @start_time=2022-07-28 16:13:54.232163 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100c60538\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100d27250\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x0000000100b73d00 ...>\n  \n\
    \    numbers.split.sort_by { |num| num_to_i(num) }.join(' ')\n               \
    \                   ^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000100d73d80>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000100d27250 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x0000000100b73d00 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_i(num) }.join(' ')\n                                  ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d73b78\
    \ @a_proc=#<Proc:0x0000000100d73ba0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4309072800>=>#<Proc:0x0000000100d73ba0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d735d8\
    \ @a_proc=#<Proc:0x0000000100d73600 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4309071360>=>#<Proc:0x0000000100d73600 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d73150\
    \ @a_proc=#<Proc:0x0000000100d73178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4309070200>=>#<Proc:0x0000000100d73178 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100d72d40\
    \ @a_proc=#<Proc:0x0000000100d72d68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4309069160>=>#<Proc:0x0000000100d72d68 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe069_xby.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.007969 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    125.49 tests/s, 125.49 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001043ed7f8 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001043ed780\
    \ @start_time=2022-07-28 16:13:54.318647 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000109a0d6d8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000109a04600\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001043ed7f8 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000109a0d228>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000109a04600 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001043ed7f8 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000109a0cfd0\
    \ @a_proc=#<Proc:0x0000000109a0cff8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4456501240>=>#<Proc:0x0000000109a0cff8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000109a0cb20\
    \ @a_proc=#<Proc:0x0000000109a0cb48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4456500040>=>#<Proc:0x0000000109a0cb48 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000109a0c6e8\
    \ @a_proc=#<Proc:0x0000000109a0c710 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4456498960>=>#<Proc:0x0000000109a0c710 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000109a0c1c0\
    \ @a_proc=#<Proc:0x0000000109a0c1e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4456497640>=>#<Proc:0x0000000109a0c1e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpowbnieyq.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008921 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    112.10 tests/s, 112.10 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x00000001045a7a30 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001045a7a08\
    \ @start_time=2022-07-28 16:13:54.324024 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001045e0588\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001046a7278\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x00000001045a7a30 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x00000001046afdb0>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001046a7278 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x00000001045a7a30 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001046afba8\
    \ @a_proc=#<Proc:0x00000001046afbd0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4369087440>=>#<Proc:0x00000001046afbd0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001046af608\
    \ @a_proc=#<Proc:0x00000001046af630 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4369086000>=>#<Proc:0x00000001046af630 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001046af180\
    \ @a_proc=#<Proc:0x00000001046af1a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4369084840>=>#<Proc:0x00000001046af1a8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001046aed70\
    \ @a_proc=#<Proc:0x00000001046aed98 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4369083800>=>#<Proc:0x00000001046aed98 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t_i_9vm.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008868 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    112.76 tests/s, 112.76 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3cq7hfv6\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3cq7hfv6.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.007327 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    136.48 tests/s, 545.93 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  number_array\
    \ = numbers.split\n  number_array.sort_by! do |number|\n    number_hash[number]\n\
    \  end\n  number_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx31206uv\n\
    Started\n.\nFinished in 0.0002 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    5000.00 tests/s, 25000.00 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000100ad9778 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000100ad9700\
    \ @start_time=2022-07-28 16:13:54.394425 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000100bf16b0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000100be85d8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000100ad9778 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000100bf11d8>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000100be85d8 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000100ad9778 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100bf0fa8\
    \ @a_proc=#<Proc:0x0000000100bf0fd0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4307488720>=>#<Proc:0x0000000100bf0fd0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100bf0af8\
    \ @a_proc=#<Proc:0x0000000100bf0b20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4307487520>=>#<Proc:0x0000000100bf0b20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100bf06c0\
    \ @a_proc=#<Proc:0x0000000100bf06e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4307486440>=>#<Proc:0x0000000100bf06e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000100bf0198\
    \ @a_proc=#<Proc:0x0000000100bf01c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4307485120>=>#<Proc:0x0000000100bf01c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqdcrjf5.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.05385 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    18.57 tests/s, 18.57 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_int'\
    \ for #<TestHumanEval:0x0000000105017970 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000105017948\
    \ @start_time=2022-07-28 16:13:54.320767 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000105050518\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000105117208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_int' for #<TestHumanEval:0x0000000105017970 ...>\n\
    \  \n    numbers.split.sort_by { |num| num_to_int(num) }.join(' ')\n         \
    \                         ^^^^^^^^^^>, @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x0000000105163d38>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x0000000105117208 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_int' for #<TestHumanEval:0x0000000105017970 ...>\n  \n    numbers.split.sort_by\
    \ { |num| num_to_int(num) }.join(' ')\n                                  ^^^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[],\
    \ @channels={\"Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105163b30\
    \ @a_proc=#<Proc:0x0000000105163b58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4380310360>=>#<Proc:0x0000000105163b58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105163590\
    \ @a_proc=#<Proc:0x00000001051635b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4380308920>=>#<Proc:0x00000001051635b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105163108\
    \ @a_proc=#<Proc:0x0000000105163130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4380307760>=>#<Proc:0x0000000105163130 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000105162cf8\
    \ @a_proc=#<Proc:0x0000000105162d20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4380306720>=>#<Proc:0x0000000105162d20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5o30rdc.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008825 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    113.31 tests/s, 113.31 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_i'\
    \ for #<TestHumanEval:0x0000000102fbf948 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102fbf920\
    \ @start_time=2022-07-28 16:13:54.350289 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102ff84c8\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001030bf208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000102fbf948 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x000000010310bd10>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001030bf208\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_i' for #<TestHumanEval:0x0000000102fbf948 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_i(number) }.join(' ')\n  \
    \                                   ^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x000000010310bb08 @a_proc=#<Proc:0x000000010310bb30\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4346395440>=>#<Proc:0x000000010310bb30 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010310b568\
    \ @a_proc=#<Proc:0x000000010310b590 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4346394000>=>#<Proc:0x000000010310b590 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010310b0e0\
    \ @a_proc=#<Proc:0x000000010310b108 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4346392840>=>#<Proc:0x000000010310b108 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010310acd0\
    \ @a_proc=#<Proc:0x000000010310acf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4346391800>=>#<Proc:0x000000010310acf8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgdfup89.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.062487 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    16.00 tests/s, 16.00 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwtoakxfw\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwtoakxfw.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004729 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    211.46 tests/s, 845.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split(' ').sort_by { |number|\
    \ number_hash[number] }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwme2ym_w\n\
    Started\n.\nFinished in 0.000627 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    1594.90 tests/s, 7974.48 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikdgcpep\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpikdgcpep.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004729 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    211.46 tests/s, 845.84 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {'zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9}\n  num_array\
    \ = numbers.split(' ')\n  num_array.sort! {|a, b| num_hash[a] <=> num_hash[b]}\n\
    \  num_array.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoi58r2jg\n\
    Started\n.\nFinished in 0.000237 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4219.41 tests/s, 21097.05 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6qgl1fp.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.030161 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    33.16 tests/s, 33.16 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgd88382f\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgd88382f.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.006512 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    153.56 tests/s, 614.25 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  num_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  num_array = numbers.split(' ')\n \
    \ num_array.sort! do |x, y|\n    num_hash[x] <=> num_hash[y]\n  end\n  num_array.join('\
    \ ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87ll0x2m\n\
    Started\n.\nFinished in 0.00022 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4545.45 tests/s, 22727.27 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `word_to_number'\
    \ for #<TestHumanEval:0x00000001031dba60 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00000001031dba38\
    \ @start_time=2022-07-28 16:13:54.482298 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000103214608\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001032db2d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001031dba60 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000103327e28>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001032db2d0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `word_to_number' for #<TestHumanEval:0x00000001031dba60 ...>\n\
    \  \n    numbers.split.sort_by { |word| word_to_number(word) }.join(' ')\n   \
    \                                ^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000103327bf8 @a_proc=#<Proc:0x0000000103327c20\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4348607520>=>#<Proc:0x0000000103327c20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103327658\
    \ @a_proc=#<Proc:0x0000000103327680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4348606080>=>#<Proc:0x0000000103327680 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001033271d0\
    \ @a_proc=#<Proc:0x00000001033271f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4348604920>=>#<Proc:0x00000001033271f8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000103326dc0\
    \ @a_proc=#<Proc:0x0000000103326de8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4348603880>=>#<Proc:0x0000000103326de8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu4kbmdk2.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.061288 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    16.32 tests/s, 16.32 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8q4o47t\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8q4o47t.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.006292 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.93 tests/s, 635.73 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `number_to_int'\
    \ for #<TestHumanEval:0x0000000102b95660 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102b95638\
    \ @start_time=2022-07-28 16:13:54.494549 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x0000000102cad638\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x0000000102ca4560\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102b95660 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x0000000102cad188>, @failures=[], @errors=[#<Test::Unit::Error:0x0000000102ca4560\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `number_to_int' for #<TestHumanEval:0x0000000102b95660 ...>\n\
    \  \n    numbers.split.sort_by { |number| number_to_int(number) }.join(' ')\n\
    \                                     ^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x0000000102cacf30 @a_proc=#<Proc:0x0000000102cacf58\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4341813080>=>#<Proc:0x0000000102cacf58 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102caca80\
    \ @a_proc=#<Proc:0x0000000102cacaa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4341811880>=>#<Proc:0x0000000102cacaa8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102cac648\
    \ @a_proc=#<Proc:0x0000000102cac670 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4341810800>=>#<Proc:0x0000000102cac670 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x0000000102cac120\
    \ @a_proc=#<Proc:0x0000000102cac148 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4341809480>=>#<Proc:0x0000000102cac148 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwrcf9ew8.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.036208 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    27.62 tests/s, 27.62 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split(' ').sort_by { |num| NUMBERS[num] }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split(' ').sort_by { |num| NUMBERS[num] }.join(' ')\n\
    \                                       ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmc5hflab.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.005491 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    182.12 tests/s, 182.12 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_thau_i\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_thau_i.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004797 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    208.46 tests/s, 833.85 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf9p9raag\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf9p9raag.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005315 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    188.15 tests/s, 752.59 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(\" \")\n  numbers_array.sort! { |x, y| NUMBERS[x]\
    \ <=> NUMBERS[y] }\n  numbers_array.join(\" \")\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |x, y| NUMBERS[x] <=> NUMBERS[y] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcn_mi8x0.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.003578 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    279.49 tests/s, 558.97 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  nums = numbers.split(' ')\n  nums.sort_by! { |num| num_to_i(num) }\n  nums.join('\
    \ ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n \
    \ def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `num_to_i'\
    \ for #<TestHumanEval:0x000000010272d870 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x000000010272d7f8\
    \ @start_time=2022-07-28 16:13:54.576908 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x000000010624d680\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001062444e0\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `num_to_i' for #<TestHumanEval:0x000000010272d870 ...>\n  \n\
    \    nums.sort_by! { |num| num_to_i(num) }\n                          ^^^^^^^^>,\
    \ @method_name=\"test_sort_numbers\">], @stop_tag=#<Object:0x000000010624d1d0>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00000001062444e0 @test_name=\"\
    test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError: undefined method\
    \ `num_to_i' for #<TestHumanEval:0x000000010272d870 ...>\n  \n    nums.sort_by!\
    \ { |num| num_to_i(num) }\n                          ^^^^^^^^>, @method_name=\"\
    test_sort_numbers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010624cf78\
    \ @a_proc=#<Proc:0x000000010624cfc8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4398043080>=>#<Proc:0x000000010624cfc8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010624cac8\
    \ @a_proc=#<Proc:0x000000010624caf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4398041840>=>#<Proc:0x000000010624caf0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010624c690\
    \ @a_proc=#<Proc:0x000000010624c6b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4398040760>=>#<Proc:0x000000010624c6b8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x000000010624c168\
    \ @a_proc=#<Proc:0x000000010624c190 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4398039440>=>#<Proc:0x000000010624c190 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:8:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:8:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:8:in\
    \ `sort_by!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:16:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_531b0.rb:16:in\
    \ `test_sort_numbers'\n     13:   def test_sort_numbers\n     14:     candidate\
    \ = method(:sort_numbers)\n     15:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 16:     assert_equal(\"three\", candidate.call(\"three\"))\n     17:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     18:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     19:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.008045 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    124.30 tests/s, 124.30 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuj0580mv\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuj0580mv.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.006758 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.97 tests/s, 591.89 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_hash = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers_array = numbers.split(' ')\n\
    \  sorted_numbers = numbers_array.sort_by { |number| number_hash[number] }\n \
    \ sorted_numbers.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_sort_numbers\n    candidate = method(:sort_numbers)\n    assert_equal(\"\
    \", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"three\"\
    ))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five zero\
    \ four seven nine eight\"))\n    assert_equal(\"zero one two three four five six\"\
    , candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnnswr3j_\n\
    Started\n.\nFinished in 0.000211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4739.34 tests/s, 23696.68 assertions/s\n"
  exit_code: 0
  status: OK
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5bzxkq\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5bzxkq.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004674 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    213.95 tests/s, 855.80 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| numeral_to_number(num) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NoMethodError: undefined method `numeral_to_number'\
    \ for #<TestHumanEval:0x0000000102ac1810 @method_name=\"test_sort_numbers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x0000000102ac1770\
    \ @start_time=2022-07-28 16:13:54.605514 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00000001064d96b0\
    \ @assertion_count=1, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00000001064d05d8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x0000000102ac1810\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @stop_tag=#<Object:0x00000001064d91d8>, @failures=[], @errors=[#<Test::Unit::Error:0x00000001064d05d8\
    \ @test_name=\"test_sort_numbers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `numeral_to_number' for #<TestHumanEval:0x0000000102ac1810\
    \ ...>\n  \n    numbers.split.sort_by { |num| numeral_to_number(num) }.join('\
    \ ')\n                                  ^^^^^^^^^^^^^^^^^>, @method_name=\"test_sort_numbers\"\
    >], @pendings=[], @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00000001064d8fa8 @a_proc=#<Proc:0x00000001064d8fd0\
    \ /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=4400713680>=>#<Proc:0x00000001064d8fd0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001064d8af8\
    \ @a_proc=#<Proc:0x00000001064d8b20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>,\
    \ @hash=4400712480>=>#<Proc:0x00000001064d8b20 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:91>},\
    \ \"Test::Unit::TestResult::PASS_ASSERTION\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001064d86c0\
    \ @a_proc=#<Proc:0x00000001064d86e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>,\
    \ @hash=4400711400>=>#<Proc:0x00000001064d86e8 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:94>},\
    \ \"Test::Unit::TestResult::FAULT\"=>{#<Test::Unit::Util::ProcWrapper:0x00000001064d8198\
    \ @a_proc=#<Proc:0x00000001064d81c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>,\
    \ @hash=4400710080>=>#<Proc:0x00000001064d81c0 /opt/homebrew/Cellar/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:97>}}>,\
    \ @_assertion_wrapped=false>\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:7:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdixna77t.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.016213 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    61.68 tests/s, 61.68 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaihgn56y\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaihgn56y.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.005012 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    199.52 tests/s, 798.08 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmkq8wfjx\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmkq8wfjx.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.00551 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    181.49 tests/s, 725.95 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers_array = numbers.split(' ')\n  numbers_array.sort! { |a, b| NUMBERS[a]\
    \ <=> NUMBERS[b] }\n  numbers_array.join(' ')\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers_array.sort! { |a, b| NUMBERS[a] <=> NUMBERS[b] }\n\
    \                                 ^^^^^^^\n  Did you mean?  Numeric\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7.rb:8:in\
    \ `block in sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7.rb:8:in\
    \ `sort!'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7.rb:8:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7.rb:17:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyml7ofu7.rb:17:in\
    \ `test_sort_numbers'\n     14:     candidate = method(:sort_numbers)\n     15:\
    \     assert_equal(\"\", candidate.call(\"\"))\n     16:     assert_equal(\"three\"\
    , candidate.call(\"three\"))\n  => 17:     assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n     18:     assert_equal(\"zero four five seven eight nine\"\
    , candidate.call(\"five zero four seven nine eight\"))\n     19:     assert_equal(\"\
    zero one two three four five six\", candidate.call(\"six five four three two one\
    \ zero\"))\n     20:   end\n===============================================================================\n\
    \nFinished in 0.00321 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    311.53 tests/s, 623.05 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |num| num.to_i }.join(' ')\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate\
    \ = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"\
    three\", candidate.call(\"three\"))\n    assert_equal(\"three five nine\", candidate.call(\"\
    three five nine\"))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n    assert_equal(\"zero one two three four\
    \ five six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbwpimi_\n\
    Started\nF\n===============================================================================\n\
    Failure: test_sort_numbers(TestHumanEval)\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbwpimi_.rb:16:in\
    \ `test_sort_numbers'\n     13:     assert_equal(\"\", candidate.call(\"\"))\n\
    \     14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:   \
    \  assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n  =>\
    \ 16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    \     18:   end\n     19: end\n<\"zero four five seven eight nine\"> expected\
    \ but was\n<\"five zero four seven nine eight\">\n\ndiff:\n? five zero four five\
    \ seven nine eight nine\n===============================================================================\n\
    \nFinished in 0.004649 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 4 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    215.10 tests/s, 860.40 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  numbers.split.sort_by { |number| NUMBERS.index(number) }.join(' ')\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_numbers\n\
    \    candidate = method(:sort_numbers)\n    assert_equal(\"\", candidate.call(\"\
    \"))\n    assert_equal(\"three\", candidate.call(\"three\"))\n    assert_equal(\"\
    three five nine\", candidate.call(\"three five nine\"))\n    assert_equal(\"zero\
    \ four five seven eight nine\", candidate.call(\"five zero four seven nine eight\"\
    ))\n    assert_equal(\"zero one two three four five six\", candidate.call(\"six\
    \ five four three two one zero\"))\n  end\nend\n"
  stdout: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n\n\
    Started\nE\n===============================================================================\n\
    Error: test_sort_numbers(TestHumanEval):\n  NameError: uninitialized constant\
    \ NUMBERS\n  \n    numbers.split.sort_by { |number| NUMBERS.index(number) }.join('\
    \ ')\n                                     ^^^^^^^\n  Did you mean?  Numeric\n\
    /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:7:in `block in\
    \ sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:7:in\
    \ `each'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:7:in\
    \ `sort_by'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:7:in\
    \ `sort_numbers'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:14:in\
    \ `call'\n/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkfb8s1n.rb:14:in\
    \ `test_sort_numbers'\n     11:   def test_sort_numbers\n     12:     candidate\
    \ = method(:sort_numbers)\n     13:     assert_equal(\"\", candidate.call(\"\"\
    ))\n  => 14:     assert_equal(\"three\", candidate.call(\"three\"))\n     15:\
    \     assert_equal(\"three five nine\", candidate.call(\"three five nine\"))\n\
    \     16:     assert_equal(\"zero four five seven eight nine\", candidate.call(\"\
    five zero four seven nine eight\"))\n     17:     assert_equal(\"zero one two\
    \ three four five six\", candidate.call(\"six five four three two one zero\"))\n\
    ===============================================================================\n\
    \nFinished in 0.00305 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    327.87 tests/s, 327.87 assertions/s\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
    \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\ndef sort_numbers(numbers)\n\
    \  number_map = {\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  }\n  numbers.split(' ').sort_by { |number|\
    \ number_map[number] }.join(' ')\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_sort_numbers\n    candidate = method(:sort_numbers)\n\
    \    assert_equal(\"\", candidate.call(\"\"))\n    assert_equal(\"three\", candidate.call(\"\
    three\"))\n    assert_equal(\"three five nine\", candidate.call(\"three five nine\"\
    ))\n    assert_equal(\"zero four five seven eight nine\", candidate.call(\"five\
    \ zero four seven nine eight\"))\n    assert_equal(\"zero one two three four five\
    \ six\", candidate.call(\"six five four three two one zero\"))\n  end\nend\n"
  stdout: ''
  stderr: "Loaded suite /var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjffunkny\n\
    Started\n.\nFinished in 0.000211 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    100% passed\n-------------------------------------------------------------------------------\n\
    4739.34 tests/s, 23696.68 assertions/s\n"
  exit_code: 0
  status: OK

name: HumanEval_94_skjkasdkd
language: rust
prompt: "/// You are given a list of integers.\n/// You need to find the largest prime\
  \ value and return the sum of its digits.\n/// Examples:\n/// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n/// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n/// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n/// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n/// For lst = [0,81,12,3,1,21] the output should be 3\n///\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nfn skjkasdkd(lst: Vec<isize>)\
  \ -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
  \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
  \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
  \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278, 109,\
  \ 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0, 724,\
  \ 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
  \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
  \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
  \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
  }\n"
completions: ["    let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i)\
    \ {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in\
    \ max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max_prime = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max_prime {\n            max_prime = i;\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut num = max_prime;\n    while num > 0 {\n   \
    \     sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i\
    \ in lst {\n        if i > max && is_prime(i) {\n            max = i;\n      \
    \  }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst\
    \ {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n  \
    \  }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = vec![];\n    let mut max_prime = 0;\n    for i in lst {\n     \
    \   if is_prime(i) {\n            primes.push(i);\n            if i > max_prime\
    \ {\n                max_prime = i;\n            }\n        }\n    }\n    let\
    \ mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime % 10;\n  \
    \      max_prime /= 10;\n    }\n    sum", "    let mut max = 0;\n    for x in\
    \ lst {\n        if is_prime(x) && x > max {\n            max = x;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut max = max;\n    while max > 0 {\n  \
    \      sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if is_prime(i) && i > max {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut max_prime = 0;\n    for i in lst {\n        if is_prime(i) && i > max_prime\
    \ {\n            max_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut num = max_prime;\n    while num > 0 {\n        sum += num % 10;\n      \
    \  num /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n\
    \    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n  \
    \          primes.push(i);\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    println!(\"{:?}\", primes);\n   \
    \ let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime % 10;\n\
    \        max_prime /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in\
    \ lst {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n       \
    \ sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = vec![];\n    let mut max_prime = 0;\n    for i in lst {\n     \
    \   if is_prime(i) {\n            primes.push(i);\n            if i > max_prime\
    \ {\n                max_prime = i;\n            }\n        }\n    }\n    println!(\"\
    {:?}\", primes);\n    println!(\"{}\", max_prime);\n    let mut sum = 0;\n   \
    \ for i in max_prime.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut largest_prime = 0;\n    for i in lst\
    \ {\n        if is_prime(i) && i > largest_prime {\n            largest_prime\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = largest_prime;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum", "    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i)\
    \ && i > max_prime {\n            max_prime = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut n = max_prime;\n    while n > 0 {\n        sum += n %\
    \ 10;\n        n /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n\
    \    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n  \
    \          primes.push(i);\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    while max_prime\
    \ > 0 {\n        sum += max_prime % 10;\n        max_prime /= 10;\n    }\n   \
    \ sum", "    let mut primes: Vec<isize> = Vec::new();\n    for i in lst {\n  \
    \      if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut max = 0;\n    for i in primes {\n        if i > max {\n            max =\
    \ i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes: Vec<isize>\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    while\
    \ max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", " \
    \   let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut lst = lst.into_iter().rev().collect::<Vec<isize>>();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    let mut res = res.to_string();\n\
    \    let mut res = res.chars().map(|x| x.to_digit(10).unwrap()).collect::<Vec<u32>>();\n\
    \    res.iter().sum()", "    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n     \
    \       max = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum", "    let mut lst = lst;\n    lst.sort();\n    let mut lst2 = lst.clone();\n\
    \    lst2.dedup();\n    let mut lst3 = lst2.clone();\n    lst3.reverse();\n  \
    \  let mut lst4 = lst3.clone();\n    lst4.dedup();\n    let mut lst5 = lst4.clone();\n\
    \    lst5.reverse();\n    let mut lst6 = lst5.clone();\n    lst6.dedup();\n  \
    \  let mut lst7 = lst6.clone();\n    lst7.reverse();\n    let mut lst8 = lst7.clone();\n\
    \    lst8.dedup();\n    let mut lst9 = lst8.clone();\n    lst9.reverse();\n  \
    \  let mut lst10 = lst9.clone();\n    lst10.dedup();\n    let mut lst11 = lst10.clone();\n\
    \    lst11.reverse();\n    let mut lst12 = lst11.clone();\n    lst12.dedup();\n\
    \    let mut lst13 = lst12.clone();\n    lst13.reverse();\n    let mut lst14 =\
    \ lst13.clone();\n    lst14.dedup();\n    let mut lst15 = lst14.clone();\n   \
    \ lst15.reverse();\n    let mut lst16 = lst15.clone();\n    lst16.dedup();\n \
    \   let mut lst17 = lst16.clone();\n    lst17.reverse();\n    let mut lst18 =\
    \ lst17.clone();\n    lst18.dedup();\n    let mut lst19 = lst18.clone();\n   \
    \ lst19.reverse();\n    let mut lst20 = lst19.clone();\n    lst20.dedup();\n \
    \   let mut lst21 = lst20.clone();\n    lst21.reverse();\n    let mut lst22 =\
    \ lst21.clone();\n    lst22.dedup();\n    let mut lst23 = lst22.clone();\n   \
    \ lst23.reverse();\n", "    let mut primes = vec![];\n    for i in lst {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut max = 0;\n    for i in primes {\n        if i > max {\n            max =\
    \ i;\n        }\n    }\n    let mut sum = 0;\n    let mut temp = max;\n    while\
    \ temp > 0 {\n        sum += temp % 10;\n        temp /= 10;\n    }\n    sum",
  "    let mut prime_list: Vec<isize> = Vec::new();\n    let mut max_prime: isize\
    \ = 0;\n    for i in lst {\n        if is_prime(i) {\n            prime_list.push(i);\n\
    \        }\n    }\n    for i in prime_list {\n        if i > max_prime {\n   \
    \         max_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ max_prime_str = max_prime.to_string();\n    for i in max_prime_str.chars() {\n\
    \        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ primes: Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    let mut max_str = max.to_string();\n    for i\
    \ in max_str.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n   \
    \ }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut prime = 0;\n\
    \    for i in lst.iter().rev() {\n        if is_prime(*i) {\n            prime\
    \ = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n    while\
    \ prime > 0 {\n        sum += prime % 10;\n        prime /= 10;\n    }\n    sum",
  "    let mut lst = lst;\n    lst.sort();\n    let mut lst = lst.into_iter().rev().collect::<Vec<isize>>();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut primes = primes.into_iter().rev().collect::<Vec<isize>>();\n\
    \    let mut sum = 0;\n    for i in primes[0].to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut primes =\
    \ vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut primes: Vec<isize> = vec![];\n    for i in lst\
    \ {\n        if is_prime(i) {\n            primes.push(i);\n        }\n    }\n\
    \    let mut max = 0;\n    for i in primes {\n        if i > max {\n         \
    \   max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i) &&\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum",
  "    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) {\n            prime = i;\n\
    \            break;\n        }\n    }\n    let mut sum = 0;\n    while prime >\
    \ 0 {\n        sum += prime % 10;\n        prime /= 10;\n    }\n    sum", "  \
    \  let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n  \
    \          primes.push(i);\n        }\n    }\n    let mut largest = 0;\n    for\
    \ i in primes {\n        if i > largest {\n            largest = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in largest.to_string().chars() {\n   \
    \     sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ primes: Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    let mut num = max;\n    while num > 0 {\n   \
    \     sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut max = 0;\n \
    \   for i in lst {\n        if is_prime(i) && i > max {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while num\
    \ > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = vec![];\n    let mut max_prime = 0;\n    for i in lst\
    \ {\n        if is_prime(i) {\n            primes.push(i);\n            if i >\
    \ max_prime {\n                max_prime = i;\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime % 10;\n\
    \        max_prime /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in\
    \ lst {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut max = max;\n    while max > 0 {\n  \
    \      sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut n = max;\n    while n > 0 {\n        sum += n % 10;\n        n /= 10;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    let mut prime = 0;\n    for i in (0..lst.len()).rev() {\n        if is_prime(lst[i])\
    \ {\n            prime = lst[i];\n            break;\n        }\n    }\n    let\
    \ mut sum = 0;\n    let mut prime = prime;\n    while prime > 0 {\n        sum\
    \ += prime % 10;\n        prime /= 10;\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if i > max && is_prime(i) {\n            max = i;\n\
    \        }\n    }\n    max.to_string().chars().map(|x| x.to_digit(10).unwrap()\
    \ as isize).sum()", "    let mut lst = lst;\n    lst.sort();\n    let mut largest_prime\
    \ = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n         \
    \   largest_prime = *i;\n            break;\n        }\n    }\n    let mut sum\
    \ = 0;\n    let mut largest_prime = largest_prime;\n    while largest_prime >\
    \ 0 {\n        sum += largest_prime % 10;\n        largest_prime /= 10;\n    }\n\
    \    sum", "    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    let mut num = max;\n    while num > 0 {\n   \
    \     sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut primes\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut max =\
    \ 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n    while\
    \ max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", " \
    \   let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut primes\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut sum = 0;\n    for i in primes[0].to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap();\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    let mut primes = Vec::new();\n    for i in lst.iter() {\n\
    \        if is_prime(*i) {\n            primes.push(*i);\n        }\n    }\n \
    \   let mut sum = 0;\n    for i in primes.iter().rev() {\n        let mut num\
    \ = *i;\n        while num > 0 {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        break;\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if i > max && is_prime(i) {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n    while max\
    \ > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut largest_prime = 0;\n\
    \    for i in lst {\n        if is_prime(i) && i > largest_prime {\n         \
    \   largest_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = largest_prime;\n    while num > 0 {\n        sum += num % 10;\n        num\
    \ /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n     \
    \       max = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n     \
    \   max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n  \
    \  lst.reverse();\n    let mut primes = vec![];\n    for i in lst {\n        if\
    \ is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let mut sum\
    \ = 0;\n    let mut i = 0;\n    while i < primes.len() {\n        let mut j =\
    \ 0;\n        while j < primes[i].to_string().len() {\n            sum += primes[i].to_string().chars().nth(j).unwrap().to_digit(10).unwrap()\
    \ as isize;\n            j += 1;\n        }\n        i += 1;\n    }\n    sum",
  "    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut primes\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut sum = 0;\n    for i in primes[0].to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap();\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i) {\n   \
    \         primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for\
    \ i in primes {\n        if i > max_prime {\n            max_prime = i;\n    \
    \    }\n    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum +=\
    \ max_prime % 10;\n        max_prime /= 10;\n    }\n    sum", "    let mut primes\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max_prime = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max_prime {\n            max_prime = i;\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut num = max_prime;\n    while num > 0 {\n   \
    \     sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    lst.reverse();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            return sum_digits(i);\n        }\n    }\n    0", "    let mut\
    \ primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max = 0;\n    for i in primes\
    \ {\n        if i > max {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut max_str = max.to_string();\n    for i in max_str.chars()\
    \ {\n        let digit = i.to_digit(10).unwrap();\n        sum += digit;\n   \
    \ }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max &&\
    \ is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n     \
    \   max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n \
    \       if i > max && is_prime(i) {\n            max = i;\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut max = max;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev() {\n    \
    \    if is_prime(*i) {\n            max = *i;\n            break;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n       \
    \ sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut lst\
    \ = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    lst.reverse();\n    let mut primes = Vec::new();\n    for i in lst {\n  \
    \      if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut sum = 0;\n    for i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut primes: Vec<isize> = vec![];\n    let mut max_prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \            if i > max_prime {\n                max_prime = i;\n            }\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut max_prime_str = max_prime.to_string();\n\
    \    for i in max_prime_str.chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut max_prime = 0;\n    for i in lst {\n\
    \        if is_prime(i) && i > max_prime {\n            max_prime = i;\n     \
    \   }\n    }\n    let mut sum = 0;\n    let mut num = max_prime;\n    while num\
    \ > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut primes = Vec::new();\n\
    \    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n \
    \       }\n    }\n    let mut sum = 0;\n    let mut num = primes[0];\n    while\
    \ num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", " \
    \   let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max;\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n\
    \    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut max_prime\
    \ = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n         \
    \   max_prime = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut num = max_prime;\n    while num > 0 {\n        sum += num % 10;\n\
    \        num /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    let mut primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i)\
    \ {\n            primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n  \
    \  for i in primes.last().unwrap().to_string().chars() {\n        sum += i.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n    let mut max_prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \            if i > max_prime {\n                max_prime = i;\n            }\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut i = max_prime;\n    while\
    \ i > 0 {\n        sum += i % 10;\n        i /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut primes = vec![];\n    for i in\
    \ lst.iter() {\n        if is_prime(*i) {\n            primes.push(*i);\n    \
    \    }\n    }\n    let mut max = 0;\n    for i in primes.iter() {\n        if\
    \ *i > max {\n            max = *i;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n     \
    \   num /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> = vec![];\n \
    \   let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n   \
    \         primes.push(i);\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    while max_prime\
    \ > 0 {\n        sum += max_prime % 10;\n        max_prime /= 10;\n    }\n   \
    \ sum", "    let mut primes: Vec<isize> = Vec::new();\n    for i in lst {\n  \
    \      if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut max = 0;\n    for i in primes {\n        if i > max {\n            max =\
    \ i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max.to_string();\n\
    \    for i in max.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i)\
    \ && i > max {\n            max = i;\n        }\n    }\n    return sum_digits(max);",
  "    let mut max = 0;\n    for i in lst {\n        if is_prime(i) && i > max {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max;\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    for c in max.to_string().chars() {\n        sum += c.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n    \
    \    if i > max && is_prime(i) {\n            max = i;\n        }\n    }\n   \
    \ let mut sum = 0;\n    for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut primes = vec![];\n    for i in lst {\n        if\
    \ is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let mut max\
    \ = 0;\n    for i in primes {\n        if i > max {\n            max = i;\n  \
    \      }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while num >\
    \ 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = Vec::new();\n    let mut max: isize = 0;\n    for i\
    \ in lst {\n        if is_prime(i) {\n            primes.push(i);\n          \
    \  if i > max {\n                max = i;\n            }\n        }\n    }\n \
    \   let mut sum: isize = 0;\n    let mut num: isize = max;\n    while num > 0\
    \ {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut\
    \ primes: Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if is_prime(i) && i > max {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut max_str = max.to_string();\n\
    \    for i in max_str.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let\
    \ mut lst = lst.iter().rev().collect::<Vec<&isize>>();\n    let mut primes = vec![];\n\
    \    let mut i = 0;\n    while i < lst.len() {\n        if is_prime(*lst[i]) {\n\
    \            primes.push(*lst[i]);\n        }\n        i += 1;\n    }\n    let\
    \ mut i = 0;\n    while i < primes.len() {\n        if primes[i] > 100 {\n   \
    \         primes.remove(i);\n        }\n        i += 1;\n    }\n    let mut i\
    \ = 0;\n    while i < primes.len() {\n        if primes[i] < 10 {\n          \
    \  primes.remove(i);\n        }\n        i += 1;\n    }\n    let mut i = 0;\n\
    \    while i < primes.len() {\n        if primes[i] > 100 {\n            primes.remove(i);\n\
    \        }\n        i += 1;\n    }\n    let mut i = 0;\n    while i < primes.len()\
    \ {\n        if primes[i] < 10 {\n            primes.remove(i);\n        }\n \
    \       i += 1;\n    }\n    let mut i = 0;\n    while i < primes.len() {\n   \
    \     if primes[i] > 100 {\n            primes.remove(i);\n        }\n       \
    \ i += 1;\n    }\n    let mut i = 0;\n    while i < primes.len() {\n        if\
    \ primes[i] < 10 {\n            primes.remove(i);\n        }\n        i += 1;\n\
    \    }\n    let mut i = 0;\n    while i < primes.len() {\n        if primes[i]\
    \ > 100 {\n            primes.remove(i);\n        }\n        i += 1;\n    }\n\
    \    let mut i = 0;\n    while i < primes.len() {\n        if primes[i] < 10 {\n\
    \            primes.remove(i);\n        }\n        i +=", "    let mut largest_prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) && i > largest_prime {\n  \
    \          largest_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut largest_prime_str = largest_prime.to_string();\n    while largest_prime_str.len()\
    \ > 0 {\n        let last_char = largest_prime_str.pop().unwrap();\n        sum\
    \ += last_char.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ primes: Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    primes.sort();\n    let\
    \ mut sum = 0;\n    let mut num = primes.pop().unwrap();\n    while num > 0 {\n\
    \        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = vec![];\n    for i in lst {\n        if i > 1 {\n            let\
    \ mut is_prime = true;\n            for j in 2..i {\n                if i % j\
    \ == 0 {\n                    is_prime = false;\n                    break;\n\
    \                }\n            }\n            if is_prime {\n               \
    \ primes.push(i);\n            }\n        }\n    }\n    let mut max_prime = 0;\n\
    \    for i in primes {\n        if i > max_prime {\n            max_prime = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut max_prime_str = max_prime.to_string();\n\
    \    for i in max_prime_str.chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut largest_prime = 0;\n    for i in lst\
    \ {\n        if i > largest_prime && is_prime(i) {\n            largest_prime\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut largest_prime_str\
    \ = largest_prime.to_string();\n    while largest_prime_str.len() > 0 {\n    \
    \    sum += largest_prime_str.pop().unwrap().to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max_prime = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max_prime {\n            max_prime = i;\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut num = max_prime;\n    while num > 0 {\n   \
    \     sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let mut lst\
    \ = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    let mut max = max;\n    while max >\
    \ 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes: Vec<isize>\
    \ = vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut max_str = max.to_string();\n    for i in max_str.chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = Vec::new();\n    let mut largest_prime: isize = 0;\n    for i in\
    \ lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n  \
    \  }\n    for i in primes {\n        if i > largest_prime {\n            largest_prime\
    \ = i;\n        }\n    }\n    let mut sum: isize = 0;\n    for i in largest_prime.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = Vec::new();\n    let mut max_prime = 0;\n    for i\
    \ in lst {\n        if is_prime(i) {\n            primes.push(i);\n          \
    \  if i > max_prime {\n                max_prime = i;\n            }\n       \
    \ }\n    }\n    let mut sum = 0;\n    let mut num = max_prime;\n    while num\
    \ > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = vec![];\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut primes =\
    \ vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i)\
    \ && i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n     \
    \   max /= 10;\n    }\n    sum", "    let mut max_prime = 0;\n    for i in lst\
    \ {\n        if is_prime(i) && i > max_prime {\n            max_prime = i;\n \
    \       }\n    }\n    let mut sum = 0;\n    let mut num = max_prime;\n    while\
    \ num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", " \
    \   let mut prime = 0;\n    for i in lst {\n        if is_prime(i) && i > prime\
    \ {\n            prime = i;\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ prime_str = prime.to_string();\n    for i in prime_str.chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    let mut primes = vec![];\n    for i in lst.iter() {\n  \
    \      if is_prime(*i) {\n            primes.push(*i);\n        }\n    }\n   \
    \ let mut max = 0;\n    for i in primes.iter() {\n        if *i > max {\n    \
    \        max = *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut\
    \ max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n        \
    \    max = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n \
    \       sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n    while\
    \ max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", " \
    \   let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut max\
    \ = max;\n    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut max_prime = 0;\n    for i in\
    \ lst {\n        if is_prime(i) && i > max_prime {\n            max_prime = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    lst.reverse();\n    let mut primes = vec![];\n    for i in lst {\n      \
    \  if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let mut\
    \ sum = 0;\n    for i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut lst =\
    \ lst.into_iter().rev().collect::<Vec<isize>>();\n    let mut primes = vec![];\n\
    \    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n \
    \       }\n    }\n    let mut primes = primes.into_iter().rev().collect::<Vec<isize>>();\n\
    \    let mut sum = 0;\n    for i in primes[0].to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if is_prime(i) && i > max {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n    while max\
    \ > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = vec![];\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut max = 0;\n   \
    \ for i in primes {\n        if i > max {\n            max = i;\n        }\n \
    \   }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    lst.reverse();\n    let mut primes = vec![];\n    for i\
    \ in lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in primes[0].to_string().chars() {\n \
    \       sum += i.to_digit(10).unwrap();\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if i > max && is_prime(i) {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    let mut primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i)\
    \ {\n            primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n  \
    \  if primes.len() > 0 {\n        let mut max = primes[0];\n        for i in primes.iter()\
    \ {\n            if *i > max {\n                max = *i;\n            }\n   \
    \     }\n        let mut max_str = max.to_string();\n        let mut max_vec =\
    \ max_str.chars().map(|d| d.to_digit(10).unwrap() as isize).collect::<Vec<isize>>();\n\
    \        for i in max_vec.iter() {\n            sum += *i;\n        }\n    }\n\
    \    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n  \
    \  for i in lst.iter().rev() {\n        if is_prime(*i) {\n            max = *i;\n\
    \            break;\n        }\n    }\n    let mut sum = 0;\n    while max > 0\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut\
    \ max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n        \
    \    max = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n \
    \       sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i) {\n   \
    \         primes.push(i);\n        }\n    }\n    let mut max = 0;\n    for i in\
    \ primes {\n        if i > max {\n            max = i;\n        }\n    }\n   \
    \ let mut sum = 0;\n    let mut num = max;\n    while num > 0 {\n        sum +=\
    \ num % 10;\n        num /= 10;\n    }\n    sum", "    let mut max = 0;\n    for\
    \ i in lst {\n        if i > max && is_prime(i) {\n            max = i;\n    \
    \    }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n\
    \        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while num >\
    \ 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut max = 0;\n\
    \    for i in lst {\n        if is_prime(i) {\n            max = i;\n        \
    \    break;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n   \
    \     sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    lst.reverse();\n    let mut prime = 0;\n\
    \    for i in lst {\n        if is_prime(i) {\n            prime = i;\n      \
    \      break;\n        }\n    }\n    let mut sum = 0;\n    let mut prime = prime;\n\
    \    while prime > 0 {\n        sum += prime % 10;\n        prime /= 10;\n   \
    \ }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max &&\
    \ is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n\
    \    for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n    \
    \    if is_prime(i) && i > max {\n            max = i;\n        }\n    }\n   \
    \ let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n     \
    \       max = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum", "    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i)\
    \ && i > max_prime {\n            max_prime = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    for c in max_prime.to_string().chars() {\n        sum += c.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    lst.reverse();\n    let mut max_prime = 0;\n    for i in lst {\n        if\
    \ is_prime(i) {\n            max_prime = i;\n            break;\n        }\n \
    \   }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars() {\n  \
    \      sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    let mut lst = lst.into_iter().rev().collect::<Vec<isize>>();\n\
    \    let mut primes = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n   \
    \ let mut prime = 0;\n    for i in primes {\n        if i > prime {\n        \
    \    prime = i;\n        }\n    }\n    let mut prime = prime.to_string();\n  \
    \  for i in prime.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max\
    \ && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum =\
    \ 0;\n    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n\
    \    sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i) &&\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n       \
    \ num /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n   \
    \     if i > max && is_prime(i) {\n            max = i;\n        }\n    }\n  \
    \  let mut sum = 0;\n    let mut max = max;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst = lst;\n\
    \    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev() {\n    \
    \    if is_prime(*i) {\n            max = *i;\n            break;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n\
    \    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n  \
    \          primes.push(i);\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    while max_prime\
    \ > 0 {\n        sum += max_prime % 10;\n        max_prime /= 10;\n    }\n   \
    \ sum", "    let mut max_prime = 0;\n    for i in lst {\n        if i > max_prime\
    \ && is_prime(i) {\n            max_prime = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    for i in max_prime.to_string().chars() {\n        sum += i.to_digit(10).unwrap();\n\
    \    }\n    sum", "    let mut primes: Vec<isize> = vec![];\n    for i in lst\
    \ {\n        if is_prime(i) {\n            primes.push(i);\n        }\n    }\n\
    \    let mut max = 0;\n    for i in primes {\n        if i > max {\n         \
    \   max = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n  \
    \      sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while\
    \ num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", " \
    \   let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n\
    \        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    let mut prime = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            prime = *i;\n            break;\n\
    \        }\n    }\n    prime.to_string().chars().map(|x| x.to_digit(10).unwrap()\
    \ as isize).sum()", "    let mut max = 0;\n    for i in lst {\n        if i >\
    \ max && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum\
    \ = 0;\n    let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst\
    \ {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n  \
    \  }\n    let mut sum = 0;\n    let mut max_str = max.to_string();\n    for i\
    \ in max_str.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n   \
    \ }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if i > max &&\
    \ is_prime(i) {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum", "    let mut primes: Vec<isize> = vec![];\n    for i in lst {\n     \
    \   if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let mut\
    \ max = 0;\n    for i in primes {\n        if i > max {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while num\
    \ > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n\
    \        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    lst.reverse();\n    for i in lst {\n      \
    \  if is_prime(i) {\n            return sum_digits(i);\n        }\n    }\n   \
    \ 0", "    let mut lst = lst;\n    lst.sort();\n    let mut prime = 0;\n    for\
    \ i in lst.iter().rev() {\n        if is_prime(*i) {\n            prime = *i;\n\
    \            break;\n        }\n    }\n    let mut sum = 0;\n    for i in prime.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n    \
    \        max = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n\
    \        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut lst\
    \ = lst;\n    lst.sort();\n    let mut primes = vec![];\n    for i in lst.iter()\
    \ {\n        if is_prime(*i) {\n            primes.push(*i);\n        }\n    }\n\
    \    let mut sum = 0;\n    for i in primes.iter().rev() {\n        let mut i =\
    \ *i;\n        while i > 0 {\n            sum += i % 10;\n            i /= 10;\n\
    \        }\n        break;\n    }\n    sum", "    let mut primes: Vec<isize> =\
    \ vec![];\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes.sort();\n    let mut sum = 0;\n    let mut num =\
    \ primes.pop().unwrap();\n    while num > 0 {\n        sum += num % 10;\n    \
    \    num /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n \
    \   lst.reverse();\n    for i in lst {\n        if is_prime(i) {\n           \
    \ let mut sum = 0;\n            let mut num = i;\n            while num > 0 {\n\
    \                sum += num % 10;\n                num /= 10;\n            }\n\
    \            return sum;\n        }\n    }\n    0", "    let mut lst = lst;\n\
    \    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev() {\n    \
    \    if is_prime(*i) {\n            max = *i;\n            break;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n\
    \    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n \
    \       }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i >\
    \ max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut primes = vec![];\n    for i in lst {\n        if\
    \ is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let mut max\
    \ = 0;\n    for i in primes {\n        if i > max {\n            max = i;\n  \
    \      }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while num >\
    \ 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max_prime = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max_prime = *i;\n            break;\n\
    \        }\n    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum\
    \ += max_prime % 10;\n        max_prime /= 10;\n    }\n    sum", "    let mut\
    \ max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n        \
    \    max = i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n \
    \       sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes:\
    \ Vec<isize> = vec![];\n    for i in lst {\n        if is_prime(i) {\n       \
    \     primes.push(i);\n        }\n    }\n    let mut max = 0;\n    for i in primes\
    \ {\n        if i > max {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut max_str = max.to_string();\n    for i in max_str.chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut primes: Vec<isize> = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    if primes.len() == 0 {\n\
    \        return 0;\n    }\n    let mut max = primes[0];\n    for i in primes {\n\
    \        if i > max {\n            max = i;\n        }\n    }\n    let mut sum\
    \ = 0;\n    let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n\
    \        num /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst\
    \ {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n  \
    \  }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n  \
    \      max /= 10;\n    }\n    sum", "    let mut primes = vec![];\n    for i in\
    \ lst {\n        if i == 0 {\n            continue;\n        }\n        let mut\
    \ is_prime = true;\n        for j in 2..i {\n            if i % j == 0 {\n   \
    \             is_prime = false;\n                break;\n            }\n     \
    \   }\n        if is_prime {\n            primes.push(i);\n        }\n    }\n\
    \    let mut max_prime = 0;\n    for i in primes {\n        if i > max_prime {\n\
    \            max_prime = i;\n        }\n    }\n    let mut sum = 0;\n    while\
    \ max_prime > 0 {\n        sum += max_prime % 10;\n        max_prime /= 10;\n\
    \    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i)\
    \ && i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n\
    \    for c in max.to_string().chars() {\n        sum += c.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n    \
    \    if is_prime(i) && i > max {\n            max = i;\n        }\n    }\n   \
    \ let mut sum = 0;\n    let mut x = max;\n    while x > 0 {\n        sum += x\
    \ % 10;\n        x /= 10;\n    }\n    sum", "    let mut primes: Vec<isize> =\
    \ Vec::new();\n    let mut max_prime = 0;\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n            if i > max_prime {\n           \
    \     max_prime = i;\n            }\n        }\n    }\n    let mut sum = 0;\n\
    \    while max_prime > 0 {\n        sum += max_prime % 10;\n        max_prime\
    \ /= 10;\n    }\n    sum", "    let mut primes = vec![];\n    for i in lst {\n\
    \        if is_prime(i) {\n            primes.push(i);\n        }\n    }\n   \
    \ let mut max = 0;\n    for i in primes {\n        if i > max {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n    while\
    \ num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum", " \
    \   let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    while max >\
    \ 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let\
    \ mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n       \
    \     primes.push(i);\n        }\n    }\n    let mut max = 0;\n    for i in primes\
    \ {\n        if i > max {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut num = max;\n    while num > 0 {\n        sum += num %\
    \ 10;\n        num /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in\
    \ lst {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for c in max.to_string().chars() {\n       \
    \ sum += c.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut max_prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) && i > max_prime {\n      \
    \      max_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max_prime;\n    while num > 0 {\n        sum += num % 10;\n        num /=\
    \ 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max && is_prime(i) {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut num = max;\n    while num > 0 {\n        sum += num %\
    \ 10;\n        num /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in\
    \ lst {\n        if is_prime(i) && i > max {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut n = max;\n    while n > 0 {\n      \
    \  sum += n % 10;\n        n /= 10;\n    }\n    sum", "    let mut max = 0;\n\
    \    for i in lst {\n        if i > max && is_prime(i) {\n            max = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut primes: Vec<isize>\
    \ = Vec::new();\n    for i in lst {\n        if i > 1 {\n            let mut is_prime\
    \ = true;\n            for j in 2..i {\n                if i % j == 0 {\n    \
    \                is_prime = false;\n                    break;\n             \
    \   }\n            }\n            if is_prime {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    let mut max = 0;\n    for i in primes {\n\
    \        if i > max {\n            max = i;\n        }\n    }\n    let mut sum\
    \ = 0;\n    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n  \
    \  }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut largest_prime\
    \ = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n         \
    \   largest_prime = *i;\n            break;\n        }\n    }\n    let mut sum\
    \ = 0;\n    while largest_prime > 0 {\n        sum += largest_prime % 10;\n  \
    \      largest_prime /= 10;\n    }\n    sum", "    let mut max_prime = 0;\n  \
    \  for i in lst {\n        if i > max_prime && is_prime(i) {\n            max_prime\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max_prime;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum", "    let mut primes: Vec<isize> = Vec::new();\n    for i in lst {\n \
    \       if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ max_prime = primes.iter().max().unwrap();\n    let mut sum = 0;\n    for i in\
    \ max_prime.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    let mut lst =\
    \ lst.iter().rev().collect::<Vec<&isize>>();\n    let mut max = 0;\n    for x\
    \ in lst {\n        if is_prime(*x) {\n            max = *x;\n            break;\n\
    \        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut max_prime = 0;\n  \
    \  for i in lst {\n        if is_prime(i) && i > max_prime {\n            max_prime\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    for c in max_prime.to_string().chars()\
    \ {\n        sum += c.to_digit(10).unwrap();\n    }\n    sum", "    let mut max\
    \ = 0;\n    for i in lst {\n        if is_prime(i) && i > max {\n            max\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    let mut max_str = max.to_string();\n\
    \    for i in max_str.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n    for i in\
    \ lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n  \
    \  }\n    let mut max = 0;\n    for i in primes {\n        if i > max {\n    \
    \        max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum", "    let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i)\
    \ {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    while max\
    \ > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum", "    let\
    \ mut largest_prime = 0;\n    for i in lst {\n        if is_prime(i) && i > largest_prime\
    \ {\n            largest_prime = i;\n        }\n    }\n    largest_prime.to_string().chars().map(|c|\
    \ c.to_digit(10).unwrap() as isize).sum()", "    let mut primes = vec![];\n  \
    \  for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n   \
    \     }\n    }\n    let mut max = 0;\n    for i in primes {\n        if i > max\
    \ {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in\
    \ max.to_string().chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return sum_digits(i);\n\
    \        }\n    }\n    0", "    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n     \
    \       max = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum", "    let mut lst = lst;\n    lst.sort();\n    let mut prime = 0;\n  \
    \  for i in lst.iter().rev() {\n        if is_prime(*i) {\n            prime =\
    \ *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ prime = prime;\n    while prime > 0 {\n        sum += prime % 10;\n        prime\
    \ /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst {\n       \
    \ if i > max && is_prime(i) {\n            max = i;\n        }\n    }\n    let\
    \ mut sum = 0;\n    for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum", "    let mut primes: Vec<isize> = Vec::new();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    primes.push(i);\n            if i > max {\n                max = i;\n   \
    \         }\n        }\n    }\n    println!(\"{:?}\", primes);\n    println!(\"\
    {}\", max);\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i in lst\
    \ {\n        if i > max && is_prime(i) {\n            max = i;\n        }\n  \
    \  }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n  \
    \      max /= 10;\n    }\n    sum", "    let mut lst = lst;\n    lst.sort();\n\
    \    lst.reverse();\n    for i in lst {\n        if is_prime(i) {\n          \
    \  return sum_digits(i);\n        }\n    }\n    0", "    let mut largest_prime\
    \ = 0;\n    for i in lst {\n        if is_prime(i) && i > largest_prime {\n  \
    \          largest_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut largest_prime_string = largest_prime.to_string();\n    for i in largest_prime_string.chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n    \
    \        max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i\
    \ in lst {\n        if i > max && is_prime(i) {\n            max = i;\n      \
    \  }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n  \
    \      sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    let mut max = 0;\n    for i in lst.iter().rev()\
    \ {\n        if is_prime(*i) {\n            max = *i;\n            break;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum", "    let mut max = 0;\n    for i\
    \ in lst {\n        if is_prime(i) && i > max {\n            max = i;\n      \
    \  }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars() {\n  \
    \      sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let mut\
    \ lst = lst;\n    lst.sort();\n    lst.reverse();\n    for i in lst {\n      \
    \  if is_prime(i) {\n            return sum_digits(i);\n        }\n    }\n   \
    \ 0", "    let mut lst = lst;\n    lst.sort();\n    let mut prime = 0;\n    for\
    \ i in lst.iter().rev() {\n        if is_prime(*i) {\n            prime = *i;\n\
    \            break;\n        }\n    }\n    let mut sum = 0;\n    for i in prime.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum", "    let\
    \ mut lst = lst;\n    lst.sort();\n    let mut primes = vec![];\n    for i in\
    \ lst.iter() {\n        if is_prime(*i) {\n            primes.push(*i);\n    \
    \    }\n    }\n    let mut max = 0;\n    for i in primes.iter() {\n        if\
    \ *i > max {\n            max = *i;\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum", "    let mut max = 0;\n    for i in lst {\n        if is_prime(i) &&\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n       \
    \ num /= 10;\n    }\n    sum"]
stop_tokens:
- "\n}"

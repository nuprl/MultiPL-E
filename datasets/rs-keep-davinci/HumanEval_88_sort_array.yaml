name: HumanEval_88_sort_array
language: rust
prompt: "/// Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n/// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n/// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n/// Note:\n/// * don't\
  \ change the given array.\n/// Examples:\n/// * sort_array([]) => []\n/// * sort_array([5])\
  \ => [5]\n/// * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n/// * sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\nfn sort_array(array: Vec<isize>)\
  \ -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![5]), vec![5]);\n    assert_eq!(candidate(vec![2,\
  \ 4, 3, 0, 1, 5]), vec![0, 1, 2, 3, 4, 5]);\n    assert_eq!(candidate(vec![2, 4,\
  \ 3, 0, 1, 5, 6]), vec![6, 5, 4, 3, 2, 1, 0]);\n    assert_eq!(candidate(vec![2,\
  \ 1]), vec![1, 2]);\n    assert_eq!(candidate(vec![15, 42, 87, 32, 11, 0]), vec![0,\
  \ 11, 15, 32, 42, 87]);\n    assert_eq!(candidate(vec![21, 14, 23, 11]), vec![23,\
  \ 21, 14, 11]);\n}\n"
completions: ["    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n    \
    \            array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ len = array.len();\n    if len == 0 {\n        return array;\n    }\n    if\
    \ len == 1 {\n        return array;\n    }\n    if (array[0] + array[len - 1])\
    \ % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        for i in 0..array.len()\
    \ - 1 {\n            if array[i] > array[i + 1] {\n                sorted = false;\n\
    \                array.swap(i, i + 1);\n            }\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 {\n            while array[j]\
    \ % 2 == 0 && i < j {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    array.sort();\n    if array.len()\
    \ > 0 && array[0] % 2 == 0 {\n        array.reverse();\n    }\n    array", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut left_index\
    \ = 0;\n        let mut right_index = 0;\n        while left_index < left.len()\
    \ && right_index < right.len() {\n            if left[left_index] > right[right_index]\
    \ {\n                array[left_index + right_index] = left[left_index];\n   \
    \             left_index += 1;\n            } else {\n                array[left_index\
    \ + right_index] = right[right_index];\n                right_index += 1;\n  \
    \          }\n        }\n        while left_index < left.len() {\n           \
    \ array[left_index + right_index] = left[left_index];\n            left_index\
    \ += 1;\n        }\n        while right_index < right.len() {\n            array[left_index\
    \ + right_index] = right[right_index];\n            right_index += 1;\n      \
    \  }\n    }\n    if array.len() > 1 && array[0] + array[array.len() - 1] % 2 ==\
    \ 0 {\n        array.reverse();\n    }\n    array", "    let mut array = array;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      for i in 0..array.len() - 1 {\n            if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n                if array[i] < array[i + 1] {\n           \
    \         array.swap(i, i + 1);\n                    sorted = false;\n       \
    \         }\n            } else {\n                if array[i] > array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 {\n            while i < j && array[j]\
    \ % 2 == 0 {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    if array.len() % 2 == 0 {\n    \
    \    array[..i].sort();\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else\
    \ {\n        array[..i].sort_by(|a, b| b.cmp(a));\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let sum = array[0] + array[array.len() - 1];\n        if sum % 2 == 0 {\n\
    \            array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   if array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len()\
    \ - 1;\n        while i < j {\n            if array[i] % 2 == 0 && array[j] %\
    \ 2 == 1 {\n                array.swap(i, j);\n                i += 1;\n     \
    \           j -= 1;\n            } else if array[i] % 2 == 1 && array[j] % 2 ==\
    \ 0 {\n                i += 1;\n                j -= 1;\n            } else if\
    \ array[i] % 2 == 1 && array[j] % 2 == 1 {\n                i += 1;\n        \
    \    } else {\n                j -= 1;\n            }\n        }\n        if i\
    \ == j && array[i] % 2 == 0 {\n            array.swap(i, j);\n        }\n    \
    \    if (array[0] + array[array.len() - 1]) % 2 == 0 {\n            array.reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (mut i, mut j) = (0, array.len() - 1);\n        while i <\
    \ j {\n            while i < j && (array[i] + array[j]) % 2 == 0 {\n         \
    \       i += 1;\n            }\n            while i < j && (array[i] + array[j])\
    \ % 2 == 1 {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        array[..i].sort();\n        array[i..].sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len() /\
    \ 2);\n        left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        merge(left, right)\n    } else {\n        array\n    }", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut is_odd = (array[0] + array[array.len() - 1]) % 2 == 1;\n    while i < j\
    \ {\n        if is_odd {\n            if array[i] % 2 == 0 {\n               \
    \ while array[j] % 2 == 0 {\n                    j -= 1;\n                }\n\
    \                array.swap(i, j);\n            }\n        } else {\n        \
    \    if array[i] % 2 == 1 {\n                while array[j] % 2 == 1 {\n     \
    \               j -= 1;\n                }\n                array.swap(i, j);\n\
    \            }\n        }\n        i += 1;\n    }\n    array.sort_by(|a, b| if\
    \ is_odd { a.cmp(b) } else { b.cmp(a) });\n    array", "    if array.len() ==\
    \ 0 {\n        return array;\n    }\n    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array.sort();\n    if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 {\n            i += 1;\n        } else\
    \ if array[j] % 2 == 1 {\n            j -= 1;\n        } else {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        i = 0;\n  \
    \      while i < j {\n            if array[j] < array[j - 1] {\n             \
    \   array.swap(j, j - 1);\n                sorted = false;\n            }\n  \
    \          j -= 1;\n        }\n        j = array.len() - 1;\n    }\n    array",
  "    let mut result = array.clone();\n    let mut is_odd = false;\n    if array.len()\
    \ > 1 {\n        is_odd = (array[0] + array[array.len() - 1]) % 2 == 1;\n    }\n\
    \    result.sort_by(|a, b| {\n        if is_odd {\n            b.cmp(a)\n    \
    \    } else {\n            a.cmp(b)\n        }\n    });\n    result", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n     \
    \   let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n   \
    \     let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n     \
    \   left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if left[i] < right[j]\
    \ {\n                array[k] = left[i];\n                i += 1;\n          \
    \  } else {\n                array[k] = right[j];\n                j += 1;\n \
    \           }\n            k += 1;\n        }\n        while i < left.len() {\n\
    \            array[k] = left[i];\n            i += 1;\n            k += 1;\n \
    \       }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    if array.len()\
    \ > 1 && (array[0] + array[array.len() - 1]) % 2 == 0 {\n        array.reverse();\n\
    \    }\n    array", "    let mut array = array;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        for i in 0..array.len()\
    \ - 1 {\n            if (array[0] + array[array.len() - 1]) % 2 == 0 {\n     \
    \           if array[i] < array[i + 1] {\n                    array.swap(i, i\
    \ + 1);\n                    sorted = false;\n                }\n            }\
    \ else {\n                if array[i] > array[i + 1] {\n                    array.swap(i,\
    \ i + 1);\n                    sorted = false;\n                }\n          \
    \  }\n        }\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        i = 0;\n  \
    \      while i < j {\n            if array[j] < array[j - 1] {\n             \
    \   array.swap(j, j - 1);\n                sorted = false;\n            }\n  \
    \          j -= 1;\n        }\n        j = array.len() - 1;\n    }\n    array",
  "    let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n            i += 1;\n\
    \        }\n        while j > i {\n            if array[j] < array[j - 1] {\n\
    \                array.swap(j, j - 1);\n                sorted = false;\n    \
    \        }\n            j -= 1;\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            while array[j] % 2 == 0 &&\
    \ i < j {\n                j -= 1;\n            }\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n    }\n    array.sort();\n    if array.len() > 0\
    \ && array[0] % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let\
    \ mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n    if\
    \ sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n    \
    \    array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array =\
    \ array;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        for i in 0..array.len() - 1 {\n            if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n                if array[i] < array[i + 1] {\n           \
    \         array.swap(i, i + 1);\n                    sorted = false;\n       \
    \         }\n            } else {\n                if array[i] > array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut sorted = false;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while !sorted {\n        sorted = true;\n        if\
    \ i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            if (i + j)\
    \ % 2 == 0 {\n                i += 1;\n            } else {\n                j\
    \ -= 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i, j);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \     j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ mut i = 0;\n        let mut j = array.len() - 1;\n        while i < j {\n  \
    \          if array[i] % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            } else if\
    \ array[i] % 2 == 1 && array[j] % 2 == 0 {\n                i += 1;\n        \
    \        j -= 1;\n            } else if array[i] % 2 == 1 && array[j] % 2 == 1\
    \ {\n                i += 1;\n            } else {\n                j -= 1;\n\
    \            }\n        }\n        if array.len() % 2 == 1 {\n            array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array[i..].sort();\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut odd_indexes = vec![];\n\
    \    let mut even_indexes = vec![];\n    for (index, value) in array.iter().enumerate()\
    \ {\n        if index % 2 == 0 {\n            odd_indexes.push(value);\n     \
    \   } else {\n            even_indexes.push(value);\n        }\n    }\n    odd_indexes.sort();\n\
    \    even_indexes.sort();\n    even_indexes.reverse();\n    for (index, value)\
    \ in odd_indexes.iter().enumerate() {\n        array[index * 2] = *value;\n  \
    \  }\n    for (index, value) in even_indexes.iter().enumerate() {\n        array[index\
    \ * 2 + 1] = *value;\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 {\n            while array[j] % 2 == 0 && i < j {\n      \
    \          j -= 1;\n            }\n            array.swap(i, j);\n        }\n\
    \        i += 1;\n    }\n    array.sort_by(|a, b| if a % 2 == 0 { b.cmp(a) } else\
    \ { a.cmp(b) });\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        if array[0] + array[array.len() - 1] % 2 == 0 {\n           \
    \ array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    if array.len() == 0 {\n  \
    \      return array;\n    }\n    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n    \
    \    j -= 1;\n    }\n    array.sort();\n    array", "    let mut array = array;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      for i in 0..array.len() - 1 {\n            if array[i] > array[i + 1] {\n\
    \                array.swap(i, i + 1);\n                sorted = false;\n    \
    \        }\n        }\n    }\n    array", "    let mut result = array.clone();\n\
    \    if array.len() > 0 {\n        if array.len() % 2 == 0 {\n            result.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            result.sort_by(|a, b| a.cmp(b));\n\
    \        }\n    }\n    result", "    let mut array = array;\n    let mut is_odd\
    \ = true;\n    if array.len() > 1 {\n        is_odd = (array[0] + array[array.len()\
    \ - 1]) % 2 == 1;\n    }\n    if is_odd {\n        array.sort();\n    } else {\n\
    \        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut\
    \ j = array.len() - 1;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n            }\n            i\
    \ += 1;\n            j -= 1;\n        }\n        array.sort();\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut i, mut j)\
    \ = (0, array.len() - 1);\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n            }\n            i\
    \ += 1;\n            j -= 1;\n        }\n        array.sort();\n    }\n    array",
  "    let mut array = array;\n    let len = array.len();\n    if len == 0 {\n   \
    \     return array;\n    }\n\n    let mut i = 0;\n    let mut j = len - 1;\n \
    \   let mut is_odd = (array[0] + array[len - 1]) % 2 == 1;\n    while i < j {\n\
    \        if is_odd {\n            if array[i] % 2 == 0 {\n                i +=\
    \ 1;\n            } else if array[j] % 2 == 1 {\n                j -= 1;\n   \
    \         } else {\n                array.swap(i, j);\n                i += 1;\n\
    \                j -= 1;\n            }\n        } else {\n            if array[i]\
    \ % 2 == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0\
    \ {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n    }\n\n    if is_odd {\n        array[i..].sort();\n    } else {\n  \
    \      array[i..].sort_by(|a, b| b.cmp(a));\n    }\n\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let mut i = 0;\n        let mut j = array.len() - 1;\n        while i <\
    \ j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \      array.sort();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 {\n            while i < j && array[j] % 2 == 0 {\n      \
    \          j -= 1;\n            }\n            array.swap(i, j);\n        }\n\
    \        i += 1;\n    }\n    if array.len() > 1 && array[0] % 2 == 0 {\n     \
    \   array.reverse();\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n          \
    \      array.swap(i, j);\n            }\n            i += 1;\n            j -=\
    \ 1;\n        }\n        array.sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut start = 0;\n    let mut end = array.len() - 1;\n    let\
    \ mut is_odd = (array[start] + array[end]) % 2 == 1;\n    while start < end {\n\
    \        if is_odd {\n            if array[start] % 2 == 0 {\n               \
    \ array.swap(start, end);\n                end -= 1;\n            } else {\n \
    \               start += 1;\n            }\n        } else {\n            if array[start]\
    \ % 2 == 1 {\n                array.swap(start, end);\n                end -=\
    \ 1;\n            } else {\n                start += 1;\n            }\n     \
    \   }\n    }\n    if is_odd {\n        array[start..].sort();\n    } else {\n\
    \        array[start..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   let mut sorted = false;\n    while !sorted {\n        sorted = true;\n   \
    \     while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n       \
    \         array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ mut odd_indexes = Vec::new();\n    let mut even_indexes = Vec::new();\n    for\
    \ (i, &x) in array.iter().enumerate() {\n        if i % 2 == 0 {\n           \
    \ odd_indexes.push(x);\n        } else {\n            even_indexes.push(x);\n\
    \        }\n    }\n    odd_indexes.sort();\n    even_indexes.sort();\n    even_indexes.reverse();\n\
    \    for (i, &x) in odd_indexes.iter().enumerate() {\n        array[i * 2] = x;\n\
    \    }\n    for (i, &x) in even_indexes.iter().enumerate() {\n        array[i\
    \ * 2 + 1] = x;\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        if i < j {\n            if array[i]\
    \ > array[j] {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        } else {\n \
    \           i = 0;\n            j = array.len() - 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ len = array.len();\n    if len == 0 {\n        return array;\n    }\n    let\
    \ mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array.sort();\n    array", "    let mut array\
    \ = array;\n    let mut sum = 0;\n    for i in 0..array.len() {\n        sum +=\
    \ array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", " \
    \   let mut result = array.clone();\n    if array.len() > 0 {\n        let sum\
    \ = array[0] + array[array.len() - 1];\n        if sum % 2 == 0 {\n          \
    \  result.sort_by(|a, b| b.cmp(a));\n        } else {\n            result.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    result", "    let mut array = array;\n\
    \    let (mut left, mut right) = (0, array.len() - 1);\n    let mut is_odd = (array[0]\
    \ + array[right]) % 2 == 1;\n    while left < right {\n        if is_odd {\n \
    \           if array[left] % 2 == 0 {\n                array.swap(left, right);\n\
    \                right -= 1;\n            } else {\n                left += 1;\n\
    \            }\n        } else {\n            if array[left] % 2 == 1 {\n    \
    \            array.swap(left, right);\n                right -= 1;\n         \
    \   } else {\n                left += 1;\n            }\n        }\n    }\n  \
    \  if is_odd {\n        array[..left].sort();\n        array[left..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[..left].sort_by(|a, b| b.cmp(a));\n\
    \        array[left..].sort();\n    }\n    array", "    let mut array = array;\n\
    \    let sum = array[0] + array[array.len() - 1];\n    if sum % 2 == 0 {\n   \
    \     array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        i = 0;\n  \
    \      while i < j {\n            if array[j] < array[j - 1] {\n             \
    \   array.swap(j, j - 1);\n                sorted = false;\n            }\n  \
    \          j -= 1;\n        }\n        j = array.len() - 1;\n    }\n    array",
  "    if array.len() == 0 {\n        return array;\n    }\n    let mut array = array;\n\
    \    if (array[0] + array[array.len() - 1]) % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (mut start, mut end) = (0, array.len() - 1);\n        while start < end {\n\
    \            if (array[start] + array[end]) % 2 == 0 {\n                array.swap(start,\
    \ end);\n            }\n            start += 1;\n            end -= 1;\n     \
    \   }\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let\
    \ mut j = array.len() - 1;\n        while i < j {\n            if array[i] % 2\
    \ == 0 {\n                while i < j && array[j] % 2 == 0 {\n               \
    \     j -= 1;\n                }\n                if i < j {\n               \
    \     array.swap(i, j);\n                }\n            }\n            i += 1;\n\
    \        }\n        if array[0] % 2 == 0 {\n            array.reverse();\n   \
    \     }\n        array[..i].sort();\n        array[i..].sort();\n    }\n    array",
  "    let mut result = array.clone();\n    let mut odd_indexes = Vec::new();\n  \
    \  let mut even_indexes = Vec::new();\n    for (i, val) in array.iter().enumerate()\
    \ {\n        if i % 2 == 0 {\n            odd_indexes.push(*val);\n        } else\
    \ {\n            even_indexes.push(*val);\n        }\n    }\n    odd_indexes.sort();\n\
    \    even_indexes.sort();\n    even_indexes.reverse();\n    for (i, val) in result.iter_mut().enumerate()\
    \ {\n        if i % 2 == 0 {\n            *val = odd_indexes[i / 2];\n       \
    \ } else {\n            *val = even_indexes[i / 2];\n        }\n    }\n    result",
  "    let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            i += 1;\n        } else if\
    \ array[j] % 2 == 1 {\n            j -= 1;\n        } else {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        j -= 1;\n \
    \       while i > j {\n            if array[i] < array[i - 1] {\n            \
    \    array.swap(i, i - 1);\n                sorted = false;\n            }\n \
    \           i -= 1;\n        }\n        j += 1;\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let (mut i, mut j) = (0, array.len()\
    \ - 1);\n        while i < j {\n            if (array[i] + array[j]) % 2 == 0\
    \ {\n                array.swap(i, j);\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        array.sort();\n    }\n    array", "  \
    \  let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 {\n            while array[j]\
    \ % 2 == 0 && i < j {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    array.sort();\n    if array.len()\
    \ > 0 && array[0] % 2 == 0 {\n        array.reverse();\n    }\n    array", " \
    \   let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut\
    \ j = array.len() - 1;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n            }\n            i\
    \ += 1;\n            j -= 1;\n        }\n        array.sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n   \
    \     let (mut start, mut end) = (0, array.len() - 1);\n        while start <\
    \ end {\n            if (array[start] + array[end]) % 2 == 0 {\n             \
    \   array.swap(start, end);\n            }\n            start += 1;\n        \
    \    end -= 1;\n        }\n        array.sort_by(|a, b| a.cmp(b));\n    }\n  \
    \  array", "    let mut array = array;\n    let sum = array[0] + array[array.len()\
    \ - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 {\n            while i < j &&\
    \ array[j] % 2 == 0 {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    array[..i].sort();\n    array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    array", "    let mut array = array;\n    if array.len() >\
    \ 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n\
    \        left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if left[i] < right[j]\
    \ {\n                array[k] = left[i];\n                i += 1;\n          \
    \  } else {\n                array[k] = right[j];\n                j += 1;\n \
    \           }\n            k += 1;\n        }\n        while i < left.len() {\n\
    \            array[k] = left[i];\n            i += 1;\n            k += 1;\n \
    \       }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    array", "   \
    \ let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[i\
    \ + 1] {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n            i += 1;\n        }\n        while j > i {\n      \
    \      if array[j] < array[j - 1] {\n                array.swap(j, j - 1);\n \
    \               sorted = false;\n            }\n            j -= 1;\n        }\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n    \
    \    left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        array = merge(left, right);\n    }\n    array", "    let mut array =\
    \ array;\n    let sum = array[0] + array[array.len() - 1];\n    if sum % 2 ==\
    \ 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if array[i]\
    \ > array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        i = 0;\n  \
    \      while i < j {\n            if array[j] < array[j - 1] {\n             \
    \   array.swap(j, j - 1);\n                sorted = false;\n            }\n  \
    \          j -= 1;\n        }\n        j = array.len() - 1;\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    if array[0]\
    \ + array[array.len() - 1] % 2 == 0 {\n        array.reverse();\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut start, mut\
    \ end) = (0, array.len() - 1);\n        while start < end {\n            if (array[start]\
    \ + array[end]) % 2 == 0 {\n                array.swap(start, end);\n        \
    \    }\n            start += 1;\n            end -= 1;\n        }\n        array.sort_by(|a,\
    \ b| {\n            if (a + array[0]) % 2 == 0 {\n                b.cmp(a)\n \
    \           } else {\n                a.cmp(b)\n            }\n        });\n \
    \   }\n    array", "    let mut array = array;\n    let mut odd_indexes = Vec::new();\n\
    \    let mut even_indexes = Vec::new();\n    for (i, &x) in array.iter().enumerate()\
    \ {\n        if i % 2 == 0 {\n            odd_indexes.push(x);\n        } else\
    \ {\n            even_indexes.push(x);\n        }\n    }\n    odd_indexes.sort();\n\
    \    even_indexes.sort();\n    even_indexes.reverse();\n    for (i, &x) in odd_indexes.iter().enumerate()\
    \ {\n        array[i * 2] = x;\n    }\n    for (i, &x) in even_indexes.iter().enumerate()\
    \ {\n        array[i * 2 + 1] = x;\n    }\n    array", "    let mut array = array;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      for i in 0..array.len() - 1 {\n            if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n                if array[i] < array[i + 1] {\n           \
    \         array.swap(i, i + 1);\n                    sorted = false;\n       \
    \         }\n            } else {\n                if array[i] > array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let sum = array[0] + array[array.len() - 1];\n    if sum\
    \ % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n          \
    \      array.swap(i, j);\n            }\n            i += 1;\n            j -=\
    \ 1;\n        }\n        array.sort();\n    }\n    array", "    let mut result\
    \ = array.clone();\n    if result.len() > 0 {\n        let mut i = 0;\n      \
    \  let mut j = result.len() - 1;\n        while i < j {\n            if result[i]\
    \ % 2 == 0 && result[j] % 2 == 1 {\n                result.swap(i, j);\n     \
    \           i += 1;\n                j -= 1;\n            } else if result[i]\
    \ % 2 == 1 && result[j] % 2 == 0 {\n                i += 1;\n                j\
    \ -= 1;\n            } else if result[i] % 2 == 1 && result[j] % 2 == 1 {\n  \
    \              i += 1;\n            } else {\n                j -= 1;\n      \
    \      }\n        }\n        if result.len() % 2 == 1 {\n            result[i..].sort();\n\
    \        } else {\n            result[i..].sort_by(|a, b| b.cmp(a));\n       \
    \ }\n    }\n    result", "    let mut array = array;\n    if array.len() > 1 {\n\
    \        let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n  \
    \      left = sort_array(left.to_vec()).as_mut_slice();\n        right = sort_array(right.to_vec()).as_mut_slice();\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if (left[i] + right[j])\
    \ % 2 == 0 {\n                array[k] = left[i];\n                i += 1;\n \
    \           } else {\n                array[k] = right[j];\n                j\
    \ += 1;\n            }\n            k += 1;\n        }\n        while i < left.len()\
    \ {\n            array[k] = left[i];\n            i += 1;\n            k += 1;\n\
    \        }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    array", "   \
    \ let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[i + 1] {\n             \
    \   array.swap(i, i + 1);\n                sorted = false;\n            }\n  \
    \          i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if array[i] % 2 == 0 {\n            while array[j]\
    \ % 2 == 0 && i < j {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    if array.len() % 2 == 0 {\n    \
    \    array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n  \
    \  }\n    array", "    let mut array = array;\n    let mut sorted = false;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n    while\
    \ !sorted {\n        sorted = true;\n        for _ in 0..array.len() - 1 {\n \
    \           if array[i] > array[i + 1] {\n                temp = array[i];\n \
    \               array[i] = array[i + 1];\n                array[i + 1] = temp;\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \ }\n        i = 0;\n        for _ in 0..array.len() - 1 {\n            if array[j]\
    \ < array[j - 1] {\n                temp = array[j];\n                array[j]\
    \ = array[j - 1];\n                array[j - 1] = temp;\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n        j = array.len()\
    \ - 1;\n    }\n    array", "    let mut array = array;\n    if array.len() > 1\
    \ {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n        while\
    \ i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \      array.sort();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 {\n            while i < j && array[j] % 2 == 0 {\n      \
    \          j -= 1;\n            }\n            array.swap(i, j);\n        }\n\
    \        i += 1;\n    }\n    if array.len() % 2 == 0 {\n        array[..i].sort();\n\
    \        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a,\
    \ b| b.cmp(a));\n        array[i..].sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let len = array.len();\n    let mut i = 0;\n    let mut j = len\
    \ - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n     \
    \       array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array.sort();\n    array", "    let mut array = array;\n    let sum = array[0]\
    \ + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ first = array[0];\n        let last = array[array.len() - 1];\n        if (first\
    \ + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      if (array[i] + array[j]) % 2 == 0 {\n            if array[i] < array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            j -= 1;\n        } else {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let len = array.len();\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        for i in 0..len - 1 {\n         \
    \   let (a, b) = (array[i], array[i + 1]);\n            if (a + b) % 2 == 0 &&\
    \ a < b || (a + b) % 2 == 1 && a > b {\n                array.swap(i, i + 1);\n\
    \                sorted = false;\n            }\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ len = array.len();\n    if len == 0 {\n        return array;\n    }\n    let\
    \ mut i = 0;\n    let mut j = len - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array.sort();\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n            i += 1;\n\
    \        }\n        while j > i {\n            if array[j] < array[j - 1] {\n\
    \                array.swap(j, j - 1);\n                sorted = false;\n    \
    \        }\n            j -= 1;\n        }\n    }\n    if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut sorted_array = array.clone();\n    sorted_array.sort();\n\
    \    if (array[0] + array[array.len() - 1]) % 2 == 0 {\n        sorted_array.reverse();\n\
    \    }\n    sorted_array", "    let mut array = array;\n    let mut index = 0;\n\
    \    let mut index_end = array.len() - 1;\n    let mut is_odd = false;\n    if\
    \ (array[0] + array[index_end]) % 2 == 1 {\n        is_odd = true;\n    }\n  \
    \  while index < index_end {\n        if is_odd {\n            if array[index]\
    \ % 2 == 0 {\n                while array[index_end] % 2 == 0 {\n            \
    \        index_end -= 1;\n                }\n                let temp = array[index];\n\
    \                array[index] = array[index_end];\n                array[index_end]\
    \ = temp;\n            }\n        } else {\n            if array[index] % 2 ==\
    \ 1 {\n                while array[index_end] % 2 == 1 {\n                   \
    \ index_end -= 1;\n                }\n                let temp = array[index];\n\
    \                array[index] = array[index_end];\n                array[index_end]\
    \ = temp;\n            }\n        }\n        index += 1;\n    }\n    if is_odd\
    \ {\n        array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[i\
    \ + 1] {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n            i += 1;\n        }\n        while j > i {\n      \
    \      if array[j] < array[j - 1] {\n                array.swap(j, j - 1);\n \
    \               sorted = false;\n            }\n            j -= 1;\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        for i in 0..array.len()\
    \ - 1 {\n            if (array[0] + array[array.len() - 1]) % 2 == 0 {\n     \
    \           if array[i] < array[i + 1] {\n                    array.swap(i, i\
    \ + 1);\n                    sorted = false;\n                }\n            }\
    \ else {\n                if array[i] > array[i + 1] {\n                    array.swap(i,\
    \ i + 1);\n                    sorted = false;\n                }\n          \
    \  }\n        }\n    }\n    array", "    let mut array = array;\n    let mut index\
    \ = 0;\n    let mut index_end = array.len() - 1;\n    let mut sorted = false;\n\
    \    let mut odd = false;\n    if array.len() > 1 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 1 {\n            odd = true;\n        }\n        while !sorted\
    \ {\n            sorted = true;\n            if odd {\n                for i in\
    \ index..index_end {\n                    if array[i] > array[i + 1] {\n     \
    \                   array.swap(i, i + 1);\n                        sorted = false;\n\
    \                    }\n                }\n                index_end -= 1;\n \
    \           } else {\n                for i in (index..index_end).rev() {\n  \
    \                  if array[i] < array[i + 1] {\n                        array.swap(i,\
    \ i + 1);\n                        sorted = false;\n                    }\n  \
    \              }\n                index += 1;\n            }\n        }\n    }\n\
    \    array", "    let mut array = array;\n    let sum = array[0] + array[array.len()\
    \ - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (mut start, mut end)\
    \ = (0, array.len() - 1);\n        while start < end {\n            while start\
    \ < end && (array[start] + array[end]) % 2 == 1 {\n                start += 1;\n\
    \            }\n            while start < end && (array[start] + array[end]) %\
    \ 2 == 0 {\n                end -= 1;\n            }\n            if start < end\
    \ {\n                array.swap(start, end);\n            }\n        }\n     \
    \   if (array[start] + array[end]) % 2 == 0 {\n            array[start..].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let len = array.len();\n\
    \    if len == 0 {\n        return array;\n    }\n    if len == 1 {\n        return\
    \ array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j\
    \ {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n        j -= 1;\n    }\n    array.sort();\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          let tmp = array[i];\n                array[i] = array[j];\n       \
    \         array[j] = tmp;\n                sorted = false;\n            }\n  \
    \          i += 1;\n            j -= 1;\n        }\n        i = 0;\n        j\
    \ = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if (array[i] + array[j]) % 2 == 0 {\n                let tmp = array[i];\n\
    \                array[i] = array[j];\n                array[j] = tmp;\n     \
    \           sorted = false;\n            }\n            i += 1;\n            j\
    \ -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len() -\
    \ 1;\n        while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n\
    \                array.swap(i, j);\n            }\n            i += 1;\n     \
    \       j -= 1;\n        }\n        array.sort();\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n     \
    \   let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1\
    \ {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n        if array.len() % 2 == 0 {\n            array[i..].reverse();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let len = array.len();\n\
    \    if len == 0 {\n        return array;\n    }\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        for i in 0..len - 1 {\n\
    \            if array[i] > array[i + 1] {\n                sorted = false;\n \
    \               array.swap(i, i + 1);\n            }\n        }\n    }\n    if\
    \ len % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            i += 1;\n        } else if\
    \ array[j] % 2 == 1 {\n            j -= 1;\n        } else {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        }\n    }\n    if array.len()\
    \ % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    let mut tmp;\n    while i < j {\n\
    \        if array[i] % 2 == 0 {\n            if array[j] % 2 == 1 {\n        \
    \        tmp = array[i];\n                array[i] = array[j];\n             \
    \   array[j] = tmp;\n                i += 1;\n                j -= 1;\n      \
    \      } else {\n                j -= 1;\n            }\n        } else {\n  \
    \          i += 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array[..i].sort();\n\
    \        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a,\
    \ b| b.cmp(a));\n        array[i..].sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n            i += 1;\n\
    \        }\n        i = 0;\n        while i < j {\n            if array[j] < array[j\
    \ - 1] {\n                array.swap(j, j - 1);\n                sorted = false;\n\
    \            }\n            j -= 1;\n        }\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n    \
    \    left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        let mut i = 0;\n        let mut j = 0;\n        let mut k = 0;\n    \
    \    while i < left.len() && j < right.len() {\n            if left[i] < right[j]\
    \ {\n                array[k] = left[i];\n                i += 1;\n          \
    \  } else {\n                array[k] = right[j];\n                j += 1;\n \
    \           }\n            k += 1;\n        }\n        while i < left.len() {\n\
    \            array[k] = left[i];\n            i += 1;\n            k += 1;\n \
    \       }\n        while j < right.len() {\n            array[k] = right[j];\n\
    \            j += 1;\n            k += 1;\n        }\n    }\n    array", "   \
    \ let mut array = array;\n    let mut sorted = false;\n    while !sorted {\n \
    \       sorted = true;\n        for i in 0..array.len() - 1 {\n            if\
    \ (array[0] + array[array.len() - 1]) % 2 == 0 {\n                if array[i]\
    \ < array[i + 1] {\n                    array.swap(i, i + 1);\n              \
    \      sorted = false;\n                }\n            } else {\n            \
    \    if array[i] > array[i + 1] {\n                    array.swap(i, i + 1);\n\
    \                    sorted = false;\n                }\n            }\n     \
    \   }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n  \
    \  let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 ==\
    \ 0 {\n            while i < j && array[j] % 2 == 0 {\n                j -= 1;\n\
    \            }\n            array.swap(i, j);\n        }\n        i += 1;\n  \
    \  }\n    array[..i].sort();\n    array[i..].sort_by(|a, b| b.cmp(a));\n    array",
  "    let mut array = array;\n    let mut sorted = false;\n    let mut i = 0;\n \
    \   let mut j = array.len() - 1;\n    while !sorted {\n        sorted = true;\n\
    \        for k in i..j {\n            if (array[i] + array[j]) % 2 == 0 && array[k]\
    \ > array[k + 1] {\n                array.swap(k, k + 1);\n                sorted\
    \ = false;\n            } else if (array[i] + array[j]) % 2 != 0 && array[k] <\
    \ array[k + 1] {\n                array.swap(k, k + 1);\n                sorted\
    \ = false;\n            }\n        }\n        j -= 1;\n    }\n    array", "  \
    \  let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 && array[j] % 2 == 0 {\n                i += 1;\n                j -= 1;\n\
    \            } else if array[i] % 2 == 1 && array[j] % 2 == 1 {\n            \
    \    i += 1;\n            } else {\n                j -= 1;\n            }\n \
    \       }\n        if array.len() % 2 == 1 {\n            array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array[i..].sort();\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut sorted = false;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while !sorted {\n \
    \       sorted = true;\n        for k in i..j {\n            if (array[k] + array[k\
    \ + 1]) % 2 == 0 {\n                array.swap(k, k + 1);\n                sorted\
    \ = false;\n            }\n        }\n        j -= 1;\n        for k in (i..j).rev()\
    \ {\n            if (array[k] + array[k + 1]) % 2 != 0 {\n                array.swap(k,\
    \ k + 1);\n                sorted = false;\n            }\n        }\n       \
    \ i += 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if (array[i] +\
    \ array[j]) % 2 == 0 {\n                array.swap(i, j);\n                sorted\
    \ = false;\n            }\n            i += 1;\n            j -= 1;\n        }\n\
    \        i = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut\
    \ result = array.clone();\n    if array.len() > 0 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            result.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            result.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    result",
  "    let mut array = array;\n    if array.len() > 1 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut\
    \ right) = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec());\n\
    \        right = sort_array(right.to_vec());\n        let mut i = 0;\n       \
    \ let mut j = 0;\n        let mut k = 0;\n        while i < left.len() && j <\
    \ right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let sum = array[0]\
    \ + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if array[i] > array[i + 1]\
    \ {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n            i += 1;\n        }\n        i = 0;\n        while\
    \ i < j {\n            if array[j] < array[j - 1] {\n                array.swap(j,\
    \ j - 1);\n                sorted = false;\n            }\n            j -= 1;\n\
    \        }\n        j = array.len() - 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ temp = 0;\n    let mut is_odd = false;\n    if (array[0] + array[array.len()\
    \ - 1]) % 2 != 0 {\n        is_odd = true;\n    }\n    while i < j {\n       \
    \ if is_odd {\n            if array[i] % 2 == 0 {\n                while array[j]\
    \ % 2 == 0 {\n                    j -= 1;\n                }\n               \
    \ temp = array[i];\n                array[i] = array[j];\n                array[j]\
    \ = temp;\n            }\n        } else {\n            if array[i] % 2 != 0 {\n\
    \                while array[j] % 2 != 0 {\n                    j -= 1;\n    \
    \            }\n                temp = array[i];\n                array[i] = array[j];\n\
    \                array[j] = temp;\n            }\n        }\n        i += 1;\n\
    \    }\n    array.sort();\n    if is_odd {\n        array.reverse();\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        if\
    \ (array[0] + array[array.len() - 1]) % 2 == 0 {\n            array.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array.sort_by(|a, b| a.cmp(b));\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    if array.len() > 1 {\n        while i <\
    \ j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \  }\n    array.sort();\n    array", "    let mut array = array;\n    let first\
    \ = array.first().unwrap();\n    let last = array.last().unwrap();\n    if (first\
    \ + last) % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut\
    \ j = array.len() - 1;\n        while i < j {\n            if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n              \
    \  i += 1;\n                j -= 1;\n            } else if array[i] % 2 == 1 &&\
    \ array[j] % 2 == 0 {\n                i += 1;\n                j -= 1;\n    \
    \        } else if array[i] % 2 == 1 && array[j] % 2 == 1 {\n                i\
    \ += 1;\n            } else {\n                j -= 1;\n            }\n      \
    \  }\n        if array.len() % 2 == 1 {\n            array[i..].sort_by(|a, b|\
    \ b.cmp(a));\n        } else {\n            array[i..].sort();\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n    \
    \    let mut i = 0;\n        let mut j = array.len() - 1;\n        while i < j\
    \ {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \      array.sort();\n    }\n    array", "    let mut array = array;\n    let\
    \ sum = array[0] + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if array[i] % 2 == 0 {\n            while array[j] % 2 == 0 &&\
    \ i < j {\n                j -= 1;\n            }\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n    }\n    array.sort();\n    if array.len() > 0\
    \ && array[0] % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let\
    \ mut array = array;\n    let n = array.len();\n    if n == 0 || n == 1 {\n  \
    \      return array;\n    }\n    let mut i = 0;\n    let mut j = n - 1;\n    if\
    \ (array[0] + array[n - 1]) % 2 == 0 {\n        while i < j {\n            while\
    \ i < j && (array[i] + array[n - 1]) % 2 == 0 {\n                i += 1;\n   \
    \         }\n            while i < j && (array[j] + array[n - 1]) % 2 == 1 {\n\
    \                j -= 1;\n            }\n            if i < j {\n            \
    \    array.swap(i, j);\n            }\n        }\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        while i < j {\n            while i < j &&\
    \ (array[i] + array[n - 1]) % 2 == 1 {\n                i += 1;\n            }\n\
    \            while i < j && (array[j] + array[n - 1]) % 2 == 0 {\n           \
    \     j -= 1;\n            }\n            if i < j {\n                array.swap(i,\
    \ j);\n            }\n        }\n        array.sort();\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n    \
    \            array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i, j);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \     j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ (first, last) = (array[0], array[array.len() - 1]);\n        let (mut left,\
    \ mut right) = (0, array.len() - 1);\n        while left < right {\n         \
    \   if (first + last) % 2 == 0 {\n                if array[left] < array[right]\
    \ {\n                    array.swap(left, right);\n                }\n       \
    \     } else {\n                if array[left] > array[right] {\n            \
    \        array.swap(left, right);\n                }\n            }\n        \
    \    left += 1;\n            right -= 1;\n        }\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 {\n            while array[j]\
    \ % 2 == 0 && i < j {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    array.sort();\n    if array.len()\
    \ > 0 && array[0] % 2 == 0 {\n        array.reverse();\n    }\n    array", " \
    \   let mut array = array;\n    let mut sorted = false;\n    while !sorted {\n\
    \        sorted = true;\n        for i in 0..array.len() - 1 {\n            if\
    \ (array[0] + array[array.len() - 1]) % 2 == 0 {\n                if array[i]\
    \ < array[i + 1] {\n                    array.swap(i, i + 1);\n              \
    \      sorted = false;\n                }\n            } else {\n            \
    \    if array[i] > array[i + 1] {\n                    array.swap(i, i + 1);\n\
    \                    sorted = false;\n                }\n            }\n     \
    \   }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n  \
    \  let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if array[i] >\
    \ array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        while j > i\
    \ {\n            if array[j] < array[j - 1] {\n                array.swap(j, j\
    \ - 1);\n                sorted = false;\n            }\n            j -= 1;\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let sum = array[0]\
    \ + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n        j -=\
    \ 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n   \
    \ let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if (array[i] +\
    \ array[j]) % 2 == 0 {\n                array.swap(i, j);\n                sorted\
    \ = false;\n            }\n            i += 1;\n            j -= 1;\n        }\n\
    \        i = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut\
    \ array = array;\n    let sum = array[0] + array[array.len() - 1];\n    if sum\
    \ % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 && array[j] % 2 == 0 {\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 && array[j] % 2 == 1 {\n                i += 1;\n            } else {\n\
    \                j -= 1;\n            }\n        }\n        if array.len() % 2\
    \ == 1 {\n            array[i..].sort_by(|a, b| b.cmp(a));\n        } else {\n\
    \            array[i..].sort();\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[i + 1] {\n                array.swap(i,\
    \ i + 1);\n                sorted = false;\n            }\n            i += 1;\n\
    \        }\n        while j > i {\n            if array[j] < array[j - 1] {\n\
    \                array.swap(j, j - 1);\n                sorted = false;\n    \
    \        }\n            j -= 1;\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let mut left = 0;\n    let mut right = array.len() - 1;\n    let\
    \ mut is_odd = (array[0] + array[right]) % 2 == 1;\n    while left < right {\n\
    \        if is_odd {\n            if array[left] % 2 == 0 {\n                left\
    \ += 1;\n            } else if array[right] % 2 == 1 {\n                right\
    \ -= 1;\n            } else {\n                array.swap(left, right);\n    \
    \            left += 1;\n                right -= 1;\n            }\n        }\
    \ else {\n            if array[left] % 2 == 1 {\n                left += 1;\n\
    \            } else if array[right] % 2 == 0 {\n                right -= 1;\n\
    \            } else {\n                array.swap(left, right);\n            \
    \    left += 1;\n                right -= 1;\n            }\n        }\n    }\n\
    \    array.sort_by(|a, b| {\n        if is_odd {\n            b.cmp(a)\n     \
    \   } else {\n            a.cmp(b)\n        }\n    });\n    array", "    let mut\
    \ array = array;\n    let len = array.len();\n    if len == 0 {\n        return\
    \ array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j\
    \ {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n        j -= 1;\n    }\n    array.sort();\n    array",
  "    let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let (mut start, mut end) = (0, array.len()\
    \ - 1);\n        while start < end {\n            if (array[start] + array[end])\
    \ % 2 == 0 {\n                array.swap(start, end);\n            }\n       \
    \     start += 1;\n            end -= 1;\n        }\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let sum =\
    \ array[0] + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if array[i] > array[i + 1]\
    \ {\n                array.swap(i, i + 1);\n                sorted = false;\n\
    \            }\n            i += 1;\n        }\n        while j > i {\n      \
    \      if array[j] < array[j - 1] {\n                array.swap(j, j - 1);\n \
    \               sorted = false;\n            }\n            j -= 1;\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut odd_indexes = Vec::new();\n\
    \    let mut even_indexes = Vec::new();\n    for (index, value) in array.iter().enumerate()\
    \ {\n        if index % 2 == 0 {\n            odd_indexes.push(value);\n     \
    \   } else {\n            even_indexes.push(value);\n        }\n    }\n    odd_indexes.sort();\n\
    \    even_indexes.sort();\n    even_indexes.reverse();\n    for (index, value)\
    \ in array.iter_mut().enumerate() {\n        if index % 2 == 0 {\n           \
    \ *value = odd_indexes.pop().unwrap();\n        } else {\n            *value =\
    \ even_indexes.pop().unwrap();\n        }\n    }\n    array", "    let mut array\
    \ = array;\n    let sum = array[0] + array[array.len() - 1];\n    if sum % 2 ==\
    \ 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n          \
    \      array.swap(i, j);\n            }\n            i += 1;\n            j -=\
    \ 1;\n        }\n        array.sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            while array[j] % 2 == 0 &&\
    \ i < j {\n                j -= 1;\n            }\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n    }\n    array.sort_by(|a, b| {\n        if a %\
    \ 2 == 0 {\n            b.cmp(a)\n        } else {\n            a.cmp(b)\n   \
    \     }\n    });\n    array", "    let mut array = array;\n    let len = array.len();\n\
    \    if len == 0 {\n        return array;\n    }\n    if len == 1 {\n        return\
    \ array;\n    }\n    let sum = array[0] + array[len - 1];\n    if sum % 2 == 0\
    \ {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n    while i < j {\n\
    \        if array[i] % 2 == 0 {\n            if array[j] % 2 != 0 {\n        \
    \        temp = array[i];\n                array[i] = array[j];\n            \
    \    array[j] = temp;\n                i += 1;\n                j -= 1;\n    \
    \        } else {\n                j -= 1;\n            }\n        } else {\n\
    \            i += 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n      \
    \  array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n\
    \    array", "    let mut array = array;\n    let mut is_odd = false;\n    if\
    \ array.len() > 1 {\n        if (array[0] + array[array.len() - 1]) % 2 == 1 {\n\
    \            is_odd = true;\n        }\n    }\n    if is_odd {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        while i < j {\n            if array[i] > array[i + 1] {\n           \
    \     array.swap(i, i + 1);\n                sorted = false;\n            }\n\
    \            i += 1;\n        }\n        while j > i {\n            if array[j]\
    \ < array[j - 1] {\n                array.swap(j, j - 1);\n                sorted\
    \ = false;\n            }\n            j -= 1;\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut is_odd = true;\n    if array.len() > 0\
    \ {\n        is_odd = (array[0] + array[array.len() - 1]) % 2 == 1;\n    }\n \
    \   if is_odd {\n        array.sort();\n    } else {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n    while i < j {\n\
    \        if (array[i] + array[j]) % 2 == 0 {\n            temp = array[i];\n \
    \           array[i] = array[j];\n            array[j] = temp;\n        }\n  \
    \      i += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if array[i] > array[i + 1] {\n                array.swap(i, i + 1);\n   \
    \             sorted = false;\n            }\n            i += 1;\n        }\n\
    \        while j > i {\n            if array[j] < array[j - 1] {\n           \
    \     array.swap(j, j - 1);\n                sorted = false;\n            }\n\
    \            j -= 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut start = 0;\n    let mut end = array.len() - 1;\n    let mut is_odd\
    \ = (array[start] + array[end]) % 2 == 1;\n    while start < end {\n        if\
    \ is_odd {\n            if array[start] % 2 == 0 {\n                while start\
    \ < end && array[end] % 2 == 1 {\n                    end -= 1;\n            \
    \    }\n                array.swap(start, end);\n            }\n        } else\
    \ {\n            if array[start] % 2 == 1 {\n                while start < end\
    \ && array[end] % 2 == 0 {\n                    end -= 1;\n                }\n\
    \                array.swap(start, end);\n            }\n        }\n        start\
    \ += 1;\n    }\n    if is_odd {\n        array.sort();\n    } else {\n       \
    \ array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut result = array.clone();\n\
    \    if array.len() > 0 {\n        let sum = array[0] + array[array.len() - 1];\n\
    \        if sum % 2 == 0 {\n            result.sort_by(|a, b| b.cmp(a));\n   \
    \     } else {\n            result.sort_by(|a, b| a.cmp(b));\n        }\n    }\n\
    \    result", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut is_odd = (array[0] + array[array.len() - 1]) %\
    \ 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] % 2\
    \ == 0 {\n                while array[j] % 2 == 0 {\n                    j -=\
    \ 1;\n                }\n                array.swap(i, j);\n            }\n  \
    \      } else {\n            if array[i] % 2 == 1 {\n                while array[j]\
    \ % 2 == 1 {\n                    j -= 1;\n                }\n               \
    \ array.swap(i, j);\n            }\n        }\n        i += 1;\n    }\n    array.sort_by(|a,\
    \ b| {\n        if is_odd {\n            b.cmp(a)\n        } else {\n        \
    \    a.cmp(b)\n        }\n    });\n    array", "    let mut array = array;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n    \
    \    if array[i] % 2 == 0 {\n            while i < j && array[j] % 2 == 0 {\n\
    \                j -= 1;\n            }\n            array.swap(i, j);\n     \
    \   }\n        i += 1;\n    }\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    if array.len() % 2 == 0 {\n        while i < j {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        }\n    } else {\n   \
    \     while i < j - 1 {\n            array.swap(i, j);\n            i += 1;\n\
    \            j -= 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let first = array[0];\n        let last = array[array.len()\
    \ - 1];\n        if (first + last) % 2 == 0 {\n            array.sort_by(|a, b|\
    \ b.cmp(a));\n        } else {\n            array.sort_by(|a, b| a.cmp(b));\n\
    \        }\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (mut left, mut right) = array.split_at_mut(array.len() /\
    \ 2);\n        left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        array = merge(left, right);\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if array[i] > array[i + 1] {\n                array.swap(i, i + 1);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \ }\n        i = 0;\n        while i < j {\n            if array[j] < array[j\
    \ - 1] {\n                array.swap(j, j - 1);\n                sorted = false;\n\
    \            }\n            j -= 1;\n        }\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut sum = 0;\n    for\
    \ i in 0..array.len() {\n        sum += array[i];\n    }\n    if sum % 2 == 0\
    \ {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[0] + array[array.len()\
    \ - 1]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i]\
    \ % 2 == 0 {\n                while array[j] % 2 == 0 {\n                    j\
    \ -= 1;\n                }\n                array.swap(i, j);\n            }\n\
    \        } else {\n            if array[i] % 2 == 1 {\n                while array[j]\
    \ % 2 == 1 {\n                    j -= 1;\n                }\n               \
    \ array.swap(i, j);\n            }\n        }\n        i += 1;\n    }\n    if\
    \ is_odd {\n        array[..i].sort();\n        array[i..].sort_by(|a, b| b.cmp(a));\n\
    \    } else {\n        array[..i].sort_by(|a, b| b.cmp(a));\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = (array[0] + array[array.len() - 1])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array.sort_by(|a, b|\
    \ {\n        if is_odd {\n            a.cmp(b)\n        } else {\n           \
    \ b.cmp(a)\n        }\n    });\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 {\n            while i < j && array[j] % 2 == 0 {\n      \
    \          j -= 1;\n            }\n            array.swap(i, j);\n        }\n\
    \        i += 1;\n    }\n    if array.len() % 2 == 0 {\n        array[..i].sort();\n\
    \        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a,\
    \ b| b.cmp(a));\n        array[i..].sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n    if\
    \ sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n    \
    \    array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if array[i] % 2 == 0 {\n            if array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else {\n                j -= 1;\n            }\n        }\
    \ else {\n            i += 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n\
    \        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 {\n            while i < j && array[j] % 2 == 0 {\n               \
    \ j -= 1;\n            }\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n    }\n    if array.len() % 2 == 0 {\n        array[..i].sort();\n  \
    \      array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[..i].sort_by(|a,\
    \ b| b.cmp(a));\n        array[i..].sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 {\n            while i < j && array[j] %\
    \ 2 == 0 {\n                j -= 1;\n            }\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n    }\n    if array.len() % 2 == 0 {\n    \
    \    array[..i].sort();\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else\
    \ {\n        array[..i].sort_by(|a, b| b.cmp(a));\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n  \
    \      let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n    \
    \    left = sort_array(left.to_vec());\n        right = sort_array(right.to_vec());\n\
    \        array = merge(left, right);\n    }\n    array", "    let mut array =\
    \ array;\n    if array.len() > 1 {\n        let (first, last) = (array[0], array[array.len()\
    \ - 1]);\n        if (first + last) % 2 == 0 {\n            array.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array.sort();\n        }\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if array[i] > array[i + 1] {\n                array.swap(i, i + 1);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \ }\n        while j > i {\n            if array[j] < array[j - 1] {\n       \
    \         array.swap(j, j - 1);\n                sorted = false;\n           \
    \ }\n            j -= 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let (mut start, mut end) = (0, array.len()\
    \ - 1);\n        while start < end {\n            if array[start] % 2 == 0 {\n\
    \                array.swap(start, end);\n                end -= 1;\n        \
    \    } else {\n                start += 1;\n            }\n        }\n       \
    \ if array[start] % 2 == 0 {\n            start += 1;\n        }\n        array[..start].sort();\n\
    \        array[start..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n     \
    \   let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut j\
    \ = array.len() - 1;\n        while i < j {\n            if array[i] % 2 == 0\
    \ && array[j] % 2 == 1 {\n                array.swap(i, j);\n                i\
    \ += 1;\n                j -= 1;\n            } else if array[i] % 2 == 1 && array[j]\
    \ % 2 == 0 {\n                i += 1;\n                j -= 1;\n            }\
    \ else if array[i] % 2 == 1 && array[j] % 2 == 1 {\n                i += 1;\n\
    \            } else {\n                j -= 1;\n            }\n        }\n   \
    \     if array.len() % 2 == 1 {\n            array[i..].sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            array[i..].sort();\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    if\
    \ array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len() -\
    \ 1;\n        while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n\
    \                array.swap(i, j);\n            }\n            i += 1;\n     \
    \       j -= 1;\n        }\n        array.sort();\n    }\n    array", "    let\
    \ mut array = array;\n    let len = array.len();\n    if len == 0 {\n        return\
    \ array;\n    }\n    let mut i = 0;\n    let mut j = len - 1;\n    while i < j\
    \ {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n\
    \        }\n        i += 1;\n        j -= 1;\n    }\n    array.sort();\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \                array.swap(i, j);\n                sorted = false;\n        \
    \    }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array"]
stop_tokens:
- "\n}"

name: HumanEval_81_numerical_letter_grade
language: rust
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\n/// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C',\
  \ 'A-']\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!(candidate(vec![4.0,\
  \ 3.0, 1.7, 2.0, 3.5]), vec![String::from(\"A+\"), String::from(\"B\"), String::from(\"\
  C-\"), String::from(\"C\"), String::from(\"A-\")]);\n    assert_eq!(candidate(vec![1.2]),\
  \ vec![String::from(\"D+\")]);\n    assert_eq!(candidate(vec![0.5]), vec![String::from(\"\
  D-\")]);\n    assert_eq!(candidate(vec![0.0]), vec![String::from(\"E\")]);\n   \
  \ assert_eq!(candidate(vec![1.0, 0.3, 1.5, 2.8, 3.3]), vec![String::from(\"D\"),\
  \ String::from(\"D-\"), String::from(\"C-\"), String::from(\"B\"), String::from(\"\
  B+\")]);\n    assert_eq!(candidate(vec![0.0, 0.7]), vec![String::from(\"E\"), String::from(\"\
  D-\")]);\n}\n"
completions: ["    let mut result = Vec::new();\n    for grade in grades {\n     \
    \   if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n        }\
    \ else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n      \
    \  } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n  \
    \      } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|g| {\n        let grade = match *g\
    \ {\n            4.0 => \"A+\",\n            g if g > 3.7 => \"A\",\n        \
    \    g if g > 3.3 => \"A-\",\n            g if g > 3.0 => \"B+\",\n          \
    \  g if g > 2.7 => \"B\",\n            g if g > 2.3 => \"B-\",\n            g\
    \ if g > 2.0 => \"C+\",\n            g if g > 1.7 => \"C\",\n            g if\
    \ g > 1.3 => \"C-\",\n            g if g > 1.0 => \"D+\",\n            g if g\
    \ > 0.7 => \"D\",\n            g if g > 0.0 => \"D-\",\n            _ => \"E\"\
    ,\n        };\n        grade.to_string()\n    }).collect()", "    let mut result\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n  \
    \          result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n\
    \            result.push(\"A-\".to_string());\n        } else if grade >= 3.0\
    \ {\n            result.push(\"B+\".to_string());\n        } else if grade >=\
    \ 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ == 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ > 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ > 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ > 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ > 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ > 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ > 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ > 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ > 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ > 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n  \
    \          result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if *g >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result = Vec::new();\n    for g in grades\
    \ {\n        if g >= 4.0 {\n            result.push(\"A+\".to_string());\n   \
    \     } else if g >= 3.7 {\n            result.push(\"A\".to_string());\n    \
    \    } else if g >= 3.3 {\n            result.push(\"A-\".to_string());\n    \
    \    } else if g >= 3.0 {\n            result.push(\"B+\".to_string());\n    \
    \    } else if g >= 2.7 {\n            result.push(\"B\".to_string());\n     \
    \   } else if g >= 2.3 {\n            result.push(\"B-\".to_string());\n     \
    \   } else if g >= 2.0 {\n            result.push(\"C+\".to_string());\n     \
    \   } else if g >= 1.7 {\n            result.push(\"C\".to_string());\n      \
    \  } else if g >= 1.3 {\n            result.push(\"C-\".to_string());\n      \
    \  } else if g >= 1.0 {\n            result.push(\"D+\".to_string());\n      \
    \  } else if g >= 0.7 {\n            result.push(\"D\".to_string());\n       \
    \ } else if g >= 0.0 {\n            result.push(\"D-\".to_string());\n       \
    \ } else {\n            result.push(\"E\".to_string());\n        }\n    }\n  \
    \  result", "    let mut letter_grades = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|x| {\n        let grade\
    \ = match *x {\n            4.0 => \"A+\",\n            x if x > 3.7 => \"A\"\
    ,\n            x if x > 3.3 => \"A-\",\n            x if x > 3.0 => \"B+\",\n\
    \            x if x > 2.7 => \"B\",\n            x if x > 2.3 => \"B-\",\n   \
    \         x if x > 2.0 => \"C+\",\n            x if x > 1.7 => \"C\",\n      \
    \      x if x > 1.3 => \"C-\",\n            x if x > 1.0 => \"D+\",\n        \
    \    x if x > 0.7 => \"D\",\n            x if x > 0.0 => \"D-\",\n           \
    \ _ => \"E\",\n        };\n        grade.to_string()\n    }).collect()", "   \
    \ let mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|grade| {\n        if *grade >= 4.0\
    \ {\n            \"A+\".to_string()\n        } else if *grade >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *grade >= 3.3 {\n            \"A-\"\
    .to_string()\n        } else if *grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *grade >= 2.3 {\n            \"B-\".to_string()\n        } else if *grade\
    \ >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade >= 1.7 {\n\
    \            \"C\".to_string()\n        } else if *grade >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n     \
    \       \"E\".to_string()\n        }\n    }).collect()", "    let mut result =\
    \ Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n        \
    \    result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n    \
    \        result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n \
    \           result.push(\"A-\".to_string());\n        } else if grade >= 3.0 {\n\
    \            result.push(\"B+\".to_string());\n        } else if grade >= 2.7\
    \ {\n            result.push(\"B\".to_string());\n        } else if grade >= 2.3\
    \ {\n            result.push(\"B-\".to_string());\n        } else if grade >=\
    \ 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result: Vec<String> = Vec::new();\n    for grade in grades {\n   \
    \     if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n   \
    \     } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|g| {\n        if *g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if *g >= 3.7 {\n            \"A\"\
    .to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    grades.iter().map(|g| {\n        if *g >= 4.0 {\n\
    \            \"A+\".to_string()\n        } else if *g >= 3.7 {\n            \"\
    A\".to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result: Vec<String> = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade > 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&x| {\n        match x {\n        \
    \    4.0 => \"A+\",\n            x if x > 3.7 => \"A\",\n            x if x >\
    \ 3.3 => \"A-\",\n            x if x > 3.0 => \"B+\",\n            x if x > 2.7\
    \ => \"B\",\n            x if x > 2.3 => \"B-\",\n            x if x > 2.0 =>\
    \ \"C+\",\n            x if x > 1.7 => \"C\",\n            x if x > 1.3 => \"\
    C-\",\n            x if x > 1.0 => \"D+\",\n            x if x > 0.7 => \"D\"\
    ,\n            x if x > 0.0 => \"D-\",\n            _ => \"E\",\n        }\n \
    \   }).collect()", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade == 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|x| {\n        if\
    \ *x >= 4.0 {\n            \"A+\".to_string()\n        } else if *x >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *x >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *x >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *x >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *x >= 2.3 {\n            \"B-\".to_string()\n        } else if *x >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *x >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *x >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *x >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *x >= 0.7 {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    grades.iter().map(|g| {\n        if *g >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        if g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if g >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if g >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if g >= 3.0 {\n            \"B+\".to_string()\n        } else if g >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if g >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if g >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if g >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ g >= 1.3 {\n            \"C-\".to_string()\n        } else if g >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if g >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if g >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut result = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|&x| {\n        if x >= 4.0 {\n            \"A+\".to_string()\n\
    \        } else if x >= 3.7 {\n            \"A\".to_string()\n        } else if\
    \ x >= 3.3 {\n            \"A-\".to_string()\n        } else if x >= 3.0 {\n \
    \           \"B+\".to_string()\n        } else if x >= 2.7 {\n            \"B\"\
    .to_string()\n        } else if x >= 2.3 {\n            \"B-\".to_string()\n \
    \       } else if x >= 2.0 {\n            \"C+\".to_string()\n        } else if\
    \ x >= 1.7 {\n            \"C\".to_string()\n        } else if x >= 1.3 {\n  \
    \          \"C-\".to_string()\n        } else if x >= 1.0 {\n            \"D+\"\
    .to_string()\n        } else if x >= 0.7 {\n            \"D\".to_string()\n  \
    \      } else if x >= 0.0 {\n            \"D-\".to_string()\n        } else {\n\
    \            \"E\".to_string()\n        }\n    }).collect()", "    grades.iter().map(|g|\
    \ {\n        if *g >= 4.0 {\n            \"A+\".to_string()\n        } else if\
    \ *g >= 3.7 {\n            \"A\".to_string()\n        } else if *g >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if *g >= 3.0 {\n            \"\
    B+\".to_string()\n        } else if *g >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *g >= 2.3 {\n            \"B-\".to_string()\n        } else\
    \ if *g >= 2.0 {\n            \"C+\".to_string()\n        } else if *g >= 1.7\
    \ {\n            \"C\".to_string()\n        } else if *g >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *g >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *g >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *g >= 0.0 {\n            \"D-\".to_string()\n        } else {\n         \
    \   \"E\".to_string()\n        }\n    }).collect()", "    grades.iter().map(|x|\
    \ {\n        if *x >= 4.0 {\n            \"A+\".to_string()\n        } else if\
    \ *x >= 3.7 {\n            \"A\".to_string()\n        } else if *x >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if *x >= 3.0 {\n            \"\
    B+\".to_string()\n        } else if *x >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *x >= 2.3 {\n            \"B-\".to_string()\n        } else\
    \ if *x >= 2.0 {\n            \"C+\".to_string()\n        } else if *x >= 1.7\
    \ {\n            \"C\".to_string()\n        } else if *x >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *x >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *x >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *x >= 0.0 {\n            \"D-\".to_string()\n        } else {\n         \
    \   \"E\".to_string()\n        }\n    }).collect()", "    let mut result: Vec<String>\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n  \
    \          result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n\
    \            result.push(\"A-\".to_string());\n        } else if grade >= 3.0\
    \ {\n            result.push(\"B+\".to_string());\n        } else if grade >=\
    \ 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|&grade| {\n        let grade = grade.round() as i32;\n\
    \        match grade {\n            4 => \"A+\",\n            3 => \"A\",\n  \
    \          2 => \"B\",\n            1 => \"C\",\n            0 => \"D\",\n   \
    \         _ => \"E\",\n        }.to_string()\n    }).collect()", "    let mut\
    \ result: Vec<String> = Vec::new();\n    for grade in grades {\n        if grade\
    \ == 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ > 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ > 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ > 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ > 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ > 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ > 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ > 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ > 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ > 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n  \
    \          result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result: Vec<String> = Vec::new();\n    for grade in grades {\n   \
    \     if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n   \
    \     } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut output = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            output.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            output.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            output.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            output.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            output.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            output.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            output.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            output.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            output.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            output.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            output.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            output.push(\"D-\".to_string());\n\
    \        } else {\n            output.push(\"E\".to_string());\n        }\n  \
    \  }\n    output", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        if g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if g >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if g >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if g >= 3.0 {\n            \"B+\".to_string()\n        } else if g >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if g >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if g >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if g >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ g >= 1.3 {\n            \"C-\".to_string()\n        } else if g >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if g >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if g >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade == 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        if g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if g >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if g >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if g >= 3.0 {\n            \"B+\".to_string()\n        } else if g >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if g >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if g >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if g >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ g >= 1.3 {\n            \"C-\".to_string()\n        } else if g >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if g >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if g >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut result: Vec<String> = Vec::new();\n    for grade in grades {\n    \
    \    if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n       \
    \ } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade == 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|g| match *g {\n     \
    \   4.0 => \"A+\",\n        g if g > 3.7 => \"A\",\n        g if g > 3.3 => \"\
    A-\",\n        g if g > 3.0 => \"B+\",\n        g if g > 2.7 => \"B\",\n     \
    \   g if g > 2.3 => \"B-\",\n        g if g > 2.0 => \"C+\",\n        g if g >\
    \ 1.7 => \"C\",\n        g if g > 1.3 => \"C-\",\n        g if g > 1.0 => \"D+\"\
    ,\n        g if g > 0.7 => \"D\",\n        g if g > 0.0 => \"D-\",\n        _\
    \ => \"E\",\n    }).collect()", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| match g {\n        4.0 => \"A+\"\
    ,\n        g if g > 3.7 => \"A\",\n        g if g > 3.3 => \"A-\",\n        g\
    \ if g > 3.0 => \"B+\",\n        g if g > 2.7 => \"B\",\n        g if g > 2.3\
    \ => \"B-\",\n        g if g > 2.0 => \"C+\",\n        g if g > 1.7 => \"C\",\n\
    \        g if g > 1.3 => \"C-\",\n        g if g > 1.0 => \"D+\",\n        g if\
    \ g > 0.7 => \"D\",\n        g if g > 0.0 => \"D-\",\n        _ => \"E\",\n  \
    \  }).collect()", "    let mut result = Vec::new();\n    for grade in grades {\n\
    \        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n   \
    \     } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        if g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if g >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if g >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if g >= 3.0 {\n            \"B+\".to_string()\n        } else if g >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if g >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if g >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if g >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ g >= 1.3 {\n            \"C-\".to_string()\n        } else if g >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if g >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if g >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|grade| {\n        if *grade >= 4.0\
    \ {\n            \"A+\".to_string()\n        } else if *grade >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *grade >= 3.3 {\n            \"A-\"\
    .to_string()\n        } else if *grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *grade >= 2.3 {\n            \"B-\".to_string()\n        } else if *grade\
    \ >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade >= 1.7 {\n\
    \            \"C\".to_string()\n        } else if *grade >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n     \
    \       \"E\".to_string()\n        }\n    }).collect()", "    let mut result =\
    \ Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n        \
    \    result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n    \
    \        result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n \
    \           result.push(\"A-\".to_string());\n        } else if grade >= 3.0 {\n\
    \            result.push(\"B+\".to_string());\n        } else if grade >= 2.7\
    \ {\n            result.push(\"B\".to_string());\n        } else if grade >= 2.3\
    \ {\n            result.push(\"B-\".to_string());\n        } else if grade >=\
    \ 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|&g| {\n        if g >= 4.0 {\n            \"A+\".to_string()\n\
    \        } else if g >= 3.7 {\n            \"A\".to_string()\n        } else if\
    \ g >= 3.3 {\n            \"A-\".to_string()\n        } else if g >= 3.0 {\n \
    \           \"B+\".to_string()\n        } else if g >= 2.7 {\n            \"B\"\
    .to_string()\n        } else if g >= 2.3 {\n            \"B-\".to_string()\n \
    \       } else if g >= 2.0 {\n            \"C+\".to_string()\n        } else if\
    \ g >= 1.7 {\n            \"C\".to_string()\n        } else if g >= 1.3 {\n  \
    \          \"C-\".to_string()\n        } else if g >= 1.0 {\n            \"D+\"\
    .to_string()\n        } else if g >= 0.7 {\n            \"D\".to_string()\n  \
    \      } else if g >= 0.0 {\n            \"D-\".to_string()\n        } else {\n\
    \            \"E\".to_string()\n        }\n    }).collect()", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade >= 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n   \
    \     } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|g| {\n        if *g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if *g >= 3.7 {\n            \"A\"\
    .to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|x| {\n        if *x >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if *x >= 3.7 {\n            \"A\"\
    .to_string()\n        } else if *x >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *x >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *x >= 2.7 {\n            \"B\".to_string()\n        } else if *x >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *x >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *x >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *x >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *x >= 1.0 {\n            \"D+\".to_string()\n        } else if *x >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|grade| {\n        if *grade >= 4.0\
    \ {\n            \"A+\".to_string()\n        } else if *grade >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *grade >= 3.3 {\n            \"A-\"\
    .to_string()\n        } else if *grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *grade >= 2.3 {\n            \"B-\".to_string()\n        } else if *grade\
    \ >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade >= 1.7 {\n\
    \            \"C\".to_string()\n        } else if *grade >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n     \
    \       \"E\".to_string()\n        }\n    }).collect()", "    grades.iter().map(|grade|\
    \ {\n        if *grade >= 4.0 {\n            \"A+\".to_string()\n        } else\
    \ if *grade >= 3.7 {\n            \"A\".to_string()\n        } else if *grade\
    \ >= 3.3 {\n            \"A-\".to_string()\n        } else if *grade >= 3.0 {\n\
    \            \"B+\".to_string()\n        } else if *grade >= 2.7 {\n         \
    \   \"B\".to_string()\n        } else if *grade >= 2.3 {\n            \"B-\".to_string()\n\
    \        } else if *grade >= 2.0 {\n            \"C+\".to_string()\n        }\
    \ else if *grade >= 1.7 {\n            \"C\".to_string()\n        } else if *grade\
    \ >= 1.3 {\n            \"C-\".to_string()\n        } else if *grade >= 1.0 {\n\
    \            \"D+\".to_string()\n        } else if *grade >= 0.7 {\n         \
    \   \"D\".to_string()\n        } else if *grade >= 0.0 {\n            \"D-\".to_string()\n\
    \        } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut result = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|&grade| {\n        if grade >= 4.0 {\n            \"A+\"\
    .to_string()\n        } else if grade >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if grade >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if grade >= 3.0 {\n            \"B+\".to_string()\n        } else if grade >=\
    \ 2.7 {\n            \"B\".to_string()\n        } else if grade >= 2.3 {\n   \
    \         \"B-\".to_string()\n        } else if grade >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if grade >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if grade >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if grade >= 1.0 {\n            \"D+\".to_string()\n        } else if grade >=\
    \ 0.7 {\n            \"D\".to_string()\n        } else if grade >= 0.0 {\n   \
    \         \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut output: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            output.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            output.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            output.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            output.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            output.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            output.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            output.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            output.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            output.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            output.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            output.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            output.push(\"D-\".to_string());\n\
    \        } else {\n            output.push(\"E\".to_string());\n        }\n  \
    \  }\n    output", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        if g >= 4.0 {\n    \
    \        \"A+\".to_string()\n        } else if g >= 3.7 {\n            \"A\".to_string()\n\
    \        } else if g >= 3.3 {\n            \"A-\".to_string()\n        } else\
    \ if g >= 3.0 {\n            \"B+\".to_string()\n        } else if g >= 2.7 {\n\
    \            \"B\".to_string()\n        } else if g >= 2.3 {\n            \"B-\"\
    .to_string()\n        } else if g >= 2.0 {\n            \"C+\".to_string()\n \
    \       } else if g >= 1.7 {\n            \"C\".to_string()\n        } else if\
    \ g >= 1.3 {\n            \"C-\".to_string()\n        } else if g >= 1.0 {\n \
    \           \"D+\".to_string()\n        } else if g >= 0.7 {\n            \"D\"\
    .to_string()\n        } else if g >= 0.0 {\n            \"D-\".to_string()\n \
    \       } else {\n            \"E\".to_string()\n        }\n    }).collect()",
  "    let mut result: Vec<String> = Vec::new();\n    for grade in grades {\n    \
    \    if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n       \
    \ } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    grades.iter().map(|g| {\n        if *g >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut result: Vec<String> = Vec::new();\n   \
    \ for grade in grades {\n        if grade == 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade == 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&g| {\n        let grade = match g\
    \ {\n            4.0 => \"A+\",\n            g if g > 3.7 => \"A\",\n        \
    \    g if g > 3.3 => \"A-\",\n            g if g > 3.0 => \"B+\",\n          \
    \  g if g > 2.7 => \"B\",\n            g if g > 2.3 => \"B-\",\n            g\
    \ if g > 2.0 => \"C+\",\n            g if g > 1.7 => \"C\",\n            g if\
    \ g > 1.3 => \"C-\",\n            g if g > 1.0 => \"D+\",\n            g if g\
    \ > 0.7 => \"D\",\n            g if g > 0.0 => \"D-\",\n            _ => \"E\"\
    ,\n        };\n        grade.to_string()\n    }).collect()", "    let mut result\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n  \
    \          result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n\
    \            result.push(\"A-\".to_string());\n        } else if grade >= 3.0\
    \ {\n            result.push(\"B+\".to_string());\n        } else if grade >=\
    \ 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|grade| {\n        let grade = *grade;\n        if grade\
    \ >= 4.0 {\n            \"A+\".to_string()\n        } else if grade >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if grade >= 3.3 {\n           \
    \ \"A-\".to_string()\n        } else if grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if grade >= 2.3 {\n            \"B-\".to_string()\n        } else if grade >=\
    \ 2.0 {\n            \"C+\".to_string()\n        } else if grade >= 1.7 {\n  \
    \          \"C\".to_string()\n        } else if grade >= 1.3 {\n            \"\
    C-\".to_string()\n        } else if grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n      \
    \      \"E\".to_string()\n        }\n    }).collect()", "    let mut result =\
    \ Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n        \
    \    result.push(\"A+\".to_string());\n        } else if grade >= 3.7 {\n    \
    \        result.push(\"A\".to_string());\n        } else if grade >= 3.3 {\n \
    \           result.push(\"A-\".to_string());\n        } else if grade >= 3.0 {\n\
    \            result.push(\"B+\".to_string());\n        } else if grade >= 2.7\
    \ {\n            result.push(\"B\".to_string());\n        } else if grade >= 2.3\
    \ {\n            result.push(\"B-\".to_string());\n        } else if grade >=\
    \ 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ == 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ > 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ > 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ > 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ > 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ > 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ > 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ > 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ > 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ > 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n  \
    \          result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ == 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ > 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ > 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ > 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ > 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ > 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ > 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ > 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ > 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ > 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ > 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ > 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n  \
    \          result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   let mut result = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            result.push(\"A+\".to_string());\n        } else if grade\
    \ >= 3.7 {\n            result.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            result.push(\"A-\".to_string());\n        } else if grade\
    \ >= 3.0 {\n            result.push(\"B+\".to_string());\n        } else if grade\
    \ >= 2.7 {\n            result.push(\"B\".to_string());\n        } else if grade\
    \ >= 2.3 {\n            result.push(\"B-\".to_string());\n        } else if grade\
    \ >= 2.0 {\n            result.push(\"C+\".to_string());\n        } else if grade\
    \ >= 1.7 {\n            result.push(\"C\".to_string());\n        } else if grade\
    \ >= 1.3 {\n            result.push(\"C-\".to_string());\n        } else if grade\
    \ >= 1.0 {\n            result.push(\"D+\".to_string());\n        } else if grade\
    \ >= 0.7 {\n            result.push(\"D\".to_string());\n        } else if grade\
    \ >= 0.0 {\n            result.push(\"D-\".to_string());\n        } else {\n \
    \           result.push(\"E\".to_string());\n        }\n    }\n    result", " \
    \   grades.iter().map(|&g| {\n        match g {\n            4.0 => \"A+\",\n\
    \            g if g > 3.7 => \"A\",\n            g if g > 3.3 => \"A-\",\n   \
    \         g if g > 3.0 => \"B+\",\n            g if g > 2.7 => \"B\",\n      \
    \      g if g > 2.3 => \"B-\",\n            g if g > 2.0 => \"C+\",\n        \
    \    g if g > 1.7 => \"C\",\n            g if g > 1.3 => \"C-\",\n           \
    \ g if g > 1.0 => \"D+\",\n            g if g > 0.7 => \"D\",\n            g if\
    \ g > 0.0 => \"D-\",\n            _ => \"E\",\n        }\n    }).collect()"]
stop_tokens:
- "\n}"

name: HumanEval_132_is_nested
language: julia
results:
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpface8ojg.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpface8ojg.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\ntest set: Test Failed at /tmp/tmpface8ojg.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpface8ojg.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\ntest set: Test Failed at /tmp/tmpface8ojg.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpface8ojg.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\ntest set: Test Failed at /tmp/tmpface8ojg.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpface8ojg.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\ntest set: Test Failed at /tmp/tmpface8ojg.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpface8ojg.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\ntest set: Test Failed at /tmp/tmpface8ojg.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpface8ojg.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpface8ojg.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpface8ojg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjmbsj6dd.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpjmbsj6dd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\ntest set: Test Failed at /tmp/tmpjmbsj6dd.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjmbsj6dd.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\ntest set: Test Failed at /tmp/tmpjmbsj6dd.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjmbsj6dd.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\ntest set: Test Failed at /tmp/tmpjmbsj6dd.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjmbsj6dd.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\ntest set: Test Failed at /tmp/tmpjmbsj6dd.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjmbsj6dd.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\ntest set: Test Failed at /tmp/tmpjmbsj6dd.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjmbsj6dd.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjmbsj6dd.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmbsj6dd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string != string[1:end-1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr9qkc2ei.jl:22\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr9qkc2ei.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:23\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9qkc2ei.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:24\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9qkc2ei.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:26\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr9qkc2ei.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:28\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9qkc2ei.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:29\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9qkc2ei.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:33\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr9qkc2ei.jl:33\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\ntest set: Test Failed at /tmp/tmpr9qkc2ei.jl:34\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr9qkc2ei.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9qkc2ei.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     8     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9qkc2ei.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpy5cwh9rn.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpy5cwh9rn.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy5cwh9rn.jl:32\\ntest set: Test Failed at /tmp/tmpy5cwh9rn.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpy5cwh9rn.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy5cwh9rn.jl:32\\ntest set: Test Failed at /tmp/tmpy5cwh9rn.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpy5cwh9rn.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy5cwh9rn.jl:32\\ntest set: Test Failed at /tmp/tmpy5cwh9rn.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpy5cwh9rn.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy5cwh9rn.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    if string == \"[]\"\
    \n        return false\n    end\n    for i in 1:length(string)\n        if string[i]\
    \ == \"[\"\n            for j in i+1:length(string)\n                if string[j]\
    \ == \"]\"\n                    return true\n                end\n           \
    \ end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk99o6ijm.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpk99o6ijm.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk99o6ijm.jl:32\ntest set: Test Failed at /tmp/tmpk99o6ijm.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk99o6ijm.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk99o6ijm.jl:32\ntest set: Test Failed at /tmp/tmpk99o6ijm.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk99o6ijm.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk99o6ijm.jl:32\ntest set: Test Failed at /tmp/tmpk99o6ijm.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk99o6ijm.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk99o6ijm.jl:32\ntest set: Test Failed at /tmp/tmpk99o6ijm.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk99o6ijm.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk99o6ijm.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    9     5     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk99o6ijm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40epb104.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp40epb104.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\ntest set: Test Failed at /tmp/tmp40epb104.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40epb104.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\ntest set: Test Failed at /tmp/tmp40epb104.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40epb104.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\ntest set: Test Failed at /tmp/tmp40epb104.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp40epb104.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\ntest set: Test Failed at /tmp/tmp40epb104.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp40epb104.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\ntest set: Test Failed at /tmp/tmp40epb104.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40epb104.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40epb104.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40epb104.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for bracket in string\n        if bracket == '['\n            open_brackets\
    \ += 1\n        elseif bracket == ']'\n            open_brackets -= 1\n      \
    \  end\n        if open_brackets < 0\n            return false\n        end\n\
    \    end\n    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqx79dvny.jl:32\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpqx79dvny.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\ntest set: Test Failed at /tmp/tmpqx79dvny.jl:36\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqx79dvny.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\ntest set: Test Failed at /tmp/tmpqx79dvny.jl:38\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqx79dvny.jl:38\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\ntest set: Test Failed at /tmp/tmpqx79dvny.jl:39\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqx79dvny.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\ntest set: Test Failed at /tmp/tmpqx79dvny.jl:42\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqx79dvny.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\ntest set: Test Failed at /tmp/tmpqx79dvny.jl:44\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqx79dvny.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx79dvny.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaavewixd.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpaavewixd.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaavewixd.jl:32\ntest set: Test Failed at /tmp/tmpaavewixd.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaavewixd.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaavewixd.jl:32\ntest set: Test Failed at /tmp/tmpaavewixd.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaavewixd.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaavewixd.jl:32\ntest set: Test Failed at /tmp/tmpaavewixd.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaavewixd.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaavewixd.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaavewixd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    for\
    \ i in string\n        if i == '['\n            open += 1\n        elseif i ==\
    \ ']'\n            open -= 1\n        end\n        if open < 0\n            return\
    \ false\n        end\n    end\n    return open > 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps7czid59.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmps7czid59.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\ntest set: Test Failed at /tmp/tmps7czid59.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps7czid59.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\ntest set: Test Failed at /tmp/tmps7czid59.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps7czid59.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\ntest set: Test Failed at /tmp/tmps7czid59.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7czid59.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\ntest set: Test Failed at /tmp/tmps7czid59.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7czid59.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\ntest set: Test Failed at /tmp/tmps7czid59.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps7czid59.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7czid59.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7czid59.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # if the string is\
    \ empty, return false\n    if string == \"\"\n        return false\n    end\n\
    \    # if the string is not empty, check if the first and last characters are\
    \ the same\n    if string[1] == string[end]\n        # if they are, return true\n\
    \        return true\n    else\n        # if they are not, return false\n    \
    \    return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn2fjcl5p.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpn2fjcl5p.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\ntest set: Test Failed at /tmp/tmpn2fjcl5p.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn2fjcl5p.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\ntest set: Test Failed at /tmp/tmpn2fjcl5p.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn2fjcl5p.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\ntest set: Test Failed at /tmp/tmpn2fjcl5p.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn2fjcl5p.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\ntest set: Test Failed at /tmp/tmpn2fjcl5p.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn2fjcl5p.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\ntest set: Test Failed at /tmp/tmpn2fjcl5p.jl:45\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn2fjcl5p.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn2fjcl5p.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2fjcl5p.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_u2a73lu.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp_u2a73lu.jl:15\n\
    \   [2] top-level scope at /tmp/tmp_u2a73lu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2a73lu.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp_u2a73lu.jl:15\n   [2] top-level scope at /tmp/tmp_u2a73lu.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2a73lu.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_u2a73lu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk57ujl2i.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpk57ujl2i.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\ntest set: Test Failed at /tmp/tmpk57ujl2i.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk57ujl2i.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\ntest set: Test Failed at /tmp/tmpk57ujl2i.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk57ujl2i.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\ntest set: Test Failed at /tmp/tmpk57ujl2i.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk57ujl2i.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\ntest set: Test Failed at /tmp/tmpk57ujl2i.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk57ujl2i.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\ntest set: Test Failed at /tmp/tmpk57ujl2i.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk57ujl2i.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk57ujl2i.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk57ujl2i.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    if open\
    \ == close\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdzp3qzl0.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpdzp3qzl0.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:35\n\
    \  Expression: candidate(\"[]]]]]]][[[[[]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:39\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdzp3qzl0.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:42\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdzp3qzl0.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdzp3qzl0.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\ntest set: Test Failed at /tmp/tmpdzp3qzl0.jl:47\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzp3qzl0.jl:47\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzp3qzl0.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4    10     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdzp3qzl0.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ bracket in string\n        if bracket == '['\n            push!(stack, bracket)\n\
    \        elseif bracket == ']'\n            if isempty(stack)\n              \
    \  return false\n            else\n                pop!(stack)\n            end\n\
    \        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5vf5uq5z.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5vf5uq5z.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5vf5uq5z.jl:32\\ntest set: Test Failed at /tmp/tmp5vf5uq5z.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5vf5uq5z.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5vf5uq5z.jl:32\\ntest set: Test Failed at /tmp/tmp5vf5uq5z.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5vf5uq5z.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5vf5uq5z.jl:32\\ntest set: Test Failed at /tmp/tmp5vf5uq5z.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5vf5uq5z.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5vf5uq5z.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmham1m_n.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpmham1m_n.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmham1m_n.jl:32\ntest set: Test Failed at /tmp/tmpmham1m_n.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmham1m_n.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmham1m_n.jl:32\ntest set: Test Failed at /tmp/tmpmham1m_n.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmham1m_n.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmham1m_n.jl:32\ntest set: Test Failed at /tmp/tmpmham1m_n.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmham1m_n.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmham1m_n.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmham1m_n.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd2jqqd3v.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpd2jqqd3v.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\ntest set: Test Failed at /tmp/tmpd2jqqd3v.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd2jqqd3v.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\ntest set: Test Failed at /tmp/tmpd2jqqd3v.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd2jqqd3v.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\ntest set: Test Failed at /tmp/tmpd2jqqd3v.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd2jqqd3v.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\ntest set: Test Failed at /tmp/tmpd2jqqd3v.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd2jqqd3v.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\ntest set: Test Failed at /tmp/tmpd2jqqd3v.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd2jqqd3v.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2jqqd3v.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2jqqd3v.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmpl104zw.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpmpl104zw.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmpl104zw.jl:32\ntest set: Test Failed at /tmp/tmpmpl104zw.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmpl104zw.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmpl104zw.jl:32\ntest set: Test Failed at /tmp/tmpmpl104zw.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmpl104zw.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmpl104zw.jl:32\ntest set: Test Failed at /tmp/tmpmpl104zw.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmpl104zw.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmpl104zw.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmpl104zw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptsbbyyy_.jl:32\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmptsbbyyy_.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\ntest set: Test Failed at /tmp/tmptsbbyyy_.jl:36\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsbbyyy_.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\ntest set: Test Failed at /tmp/tmptsbbyyy_.jl:38\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsbbyyy_.jl:38\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\ntest set: Test Failed at /tmp/tmptsbbyyy_.jl:39\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptsbbyyy_.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\ntest set: Test Failed at /tmp/tmptsbbyyy_.jl:42\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptsbbyyy_.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\ntest set: Test Failed at /tmp/tmptsbbyyy_.jl:44\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsbbyyy_.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsbbyyy_.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtsi6dg8.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvtsi6dg8.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\ntest set: Test Failed at /tmp/tmpvtsi6dg8.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvtsi6dg8.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\ntest set: Test Failed at /tmp/tmpvtsi6dg8.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvtsi6dg8.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\ntest set: Test Failed at /tmp/tmpvtsi6dg8.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvtsi6dg8.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\ntest set: Test Failed at /tmp/tmpvtsi6dg8.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvtsi6dg8.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\ntest set: Test Failed at /tmp/tmpvtsi6dg8.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvtsi6dg8.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtsi6dg8.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtsi6dg8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9y8jslob.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp9y8jslob.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y8jslob.jl:32\ntest set: Test Failed at /tmp/tmp9y8jslob.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9y8jslob.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y8jslob.jl:32\ntest set: Test Failed at /tmp/tmp9y8jslob.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9y8jslob.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y8jslob.jl:32\ntest set: Test Failed at /tmp/tmp9y8jslob.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9y8jslob.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y8jslob.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9y8jslob.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptlg8e3l0.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmptlg8e3l0.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\ntest set: Test Failed at /tmp/tmptlg8e3l0.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptlg8e3l0.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\ntest set: Test Failed at /tmp/tmptlg8e3l0.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptlg8e3l0.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\ntest set: Test Failed at /tmp/tmptlg8e3l0.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptlg8e3l0.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\ntest set: Test Failed at /tmp/tmptlg8e3l0.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptlg8e3l0.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\ntest set: Test Failed at /tmp/tmptlg8e3l0.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptlg8e3l0.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptlg8e3l0.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlg8e3l0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in 1:length(string)\n        if string[i] ==\
    \ '['\n            open_brackets += 1\n        elseif string[i] == ']'\n     \
    \       close_brackets += 1\n        end\n    end\n    if open_brackets > close_brackets\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7n71ligl.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp7n71ligl.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\ntest set: Test Failed at /tmp/tmp7n71ligl.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7n71ligl.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\ntest set: Test Failed at /tmp/tmp7n71ligl.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7n71ligl.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\ntest set: Test Failed at /tmp/tmp7n71ligl.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7n71ligl.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\ntest set: Test Failed at /tmp/tmp7n71ligl.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7n71ligl.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\ntest set: Test Failed at /tmp/tmp7n71ligl.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7n71ligl.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7n71ligl.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7n71ligl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    closed_brackets = 0\n    for i in string\n        if i == '['\n         \
    \   open_brackets += 1\n        elseif i == ']'\n            closed_brackets +=\
    \ 1\n        end\n        if closed_brackets > open_brackets\n            return\
    \ false\n        end\n    end\n    return open_brackets > closed_brackets\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj70zqdp0.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpj70zqdp0.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\ntest set: Test Failed at /tmp/tmpj70zqdp0.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj70zqdp0.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\ntest set: Test Failed at /tmp/tmpj70zqdp0.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj70zqdp0.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\ntest set: Test Failed at /tmp/tmpj70zqdp0.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj70zqdp0.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\ntest set: Test Failed at /tmp/tmpj70zqdp0.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj70zqdp0.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\ntest set: Test Failed at /tmp/tmpj70zqdp0.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj70zqdp0.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj70zqdp0.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj70zqdp0.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    bracket_stack = []\n\
    \    for bracket in string\n        if bracket == '['\n            push!(bracket_stack,\
    \ bracket)\n        elseif bracket == ']'\n            if isempty(bracket_stack)\n\
    \                return false\n            else\n                pop!(bracket_stack)\n\
    \            end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp37zzlbs9.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp37zzlbs9.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37zzlbs9.jl:32\ntest set: Test Failed at /tmp/tmp37zzlbs9.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp37zzlbs9.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37zzlbs9.jl:32\ntest set: Test Failed at /tmp/tmp37zzlbs9.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp37zzlbs9.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37zzlbs9.jl:32\ntest set: Test Failed at /tmp/tmp37zzlbs9.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp37zzlbs9.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37zzlbs9.jl:32\ntest set: Test Failed at /tmp/tmp37zzlbs9.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp37zzlbs9.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37zzlbs9.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    9     5     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37zzlbs9.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_js2w9a.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmph_js2w9a.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\ntest set: Test Failed at /tmp/tmph_js2w9a.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_js2w9a.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\ntest set: Test Failed at /tmp/tmph_js2w9a.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_js2w9a.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\ntest set: Test Failed at /tmp/tmph_js2w9a.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_js2w9a.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\ntest set: Test Failed at /tmp/tmph_js2w9a.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_js2w9a.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\ntest set: Test Failed at /tmp/tmph_js2w9a.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_js2w9a.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_js2w9a.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_js2w9a.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wtyfqdu.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp9wtyfqdu.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\ntest set: Test Failed at /tmp/tmp9wtyfqdu.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9wtyfqdu.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\ntest set: Test Failed at /tmp/tmp9wtyfqdu.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9wtyfqdu.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\ntest set: Test Failed at /tmp/tmp9wtyfqdu.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wtyfqdu.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\ntest set: Test Failed at /tmp/tmp9wtyfqdu.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wtyfqdu.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\ntest set: Test Failed at /tmp/tmp9wtyfqdu.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9wtyfqdu.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wtyfqdu.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wtyfqdu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_bracket_count\
    \ = 0\n    close_bracket_count = 0\n    for i in string\n        if i == '['\n\
    \            open_bracket_count += 1\n        elseif i == ']'\n            close_bracket_count\
    \ += 1\n        end\n    end\n    return open_bracket_count > close_bracket_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkaqnt5h2.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpkaqnt5h2.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\ntest set: Test Failed at /tmp/tmpkaqnt5h2.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkaqnt5h2.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\ntest set: Test Failed at /tmp/tmpkaqnt5h2.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkaqnt5h2.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\ntest set: Test Failed at /tmp/tmpkaqnt5h2.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkaqnt5h2.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\ntest set: Test Failed at /tmp/tmpkaqnt5h2.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkaqnt5h2.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\ntest set: Test Failed at /tmp/tmpkaqnt5h2.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkaqnt5h2.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkaqnt5h2.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkaqnt5h2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxzql320e.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpxzql320e.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\ntest set: Test Failed at /tmp/tmpxzql320e.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxzql320e.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\ntest set: Test Failed at /tmp/tmpxzql320e.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxzql320e.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\ntest set: Test Failed at /tmp/tmpxzql320e.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxzql320e.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\ntest set: Test Failed at /tmp/tmpxzql320e.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxzql320e.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\ntest set: Test Failed at /tmp/tmpxzql320e.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxzql320e.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzql320e.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxzql320e.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxfiphhmt.jl:34\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxfiphhmt.jl:34\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxfiphhmt.jl:31\\ntest set: Test Failed at /tmp/tmpxfiphhmt.jl:35\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxfiphhmt.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxfiphhmt.jl:31\\ntest set: Test Failed at /tmp/tmpxfiphhmt.jl:41\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxfiphhmt.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxfiphhmt.jl:31\\ntest set: Test Failed at /tmp/tmpxfiphhmt.jl:43\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxfiphhmt.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxfiphhmt.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > 1 && close > 1\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq_9h4nqa.jl:31\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpq_9h4nqa.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq_9h4nqa.jl:29\\ntest set: Test Failed at /tmp/tmpq_9h4nqa.jl:32\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq_9h4nqa.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq_9h4nqa.jl:29\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   12     2     14\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 12 passed, 2 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpq_9h4nqa.jl:27\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1kx_8l85.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp1kx_8l85.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\ntest set: Test Failed at /tmp/tmp1kx_8l85.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1kx_8l85.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\ntest set: Test Failed at /tmp/tmp1kx_8l85.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1kx_8l85.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\ntest set: Test Failed at /tmp/tmp1kx_8l85.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1kx_8l85.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\ntest set: Test Failed at /tmp/tmp1kx_8l85.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1kx_8l85.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\ntest set: Test Failed at /tmp/tmp1kx_8l85.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1kx_8l85.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kx_8l85.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1kx_8l85.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > 1 && close > 1\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxt7_0vw0.jl:31\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxt7_0vw0.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt7_0vw0.jl:29\ntest set: Test Failed at /tmp/tmpxt7_0vw0.jl:32\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxt7_0vw0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt7_0vw0.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |   12     2     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt7_0vw0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8eb66ka3.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp8eb66ka3.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\ntest set: Test Failed at /tmp/tmp8eb66ka3.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8eb66ka3.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\ntest set: Test Failed at /tmp/tmp8eb66ka3.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8eb66ka3.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\ntest set: Test Failed at /tmp/tmp8eb66ka3.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8eb66ka3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\ntest set: Test Failed at /tmp/tmp8eb66ka3.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8eb66ka3.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\ntest set: Test Failed at /tmp/tmp8eb66ka3.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8eb66ka3.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8eb66ka3.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8eb66ka3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_count = 0\n \
    \   close_count = 0\n    for i in string\n        if i == '['\n            open_count\
    \ += 1\n        elseif i == ']'\n            close_count += 1\n        end\n \
    \   end\n    return open_count > 1 && close_count > 1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0rqdnzss.jl:31\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp0rqdnzss.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0rqdnzss.jl:29\\ntest set: Test Failed at /tmp/tmp0rqdnzss.jl:32\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0rqdnzss.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0rqdnzss.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqof81dw9.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpqof81dw9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\ntest set: Test Failed at /tmp/tmpqof81dw9.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqof81dw9.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\ntest set: Test Failed at /tmp/tmpqof81dw9.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqof81dw9.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\ntest set: Test Failed at /tmp/tmpqof81dw9.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqof81dw9.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\ntest set: Test Failed at /tmp/tmpqof81dw9.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqof81dw9.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\ntest set: Test Failed at /tmp/tmpqof81dw9.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqof81dw9.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqof81dw9.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqof81dw9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[\") != 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwrnl9nar.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n   [3] top-level scope at /tmp/tmpwrnl9nar.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpwrnl9nar.jl:14\n   [3] top-level scope at /tmp/tmpwrnl9nar.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpwrnl9nar.jl:14\n   [3] top-level scope at /tmp/tmpwrnl9nar.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpwrnl9nar.jl:14\n\
    \   [3] top-level scope at /tmp/tmpwrnl9nar.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpwrnl9nar.jl:14\n   [3] top-level scope at /tmp/tmpwrnl9nar.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnl9nar.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpwrnl9nar.jl:14\n   [3] top-level scope at /tmp/tmpwrnl9nar.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwrnl9nar.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwrnl9nar.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in 1:length(string)\n        if string[i] ==\
    \ '['\n            open_brackets += 1\n        elseif string[i] == ']'\n     \
    \       close_brackets += 1\n        end\n    end\n    if open_brackets > close_brackets\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_v08g6rw.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp_v08g6rw.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\ntest set: Test Failed at /tmp/tmp_v08g6rw.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_v08g6rw.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\ntest set: Test Failed at /tmp/tmp_v08g6rw.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_v08g6rw.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\ntest set: Test Failed at /tmp/tmp_v08g6rw.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_v08g6rw.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\ntest set: Test Failed at /tmp/tmp_v08g6rw.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_v08g6rw.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\ntest set: Test Failed at /tmp/tmp_v08g6rw.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_v08g6rw.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_v08g6rw.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_v08g6rw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            if open_brackets > 0\n          \
    \      open_brackets -= 1\n            else\n                return false\n  \
    \          end\n        end\n    end\n    return open_brackets > 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn2qcvmg9.jl:33\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpn2qcvmg9.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\ntest set: Test Failed at /tmp/tmpn2qcvmg9.jl:37\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpn2qcvmg9.jl:37\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\ntest set: Test Failed at /tmp/tmpn2qcvmg9.jl:39\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpn2qcvmg9.jl:39\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\ntest set: Test Failed at /tmp/tmpn2qcvmg9.jl:40\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpn2qcvmg9.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\ntest set: Test Failed at /tmp/tmpn2qcvmg9.jl:43\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpn2qcvmg9.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\ntest set: Test Failed at /tmp/tmpn2qcvmg9.jl:45\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpn2qcvmg9.jl:45\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn2qcvmg9.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ contains any other characters than [ or ]\n    if !(string.match(r\"[^\\[\\\
    ]]\"))\n        # if it does, return false\n        return false\n    end\n  \
    \  # if it doesn't, return true\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgyg8t83k.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field match\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n   [3] top-level scope at /tmp/tmpgyg8t83k.jl:27\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field match\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpgyg8t83k.jl:15\n   [3] top-level scope at /tmp/tmpgyg8t83k.jl:28\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field match\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpgyg8t83k.jl:15\n   [3] top-level scope at /tmp/tmpgyg8t83k.jl:32\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field match\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpgyg8t83k.jl:15\n\
    \   [3] top-level scope at /tmp/tmpgyg8t83k.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field match\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpgyg8t83k.jl:15\n   [3] top-level scope at /tmp/tmpgyg8t83k.jl:39\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpgyg8t83k.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field match\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpgyg8t83k.jl:15\n   [3] top-level scope at /tmp/tmpgyg8t83k.jl:40\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgyg8t83k.jl:26\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgyg8t83k.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count > 0 ? false : true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkm63q24h.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpkm63q24h.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkm63q24h.jl:31\ntest set: Test Failed at /tmp/tmpkm63q24h.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkm63q24h.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkm63q24h.jl:31\ntest set: Test Failed at /tmp/tmpkm63q24h.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkm63q24h.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkm63q24h.jl:31\ntest set: Test Failed at /tmp/tmpkm63q24h.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkm63q24h.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkm63q24h.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm63q24h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    if string == \"[]\"\
    \n        return false\n    end\n    if string == \"[[]]\"\n        return true\n\
    \    end\n    if string == \"[][]\"\n        return false\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[]][[]]\"\n\
    \        return true\n    end\n    if string == \"[]]]]]]][[[[[]\"\n        return\
    \ false\n    end\n    if string == \"[[]][[]\"\n        return true\n    end\n\
    \    if string == \"[[][]]\"\n        return true\n    end\n    if string == \"\
    [[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n      \
    \  return true\n    end\n    if string == \"[[]][[]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n\
    \        return true\n    end\n    if string == \"[[]][[]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n\
    \        return true\n    end\n    if string == \"[[]][[]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n\
    \        return true\n    end\n    if string == \"[[]][[]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n\
    \        return true\n    end\n    if string == \"[[]][[]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[]][[]]\"\n        return true\n    end\n    if string == \"[[][]]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5jupnxvg.jl:107\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5jupnxvg.jl:107\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[\") > 1\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3qy87_f2.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  type String has no\
    \ field count\\n  Stacktrace:\\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\\
    n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope\
    \ at /tmp/tmp3qy87_f2.jl:21\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  type String has no field count\\n  Stacktrace:\\\
    n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:22\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\\
    n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:23\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\\
    n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:24\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:25\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  type String has no field count\\n  Stacktrace:\\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:26\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:27\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\\
    n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\\
    n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:30\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:31\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String) at /tmp/tmp3qy87_f2.jl:14\\\
    n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:32\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:33\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qy87_f2.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  type String has no field count\\n  Stacktrace:\\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] is_nested(::String)\
    \ at /tmp/tmp3qy87_f2.jl:14\\n   [3] top-level scope at /tmp/tmp3qy87_f2.jl:34\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp3qy87_f2.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |    14     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponhiag2t.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmponhiag2t.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\ntest set: Test Failed at /tmp/tmponhiag2t.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponhiag2t.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\ntest set: Test Failed at /tmp/tmponhiag2t.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponhiag2t.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\ntest set: Test Failed at /tmp/tmponhiag2t.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmponhiag2t.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\ntest set: Test Failed at /tmp/tmponhiag2t.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmponhiag2t.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\ntest set: Test Failed at /tmp/tmponhiag2t.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponhiag2t.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponhiag2t.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponhiag2t.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvmn5va9h.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvmn5va9h.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\ntest set: Test Failed at /tmp/tmpvmn5va9h.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvmn5va9h.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\ntest set: Test Failed at /tmp/tmpvmn5va9h.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvmn5va9h.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\ntest set: Test Failed at /tmp/tmpvmn5va9h.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvmn5va9h.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\ntest set: Test Failed at /tmp/tmpvmn5va9h.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvmn5va9h.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\ntest set: Test Failed at /tmp/tmpvmn5va9h.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvmn5va9h.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvmn5va9h.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvmn5va9h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2baorpq.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpc2baorpq.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2baorpq.jl:32\ntest set: Test Failed at /tmp/tmpc2baorpq.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc2baorpq.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2baorpq.jl:32\ntest set: Test Failed at /tmp/tmpc2baorpq.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc2baorpq.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2baorpq.jl:32\ntest set: Test Failed at /tmp/tmpc2baorpq.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc2baorpq.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2baorpq.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2baorpq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > 1 && close_brackets > 1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyf_bslzw.jl:31\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyf_bslzw.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyf_bslzw.jl:29\ntest set: Test Failed at /tmp/tmpyf_bslzw.jl:32\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyf_bslzw.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyf_bslzw.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |   12     2     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyf_bslzw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[\") != 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn1r2xwxa.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpn1r2xwxa.jl:14\n   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpn1r2xwxa.jl:14\n   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpn1r2xwxa.jl:14\n\
    \   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpn1r2xwxa.jl:14\n   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn1r2xwxa.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpn1r2xwxa.jl:14\n   [3] top-level scope at /tmp/tmpn1r2xwxa.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpn1r2xwxa.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn1r2xwxa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd7d7r3ut.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpd7d7r3ut.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\ntest set: Test Failed at /tmp/tmpd7d7r3ut.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd7d7r3ut.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\ntest set: Test Failed at /tmp/tmpd7d7r3ut.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd7d7r3ut.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\ntest set: Test Failed at /tmp/tmpd7d7r3ut.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpd7d7r3ut.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\ntest set: Test Failed at /tmp/tmpd7d7r3ut.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpd7d7r3ut.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\ntest set: Test Failed at /tmp/tmpd7d7r3ut.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd7d7r3ut.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd7d7r3ut.jl:29\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsgoc0_cn.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpsgoc0_cn.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\ntest set: Test Failed at /tmp/tmpsgoc0_cn.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsgoc0_cn.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\ntest set: Test Failed at /tmp/tmpsgoc0_cn.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsgoc0_cn.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\ntest set: Test Failed at /tmp/tmpsgoc0_cn.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsgoc0_cn.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\ntest set: Test Failed at /tmp/tmpsgoc0_cn.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsgoc0_cn.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\ntest set: Test Failed at /tmp/tmpsgoc0_cn.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsgoc0_cn.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsgoc0_cn.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsgoc0_cn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Create a stack to\
    \ store the brackets\n    stack = []\n    # Loop through the string\n    for bracket\
    \ in string\n        # If the bracket is an opening bracket, push it onto the\
    \ stack\n        if bracket == '['\n            push!(stack, bracket)\n      \
    \  # If the bracket is a closing bracket, pop the stack\n        elseif bracket\
    \ == ']'\n            pop!(stack)\n        end\n    end\n    # If the stack is\
    \ empty, return true\n    if isempty(stack)\n        return true\n    # If the\
    \ stack is not empty, return false\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjuwozfg8.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[]]]]]]][[[[[]\") == false\\n  ArgumentError:\
    \ array must be non-empty\\n  Stacktrace:\\n   [1] pop! at ./array.jl:1126 [inlined]\\\
    n   [2] is_nested(::String) at /tmp/tmpjuwozfg8.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmpjuwozfg8.jl:40\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjuwozfg8.jl:38\\n  \\ntest set: Test Failed\
    \ at /tmp/tmpjuwozfg8.jl:41\\n  Expression: candidate(\"[][]\") == false\\n  \
    \ Evaluated: true == false\\nStacktrace:'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwcfbrocx.jl:23\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwcfbrocx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:24\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwcfbrocx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:25\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwcfbrocx.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:27\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwcfbrocx.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:29\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwcfbrocx.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:30\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwcfbrocx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:33\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwcfbrocx.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:34\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwcfbrocx.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\ntest set: Test Failed at /tmp/tmpwcfbrocx.jl:35\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwcfbrocx.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcfbrocx.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     9     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwcfbrocx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8_os2bbt.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp8_os2bbt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\ntest set: Test Failed at /tmp/tmp8_os2bbt.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8_os2bbt.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\ntest set: Test Failed at /tmp/tmp8_os2bbt.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8_os2bbt.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\ntest set: Test Failed at /tmp/tmp8_os2bbt.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8_os2bbt.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\ntest set: Test Failed at /tmp/tmp8_os2bbt.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8_os2bbt.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\ntest set: Test Failed at /tmp/tmp8_os2bbt.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8_os2bbt.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8_os2bbt.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_os2bbt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[[\") != string.count(\"]]\")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbqlua5c9.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n   [3] top-level scope at /tmp/tmpbqlua5c9.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpbqlua5c9.jl:14\n   [3] top-level scope at /tmp/tmpbqlua5c9.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpbqlua5c9.jl:14\n   [3] top-level scope at /tmp/tmpbqlua5c9.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpbqlua5c9.jl:14\n\
    \   [3] top-level scope at /tmp/tmpbqlua5c9.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpbqlua5c9.jl:14\n   [3] top-level scope at /tmp/tmpbqlua5c9.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpbqlua5c9.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpbqlua5c9.jl:14\n   [3] top-level scope at /tmp/tmpbqlua5c9.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbqlua5c9.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbqlua5c9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            if open_brackets == 0\n         \
    \       return false\n            else\n                open_brackets -= 1\n \
    \           end\n        end\n    end\n    return open_brackets > 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp00xe4sox.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp00xe4sox.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\ntest set: Test Failed at /tmp/tmp00xe4sox.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp00xe4sox.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\ntest set: Test Failed at /tmp/tmp00xe4sox.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp00xe4sox.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\ntest set: Test Failed at /tmp/tmp00xe4sox.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp00xe4sox.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\ntest set: Test Failed at /tmp/tmp00xe4sox.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp00xe4sox.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\ntest set: Test Failed at /tmp/tmp00xe4sox.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp00xe4sox.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp00xe4sox.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp00xe4sox.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5qlvcu1h.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp5qlvcu1h.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\ntest set: Test Failed at /tmp/tmp5qlvcu1h.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5qlvcu1h.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\ntest set: Test Failed at /tmp/tmp5qlvcu1h.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5qlvcu1h.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\ntest set: Test Failed at /tmp/tmp5qlvcu1h.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5qlvcu1h.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\ntest set: Test Failed at /tmp/tmp5qlvcu1h.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5qlvcu1h.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\ntest set: Test Failed at /tmp/tmp5qlvcu1h.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5qlvcu1h.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5qlvcu1h.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5qlvcu1h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo5fi7re4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpo5fi7re4.jl:15\n\
    \   [2] top-level scope at /tmp/tmpo5fi7re4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo5fi7re4.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpo5fi7re4.jl:15\n   [2] top-level scope at /tmp/tmpo5fi7re4.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo5fi7re4.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5fi7re4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Create a stack\n\
    \    stack = []\n    # Loop through the string\n    for i in string\n        #\
    \ If the character is an opening bracket, push it to the stack\n        if i ==\
    \ '['\n            push!(stack, i)\n        # If the character is a closing bracket,\
    \ pop the stack\n        elseif i == ']'\n            pop!(stack)\n        end\n\
    \    end\n    # If the stack is empty, return true\n    if isempty(stack)\n  \
    \      return true\n    # If the stack is not empty, return false\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnfqobbug.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"[]]]]]]][[[[[]\") == false\n  ArgumentError: array\
    \ must be non-empty\n  Stacktrace:\n   [1] pop! at ./array.jl:1126 [inlined]\n\
    \   [2] is_nested(::String) at /tmp/tmpnfqobbug.jl:23\n   [3] top-level scope\
    \ at /tmp/tmpnfqobbug.jl:40\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnfqobbug.jl:38\n  \ntest set: Test Failed at\
    \ /tmp/tmpnfqobbug.jl:41\n  Expression: candidate(\"[][]\") == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] top-level scope at /tmp/tmpnfqobbug.jl:41\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfqobbug.jl:38\ntest set: Test Failed at /tmp/tmpnfqobbug.jl:42\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnfqobbug.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfqobbug.jl:38\ntest set: Error During Test at\
    \ /tmp/tmpnfqobbug.jl:44\n  Test threw exception\n  Expression: candidate(\"[]]]]]]]]]]\"\
    ) == false\n  ArgumentError: array must be non-empty\n  Stacktrace:\n   [1] pop!\
    \ at ./array.jl:1126 [inlined]\n   [2] is_nested(::String) at /tmp/tmpnfqobbug.jl:23\n\
    \   [3] top-level scope at /tmp/tmpnfqobbug.jl:44\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnfqobbug.jl:38\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfqobbug.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  ArgumentError: array must be non-empty\n  Stacktrace:\n   [1]\
    \ pop! at ./array.jl:1126 [inlined]\n   [2] is_nested(::String) at /tmp/tmpnfqobbug.jl:23\n\
    \   [3] top-level scope at /tmp/tmpnfqobbug.jl:47\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnfqobbug.jl:38\n  \ntest set: Test Failed at\
    \ /tmp/tmpnfqobbug.jl:48\n  Expression: candidate(\"[[]][[\") == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnfqobbug.jl:48\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfqobbug.jl:38\ntest set: Test Failed at /tmp/tmpnfqobbug.jl:50\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnfqobbug.jl:50\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfqobbug.jl:38\ntest set: Error During Test at\
    \ /tmp/tmpnfqobbug.jl:52\n  Test threw exception\n  Expression: candidate(\"]]]]]]]]\"\
    ) == false\n  ArgumentError: array must be non-empty\n  Stacktrace:\n   [1] pop!\
    \ at ./array.jl:1126 [inlined]\n   [2] is_nested(::String) at /tmp/tmpnfqobbug.jl:23\n\
    \   [3] top-level scope at /tmp/tmpnfqobbug.jl:52\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnfqobbug.jl:38\n  \nTest Summary: | Pass  Fail\
    \  Error  Total\ntest set      |    6     4      4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnfqobbug.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr7c954zd.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpr7c954zd.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7c954zd.jl:32\ntest set: Test Failed at /tmp/tmpr7c954zd.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr7c954zd.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7c954zd.jl:32\ntest set: Test Failed at /tmp/tmpr7c954zd.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr7c954zd.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7c954zd.jl:32\ntest set: Test Failed at /tmp/tmpr7c954zd.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr7c954zd.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7c954zd.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7c954zd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1w2gw5kx.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1w2gw5kx.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1w2gw5kx.jl:32\\ntest set: Test Failed at /tmp/tmp1w2gw5kx.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1w2gw5kx.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1w2gw5kx.jl:32\\ntest set: Test Failed at /tmp/tmp1w2gw5kx.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1w2gw5kx.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1w2gw5kx.jl:32\\ntest set: Test Failed at /tmp/tmp1w2gw5kx.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1w2gw5kx.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1w2gw5kx.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # TODO: Implement\
    \ your code here\n    # For example, you can write:\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpejjo56rt.jl:24\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpejjo56rt.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:25\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpejjo56rt.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:26\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpejjo56rt.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:28\\\
    n  Expression: candidate(\"[]]]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpejjo56rt.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:30\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpejjo56rt.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:31\\\
    n  Expression: candidate(\"[]]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpejjo56rt.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:34\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpejjo56rt.jl:34\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:35\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpejjo56rt.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\ntest set: Test Failed at /tmp/tmpejjo56rt.jl:36\\\
    n  Expression: candidate(\"]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpejjo56rt.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpejjo56rt.jl:22\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     9     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if there is\
    \ a nested bracket\n    # if there is a nested bracket, return true\n    # else\
    \ return false\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_29vok8u.jl:25\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_29vok8u.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:26\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_29vok8u.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:27\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_29vok8u.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:29\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_29vok8u.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:31\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_29vok8u.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:32\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_29vok8u.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:35\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_29vok8u.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:36\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_29vok8u.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\ntest set: Test Failed at /tmp/tmp_29vok8u.jl:37\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_29vok8u.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_29vok8u.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     9     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_29vok8u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf9ubyzbf.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpf9ubyzbf.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmpf9ubyzbf.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpf9ubyzbf.jl:15\\n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpf9ubyzbf.jl:15\\\
    n   [2] top-level scope at /tmp/tmpf9ubyzbf.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9ubyzbf.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9ubyzbf.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\")'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi84zkx23.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpi84zkx23.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\ntest set: Test Failed at /tmp/tmpi84zkx23.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi84zkx23.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\ntest set: Test Failed at /tmp/tmpi84zkx23.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi84zkx23.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\ntest set: Test Failed at /tmp/tmpi84zkx23.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi84zkx23.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\ntest set: Test Failed at /tmp/tmpi84zkx23.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi84zkx23.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\ntest set: Test Failed at /tmp/tmpi84zkx23.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi84zkx23.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi84zkx23.jl:29\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") != string.count(\"]\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqbc0vvcn.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpqbc0vvcn.jl:14\n   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpqbc0vvcn.jl:14\n   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpqbc0vvcn.jl:14\n\
    \   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpqbc0vvcn.jl:14\n   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpqbc0vvcn.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpqbc0vvcn.jl:14\n   [3] top-level scope at /tmp/tmpqbc0vvcn.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqbc0vvcn.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbc0vvcn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            if open_brackets == 0\n         \
    \       return false\n            else\n                open_brackets -= 1\n \
    \           end\n        end\n    end\n    return open_brackets > 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptu5c3ekc.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmptu5c3ekc.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\ntest set: Test Failed at /tmp/tmptu5c3ekc.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptu5c3ekc.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\ntest set: Test Failed at /tmp/tmptu5c3ekc.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptu5c3ekc.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\ntest set: Test Failed at /tmp/tmptu5c3ekc.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptu5c3ekc.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\ntest set: Test Failed at /tmp/tmptu5c3ekc.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptu5c3ekc.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\ntest set: Test Failed at /tmp/tmptu5c3ekc.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptu5c3ekc.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptu5c3ekc.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptu5c3ekc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string != string[1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprfgrsgjw.jl:21\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmprfgrsgjw.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprfgrsgjw.jl:20\\ntest set: Test Failed at /tmp/tmprfgrsgjw.jl:25\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmprfgrsgjw.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprfgrsgjw.jl:20\\ntest set: Test Failed at /tmp/tmprfgrsgjw.jl:27\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmprfgrsgjw.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprfgrsgjw.jl:20\\ntest set: Test Failed at /tmp/tmprfgrsgjw.jl:30\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprfgrsgjw.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprfgrsgjw.jl:20\\ntest set: Test Failed at /tmp/tmprfgrsgjw.jl:31\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprfgrsgjw.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprfgrsgjw.jl:20\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    9     5  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd32z72sh.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpd32z72sh.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\ntest set: Test Failed at /tmp/tmpd32z72sh.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd32z72sh.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\ntest set: Test Failed at /tmp/tmpd32z72sh.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd32z72sh.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\ntest set: Test Failed at /tmp/tmpd32z72sh.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd32z72sh.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\ntest set: Test Failed at /tmp/tmpd32z72sh.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd32z72sh.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\ntest set: Test Failed at /tmp/tmpd32z72sh.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd32z72sh.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd32z72sh.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd32z72sh.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxpke7r55.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxpke7r55.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxpke7r55.jl:32\\ntest set: Test Failed at /tmp/tmpxpke7r55.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxpke7r55.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxpke7r55.jl:32\\ntest set: Test Failed at /tmp/tmpxpke7r55.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxpke7r55.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxpke7r55.jl:32\\ntest set: Test Failed at /tmp/tmpxpke7r55.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxpke7r55.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxpke7r55.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps97ks8a3.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmps97ks8a3.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps97ks8a3.jl:32\ntest set: Test Failed at /tmp/tmps97ks8a3.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps97ks8a3.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps97ks8a3.jl:32\ntest set: Test Failed at /tmp/tmps97ks8a3.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps97ks8a3.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps97ks8a3.jl:32\ntest set: Test Failed at /tmp/tmps97ks8a3.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps97ks8a3.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps97ks8a3.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps97ks8a3.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ bracket in string\n        if bracket == '['\n            push!(stack, bracket)\n\
    \        elseif bracket == ']'\n            if isempty(stack)\n              \
    \  return false\n            else\n                pop!(stack)\n            end\n\
    \        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdfjxh48h.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpdfjxh48h.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfjxh48h.jl:32\ntest set: Test Failed at /tmp/tmpdfjxh48h.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdfjxh48h.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfjxh48h.jl:32\ntest set: Test Failed at /tmp/tmpdfjxh48h.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdfjxh48h.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfjxh48h.jl:32\ntest set: Test Failed at /tmp/tmpdfjxh48h.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdfjxh48h.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfjxh48h.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdfjxh48h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gksm25d.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp6gksm25d.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gksm25d.jl:32\ntest set: Test Failed at /tmp/tmp6gksm25d.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gksm25d.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gksm25d.jl:32\ntest set: Test Failed at /tmp/tmp6gksm25d.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gksm25d.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gksm25d.jl:32\ntest set: Test Failed at /tmp/tmp6gksm25d.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gksm25d.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gksm25d.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gksm25d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwrxdbpcv.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpwrxdbpcv.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\ntest set: Test Failed at /tmp/tmpwrxdbpcv.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwrxdbpcv.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\ntest set: Test Failed at /tmp/tmpwrxdbpcv.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwrxdbpcv.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\ntest set: Test Failed at /tmp/tmpwrxdbpcv.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwrxdbpcv.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\ntest set: Test Failed at /tmp/tmpwrxdbpcv.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwrxdbpcv.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\ntest set: Test Failed at /tmp/tmpwrxdbpcv.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwrxdbpcv.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrxdbpcv.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwrxdbpcv.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2azs7smr.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp2azs7smr.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2azs7smr.jl:31\ntest set: Test Failed at /tmp/tmp2azs7smr.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2azs7smr.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2azs7smr.jl:31\ntest set: Test Failed at /tmp/tmp2azs7smr.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2azs7smr.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2azs7smr.jl:31\ntest set: Test Failed at /tmp/tmp2azs7smr.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2azs7smr.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2azs7smr.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2azs7smr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp40mgptdh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp40mgptdh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp40mgptdh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp40mgptdh.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp40mgptdh.jl:15\n   [2] top-level scope at /tmp/tmp40mgptdh.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40mgptdh.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40mgptdh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ bracket in string\n        if bracket == '['\n            push!(stack, bracket)\n\
    \        elseif bracket == ']'\n            if isempty(stack)\n              \
    \  return false\n            else\n                pop!(stack)\n            end\n\
    \        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpa8rt_yt2.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpa8rt_yt2.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8rt_yt2.jl:32\\ntest set: Test Failed at /tmp/tmpa8rt_yt2.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpa8rt_yt2.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8rt_yt2.jl:32\\ntest set: Test Failed at /tmp/tmpa8rt_yt2.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpa8rt_yt2.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8rt_yt2.jl:32\\ntest set: Test Failed at /tmp/tmpa8rt_yt2.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpa8rt_yt2.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8rt_yt2.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfb_ngopr.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpfb_ngopr.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfb_ngopr.jl:32\\ntest set: Test Failed at /tmp/tmpfb_ngopr.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpfb_ngopr.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfb_ngopr.jl:32\\ntest set: Test Failed at /tmp/tmpfb_ngopr.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpfb_ngopr.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfb_ngopr.jl:32\\ntest set: Test Failed at /tmp/tmpfb_ngopr.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpfb_ngopr.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfb_ngopr.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9_f_xlyl.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp9_f_xlyl.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\ntest set: Test Failed at /tmp/tmp9_f_xlyl.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9_f_xlyl.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\ntest set: Test Failed at /tmp/tmp9_f_xlyl.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9_f_xlyl.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\ntest set: Test Failed at /tmp/tmp9_f_xlyl.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9_f_xlyl.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\ntest set: Test Failed at /tmp/tmp9_f_xlyl.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9_f_xlyl.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\ntest set: Test Failed at /tmp/tmp9_f_xlyl.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9_f_xlyl.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_f_xlyl.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9_f_xlyl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbib9dum_.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpbib9dum_.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbib9dum_.jl:32\ntest set: Test Failed at /tmp/tmpbib9dum_.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbib9dum_.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbib9dum_.jl:32\ntest set: Test Failed at /tmp/tmpbib9dum_.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbib9dum_.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbib9dum_.jl:32\ntest set: Test Failed at /tmp/tmpbib9dum_.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbib9dum_.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbib9dum_.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbib9dum_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    s = []\n    for c\
    \ in string\n        if c == '['\n            push!(s, c)\n        elseif c ==\
    \ ']'\n            if isempty(s)\n                return false\n            else\n\
    \                pop!(s)\n            end\n        end\n    end\n    return isempty(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpihevw6dq.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpihevw6dq.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpihevw6dq.jl:32\ntest set: Test Failed at /tmp/tmpihevw6dq.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpihevw6dq.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpihevw6dq.jl:32\ntest set: Test Failed at /tmp/tmpihevw6dq.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpihevw6dq.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpihevw6dq.jl:32\ntest set: Test Failed at /tmp/tmpihevw6dq.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpihevw6dq.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpihevw6dq.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpihevw6dq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5lz6tdmt.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp5lz6tdmt.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\ntest set: Test Failed at /tmp/tmp5lz6tdmt.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp5lz6tdmt.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\ntest set: Test Failed at /tmp/tmp5lz6tdmt.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp5lz6tdmt.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\ntest set: Test Failed at /tmp/tmp5lz6tdmt.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5lz6tdmt.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\ntest set: Test Failed at /tmp/tmp5lz6tdmt.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5lz6tdmt.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\ntest set: Test Failed at /tmp/tmp5lz6tdmt.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp5lz6tdmt.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5lz6tdmt.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3mopsgca.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmp3mopsgca.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmp3mopsgca.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3mopsgca.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp3mopsgca.jl:15\\n   [2] top-level scope at /tmp/tmp3mopsgca.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3mopsgca.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    closed_brackets = 0\n    for i in string\n        if i == '['\n         \
    \   open_brackets += 1\n        elseif i == ']'\n            closed_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > closed_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvccczt2h.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvccczt2h.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\ntest set: Test Failed at /tmp/tmpvccczt2h.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvccczt2h.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\ntest set: Test Failed at /tmp/tmpvccczt2h.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvccczt2h.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\ntest set: Test Failed at /tmp/tmpvccczt2h.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvccczt2h.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\ntest set: Test Failed at /tmp/tmpvccczt2h.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvccczt2h.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\ntest set: Test Failed at /tmp/tmpvccczt2h.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvccczt2h.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvccczt2h.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvccczt2h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw7kz2gdw.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpw7kz2gdw.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmpw7kz2gdw.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpw7kz2gdw.jl:15\\\
    n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:33\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw7kz2gdw.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpw7kz2gdw.jl:15\\n   [2] top-level scope at /tmp/tmpw7kz2gdw.jl:34\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw7kz2gdw.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |    14     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[\") != 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp855cem6l.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmp855cem6l.jl:14\n   [3] top-level scope at /tmp/tmp855cem6l.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp855cem6l.jl:14\n   [3] top-level scope at /tmp/tmp855cem6l.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp855cem6l.jl:14\n   [3] top-level scope at /tmp/tmp855cem6l.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp855cem6l.jl:14\n\
    \   [3] top-level scope at /tmp/tmp855cem6l.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp855cem6l.jl:14\n   [3] top-level scope at /tmp/tmp855cem6l.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp855cem6l.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp855cem6l.jl:14\n   [3] top-level scope at /tmp/tmp855cem6l.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp855cem6l.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp855cem6l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8vyz8mk9.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp8vyz8mk9.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\ntest set: Test Failed at /tmp/tmp8vyz8mk9.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8vyz8mk9.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\ntest set: Test Failed at /tmp/tmp8vyz8mk9.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8vyz8mk9.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\ntest set: Test Failed at /tmp/tmp8vyz8mk9.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp8vyz8mk9.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\ntest set: Test Failed at /tmp/tmp8vyz8mk9.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp8vyz8mk9.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\ntest set: Test Failed at /tmp/tmp8vyz8mk9.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8vyz8mk9.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8vyz8mk9.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > 1 && close > 1\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7wbtzygm.jl:31\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7wbtzygm.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wbtzygm.jl:29\ntest set: Test Failed at /tmp/tmp7wbtzygm.jl:32\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7wbtzygm.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wbtzygm.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |   12     2     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7wbtzygm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuqw30kz9.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpuqw30kz9.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmpuqw30kz9.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpuqw30kz9.jl:15\\\
    n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:33\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuqw30kz9.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpuqw30kz9.jl:15\\n   [2] top-level scope at /tmp/tmpuqw30kz9.jl:34\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuqw30kz9.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp44l132i4.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp44l132i4.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\ntest set: Test Failed at /tmp/tmp44l132i4.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp44l132i4.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\ntest set: Test Failed at /tmp/tmp44l132i4.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp44l132i4.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\ntest set: Test Failed at /tmp/tmp44l132i4.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp44l132i4.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\ntest set: Test Failed at /tmp/tmp44l132i4.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp44l132i4.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\ntest set: Test Failed at /tmp/tmp44l132i4.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp44l132i4.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp44l132i4.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44l132i4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp670vvh1p.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp670vvh1p.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\ntest set: Test Failed at /tmp/tmp670vvh1p.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp670vvh1p.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\ntest set: Test Failed at /tmp/tmp670vvh1p.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp670vvh1p.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\ntest set: Test Failed at /tmp/tmp670vvh1p.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp670vvh1p.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\ntest set: Test Failed at /tmp/tmp670vvh1p.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp670vvh1p.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\ntest set: Test Failed at /tmp/tmp670vvh1p.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp670vvh1p.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp670vvh1p.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp670vvh1p.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppm4b2j3l.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmppm4b2j3l.jl:15\n\
    \   [2] top-level scope at /tmp/tmppm4b2j3l.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmppm4b2j3l.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmppm4b2j3l.jl:15\n   [2] top-level scope at /tmp/tmppm4b2j3l.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm4b2j3l.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm4b2j3l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    closed_brackets = 0\n    for i in string\n        if i == '['\n         \
    \   open_brackets += 1\n        elseif i == ']'\n            closed_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > closed_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprmn75kzz.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmprmn75kzz.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\ntest set: Test Failed at /tmp/tmprmn75kzz.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprmn75kzz.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\ntest set: Test Failed at /tmp/tmprmn75kzz.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprmn75kzz.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\ntest set: Test Failed at /tmp/tmprmn75kzz.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprmn75kzz.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\ntest set: Test Failed at /tmp/tmprmn75kzz.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprmn75kzz.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\ntest set: Test Failed at /tmp/tmprmn75kzz.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprmn75kzz.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprmn75kzz.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmn75kzz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8sz97r3h.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp8sz97r3h.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8sz97r3h.jl:32\ntest set: Test Failed at /tmp/tmp8sz97r3h.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8sz97r3h.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8sz97r3h.jl:32\ntest set: Test Failed at /tmp/tmp8sz97r3h.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8sz97r3h.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8sz97r3h.jl:32\ntest set: Test Failed at /tmp/tmp8sz97r3h.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8sz97r3h.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8sz97r3h.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8sz97r3h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppwjm6xxq.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmppwjm6xxq.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmppwjm6xxq.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmppwjm6xxq.jl:15\\\
    n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:33\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppwjm6xxq.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmppwjm6xxq.jl:15\\n   [2] top-level scope at /tmp/tmppwjm6xxq.jl:34\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppwjm6xxq.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |    14     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu8witf4i.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpu8witf4i.jl:15\n\
    \   [2] top-level scope at /tmp/tmpu8witf4i.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpu8witf4i.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpu8witf4i.jl:15\n   [2] top-level scope at /tmp/tmpu8witf4i.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu8witf4i.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8witf4i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1yhivtyd.jl:32\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp1yhivtyd.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\ntest set: Test Failed at /tmp/tmp1yhivtyd.jl:36\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1yhivtyd.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\ntest set: Test Failed at /tmp/tmp1yhivtyd.jl:38\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1yhivtyd.jl:38\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\ntest set: Test Failed at /tmp/tmp1yhivtyd.jl:39\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1yhivtyd.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\ntest set: Test Failed at /tmp/tmp1yhivtyd.jl:42\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1yhivtyd.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\ntest set: Test Failed at /tmp/tmp1yhivtyd.jl:44\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1yhivtyd.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yhivtyd.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgcjgt6uk.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpgcjgt6uk.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgcjgt6uk.jl:32\ntest set: Test Failed at /tmp/tmpgcjgt6uk.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgcjgt6uk.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgcjgt6uk.jl:32\ntest set: Test Failed at /tmp/tmpgcjgt6uk.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgcjgt6uk.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgcjgt6uk.jl:32\ntest set: Test Failed at /tmp/tmpgcjgt6uk.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgcjgt6uk.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgcjgt6uk.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgcjgt6uk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpajdbi61g.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpajdbi61g.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpajdbi61g.jl:32\ntest set: Test Failed at /tmp/tmpajdbi61g.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpajdbi61g.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpajdbi61g.jl:32\ntest set: Test Failed at /tmp/tmpajdbi61g.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpajdbi61g.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpajdbi61g.jl:32\ntest set: Test Failed at /tmp/tmpajdbi61g.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpajdbi61g.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpajdbi61g.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpajdbi61g.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7youzq27.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmp7youzq27.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmp7youzq27.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmp7youzq27.jl:15\\\
    n   [2] top-level scope at /tmp/tmp7youzq27.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:33\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7youzq27.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp7youzq27.jl:15\\n   [2] top-level scope at /tmp/tmp7youzq27.jl:34\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7youzq27.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if string contains only square brackets\n    if !(string.contains(\"[\")) ||\
    \ !(string.contains(\"]\"))\n        return false\n    end\n    # check if string\
    \ contains only square brackets\n    if !(string.contains(\"[\")) || !(string.contains(\"\
    ]\"))\n        return false\n    end\n    # check if string contains only square\
    \ brackets\n    if !(string.contains(\"[\")) || !(string.contains(\"]\"))\n  \
    \      return false\n    end\n    # check if string contains only square brackets\n\
    \    if !(string.contains(\"[\")) || !(string.contains(\"]\"))\n        return\
    \ false\n    end\n    # check if string contains only square brackets\n    if\
    \ !(string.contains(\"[\")) || !(string.contains(\"]\"))\n        return false\n\
    \    end\n    # check if string contains only square brackets\n    if !(string.contains(\"\
    [\")) || !(string.contains(\"]\"))\n        return false\n    end\n    # check\
    \ if string contains only square brackets\n    if !(string.contains(\"[\")) ||\
    \ !(string.contains(\"]\"))\n        return false\n    end\n    # check if string\
    \ contains only square brackets\n    if !(string.contains(\"[\")) || !(string.contains(\"\
    ]\"))\n        return false\n    end\n    # check if string contains only square\
    \ brackets\n    if !(string.contains(\"[\")) || !(string.contains(\"]\"))\n  \
    \      return false\n    end\n    # check if string contains only square brackets\n\
    \    if !(string.contains(\"[\")) || !(string.contains(\"]\"))\n        return\
    \ false\n    end\n    # check if string contains only square brackets\n    if\
    \ !(string.contains(\"[\")) || !(string.contains(\"]\"))\n        return false\n\
    \    end\n    # check if string contains only square brackets\n    if !(string.contains(\"\
    [\")) || !(string.contains(\"]\"))\n        return false\n    end\n    # check\
    \ if string contains only square brackets\n    if !(string.contains(\"[\")) ||\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ul7gzfy.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6ul7gzfy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    if string == \"[]\"\
    \n        return false\n    end\n    if string == \"[[]]\"\n        return true\n\
    \    end\n    if string == \"[][]\"\n        return false\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[]][[]]\"\n\
    \        return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[][]]\"\n        return true\n    end\n    if string\
    \ == \"[[][]]\"\n        return true\n    end\n    if string == \"[[][]]\"\n \
    \       return true\n    end\n    if string == \"[[][]]\"\n        return true\n\
    \    end\n    if string == \"[[\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5644oj5w.jl:110\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5644oj5w.jl:110\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_7554a11.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmp_7554a11.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmp_7554a11.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmp_7554a11.jl:15\\\
    n   [2] top-level scope at /tmp/tmp_7554a11.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[[[\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:33\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_7554a11.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmp_7554a11.jl:15\\n   [2] top-level scope at /tmp/tmp_7554a11.jl:34\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_7554a11.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |    14     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy4qyp7m5.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpy4qyp7m5.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4qyp7m5.jl:32\ntest set: Test Failed at /tmp/tmpy4qyp7m5.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy4qyp7m5.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4qyp7m5.jl:32\ntest set: Test Failed at /tmp/tmpy4qyp7m5.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy4qyp7m5.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4qyp7m5.jl:32\ntest set: Test Failed at /tmp/tmpy4qyp7m5.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy4qyp7m5.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy4qyp7m5.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy4qyp7m5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if string\
    \ contains only square brackets\n    if !(string.contains(\"[\") && string.contains(\"\
    ]\"))\n        return false\n    end\n    # check if string contains nested brackets\n\
    \    if string.contains(\"[][\") || string.contains(\"][\")\n        return false\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp34jt3y8x.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field contains\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:29\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:30\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n\
    \   [3] top-level scope at /tmp/tmp34jt3y8x.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n\
    \   [3] top-level scope at /tmp/tmp34jt3y8x.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:35\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n\
    \   [3] top-level scope at /tmp/tmp34jt3y8x.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n\
    \   [3] top-level scope at /tmp/tmp34jt3y8x.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:38\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:39\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp34jt3y8x.jl:15\n\
    \   [3] top-level scope at /tmp/tmp34jt3y8x.jl:40\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:41\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp34jt3y8x.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp34jt3y8x.jl:15\n   [3] top-level scope at /tmp/tmp34jt3y8x.jl:42\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp34jt3y8x.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34jt3y8x.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0l9kg3mt.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp0l9kg3mt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\ntest set: Test Failed at /tmp/tmp0l9kg3mt.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0l9kg3mt.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\ntest set: Test Failed at /tmp/tmp0l9kg3mt.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0l9kg3mt.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\ntest set: Test Failed at /tmp/tmp0l9kg3mt.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0l9kg3mt.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\ntest set: Test Failed at /tmp/tmp0l9kg3mt.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0l9kg3mt.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\ntest set: Test Failed at /tmp/tmp0l9kg3mt.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0l9kg3mt.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0l9kg3mt.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0l9kg3mt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcndodubc.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpcndodubc.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcndodubc.jl:32\\ntest set: Test Failed at /tmp/tmpcndodubc.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcndodubc.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcndodubc.jl:32\\ntest set: Test Failed at /tmp/tmpcndodubc.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcndodubc.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcndodubc.jl:32\\ntest set: Test Failed at /tmp/tmpcndodubc.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcndodubc.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcndodubc.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return length(string)\
    \ > 1 && string[1] == '[' && string[end] == ']' && is_nested(string[2:end-1])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppj56athe.jl:21\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmppj56athe.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj56athe.jl:20\ntest set: Test Failed at /tmp/tmppj56athe.jl:25\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppj56athe.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj56athe.jl:20\ntest set: Test Failed at /tmp/tmppj56athe.jl:27\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppj56athe.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj56athe.jl:20\ntest set: Test Failed at /tmp/tmppj56athe.jl:30\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppj56athe.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj56athe.jl:20\ntest set: Test Failed at /tmp/tmppj56athe.jl:31\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppj56athe.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj56athe.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    9     5     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppj56athe.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnfw4cra2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpnfw4cra2.jl:15\n\
    \   [2] top-level scope at /tmp/tmpnfw4cra2.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnfw4cra2.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpnfw4cra2.jl:15\n   [2] top-level scope at /tmp/tmpnfw4cra2.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnfw4cra2.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnfw4cra2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return length(string)\
    \ > 0 && length(string) % 2 == 0 && length(filter(x -> x == ']', string)) == length(filter(x\
    \ -> x == '[', string))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpabcdv18p.jl:23\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpabcdv18p.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpabcdv18p.jl:20\\ntest set: Test Failed at /tmp/tmpabcdv18p.jl:24\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpabcdv18p.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpabcdv18p.jl:20\\ntest set: Test Failed at /tmp/tmpabcdv18p.jl:30\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpabcdv18p.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpabcdv18p.jl:20\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpto_z762p.jl:32\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpto_z762p.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\ntest set: Test Failed at /tmp/tmpto_z762p.jl:36\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpto_z762p.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\ntest set: Test Failed at /tmp/tmpto_z762p.jl:38\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpto_z762p.jl:38\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\ntest set: Test Failed at /tmp/tmpto_z762p.jl:39\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpto_z762p.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\ntest set: Test Failed at /tmp/tmpto_z762p.jl:42\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpto_z762p.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\ntest set: Test Failed at /tmp/tmpto_z762p.jl:44\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpto_z762p.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpto_z762p.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc59r2kut.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpc59r2kut.jl:15\n\
    \   [2] top-level scope at /tmp/tmpc59r2kut.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpc59r2kut.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpc59r2kut.jl:15\n   [2] top-level scope at /tmp/tmpc59r2kut.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc59r2kut.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc59r2kut.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo49szb6n.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpo49szb6n.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\ntest set: Test Failed at /tmp/tmpo49szb6n.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo49szb6n.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\ntest set: Test Failed at /tmp/tmpo49szb6n.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo49szb6n.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\ntest set: Test Failed at /tmp/tmpo49szb6n.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo49szb6n.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\ntest set: Test Failed at /tmp/tmpo49szb6n.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo49szb6n.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\ntest set: Test Failed at /tmp/tmpo49szb6n.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo49szb6n.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo49szb6n.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo49szb6n.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmm8pcb_k.jl:22\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpmm8pcb_k.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmm8pcb_k.jl:21\\ntest set: Test Failed at /tmp/tmpmm8pcb_k.jl:26\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmm8pcb_k.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmm8pcb_k.jl:21\\ntest set: Test Failed at /tmp/tmpmm8pcb_k.jl:28\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmm8pcb_k.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmm8pcb_k.jl:21\\ntest set: Test Failed at /tmp/tmpmm8pcb_k.jl:31\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmm8pcb_k.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmm8pcb_k.jl:21\\ntest set: Test Failed at /tmp/tmpmm8pcb_k.jl:32\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmm8pcb_k.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmm8pcb_k.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.contains(\"\
    [\") && string.contains(\"]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpriwxqi4o.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field contains\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n\
    \   [3] top-level scope at /tmp/tmpriwxqi4o.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n\
    \   [3] top-level scope at /tmp/tmpriwxqi4o.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:25\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:27\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n\
    \   [3] top-level scope at /tmp/tmpriwxqi4o.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n\
    \   [3] top-level scope at /tmp/tmpriwxqi4o.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:30\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:31\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpriwxqi4o.jl:14\n\
    \   [3] top-level scope at /tmp/tmpriwxqi4o.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpriwxqi4o.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpriwxqi4o.jl:14\n   [3] top-level scope at /tmp/tmpriwxqi4o.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpriwxqi4o.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpriwxqi4o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    if open\
    \ == close\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphheq7545.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmphheq7545.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:35\n\
    \  Expression: candidate(\"[]]]]]]][[[[[]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:39\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphheq7545.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:42\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphheq7545.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphheq7545.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\ntest set: Test Failed at /tmp/tmphheq7545.jl:47\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphheq7545.jl:47\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphheq7545.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4    10     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphheq7545.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for c in string\n        if c == '['\n            open_brackets += 1\n  \
    \      elseif c == ']'\n            if open_brackets == 0\n                return\
    \ false\n            else\n                open_brackets -= 1\n            end\n\
    \        end\n    end\n    return open_brackets > 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz3_updsu.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpz3_updsu.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\ntest set: Test Failed at /tmp/tmpz3_updsu.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3_updsu.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\ntest set: Test Failed at /tmp/tmpz3_updsu.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3_updsu.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\ntest set: Test Failed at /tmp/tmpz3_updsu.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz3_updsu.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\ntest set: Test Failed at /tmp/tmpz3_updsu.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz3_updsu.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\ntest set: Test Failed at /tmp/tmpz3_updsu.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3_updsu.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_updsu.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz3_updsu.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpiqjw8nns.jl:32\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpiqjw8nns.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\ntest set: Test Failed at /tmp/tmpiqjw8nns.jl:36\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpiqjw8nns.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\ntest set: Test Failed at /tmp/tmpiqjw8nns.jl:38\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpiqjw8nns.jl:38\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\ntest set: Test Failed at /tmp/tmpiqjw8nns.jl:39\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpiqjw8nns.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\ntest set: Test Failed at /tmp/tmpiqjw8nns.jl:42\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpiqjw8nns.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\ntest set: Test Failed at /tmp/tmpiqjw8nns.jl:44\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpiqjw8nns.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiqjw8nns.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi7eitown.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpi7eitown.jl:15\n\
    \   [2] top-level scope at /tmp/tmpi7eitown.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpi7eitown.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpi7eitown.jl:15\n   [2] top-level scope at /tmp/tmpi7eitown.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi7eitown.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi7eitown.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpast5dudh.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpast5dudh.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpast5dudh.jl:32\\ntest set: Test Failed at /tmp/tmpast5dudh.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpast5dudh.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpast5dudh.jl:32\\ntest set: Test Failed at /tmp/tmpast5dudh.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpast5dudh.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpast5dudh.jl:32\\ntest set: Test Failed at /tmp/tmpast5dudh.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpast5dudh.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpast5dudh.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    string = replace(string,\
    \ r\"[^\\[\\]]\", \"\")\n    for i in 1:length(string)\n        if string[i] ==\
    \ '['\n            if string[end-i+1] != ']'\n                return false\n \
    \           end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7ep576l.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: no method matching\
    \ replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(::String,\
    \ !Matched::Pair{#s67,B} where B where #s67<:AbstractChar; count) at strings/util.jl:421\n\
    \    replace(::String, !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:29\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:30\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n\
    \  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B} where\
    \ B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:33\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:34\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:35\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:36\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:37\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:38\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:39\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n\
    \  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B} where\
    \ B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:40\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:41\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ep576l.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpg7ep576l.jl:14\n   [2] top-level scope at /tmp/tmpg7ep576l.jl:42\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg7ep576l.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7ep576l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n        if close_brackets > open_brackets\n            return\
    \ false\n        end\n    end\n    return open_brackets > 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpg46r56nh.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpg46r56nh.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg46r56nh.jl:32\\ntest set: Test Failed at /tmp/tmpg46r56nh.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpg46r56nh.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg46r56nh.jl:32\\ntest set: Test Failed at /tmp/tmpg46r56nh.jl:40\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpg46r56nh.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg46r56nh.jl:32\\ntest set: Test Failed at /tmp/tmpg46r56nh.jl:45\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpg46r56nh.jl:45\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg46r56nh.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if the string contains only square brackets\n    if !(string.contains(\"[\"\
    )) || !(string.contains(\"]\"))\n        return false\n    end\n    # check if\
    \ the string contains only one square bracket\n    if string.length == 1\n   \
    \     return false\n    end\n    # check if the string contains a valid subsequence\
    \ of brackets\n    if string.contains(\"[[\") || string.contains(\"]]\")\n   \
    \     return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoeb07mds.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field contains\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:37\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:38\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpoeb07mds.jl:19\n\
    \   [3] top-level scope at /tmp/tmpoeb07mds.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpoeb07mds.jl:19\n\
    \   [3] top-level scope at /tmp/tmpoeb07mds.jl:40\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:41\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:42\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:43\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpoeb07mds.jl:19\n\
    \   [3] top-level scope at /tmp/tmpoeb07mds.jl:44\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpoeb07mds.jl:19\n\
    \   [3] top-level scope at /tmp/tmpoeb07mds.jl:45\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:46\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:47\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:49\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpoeb07mds.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpoeb07mds.jl:19\n   [3] top-level scope at /tmp/tmpoeb07mds.jl:50\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoeb07mds.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1     13     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoeb07mds.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if the string contains only square brackets\n    if !(string.contains(\"[\"\
    )) || !(string.contains(\"]\"))\n        return false\n    end\n    # check if\
    \ the string contains only one bracket\n    if string.length() == 1\n        return\
    \ false\n    end\n    # check if the string contains only one type of bracket\n\
    \    if string.contains(\"[\") && !(string.contains(\"]\"))\n        return false\n\
    \    end\n    if !(string.contains(\"[\")) && string.contains(\"]\")\n       \
    \ return false\n    end\n    # check if the string contains a valid subsequence\
    \ of brackets\n    if string.contains(\"[[\") && string.contains(\"]]\")\n   \
    \     return true\n    end\n    if string.contains(\"[[]\") && string.contains(\"\
    []]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    [[]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\") && string.contains(\"\
    []]]\")\n        return true\n    end\n    if string.contains(\"[[[\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkvec0qhf.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkvec0qhf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpashmdhwb.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpashmdhwb.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpashmdhwb.jl:32\ntest set: Test Failed at /tmp/tmpashmdhwb.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpashmdhwb.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpashmdhwb.jl:32\ntest set: Test Failed at /tmp/tmpashmdhwb.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpashmdhwb.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpashmdhwb.jl:32\ntest set: Test Failed at /tmp/tmpashmdhwb.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpashmdhwb.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpashmdhwb.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpashmdhwb.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8ai5r9p.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpq8ai5r9p.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8ai5r9p.jl:31\ntest set: Test Failed at /tmp/tmpq8ai5r9p.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq8ai5r9p.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8ai5r9p.jl:31\ntest set: Test Failed at /tmp/tmpq8ai5r9p.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq8ai5r9p.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8ai5r9p.jl:31\ntest set: Test Failed at /tmp/tmpq8ai5r9p.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq8ai5r9p.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8ai5r9p.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8ai5r9p.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # TODO: Implement\
    \ your code here\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4gbumo9.jl:22\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpn4gbumo9.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn4gbumo9.jl:21\ntest set: Test Failed at /tmp/tmpn4gbumo9.jl:26\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn4gbumo9.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn4gbumo9.jl:21\ntest set: Test Failed at /tmp/tmpn4gbumo9.jl:28\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn4gbumo9.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn4gbumo9.jl:21\ntest set: Test Failed at /tmp/tmpn4gbumo9.jl:31\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn4gbumo9.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn4gbumo9.jl:21\ntest set: Test Failed at /tmp/tmpn4gbumo9.jl:32\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn4gbumo9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn4gbumo9.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    9     5     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4gbumo9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvnnncwtw.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvnnncwtw.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvnnncwtw.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnnncwtw.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvnnncwtw.jl:15\n   [2] top-level scope at /tmp/tmpvnnncwtw.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnnncwtw.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvnnncwtw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7n6h4h0r.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp7n6h4h0r.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7n6h4h0r.jl:32\\ntest set: Test Failed at /tmp/tmp7n6h4h0r.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7n6h4h0r.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7n6h4h0r.jl:32\\ntest set: Test Failed at /tmp/tmp7n6h4h0r.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7n6h4h0r.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7n6h4h0r.jl:32\\ntest set: Test Failed at /tmp/tmp7n6h4h0r.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7n6h4h0r.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7n6h4h0r.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count > 0 ? false : true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe1vpc2pt.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpe1vpc2pt.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe1vpc2pt.jl:31\ntest set: Test Failed at /tmp/tmpe1vpc2pt.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe1vpc2pt.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe1vpc2pt.jl:31\ntest set: Test Failed at /tmp/tmpe1vpc2pt.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe1vpc2pt.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe1vpc2pt.jl:31\ntest set: Test Failed at /tmp/tmpe1vpc2pt.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe1vpc2pt.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe1vpc2pt.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1vpc2pt.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpojl69qwy.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpojl69qwy.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmpojl69qwy.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpojl69qwy.jl:15\\n   [2] top-level scope at /tmp/tmpojl69qwy.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpojl69qwy.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpojl69qwy.jl:15\\\
    n   [2] top-level scope at /tmp/tmpojl69qwy.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpojl69qwy.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    if open\
    \ > close\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprhwr_b13.jl:35\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmprhwr_b13.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:36\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprhwr_b13.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:37\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprhwr_b13.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:39\\\
    n  Expression: candidate(\"[]]]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmprhwr_b13.jl:39\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:42\\\
    n  Expression: candidate(\"[]]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprhwr_b13.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:43\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprhwr_b13.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:45\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprhwr_b13.jl:45\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\ntest set: Test Failed at /tmp/tmprhwr_b13.jl:47\\\
    n  Expression: candidate(\"]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmprhwr_b13.jl:47\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprhwr_b13.jl:33\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.contains(\"\
    []\")\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8bqeo3eu.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field contains\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n\
    \   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n\
    \   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:25\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:27\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n\
    \   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n\
    \   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:30\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:31\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmp8bqeo3eu.jl:14\n\
    \   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8bqeo3eu.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmp8bqeo3eu.jl:14\n   [3] top-level scope at /tmp/tmp8bqeo3eu.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8bqeo3eu.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8bqeo3eu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprgxuw5vl.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmprgxuw5vl.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprgxuw5vl.jl:32\\ntest set: Test Failed at /tmp/tmprgxuw5vl.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprgxuw5vl.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprgxuw5vl.jl:32\\ntest set: Test Failed at /tmp/tmprgxuw5vl.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprgxuw5vl.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprgxuw5vl.jl:32\\ntest set: Test Failed at /tmp/tmprgxuw5vl.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprgxuw5vl.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprgxuw5vl.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqt9sm86g.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpqt9sm86g.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\ntest set: Test Failed at /tmp/tmpqt9sm86g.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9sm86g.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\ntest set: Test Failed at /tmp/tmpqt9sm86g.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9sm86g.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\ntest set: Test Failed at /tmp/tmpqt9sm86g.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqt9sm86g.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\ntest set: Test Failed at /tmp/tmpqt9sm86g.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqt9sm86g.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\ntest set: Test Failed at /tmp/tmpqt9sm86g.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9sm86g.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9sm86g.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_kb5iuge.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp_kb5iuge.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_kb5iuge.jl:32\ntest set: Test Failed at /tmp/tmp_kb5iuge.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_kb5iuge.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_kb5iuge.jl:32\ntest set: Test Failed at /tmp/tmp_kb5iuge.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_kb5iuge.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_kb5iuge.jl:32\ntest set: Test Failed at /tmp/tmp_kb5iuge.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_kb5iuge.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_kb5iuge.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_kb5iuge.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe0dbnbrv.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpe0dbnbrv.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\ntest set: Test Failed at /tmp/tmpe0dbnbrv.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe0dbnbrv.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\ntest set: Test Failed at /tmp/tmpe0dbnbrv.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe0dbnbrv.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\ntest set: Test Failed at /tmp/tmpe0dbnbrv.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe0dbnbrv.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\ntest set: Test Failed at /tmp/tmpe0dbnbrv.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe0dbnbrv.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\ntest set: Test Failed at /tmp/tmpe0dbnbrv.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe0dbnbrv.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe0dbnbrv.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe0dbnbrv.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprj5wn_ca.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmprj5wn_ca.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\ntest set: Test Failed at /tmp/tmprj5wn_ca.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprj5wn_ca.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\ntest set: Test Failed at /tmp/tmprj5wn_ca.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprj5wn_ca.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\ntest set: Test Failed at /tmp/tmprj5wn_ca.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprj5wn_ca.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\ntest set: Test Failed at /tmp/tmprj5wn_ca.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprj5wn_ca.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\ntest set: Test Failed at /tmp/tmprj5wn_ca.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprj5wn_ca.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj5wn_ca.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj5wn_ca.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ s in string\n        if s == '['\n            push!(stack, s)\n        elseif\
    \ s == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbo3gu6sv.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpbo3gu6sv.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbo3gu6sv.jl:32\ntest set: Test Failed at /tmp/tmpbo3gu6sv.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbo3gu6sv.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbo3gu6sv.jl:32\ntest set: Test Failed at /tmp/tmpbo3gu6sv.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbo3gu6sv.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbo3gu6sv.jl:32\ntest set: Test Failed at /tmp/tmpbo3gu6sv.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbo3gu6sv.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbo3gu6sv.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbo3gu6sv.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if the string is only one character\n    if length(string) == 1\n        return\
    \ false\n    end\n    # check if the string is only two characters\n    if length(string)\
    \ == 2\n        if string[1] == \"[\" && string[2] == \"]\"\n            return\
    \ true\n        else\n            return false\n        end\n    end\n    # check\
    \ if the string is only three characters\n    if length(string) == 3\n       \
    \ if string[1] == \"[\" && string[2] == \"[\" && string[3] == \"]\"\n        \
    \    return true\n        else\n            return false\n        end\n    end\n\
    \    # check if the string is only four characters\n    if length(string) == 4\n\
    \        if string[1] == \"[\" && string[2] == \"[\" && string[3] == \"]\" &&\
    \ string[4] == \"]\"\n            return true\n        else\n            return\
    \ false\n        end\n    end\n    # check if the string is only five characters\n\
    \    if length(string) == 5\n        if string[1] == \"[\" && string[2] == \"\
    [\" && string[3] == \"]\" && string[4] == \"]\" && string[5] == \"]\"\n      \
    \      return true\n        else\n            return false\n        end\n    end\n\
    \    # check if the string is only six characters\n    if length(string) == 6\n\
    \        if string[1] == \"[\" && string[2] == \"[\" && string[3] == \"]\" &&\
    \ string[4] == \"]\" && string[5] == \"]\" && string[6] == \"]\"\n           \
    \ return true\n        else\n            return false\n        end\n    end\n\
    \    # check if the string is only seven characters\n    if length(string) ==\
    \ 7\n        if string[1] == \"[\" && string[2] == \"[\" && string[3] == \"]\"\
    \ && string[4] == \"]\" && string[5] == \"]\" && string[6] == \"]\" && string[7]\
    \ == \"]\"\n            return true\n        else\n            return false\n\
    \        end\n    end\n    # check if the string is only eight characters\n  \
    \ \nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpysw7o4vh.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpysw7o4vh.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpysw7o4vh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwzravi4_.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpwzravi4_.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwzravi4_.jl:32\\ntest set: Test Failed at /tmp/tmpwzravi4_.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwzravi4_.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwzravi4_.jl:32\\ntest set: Test Failed at /tmp/tmpwzravi4_.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwzravi4_.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwzravi4_.jl:32\\ntest set: Test Failed at /tmp/tmpwzravi4_.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwzravi4_.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwzravi4_.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[[\") != string.count(\"]]\")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpme4ayqza.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n   [3] top-level scope at /tmp/tmpme4ayqza.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpme4ayqza.jl:14\n   [3] top-level scope at /tmp/tmpme4ayqza.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpme4ayqza.jl:14\n   [3] top-level scope at /tmp/tmpme4ayqza.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpme4ayqza.jl:14\n\
    \   [3] top-level scope at /tmp/tmpme4ayqza.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpme4ayqza.jl:14\n   [3] top-level scope at /tmp/tmpme4ayqza.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpme4ayqza.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpme4ayqza.jl:14\n   [3] top-level scope at /tmp/tmpme4ayqza.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpme4ayqza.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpme4ayqza.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3yop0vci.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp3yop0vci.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3yop0vci.jl:32\ntest set: Test Failed at /tmp/tmp3yop0vci.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3yop0vci.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3yop0vci.jl:32\ntest set: Test Failed at /tmp/tmp3yop0vci.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3yop0vci.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3yop0vci.jl:32\ntest set: Test Failed at /tmp/tmp3yop0vci.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3yop0vci.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3yop0vci.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3yop0vci.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    string = replace(string,\
    \ r\"[^\\[\\]]\", \"\")\n    if length(string) == 0\n        return false\n  \
    \  end\n    if string[1] == \"]\"\n        return false\n    end\n    if string[end]\
    \ == \"[\"\n        return false\n    end\n    if length(string) % 2 != 0\n  \
    \      return false\n    end\n    while length(string) > 0\n        string = replace(string,\
    \ r\"\\[\\]\", \"\")\n    end\n    if length(string) == 0\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqcf0gnoh.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\\n  Closest candidates are:\\\
    n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\\\
    n    ...\\n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpqcf0gnoh.jl:14\\\
    n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:42\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:43\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:44\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:44\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:45\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:45\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:46\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:46\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:47\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:47\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:48\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:48\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:49\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:49\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:50\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:50\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:51\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\\n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:51\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:52\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == false\\n  MethodError: no method matching replace(::String, ::Regex, ::String)\\\
    n  Closest candidates are:\\n    replace(::String, !Matched::Pair{#s67,B} where\
    \ B where #s67<:AbstractChar; count) at strings/util.jl:421\\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpqcf0gnoh.jl:14\\n   [2] top-level scope at /tmp/tmpqcf0gnoh.jl:52\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqcf0gnoh.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqcf0gnoh.jl:53\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[[[['"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkodltz1z.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpkodltz1z.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkodltz1z.jl:32\ntest set: Test Failed at /tmp/tmpkodltz1z.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkodltz1z.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkodltz1z.jl:32\ntest set: Test Failed at /tmp/tmpkodltz1z.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkodltz1z.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkodltz1z.jl:32\ntest set: Test Failed at /tmp/tmpkodltz1z.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkodltz1z.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkodltz1z.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkodltz1z.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc7rhxki9.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpc7rhxki9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\ntest set: Test Failed at /tmp/tmpc7rhxki9.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7rhxki9.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\ntest set: Test Failed at /tmp/tmpc7rhxki9.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7rhxki9.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\ntest set: Test Failed at /tmp/tmpc7rhxki9.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc7rhxki9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\ntest set: Test Failed at /tmp/tmpc7rhxki9.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc7rhxki9.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\ntest set: Test Failed at /tmp/tmpc7rhxki9.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7rhxki9.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7rhxki9.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc7rhxki9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    closed_brackets = 0\n    for i in string\n        if i == '['\n         \
    \   open_brackets += 1\n        elseif i == ']'\n            closed_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > closed_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8yjmy0ag.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp8yjmy0ag.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\ntest set: Test Failed at /tmp/tmp8yjmy0ag.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8yjmy0ag.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\ntest set: Test Failed at /tmp/tmp8yjmy0ag.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8yjmy0ag.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\ntest set: Test Failed at /tmp/tmp8yjmy0ag.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8yjmy0ag.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\ntest set: Test Failed at /tmp/tmp8yjmy0ag.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8yjmy0ag.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\ntest set: Test Failed at /tmp/tmp8yjmy0ag.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8yjmy0ag.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8yjmy0ag.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yjmy0ag.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq4a9awjk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpq4a9awjk.jl:15\n\
    \   [2] top-level scope at /tmp/tmpq4a9awjk.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4a9awjk.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpq4a9awjk.jl:15\n   [2] top-level scope at /tmp/tmpq4a9awjk.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4a9awjk.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq4a9awjk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph2rxdewl.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmph2rxdewl.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2rxdewl.jl:32\ntest set: Test Failed at /tmp/tmph2rxdewl.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph2rxdewl.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2rxdewl.jl:32\ntest set: Test Failed at /tmp/tmph2rxdewl.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph2rxdewl.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2rxdewl.jl:32\ntest set: Test Failed at /tmp/tmph2rxdewl.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph2rxdewl.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2rxdewl.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph2rxdewl.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpv4m7_ne7.jl:22\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpv4m7_ne7.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv4m7_ne7.jl:21\\ntest set: Test Failed at /tmp/tmpv4m7_ne7.jl:26\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv4m7_ne7.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv4m7_ne7.jl:21\\ntest set: Test Failed at /tmp/tmpv4m7_ne7.jl:28\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv4m7_ne7.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv4m7_ne7.jl:21\\ntest set: Test Failed at /tmp/tmpv4m7_ne7.jl:31\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpv4m7_ne7.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv4m7_ne7.jl:21\\ntest set: Test Failed at /tmp/tmpv4m7_ne7.jl:32\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpv4m7_ne7.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv4m7_ne7.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmc6psywa.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpmc6psywa.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\ntest set: Test Failed at /tmp/tmpmc6psywa.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmc6psywa.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\ntest set: Test Failed at /tmp/tmpmc6psywa.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmc6psywa.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\ntest set: Test Failed at /tmp/tmpmc6psywa.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmc6psywa.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\ntest set: Test Failed at /tmp/tmpmc6psywa.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmc6psywa.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\ntest set: Test Failed at /tmp/tmpmc6psywa.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmc6psywa.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmc6psywa.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmc6psywa.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkz3nr2la.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpkz3nr2la.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkz3nr2la.jl:32\ntest set: Test Failed at /tmp/tmpkz3nr2la.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkz3nr2la.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkz3nr2la.jl:32\ntest set: Test Failed at /tmp/tmpkz3nr2la.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkz3nr2la.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkz3nr2la.jl:32\ntest set: Test Failed at /tmp/tmpkz3nr2la.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkz3nr2la.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkz3nr2la.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkz3nr2la.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp145zr5sd.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp145zr5sd.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp145zr5sd.jl:31\ntest set: Test Failed at /tmp/tmp145zr5sd.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp145zr5sd.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp145zr5sd.jl:31\ntest set: Test Failed at /tmp/tmp145zr5sd.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp145zr5sd.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp145zr5sd.jl:31\ntest set: Test Failed at /tmp/tmp145zr5sd.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp145zr5sd.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp145zr5sd.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp145zr5sd.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code goes here\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbztfg47q.jl:23\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpbztfg47q.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:24\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbztfg47q.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:25\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbztfg47q.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:27\\\
    n  Expression: candidate(\"[]]]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpbztfg47q.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:29\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbztfg47q.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:30\\\
    n  Expression: candidate(\"[]]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbztfg47q.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:33\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbztfg47q.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:34\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpbztfg47q.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\ntest set: Test Failed at /tmp/tmpbztfg47q.jl:35\\\
    n  Expression: candidate(\"]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpbztfg47q.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbztfg47q.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvodsm6me.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvodsm6me.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\ntest set: Test Failed at /tmp/tmpvodsm6me.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvodsm6me.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\ntest set: Test Failed at /tmp/tmpvodsm6me.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvodsm6me.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\ntest set: Test Failed at /tmp/tmpvodsm6me.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvodsm6me.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\ntest set: Test Failed at /tmp/tmpvodsm6me.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvodsm6me.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\ntest set: Test Failed at /tmp/tmpvodsm6me.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvodsm6me.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodsm6me.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvodsm6me.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfh60q3ru.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpfh60q3ru.jl:15\n\
    \   [2] top-level scope at /tmp/tmpfh60q3ru.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpfh60q3ru.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpfh60q3ru.jl:15\n   [2] top-level scope at /tmp/tmpfh60q3ru.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfh60q3ru.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfh60q3ru.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvfgs3o3f.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvfgs3o3f.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\ntest set: Test Failed at /tmp/tmpvfgs3o3f.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvfgs3o3f.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\ntest set: Test Failed at /tmp/tmpvfgs3o3f.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvfgs3o3f.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\ntest set: Test Failed at /tmp/tmpvfgs3o3f.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvfgs3o3f.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\ntest set: Test Failed at /tmp/tmpvfgs3o3f.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvfgs3o3f.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\ntest set: Test Failed at /tmp/tmpvfgs3o3f.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvfgs3o3f.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfgs3o3f.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfgs3o3f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwxgmq5df.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpwxgmq5df.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwxgmq5df.jl:32\\ntest set: Test Failed at /tmp/tmpwxgmq5df.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwxgmq5df.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwxgmq5df.jl:32\\ntest set: Test Failed at /tmp/tmpwxgmq5df.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwxgmq5df.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwxgmq5df.jl:32\\ntest set: Test Failed at /tmp/tmpwxgmq5df.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwxgmq5df.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwxgmq5df.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpezr5jwgw.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpezr5jwgw.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezr5jwgw.jl:32\ntest set: Test Failed at /tmp/tmpezr5jwgw.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezr5jwgw.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezr5jwgw.jl:32\ntest set: Test Failed at /tmp/tmpezr5jwgw.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezr5jwgw.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezr5jwgw.jl:32\ntest set: Test Failed at /tmp/tmpezr5jwgw.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezr5jwgw.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezr5jwgw.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpezr5jwgw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    if open\
    \ == close\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg3av_sk_.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpg3av_sk_.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:35\n\
    \  Expression: candidate(\"[]]]]]]][[[[[]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:39\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg3av_sk_.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:42\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg3av_sk_.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg3av_sk_.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\ntest set: Test Failed at /tmp/tmpg3av_sk_.jl:47\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg3av_sk_.jl:47\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3av_sk_.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4    10     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg3av_sk_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnphmeflu.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpnphmeflu.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnphmeflu.jl:32\ntest set: Test Failed at /tmp/tmpnphmeflu.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnphmeflu.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnphmeflu.jl:32\ntest set: Test Failed at /tmp/tmpnphmeflu.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnphmeflu.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnphmeflu.jl:32\ntest set: Test Failed at /tmp/tmpnphmeflu.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnphmeflu.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnphmeflu.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnphmeflu.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpojumntfl.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpojumntfl.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\ntest set: Test Failed at /tmp/tmpojumntfl.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpojumntfl.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\ntest set: Test Failed at /tmp/tmpojumntfl.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpojumntfl.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\ntest set: Test Failed at /tmp/tmpojumntfl.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpojumntfl.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\ntest set: Test Failed at /tmp/tmpojumntfl.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpojumntfl.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\ntest set: Test Failed at /tmp/tmpojumntfl.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpojumntfl.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojumntfl.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojumntfl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph3sk1vr8.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmph3sk1vr8.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph3sk1vr8.jl:32\ntest set: Test Failed at /tmp/tmph3sk1vr8.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph3sk1vr8.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph3sk1vr8.jl:32\ntest set: Test Failed at /tmp/tmph3sk1vr8.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph3sk1vr8.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph3sk1vr8.jl:32\ntest set: Test Failed at /tmp/tmph3sk1vr8.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph3sk1vr8.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph3sk1vr8.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph3sk1vr8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw2hcs1q9.jl:23\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw2hcs1q9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:24\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw2hcs1q9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:25\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw2hcs1q9.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:27\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw2hcs1q9.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:29\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw2hcs1q9.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:30\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw2hcs1q9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:33\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw2hcs1q9.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:34\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw2hcs1q9.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\ntest set: Test Failed at /tmp/tmpw2hcs1q9.jl:35\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw2hcs1q9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2hcs1q9.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     9     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2hcs1q9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    count = 0\n    for\
    \ i in string\n        if i == '['\n            count += 1\n        elseif i ==\
    \ ']'\n            count -= 1\n        end\n        if count < 0\n           \
    \ return false\n        end\n    end\n    return count == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjjmxzkdo.jl:34\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpjjmxzkdo.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjmxzkdo.jl:31\ntest set: Test Failed at /tmp/tmpjjmxzkdo.jl:35\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjjmxzkdo.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjmxzkdo.jl:31\ntest set: Test Failed at /tmp/tmpjjmxzkdo.jl:41\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjjmxzkdo.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjmxzkdo.jl:31\ntest set: Test Failed at /tmp/tmpjjmxzkdo.jl:43\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjjmxzkdo.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjmxzkdo.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjmxzkdo.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ bracket in string\n        if bracket == '['\n            push!(stack, bracket)\n\
    \        elseif bracket == ']'\n            if isempty(stack)\n              \
    \  return false\n            else\n                pop!(stack)\n            end\n\
    \        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1gn3yd2h.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp1gn3yd2h.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gn3yd2h.jl:32\ntest set: Test Failed at /tmp/tmp1gn3yd2h.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gn3yd2h.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gn3yd2h.jl:32\ntest set: Test Failed at /tmp/tmp1gn3yd2h.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gn3yd2h.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gn3yd2h.jl:32\ntest set: Test Failed at /tmp/tmp1gn3yd2h.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gn3yd2h.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gn3yd2h.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1gn3yd2h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppm06ogi0.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmppm06ogi0.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppm06ogi0.jl:32\ntest set: Test Failed at /tmp/tmppm06ogi0.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppm06ogi0.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppm06ogi0.jl:32\ntest set: Test Failed at /tmp/tmppm06ogi0.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppm06ogi0.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppm06ogi0.jl:32\ntest set: Test Failed at /tmp/tmppm06ogi0.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppm06ogi0.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppm06ogi0.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm06ogi0.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpedpib8bl.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpedpib8bl.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\ntest set: Test Failed at /tmp/tmpedpib8bl.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpedpib8bl.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\ntest set: Test Failed at /tmp/tmpedpib8bl.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpedpib8bl.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\ntest set: Test Failed at /tmp/tmpedpib8bl.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpedpib8bl.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\ntest set: Test Failed at /tmp/tmpedpib8bl.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpedpib8bl.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\ntest set: Test Failed at /tmp/tmpedpib8bl.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpedpib8bl.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpedpib8bl.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpedpib8bl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ char in string\n        if char == '['\n            push!(stack, char)\n   \
    \     elseif char == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9rtp7sb0.jl:35\\n  Expression: candidate(\"\
    [][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp9rtp7sb0.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9rtp7sb0.jl:32\\ntest set: Test Failed at /tmp/tmp9rtp7sb0.jl:36\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9rtp7sb0.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9rtp7sb0.jl:32\\ntest set: Test Failed at /tmp/tmp9rtp7sb0.jl:42\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9rtp7sb0.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9rtp7sb0.jl:32\\ntest set: Test Failed at /tmp/tmp9rtp7sb0.jl:44\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9rtp7sb0.jl:44\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9rtp7sb0.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |   10     4     14\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.count(\"\
    [\") == string.count(\"]\") && string.count(\"[[\") < string.count(\"]]\")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnwavm5i7.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field count\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n   [3] top-level scope at /tmp/tmpnwavm5i7.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpnwavm5i7.jl:14\n   [3] top-level scope at /tmp/tmpnwavm5i7.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:25\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpnwavm5i7.jl:14\n   [3] top-level scope at /tmp/tmpnwavm5i7.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmpnwavm5i7.jl:14\n\
    \   [3] top-level scope at /tmp/tmpnwavm5i7.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpnwavm5i7.jl:14\n   [3] top-level scope at /tmp/tmpnwavm5i7.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwavm5i7.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmpnwavm5i7.jl:14\n   [3] top-level scope at /tmp/tmpnwavm5i7.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwavm5i7.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnwavm5i7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbd191nnq.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"[[]]\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] is_nested(::String) at /tmp/tmpbd191nnq.jl:15\\n   [2]\
    \ top-level scope at /tmp/tmpbd191nnq.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    [][]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    []\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    [[[[]]]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:25\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    [][][[]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    []]\") == false\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    [[]][[\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:30\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbd191nnq.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    [[][]]\") == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] is_nested(::String)\
    \ at /tmp/tmpbd191nnq.jl:15\\n   [2] top-level scope at /tmp/tmpbd191nnq.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbd191nnq.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    closed_brackets = 0\n    for i in string\n        if i == '['\n         \
    \   open_brackets += 1\n        elseif i == ']'\n            closed_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > closed_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpucx3ww20.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpucx3ww20.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\ntest set: Test Failed at /tmp/tmpucx3ww20.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpucx3ww20.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\ntest set: Test Failed at /tmp/tmpucx3ww20.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpucx3ww20.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\ntest set: Test Failed at /tmp/tmpucx3ww20.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpucx3ww20.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\ntest set: Test Failed at /tmp/tmpucx3ww20.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpucx3ww20.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\ntest set: Test Failed at /tmp/tmpucx3ww20.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpucx3ww20.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpucx3ww20.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpucx3ww20.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpibx23y_8.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpibx23y_8.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\ntest set: Test Failed at /tmp/tmpibx23y_8.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibx23y_8.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\ntest set: Test Failed at /tmp/tmpibx23y_8.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibx23y_8.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\ntest set: Test Failed at /tmp/tmpibx23y_8.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpibx23y_8.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\ntest set: Test Failed at /tmp/tmpibx23y_8.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpibx23y_8.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\ntest set: Test Failed at /tmp/tmpibx23y_8.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibx23y_8.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibx23y_8.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibx23y_8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    if open_brackets > close_brackets\n        return\
    \ false\n    else\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi44nxvb8.jl:35\\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpi44nxvb8.jl:35\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:36\\\
    n  Expression: candidate(\"[][]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi44nxvb8.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:37\\\
    n  Expression: candidate(\"[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi44nxvb8.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:39\\\
    n  Expression: candidate(\"[]]]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi44nxvb8.jl:39\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:42\\\
    n  Expression: candidate(\"[]]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi44nxvb8.jl:42\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:43\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi44nxvb8.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:45\\\
    n  Expression: candidate(\"\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi44nxvb8.jl:45\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\ntest set: Test Failed at /tmp/tmpi44nxvb8.jl:47\\\
    n  Expression: candidate(\"]]]]]]]]\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi44nxvb8.jl:47\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi44nxvb8.jl:33\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     8     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if the string has an even number of brackets\n    if length(string) % 2 != 0\n\
    \        return false\n    end\n    # check if the string has a valid subsequence\
    \ of brackets\n    if string[1] == \"]\" || string[end] == \"[\"\n        return\
    \ false\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52ylzu_8.jl:34\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp52ylzu_8.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52ylzu_8.jl:32\ntest set: Test Failed at /tmp/tmp52ylzu_8.jl:35\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp52ylzu_8.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52ylzu_8.jl:32\ntest set: Test Failed at /tmp/tmp52ylzu_8.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp52ylzu_8.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52ylzu_8.jl:32\ntest set: Test Failed at /tmp/tmp52ylzu_8.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp52ylzu_8.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52ylzu_8.jl:32\ntest set: Test Failed at /tmp/tmp52ylzu_8.jl:46\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp52ylzu_8.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52ylzu_8.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    9     5     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52ylzu_8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ bracket in string\n        if bracket == '['\n            push!(stack, bracket)\n\
    \        elseif bracket == ']'\n            if length(stack) == 0\n          \
    \      return false\n            else\n                pop!(stack)\n         \
    \   end\n        end\n    end\n    return length(stack) == 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4dkgjtf.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpf4dkgjtf.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4dkgjtf.jl:32\ntest set: Test Failed at /tmp/tmpf4dkgjtf.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf4dkgjtf.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4dkgjtf.jl:32\ntest set: Test Failed at /tmp/tmpf4dkgjtf.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf4dkgjtf.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4dkgjtf.jl:32\ntest set: Test Failed at /tmp/tmpf4dkgjtf.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf4dkgjtf.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4dkgjtf.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4dkgjtf.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n    end\n    return open_brackets > close_brackets\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn40a1lbk.jl:30\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpn40a1lbk.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\ntest set: Test Failed at /tmp/tmpn40a1lbk.jl:34\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn40a1lbk.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\ntest set: Test Failed at /tmp/tmpn40a1lbk.jl:36\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn40a1lbk.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\ntest set: Test Failed at /tmp/tmpn40a1lbk.jl:37\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn40a1lbk.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\ntest set: Test Failed at /tmp/tmpn40a1lbk.jl:40\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn40a1lbk.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\ntest set: Test Failed at /tmp/tmpn40a1lbk.jl:42\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn40a1lbk.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn40a1lbk.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn40a1lbk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ is empty\n    if string == \"\"\n        return false\n    end\n    # check\
    \ if the string contains only square brackets\n    if !(string.contains(\"[\"\
    ) && string.contains(\"]\"))\n        return false\n    end\n    # check if the\
    \ string contains only one square bracket\n    if string.length == 1\n       \
    \ return false\n    end\n    # check if the string contains a valid subsequence\
    \ of brackets\n    if string.contains(\"[[\") || string.contains(\"][\")\n   \
    \     return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphrw3cez5.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  type String has no field contains\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ is_nested(::String) at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:37\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:38\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmphrw3cez5.jl:19\n\
    \   [3] top-level scope at /tmp/tmphrw3cez5.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmphrw3cez5.jl:19\n\
    \   [3] top-level scope at /tmp/tmphrw3cez5.jl:40\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:41\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:42\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:43\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmphrw3cez5.jl:19\n\
    \   [3] top-level scope at /tmp/tmphrw3cez5.jl:44\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String) at /tmp/tmphrw3cez5.jl:19\n\
    \   [3] top-level scope at /tmp/tmphrw3cez5.jl:45\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:46\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:47\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:49\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmphrw3cez5.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  type String has no field contains\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] is_nested(::String)\
    \ at /tmp/tmphrw3cez5.jl:19\n   [3] top-level scope at /tmp/tmphrw3cez5.jl:50\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphrw3cez5.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1     13     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphrw3cez5.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    return string.match(\"\
    \\[\\[.*\\]\\]\") != nothing\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid escape sequence\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpner9tr7u.jl:14\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpner9tr7u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    return\
    \ open > close\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t\
    @test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\
    \t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t\
    @test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\") ==\
    \ false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw88ecqjq.jl:30\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpw88ecqjq.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\ntest set: Test Failed at /tmp/tmpw88ecqjq.jl:34\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw88ecqjq.jl:34\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\ntest set: Test Failed at /tmp/tmpw88ecqjq.jl:36\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw88ecqjq.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\ntest set: Test Failed at /tmp/tmpw88ecqjq.jl:37\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpw88ecqjq.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\ntest set: Test Failed at /tmp/tmpw88ecqjq.jl:40\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpw88ecqjq.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\ntest set: Test Failed at /tmp/tmpw88ecqjq.jl:42\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw88ecqjq.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw88ecqjq.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    close_brackets = 0\n    for i in string\n        if i == '['\n          \
    \  open_brackets += 1\n        elseif i == ']'\n            close_brackets +=\
    \ 1\n        end\n        if close_brackets > open_brackets\n            return\
    \ false\n        end\n    end\n    if open_brackets == close_brackets\n      \
    \  return false\n    else\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmputwd6mwp.jl:37\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmputwd6mwp.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\ntest set: Test Failed at /tmp/tmputwd6mwp.jl:41\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmputwd6mwp.jl:41\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\ntest set: Test Failed at /tmp/tmputwd6mwp.jl:43\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmputwd6mwp.jl:43\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\ntest set: Test Failed at /tmp/tmputwd6mwp.jl:44\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmputwd6mwp.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\ntest set: Test Failed at /tmp/tmputwd6mwp.jl:47\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmputwd6mwp.jl:47\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\ntest set: Test Failed at /tmp/tmputwd6mwp.jl:49\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmputwd6mwp.jl:49\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmputwd6mwp.jl:36\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmputwd6mwp.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # TODO: Implement\
    \ your code here\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpntkp4_1l.jl:22\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpntkp4_1l.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpntkp4_1l.jl:21\\ntest set: Test Failed at /tmp/tmpntkp4_1l.jl:26\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpntkp4_1l.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpntkp4_1l.jl:21\\ntest set: Test Failed at /tmp/tmpntkp4_1l.jl:28\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpntkp4_1l.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpntkp4_1l.jl:21\\ntest set: Test Failed at /tmp/tmpntkp4_1l.jl:31\\\
    n  Expression: candidate(\"[[]][[\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpntkp4_1l.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpntkp4_1l.jl:21\\ntest set: Test Failed at /tmp/tmpntkp4_1l.jl:32\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpntkp4_1l.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpntkp4_1l.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    9     5     14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ c in string\n        if c == '['\n            push!(stack, c)\n        elseif\
    \ c == ']'\n            if isempty(stack) || stack[end] != '['\n             \
    \   return false\n            else\n                pop!(stack)\n            end\n\
    \        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpovtoz8nr.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpovtoz8nr.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpovtoz8nr.jl:32\ntest set: Test Failed at /tmp/tmpovtoz8nr.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpovtoz8nr.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpovtoz8nr.jl:32\ntest set: Test Failed at /tmp/tmpovtoz8nr.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpovtoz8nr.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpovtoz8nr.jl:32\ntest set: Test Failed at /tmp/tmpovtoz8nr.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpovtoz8nr.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpovtoz8nr.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpovtoz8nr.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for c in string\n        if c == '['\n            open_brackets += 1\n  \
    \      elseif c == ']'\n            if open_brackets == 0\n                return\
    \ false\n            else\n                open_brackets -= 1\n            end\n\
    \        end\n    end\n    return open_brackets > 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcz19weeg.jl:33\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpcz19weeg.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\ntest set: Test Failed at /tmp/tmpcz19weeg.jl:37\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcz19weeg.jl:37\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\ntest set: Test Failed at /tmp/tmpcz19weeg.jl:39\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcz19weeg.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\ntest set: Test Failed at /tmp/tmpcz19weeg.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcz19weeg.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\ntest set: Test Failed at /tmp/tmpcz19weeg.jl:43\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcz19weeg.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\ntest set: Test Failed at /tmp/tmpcz19weeg.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcz19weeg.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcz19weeg.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcz19weeg.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for c in string\n        if c == '['\n            open_brackets += 1\n  \
    \      elseif c == ']'\n            if open_brackets == 0\n                return\
    \ false\n            else\n                open_brackets -= 1\n            end\n\
    \        end\n    end\n    return open_brackets > 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4_wcb2l1.jl:33\\n  Expression: candidate(\"\
    [[]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp4_wcb2l1.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\ntest set: Test Failed at /tmp/tmp4_wcb2l1.jl:37\\\
    n  Expression: candidate(\"[[[[]]]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp4_wcb2l1.jl:37\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\ntest set: Test Failed at /tmp/tmp4_wcb2l1.jl:39\\\
    n  Expression: candidate(\"[][][[]]\") == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp4_wcb2l1.jl:39\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\ntest set: Test Failed at /tmp/tmp4_wcb2l1.jl:40\\\
    n  Expression: candidate(\"[[]\") == false\\n   Evaluated: true == false\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp4_wcb2l1.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\ntest set: Test Failed at /tmp/tmp4_wcb2l1.jl:43\\\
    n  Expression: candidate(\"[[][]]\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp4_wcb2l1.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\ntest set: Test Failed at /tmp/tmp4_wcb2l1.jl:45\\\
    n  Expression: candidate(\"[[[[[[[[\") == false\\n   Evaluated: true == false\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp4_wcb2l1.jl:45\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4_wcb2l1.jl:32\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    8     6     14\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpziczgko2.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpziczgko2.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\ntest set: Test Failed at /tmp/tmpziczgko2.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpziczgko2.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\ntest set: Test Failed at /tmp/tmpziczgko2.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpziczgko2.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\ntest set: Test Failed at /tmp/tmpziczgko2.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpziczgko2.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\ntest set: Test Failed at /tmp/tmpziczgko2.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpziczgko2.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\ntest set: Test Failed at /tmp/tmpziczgko2.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpziczgko2.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpziczgko2.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpziczgko2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt54emw9z.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpt54emw9z.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt54emw9z.jl:32\ntest set: Test Failed at /tmp/tmpt54emw9z.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt54emw9z.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt54emw9z.jl:32\ntest set: Test Failed at /tmp/tmpt54emw9z.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt54emw9z.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt54emw9z.jl:32\ntest set: Test Failed at /tmp/tmpt54emw9z.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt54emw9z.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt54emw9z.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt54emw9z.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5wpl7e3.jl:23\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr5wpl7e3.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:24\n\
    \  Expression: candidate(\"[][]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5wpl7e3.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:25\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5wpl7e3.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:27\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wpl7e3.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:29\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5wpl7e3.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:30\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5wpl7e3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:33\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5wpl7e3.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:34\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wpl7e3.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\ntest set: Test Failed at /tmp/tmpr5wpl7e3.jl:35\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wpl7e3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wpl7e3.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     9     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5wpl7e3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4pcvxtrp.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp4pcvxtrp.jl:15\n\
    \   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4pcvxtrp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp4pcvxtrp.jl:15\n   [2] top-level scope at /tmp/tmp4pcvxtrp.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4pcvxtrp.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4pcvxtrp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ contains only square brackets\n    if !(string.match(r\"[\\[\\]]\"))\n     \
    \   return false\n    end\n    # check if the string contains a valid subsequence\
    \ of brackets\n    if !(string.match(r\"(\\[\\])|(\\[\\[\\])|(\\[\\[\\[\\])|(\\\
    [\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\\
    [\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\\
    [\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\\
    [\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\\
    [\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\\
    [\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\\
    [\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\\
    [\\[\\[\\[\\[\\[\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\\
    [\\[\\[\\[\\[\\])|(\\[\\[\\[\\[\\[\\[\\[\\[\nusing Test\n\n@testset begin\n\n\
    candidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5z9lw8dh.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5z9lw8dh.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    string = replace(string,\
    \ \"][\", \"\")\n    string = replace(string, \"[]\", \"\")\n    return length(string)\
    \ == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk_onqpup.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: no method matching\
    \ replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(::String,\
    \ !Matched::Pair{#s67,B} where B where #s67<:AbstractChar; count) at strings/util.jl:421\n\
    \    replace(::String, !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:23\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: no method matching replace(::String,\
    \ ::String, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:24\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:25\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:27\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:28\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:29\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:30\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:33\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: no method matching replace(::String, ::String, ::String)\n\
    \  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B} where\
    \ B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:34\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:35\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_onqpup.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: no method matching replace(::String, ::String,\
    \ ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at\
    \ /tmp/tmpk_onqpup.jl:14\n   [2] top-level scope at /tmp/tmpk_onqpup.jl:36\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_onqpup.jl:22\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_onqpup.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check if the string\
    \ contains any brackets\n    if !(occursin(\"[\", string) || occursin(\"]\", string))\n\
    \        return false\n    end\n    # check if the string contains an equal number\
    \ of opening and closing brackets\n    if count(string, \"[\") != count(string,\
    \ \"]\")\n        return false\n    end\n    # check if the string contains any\
    \ nested brackets\n    if !(occursin(\"[[\", string) || occursin(\"]]\", string))\n\
    \        return false\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7rvb54a0.jl:34\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7rvb54a0.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\ntest set: Test Failed at /tmp/tmp7rvb54a0.jl:38\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rvb54a0.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\ntest set: Test Failed at /tmp/tmp7rvb54a0.jl:40\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7rvb54a0.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\ntest set: Test Failed at /tmp/tmp7rvb54a0.jl:41\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7rvb54a0.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\ntest set: Test Failed at /tmp/tmp7rvb54a0.jl:45\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rvb54a0.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\ntest set: Test Failed at /tmp/tmp7rvb54a0.jl:46\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rvb54a0.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rvb54a0.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rvb54a0.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvqlc5w76.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmpvqlc5w76.jl:15\n\
    \   [2] top-level scope at /tmp/tmpvqlc5w76.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqlc5w76.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmpvqlc5w76.jl:15\n   [2] top-level scope at /tmp/tmpvqlc5w76.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqlc5w76.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqlc5w76.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack = []\n    for\
    \ i in string\n        if i == '['\n            push!(stack, i)\n        elseif\
    \ i == ']'\n            if isempty(stack)\n                return false\n    \
    \        else\n                pop!(stack)\n            end\n        end\n   \
    \ end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3zpsly4d.jl:35\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp3zpsly4d.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zpsly4d.jl:32\ntest set: Test Failed at /tmp/tmp3zpsly4d.jl:36\n\
    \  Expression: candidate(\"[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3zpsly4d.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zpsly4d.jl:32\ntest set: Test Failed at /tmp/tmp3zpsly4d.jl:42\n\
    \  Expression: candidate(\"[[]][[\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3zpsly4d.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zpsly4d.jl:32\ntest set: Test Failed at /tmp/tmp3zpsly4d.jl:44\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3zpsly4d.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zpsly4d.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |   10     4     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3zpsly4d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for i in string\n        if i == '['\n            open_brackets += 1\n  \
    \      elseif i == ']'\n            open_brackets -= 1\n        end\n        if\
    \ open_brackets < 0\n            return false\n        end\n    end\n    return\
    \ open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\
    \t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") ==\
    \ false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\") ==\
    \ false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9h4x_8m.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpc9h4x_8m.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\ntest set: Test Failed at /tmp/tmpc9h4x_8m.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9h4x_8m.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\ntest set: Test Failed at /tmp/tmpc9h4x_8m.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9h4x_8m.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\ntest set: Test Failed at /tmp/tmpc9h4x_8m.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc9h4x_8m.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\ntest set: Test Failed at /tmp/tmpc9h4x_8m.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc9h4x_8m.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\ntest set: Test Failed at /tmp/tmpc9h4x_8m.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9h4x_8m.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9h4x_8m.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9h4x_8m.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsg6dyp9e.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpsg6dyp9e.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\ntest set: Test Failed at /tmp/tmpsg6dyp9e.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsg6dyp9e.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\ntest set: Test Failed at /tmp/tmpsg6dyp9e.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsg6dyp9e.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\ntest set: Test Failed at /tmp/tmpsg6dyp9e.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsg6dyp9e.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\ntest set: Test Failed at /tmp/tmpsg6dyp9e.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsg6dyp9e.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\ntest set: Test Failed at /tmp/tmpsg6dyp9e.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsg6dyp9e.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsg6dyp9e.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsg6dyp9e.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_bracket = 0\n\
    \    close_bracket = 0\n    for i in string\n        if i == '['\n           \
    \ open_bracket += 1\n        elseif i == ']'\n            close_bracket += 1\n\
    \        end\n    end\n    if open_bracket > close_bracket\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_0je7pb.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpf_0je7pb.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\ntest set: Test Failed at /tmp/tmpf_0je7pb.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf_0je7pb.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\ntest set: Test Failed at /tmp/tmpf_0je7pb.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf_0je7pb.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\ntest set: Test Failed at /tmp/tmpf_0je7pb.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf_0je7pb.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\ntest set: Test Failed at /tmp/tmpf_0je7pb.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf_0je7pb.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\ntest set: Test Failed at /tmp/tmpf_0je7pb.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf_0je7pb.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf_0je7pb.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_0je7pb.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbghrvmdr.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpbghrvmdr.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\ntest set: Test Failed at /tmp/tmpbghrvmdr.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbghrvmdr.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\ntest set: Test Failed at /tmp/tmpbghrvmdr.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbghrvmdr.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\ntest set: Test Failed at /tmp/tmpbghrvmdr.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbghrvmdr.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\ntest set: Test Failed at /tmp/tmpbghrvmdr.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbghrvmdr.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\ntest set: Test Failed at /tmp/tmpbghrvmdr.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbghrvmdr.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbghrvmdr.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbghrvmdr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdynnar5b.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpdynnar5b.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\ntest set: Test Failed at /tmp/tmpdynnar5b.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdynnar5b.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\ntest set: Test Failed at /tmp/tmpdynnar5b.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdynnar5b.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\ntest set: Test Failed at /tmp/tmpdynnar5b.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdynnar5b.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\ntest set: Test Failed at /tmp/tmpdynnar5b.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdynnar5b.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\ntest set: Test Failed at /tmp/tmpdynnar5b.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdynnar5b.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdynnar5b.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdynnar5b.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9yi9h3gh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"[[]]\") == true\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    [][]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    []\") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    [[[[]]]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    []]]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    [][][[]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    [[]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    []]\") == false\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    [[]][[\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    [[][]]\") == true\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    \") == false\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String) at /tmp/tmp9yi9h3gh.jl:15\n\
    \   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    [[[[[[[[\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yi9h3gh.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    ]]]]]]]]\") == false\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] is_nested(::String)\
    \ at /tmp/tmp9yi9h3gh.jl:15\n   [2] top-level scope at /tmp/tmp9yi9h3gh.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yi9h3gh.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |    14     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 14 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yi9h3gh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open = 0\n    close\
    \ = 0\n    for i in string\n        if i == '['\n            open += 1\n     \
    \   elseif i == ']'\n            close += 1\n        end\n    end\n    if open\
    \ == close\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzha5oca5.jl:34\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpzha5oca5.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:35\n\
    \  Expression: candidate(\"[]]]]]]][[[[[]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:38\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:39\n\
    \  Expression: candidate(\"[]]]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:39\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:40\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:41\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzha5oca5.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:42\n\
    \  Expression: candidate(\"[]]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzha5oca5.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:44\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzha5oca5.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:46\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:46\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\ntest set: Test Failed at /tmp/tmpzha5oca5.jl:47\n\
    \  Expression: candidate(\"]]]]]]]]\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzha5oca5.jl:47\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzha5oca5.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4    10     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzha5oca5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    is_nested('[[]]') \u279E True\n    is_nested('[]]]]]]][[[[[]')\
    \ \u279E False\n    is_nested('[][]') \u279E False\n    is_nested('[]') \u279E\
    \ False\n    is_nested('[[][]]') \u279E True\n    is_nested('[[]][[') \u279E True\n\
    \    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets = 0\n\
    \    for char in string\n        if char == '['\n            open_brackets +=\
    \ 1\n        elseif char == ']'\n            open_brackets -= 1\n        end\n\
    \        if open_brackets < 0\n            return false\n        end\n    end\n\
    \    return open_brackets > 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplkhp9laf.jl:32\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmplkhp9laf.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\ntest set: Test Failed at /tmp/tmplkhp9laf.jl:36\n\
    \  Expression: candidate(\"[[[[]]]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplkhp9laf.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\ntest set: Test Failed at /tmp/tmplkhp9laf.jl:38\n\
    \  Expression: candidate(\"[][][[]]\") == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplkhp9laf.jl:38\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\ntest set: Test Failed at /tmp/tmplkhp9laf.jl:39\n\
    \  Expression: candidate(\"[[]\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplkhp9laf.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\ntest set: Test Failed at /tmp/tmplkhp9laf.jl:42\n\
    \  Expression: candidate(\"[[][]]\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplkhp9laf.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\ntest set: Test Failed at /tmp/tmplkhp9laf.jl:44\n\
    \  Expression: candidate(\"[[[[[[[[\") == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplkhp9laf.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplkhp9laf.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    8     6     14\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplkhp9laf.jl:29\n"
  exit_code: 1
  status: SyntaxError

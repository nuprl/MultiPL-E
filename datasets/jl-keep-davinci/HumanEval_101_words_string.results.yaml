name: HumanEval_101_words_string
language: julia
results:
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9sd1ypdg.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9sd1ypdg.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9sd1ypdg.jl:16\ntest set: Test Failed at /tmp/tmp9sd1ypdg.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp9sd1ypdg.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9sd1ypdg.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sd1ypdg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvhbh62zf.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvhbh62zf.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvhbh62zf.jl:16\ntest set: Test Failed at /tmp/tmpvhbh62zf.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpvhbh62zf.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvhbh62zf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvhbh62zf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppc2_0fqc.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmppc2_0fqc.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppc2_0fqc.jl:16\ntest set: Test Failed at /tmp/tmppc2_0fqc.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmppc2_0fqc.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppc2_0fqc.jl:16\ntest set: Test Failed at /tmp/tmppc2_0fqc.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmppc2_0fqc.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppc2_0fqc.jl:16\ntest set: Test Failed at /tmp/tmppc2_0fqc.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmppc2_0fqc.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppc2_0fqc.jl:16\ntest set: Test Failed at /tmp/tmppc2_0fqc.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppc2_0fqc.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppc2_0fqc.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppc2_0fqc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpj5291f_9.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpj5291f_9.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpj5291f_9.jl:16\\ntest set: Test Failed at /tmp/tmpj5291f_9.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpj5291f_9.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpj5291f_9.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpic1i2_ut.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpic1i2_ut.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpic1i2_ut.jl:16\\ntest set: Test Failed at /tmp/tmpic1i2_ut.jl:21\\\
    n  Expression: candidate(\"\") == '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0ifuv6gt.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0ifuv6gt.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0ifuv6gt.jl:16\\ntest set: Test Failed at /tmp/tmp0ifuv6gt.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0ifuv6gt.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0ifuv6gt.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbm4iaa5w.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpbm4iaa5w.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbm4iaa5w.jl:16\ntest set: Test Failed at /tmp/tmpbm4iaa5w.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpbm4iaa5w.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbm4iaa5w.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbm4iaa5w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt0lynonw.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpt0lynonw.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt0lynonw.jl:16\ntest set: Test Failed at /tmp/tmpt0lynonw.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpt0lynonw.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt0lynonw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt0lynonw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiwd5jffb.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpiwd5jffb.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwd5jffb.jl:16\ntest set: Test Failed at /tmp/tmpiwd5jffb.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpiwd5jffb.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwd5jffb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwd5jffb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmlj5tqx1.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpmlj5tqx1.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlj5tqx1.jl:16\ntest set: Test Failed at /tmp/tmpmlj5tqx1.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpmlj5tqx1.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlj5tqx1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlj5tqx1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb101ip7y.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb101ip7y.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb101ip7y.jl:16\\ntest set: Test Failed at /tmp/tmpb101ip7y.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb101ip7y.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb101ip7y.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps0j3pua2.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmps0j3pua2.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps0j3pua2.jl:16\\ntest set: Test Failed at /tmp/tmps0j3pua2.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi\", \"my name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmps0j3pua2.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps0j3pua2.jl:16\\ntest set: Test Failed at /tmp/tmps0j3pua2.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six,\"] == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmps0j3pua2.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps0j3pua2.jl:16\\ntest set: Test Failed at /tmp/tmps0j3pua2.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmps0j3pua2.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps0j3pua2.jl:16\\ntest set: Test Failed at /tmp/tmps0j3pua2.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed     \", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmps0j3pua2.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps0j3pua2.jl:16\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wldp01u.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9wldp01u.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wldp01u.jl:16\ntest set: Test Failed at /tmp/tmp9wldp01u.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9wldp01u.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wldp01u.jl:16\ntest set: Test Failed at /tmp/tmp9wldp01u.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9wldp01u.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wldp01u.jl:16\ntest set: Test Failed at /tmp/tmp9wldp01u.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp9wldp01u.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wldp01u.jl:16\ntest set: Test Failed at /tmp/tmp9wldp01u.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wldp01u.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wldp01u.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wldp01u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp28zz8q80.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp28zz8q80.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp28zz8q80.jl:16\\ntest set: Test Failed at /tmp/tmp28zz8q80.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp28zz8q80.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp28zz8q80.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyyhermi8.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpyyhermi8.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyyhermi8.jl:16\ntest set: Test Failed at /tmp/tmpyyhermi8.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpyyhermi8.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyyhermi8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyyhermi8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptthfibo0.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmptthfibo0.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptthfibo0.jl:16\ntest set: Test Failed at /tmp/tmptthfibo0.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmptthfibo0.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptthfibo0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptthfibo0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqphulldk.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqphulldk.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqphulldk.jl:16\ntest set: Test Failed at /tmp/tmpqphulldk.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqphulldk.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqphulldk.jl:16\ntest set: Test Failed at /tmp/tmpqphulldk.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpqphulldk.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqphulldk.jl:16\ntest set: Test Failed at /tmp/tmpqphulldk.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpqphulldk.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqphulldk.jl:16\ntest set: Test Failed at /tmp/tmpqphulldk.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqphulldk.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqphulldk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqphulldk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9zwj7fvi.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9zwj7fvi.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zwj7fvi.jl:16\ntest set: Test Failed at /tmp/tmp9zwj7fvi.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp9zwj7fvi.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zwj7fvi.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zwj7fvi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcww0tevb.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpcww0tevb.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcww0tevb.jl:16\ntest set: Test Failed at /tmp/tmpcww0tevb.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpcww0tevb.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcww0tevb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcww0tevb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy_9y2u5n.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpy_9y2u5n.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy_9y2u5n.jl:16\ntest set: Test Failed at /tmp/tmpy_9y2u5n.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpy_9y2u5n.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy_9y2u5n.jl:16\ntest set: Test Failed at /tmp/tmpy_9y2u5n.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpy_9y2u5n.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy_9y2u5n.jl:16\ntest set: Test Failed at /tmp/tmpy_9y2u5n.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpy_9y2u5n.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy_9y2u5n.jl:16\ntest set: Test Failed at /tmp/tmpy_9y2u5n.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy_9y2u5n.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy_9y2u5n.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy_9y2u5n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqifk8mjf.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqifk8mjf.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqifk8mjf.jl:16\ntest set: Test Failed at /tmp/tmpqifk8mjf.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqifk8mjf.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqifk8mjf.jl:16\ntest set: Test Failed at /tmp/tmpqifk8mjf.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpqifk8mjf.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqifk8mjf.jl:16\ntest set: Test Failed at /tmp/tmpqifk8mjf.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpqifk8mjf.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqifk8mjf.jl:16\ntest set: Test Failed at /tmp/tmpqifk8mjf.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqifk8mjf.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqifk8mjf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqifk8mjf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmmn7fcbm.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmmn7fcbm.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmmn7fcbm.jl:16\\ntest set: Test Failed at /tmp/tmpmmn7fcbm.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmmn7fcbm.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmmn7fcbm.jl:16\\ntest set: Test Failed at /tmp/tmpmmn7fcbm.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpmmn7fcbm.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmmn7fcbm.jl:16\\ntest set: Test Failed at /tmp/tmpmmn7fcbm.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpmmn7fcbm.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmmn7fcbm.jl:16\\ntest set: Test Failed at /tmp/tmpmmn7fcbm.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmmn7fcbm.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmmn7fcbm.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp06gmw1va.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp06gmw1va.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp06gmw1va.jl:16\ntest set: Test Failed at /tmp/tmp06gmw1va.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp06gmw1va.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp06gmw1va.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06gmw1va.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpe19ljjnq.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpe19ljjnq.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\ntest set: Test Failed at /tmp/tmpe19ljjnq.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\"\
    , \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpe19ljjnq.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\ntest set: Test Failed at /tmp/tmpe19ljjnq.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpe19ljjnq.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\ntest set: Test Failed at /tmp/tmpe19ljjnq.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpe19ljjnq.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\ntest set: Test Failed at /tmp/tmpe19ljjnq.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpe19ljjnq.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\ntest set: Test Failed at /tmp/tmpe19ljjnq.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpe19ljjnq.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe19ljjnq.jl:16\\nTest Summary: | Fail  Total\\\
    ntest set      |    6      6\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjnl2n595.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpjnl2n595.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnl2n595.jl:16\ntest set: Test Failed at /tmp/tmpjnl2n595.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpjnl2n595.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnl2n595.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnl2n595.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg8_34zjy.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpg8_34zjy.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8_34zjy.jl:16\ntest set: Test Failed at /tmp/tmpg8_34zjy.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpg8_34zjy.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8_34zjy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8_34zjy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfmtc_iqs.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpfmtc_iqs.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfmtc_iqs.jl:16\ntest set: Test Failed at /tmp/tmpfmtc_iqs.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpfmtc_iqs.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfmtc_iqs.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfmtc_iqs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptetxraqk.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptetxraqk.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptetxraqk.jl:16\\ntest set: Test Failed at /tmp/tmptetxraqk.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptetxraqk.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptetxraqk.jl:16\\ntest set: Test Failed at /tmp/tmptetxraqk.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmptetxraqk.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptetxraqk.jl:16\\ntest set: Test Failed at /tmp/tmptetxraqk.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmptetxraqk.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptetxraqk.jl:16\\ntest set: Test Failed at /tmp/tmptetxraqk.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptetxraqk.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptetxraqk.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcw8bgmha.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpcw8bgmha.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcw8bgmha.jl:16\ntest set: Test Failed at /tmp/tmpcw8bgmha.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpcw8bgmha.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcw8bgmha.jl:16\ntest set: Test Failed at /tmp/tmpcw8bgmha.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpcw8bgmha.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcw8bgmha.jl:16\ntest set: Test Failed at /tmp/tmpcw8bgmha.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpcw8bgmha.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcw8bgmha.jl:16\ntest set: Test Failed at /tmp/tmpcw8bgmha.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcw8bgmha.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcw8bgmha.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcw8bgmha.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprrk78yi3.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmprrk78yi3.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprrk78yi3.jl:16\\ntest set: Test Failed at /tmp/tmprrk78yi3.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmprrk78yi3.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprrk78yi3.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukeiig1m.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpukeiig1m.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukeiig1m.jl:16\ntest set: Test Failed at /tmp/tmpukeiig1m.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpukeiig1m.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukeiig1m.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukeiig1m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppf3zbnio.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmppf3zbnio.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppf3zbnio.jl:16\ntest set: Test Failed at /tmp/tmppf3zbnio.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmppf3zbnio.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppf3zbnio.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppf3zbnio.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv9fk6afc.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpv9fk6afc.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv9fk6afc.jl:16\ntest set: Test Failed at /tmp/tmpv9fk6afc.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpv9fk6afc.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv9fk6afc.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9fk6afc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfky9fdcp.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpfky9fdcp.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfky9fdcp.jl:16\ntest set: Test Failed at /tmp/tmpfky9fdcp.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpfky9fdcp.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfky9fdcp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfky9fdcp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_j1h5l88.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp_j1h5l88.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_j1h5l88.jl:16\ntest set: Test Failed at /tmp/tmp_j1h5l88.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp_j1h5l88.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_j1h5l88.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_j1h5l88.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplyq6jp4k.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmplyq6jp4k.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplyq6jp4k.jl:16\\ntest set: Test Failed at /tmp/tmplyq6jp4k.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmplyq6jp4k.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplyq6jp4k.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf0wci7yk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpf0wci7yk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf0wci7yk.jl:16\ntest set: Test Failed at /tmp/tmpf0wci7yk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpf0wci7yk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf0wci7yk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf0wci7yk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5r1jn1i.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpo5r1jn1i.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5r1jn1i.jl:16\ntest set: Test Failed at /tmp/tmpo5r1jn1i.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpo5r1jn1i.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5r1jn1i.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5r1jn1i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmhx_98q7.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmhx_98q7.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmhx_98q7.jl:16\\ntest set: Test Failed at /tmp/tmpmhx_98q7.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmhx_98q7.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmhx_98q7.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjlgtgtgf.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjlgtgtgf.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjlgtgtgf.jl:16\\ntest set: Test Failed at /tmp/tmpjlgtgtgf.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjlgtgtgf.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjlgtgtgf.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvrqfrtz1.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvrqfrtz1.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrqfrtz1.jl:16\ntest set: Test Failed at /tmp/tmpvrqfrtz1.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpvrqfrtz1.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrqfrtz1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrqfrtz1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps2on2s41.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmps2on2s41.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2on2s41.jl:16\ntest set: Test Failed at /tmp/tmps2on2s41.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmps2on2s41.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2on2s41.jl:16\ntest set: Test Failed at /tmp/tmps2on2s41.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmps2on2s41.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2on2s41.jl:16\ntest set: Test Failed at /tmp/tmps2on2s41.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmps2on2s41.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2on2s41.jl:16\ntest set: Test Failed at /tmp/tmps2on2s41.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps2on2s41.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps2on2s41.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2on2s41.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw03iu_1n.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw03iu_1n.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw03iu_1n.jl:16\\ntest set: Test Failed at /tmp/tmpw03iu_1n.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw03iu_1n.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw03iu_1n.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuhl_656_.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpuhl_656_.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\ntest set: Test Failed at /tmp/tmpuhl_656_.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpuhl_656_.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\ntest set: Test Failed at /tmp/tmpuhl_656_.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuhl_656_.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\ntest set: Test Failed at /tmp/tmpuhl_656_.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuhl_656_.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\ntest set: Test Failed at /tmp/tmpuhl_656_.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpuhl_656_.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\ntest set: Test Failed at /tmp/tmpuhl_656_.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpuhl_656_.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuhl_656_.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuhl_656_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3zqcxshq.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \" my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmp3zqcxshq.jl:17\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\ntest set: Test Failed at /tmp/tmp3zqcxshq.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \" two\"\
    , \" three\", \" four\", \" five\", \" six\"] == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp3zqcxshq.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\ntest set: Test Failed at /tmp/tmp3zqcxshq.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \" my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3zqcxshq.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\ntest set: Test Failed at /tmp/tmp3zqcxshq.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \" two\", \" three\", \" four\", \" five\", \" six\", \"\"] == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp3zqcxshq.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\ntest set: Test Failed at /tmp/tmp3zqcxshq.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp3zqcxshq.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\ntest set: Test Failed at /tmp/tmp3zqcxshq.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed     \", \" gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3zqcxshq.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3zqcxshq.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3zqcxshq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzc_rh0fw.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzc_rh0fw.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzc_rh0fw.jl:16\\ntest set: Test Failed at /tmp/tmpzc_rh0fw.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzc_rh0fw.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzc_rh0fw.jl:16\\ntest set: Test Failed at /tmp/tmpzc_rh0fw.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpzc_rh0fw.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzc_rh0fw.jl:16\\ntest set: Test Failed at /tmp/tmpzc_rh0fw.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpzc_rh0fw.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzc_rh0fw.jl:16\\ntest set: Test Failed at /tmp/tmpzc_rh0fw.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzc_rh0fw.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzc_rh0fw.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsq7d4071.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpsq7d4071.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsq7d4071.jl:16\ntest set: Test Failed at /tmp/tmpsq7d4071.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpsq7d4071.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsq7d4071.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsq7d4071.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc_mf1k8q.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc_mf1k8q.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\ntest set: Test Failed at /tmp/tmpc_mf1k8q.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpc_mf1k8q.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\ntest set: Test Failed at /tmp/tmpc_mf1k8q.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc_mf1k8q.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\ntest set: Test Failed at /tmp/tmpc_mf1k8q.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc_mf1k8q.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\ntest set: Test Failed at /tmp/tmpc_mf1k8q.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpc_mf1k8q.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\ntest set: Test Failed at /tmp/tmpc_mf1k8q.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc_mf1k8q.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc_mf1k8q.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc_mf1k8q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5ip_g4ls.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp5ip_g4ls.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5ip_g4ls.jl:16\ntest set: Test Failed at /tmp/tmp5ip_g4ls.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp5ip_g4ls.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5ip_g4ls.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ip_g4ls.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5aj3cf_b.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp5aj3cf_b.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5aj3cf_b.jl:16\ntest set: Test Failed at /tmp/tmp5aj3cf_b.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp5aj3cf_b.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5aj3cf_b.jl:16\ntest set: Test Failed at /tmp/tmp5aj3cf_b.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp5aj3cf_b.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5aj3cf_b.jl:16\ntest set: Test Failed at /tmp/tmp5aj3cf_b.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp5aj3cf_b.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5aj3cf_b.jl:16\ntest set: Test Failed at /tmp/tmp5aj3cf_b.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5aj3cf_b.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5aj3cf_b.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5aj3cf_b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeb3dw1uk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpeb3dw1uk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeb3dw1uk.jl:16\ntest set: Test Failed at /tmp/tmpeb3dw1uk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpeb3dw1uk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeb3dw1uk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeb3dw1uk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqrnc9df5.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqrnc9df5.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqrnc9df5.jl:16\ntest set: Test Failed at /tmp/tmpqrnc9df5.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpqrnc9df5.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqrnc9df5.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqrnc9df5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqlal5p27.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqlal5p27.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqlal5p27.jl:16\ntest set: Test Failed at /tmp/tmpqlal5p27.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpqlal5p27.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqlal5p27.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqlal5p27.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjytbq6zj.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpjytbq6zj.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjytbq6zj.jl:16\ntest set: Test Failed at /tmp/tmpjytbq6zj.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpjytbq6zj.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjytbq6zj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjytbq6zj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm56zv_1g.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpm56zv_1g.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm56zv_1g.jl:16\ntest set: Test Failed at /tmp/tmpm56zv_1g.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpm56zv_1g.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm56zv_1g.jl:16\ntest set: Test Failed at /tmp/tmpm56zv_1g.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpm56zv_1g.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm56zv_1g.jl:16\ntest set: Test Failed at /tmp/tmpm56zv_1g.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpm56zv_1g.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm56zv_1g.jl:16\ntest set: Test Failed at /tmp/tmpm56zv_1g.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm56zv_1g.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm56zv_1g.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm56zv_1g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxoptfvq1.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxoptfvq1.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxoptfvq1.jl:16\\ntest set: Test Failed at /tmp/tmpxoptfvq1.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxoptfvq1.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxoptfvq1.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdwl4ggwy.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpdwl4ggwy.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdwl4ggwy.jl:16\ntest set: Test Failed at /tmp/tmpdwl4ggwy.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpdwl4ggwy.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdwl4ggwy.jl:16\ntest set: Test Failed at /tmp/tmpdwl4ggwy.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpdwl4ggwy.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdwl4ggwy.jl:16\ntest set: Test Failed at /tmp/tmpdwl4ggwy.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpdwl4ggwy.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdwl4ggwy.jl:16\ntest set: Test Failed at /tmp/tmpdwl4ggwy.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdwl4ggwy.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdwl4ggwy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwl4ggwy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplnwe0zij.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmplnwe0zij.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplnwe0zij.jl:16\ntest set: Test Failed at /tmp/tmplnwe0zij.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmplnwe0zij.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplnwe0zij.jl:16\ntest set: Test Failed at /tmp/tmplnwe0zij.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmplnwe0zij.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplnwe0zij.jl:16\ntest set: Test Failed at /tmp/tmplnwe0zij.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmplnwe0zij.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplnwe0zij.jl:16\ntest set: Test Failed at /tmp/tmplnwe0zij.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplnwe0zij.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplnwe0zij.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplnwe0zij.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp45u0ab3w.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp45u0ab3w.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp45u0ab3w.jl:16\\ntest set: Test Failed at /tmp/tmp45u0ab3w.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp45u0ab3w.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp45u0ab3w.jl:16\\ntest set: Test Failed at /tmp/tmp45u0ab3w.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp45u0ab3w.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp45u0ab3w.jl:16\\ntest set: Test Failed at /tmp/tmp45u0ab3w.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp45u0ab3w.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp45u0ab3w.jl:16\\ntest set: Test Failed at /tmp/tmp45u0ab3w.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp45u0ab3w.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp45u0ab3w.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp85axkbhm.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp85axkbhm.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85axkbhm.jl:16\ntest set: Test Failed at /tmp/tmp85axkbhm.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp85axkbhm.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85axkbhm.jl:16\ntest set: Test Failed at /tmp/tmp85axkbhm.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp85axkbhm.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85axkbhm.jl:16\ntest set: Test Failed at /tmp/tmp85axkbhm.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp85axkbhm.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85axkbhm.jl:16\ntest set: Test Failed at /tmp/tmp85axkbhm.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp85axkbhm.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85axkbhm.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85axkbhm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpshtklg4i.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpshtklg4i.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshtklg4i.jl:16\ntest set: Test Failed at /tmp/tmpshtklg4i.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpshtklg4i.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshtklg4i.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpshtklg4i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"\\s|,\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw6pvu_0c.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw6pvu_0c.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\ntest set: Test Failed at /tmp/tmpw6pvu_0c.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\"\
    , \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpw6pvu_0c.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\ntest set: Test Failed at /tmp/tmpw6pvu_0c.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpw6pvu_0c.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\ntest set: Test Failed at /tmp/tmpw6pvu_0c.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpw6pvu_0c.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\ntest set: Test Failed at /tmp/tmpw6pvu_0c.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw6pvu_0c.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\ntest set: Test Failed at /tmp/tmpw6pvu_0c.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw6pvu_0c.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6pvu_0c.jl:16\\nTest Summary: | Fail  Total\\\
    ntest set      |    6      6\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkenj3ed2.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpkenj3ed2.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkenj3ed2.jl:16\ntest set: Test Failed at /tmp/tmpkenj3ed2.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpkenj3ed2.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkenj3ed2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkenj3ed2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsmw5ibly.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpsmw5ibly.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmw5ibly.jl:16\ntest set: Test Failed at /tmp/tmpsmw5ibly.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpsmw5ibly.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmw5ibly.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsmw5ibly.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqa46g1c_.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqa46g1c_.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqa46g1c_.jl:16\ntest set: Test Failed at /tmp/tmpqa46g1c_.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpqa46g1c_.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqa46g1c_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqa46g1c_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd0y1fxkj.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd0y1fxkj.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd0y1fxkj.jl:16\\ntest set: Test Failed at /tmp/tmpd0y1fxkj.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd0y1fxkj.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd0y1fxkj.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_e_mvhu.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpj_e_mvhu.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_e_mvhu.jl:16\ntest set: Test Failed at /tmp/tmpj_e_mvhu.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpj_e_mvhu.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_e_mvhu.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_e_mvhu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjcbhyx9r.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjcbhyx9r.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjcbhyx9r.jl:16\\ntest set: Test Failed at /tmp/tmpjcbhyx9r.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjcbhyx9r.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjcbhyx9r.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk4y_kqa8.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpk4y_kqa8.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk4y_kqa8.jl:16\ntest set: Test Failed at /tmp/tmpk4y_kqa8.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpk4y_kqa8.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk4y_kqa8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk4y_kqa8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0pq22ims.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0pq22ims.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0pq22ims.jl:16\\ntest set: Test Failed at /tmp/tmp0pq22ims.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0pq22ims.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0pq22ims.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph3mfm6dd.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3mfm6dd.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3mfm6dd.jl:16\\ntest set: Test Failed at /tmp/tmph3mfm6dd.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3mfm6dd.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3mfm6dd.jl:16\\ntest set: Test Failed at /tmp/tmph3mfm6dd.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmph3mfm6dd.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3mfm6dd.jl:16\\ntest set: Test Failed at /tmp/tmph3mfm6dd.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmph3mfm6dd.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3mfm6dd.jl:16\\ntest set: Test Failed at /tmp/tmph3mfm6dd.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmph3mfm6dd.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3mfm6dd.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnfsg1rf3.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnfsg1rf3.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\ntest set: Test Failed at /tmp/tmpnfsg1rf3.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpnfsg1rf3.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\ntest set: Test Failed at /tmp/tmpnfsg1rf3.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnfsg1rf3.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\ntest set: Test Failed at /tmp/tmpnfsg1rf3.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnfsg1rf3.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\ntest set: Test Failed at /tmp/tmpnfsg1rf3.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpnfsg1rf3.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\ntest set: Test Failed at /tmp/tmpnfsg1rf3.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnfsg1rf3.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnfsg1rf3.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnfsg1rf3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2u2w1rjx.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2u2w1rjx.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2u2w1rjx.jl:16\\ntest set: Test Failed at /tmp/tmp2u2w1rjx.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2u2w1rjx.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2u2w1rjx.jl:16\\ntest set: Test Failed at /tmp/tmp2u2w1rjx.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp2u2w1rjx.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2u2w1rjx.jl:16\\ntest set: Test Failed at /tmp/tmp2u2w1rjx.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp2u2w1rjx.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2u2w1rjx.jl:16\\ntest set: Test Failed at /tmp/tmp2u2w1rjx.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2u2w1rjx.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2u2w1rjx.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiqx28b5_.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpiqx28b5_.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiqx28b5_.jl:16\ntest set: Test Failed at /tmp/tmpiqx28b5_.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpiqx28b5_.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiqx28b5_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqx28b5_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeq5eb4uq.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeq5eb4uq.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeq5eb4uq.jl:16\\ntest set: Test Failed at /tmp/tmpeq5eb4uq.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeq5eb4uq.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeq5eb4uq.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbe7ybck3.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbe7ybck3.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbe7ybck3.jl:16\\ntest set: Test Failed at /tmp/tmpbe7ybck3.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbe7ybck3.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbe7ybck3.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_moe385s.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp_moe385s.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\ntest set: Test Failed at /tmp/tmp_moe385s.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_moe385s.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\ntest set: Test Failed at /tmp/tmp_moe385s.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_moe385s.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\ntest set: Test Failed at /tmp/tmp_moe385s.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_moe385s.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\ntest set: Test Failed at /tmp/tmp_moe385s.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp_moe385s.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\ntest set: Test Failed at /tmp/tmp_moe385s.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp_moe385s.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_moe385s.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_moe385s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkc7qa4o_.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpkc7qa4o_.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc7qa4o_.jl:16\ntest set: Test Failed at /tmp/tmpkc7qa4o_.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpkc7qa4o_.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc7qa4o_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkc7qa4o_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq9cn0uyk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpq9cn0uyk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq9cn0uyk.jl:16\ntest set: Test Failed at /tmp/tmpq9cn0uyk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpq9cn0uyk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq9cn0uyk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq9cn0uyk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpde8qmfle.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpde8qmfle.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpde8qmfle.jl:16\ntest set: Test Failed at /tmp/tmpde8qmfle.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpde8qmfle.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpde8qmfle.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpde8qmfle.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplsvi_20d.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmplsvi_20d.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\ntest set: Test Failed at /tmp/tmplsvi_20d.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\"\
    , \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmplsvi_20d.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\ntest set: Test Failed at /tmp/tmplsvi_20d.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmplsvi_20d.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\ntest set: Test Failed at /tmp/tmplsvi_20d.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmplsvi_20d.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\ntest set: Test Failed at /tmp/tmplsvi_20d.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmplsvi_20d.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\ntest set: Test Failed at /tmp/tmplsvi_20d.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmplsvi_20d.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplsvi_20d.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm6wuhnu2.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpm6wuhnu2.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm6wuhnu2.jl:16\ntest set: Test Failed at /tmp/tmpm6wuhnu2.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpm6wuhnu2.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm6wuhnu2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6wuhnu2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuy1qenxs.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpuy1qenxs.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuy1qenxs.jl:16\ntest set: Test Failed at /tmp/tmpuy1qenxs.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpuy1qenxs.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuy1qenxs.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuy1qenxs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9kfk0kzg.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9kfk0kzg.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9kfk0kzg.jl:16\\ntest set: Test Failed at /tmp/tmp9kfk0kzg.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9kfk0kzg.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9kfk0kzg.jl:16\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpf0szfntk.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf0szfntk.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf0szfntk.jl:16\\ntest set: Test Failed at /tmp/tmpf0szfntk.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf0szfntk.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf0szfntk.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgknxkpsz.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpgknxkpsz.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgknxkpsz.jl:16\ntest set: Test Failed at /tmp/tmpgknxkpsz.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpgknxkpsz.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgknxkpsz.jl:16\ntest set: Test Failed at /tmp/tmpgknxkpsz.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgknxkpsz.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgknxkpsz.jl:16\ntest set: Test Failed at /tmp/tmpgknxkpsz.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgknxkpsz.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgknxkpsz.jl:16\ntest set: Test Failed at /tmp/tmpgknxkpsz.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgknxkpsz.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgknxkpsz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgknxkpsz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdnb4f8gf.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdnb4f8gf.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdnb4f8gf.jl:16\\ntest set: Test Failed at /tmp/tmpdnb4f8gf.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdnb4f8gf.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdnb4f8gf.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnygm426a.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnygm426a.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnygm426a.jl:16\ntest set: Test Failed at /tmp/tmpnygm426a.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpnygm426a.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnygm426a.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnygm426a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8x4ycisp.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp8x4ycisp.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8x4ycisp.jl:16\ntest set: Test Failed at /tmp/tmp8x4ycisp.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp8x4ycisp.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8x4ycisp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8x4ycisp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0x795_c_.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp0x795_c_.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0x795_c_.jl:16\ntest set: Test Failed at /tmp/tmp0x795_c_.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp0x795_c_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0x795_c_.jl:16\ntest set: Test Failed at /tmp/tmp0x795_c_.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp0x795_c_.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0x795_c_.jl:16\ntest set: Test Failed at /tmp/tmp0x795_c_.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp0x795_c_.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0x795_c_.jl:16\ntest set: Test Failed at /tmp/tmp0x795_c_.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0x795_c_.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0x795_c_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0x795_c_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwabf6eg5.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwabf6eg5.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwabf6eg5.jl:16\ntest set: Test Failed at /tmp/tmpwabf6eg5.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwabf6eg5.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwabf6eg5.jl:16\ntest set: Test Failed at /tmp/tmpwabf6eg5.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpwabf6eg5.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwabf6eg5.jl:16\ntest set: Test Failed at /tmp/tmpwabf6eg5.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwabf6eg5.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwabf6eg5.jl:16\ntest set: Test Failed at /tmp/tmpwabf6eg5.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwabf6eg5.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwabf6eg5.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwabf6eg5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgtxphkbc.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpgtxphkbc.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgtxphkbc.jl:16\ntest set: Test Failed at /tmp/tmpgtxphkbc.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpgtxphkbc.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgtxphkbc.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgtxphkbc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwb6a9y7h.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwb6a9y7h.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwb6a9y7h.jl:16\\ntest set: Test Failed at /tmp/tmpwb6a9y7h.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwb6a9y7h.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwb6a9y7h.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9zmn5bw3.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9zmn5bw3.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zmn5bw3.jl:16\ntest set: Test Failed at /tmp/tmp9zmn5bw3.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp9zmn5bw3.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zmn5bw3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zmn5bw3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptnakxv_i.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmptnakxv_i.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptnakxv_i.jl:16\ntest set: Test Failed at /tmp/tmptnakxv_i.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmptnakxv_i.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptnakxv_i.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptnakxv_i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3tvvcg5.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpp3tvvcg5.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3tvvcg5.jl:16\ntest set: Test Failed at /tmp/tmpp3tvvcg5.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpp3tvvcg5.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3tvvcg5.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3tvvcg5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk_xei9um.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpk_xei9um.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_xei9um.jl:16\ntest set: Test Failed at /tmp/tmpk_xei9um.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpk_xei9um.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_xei9um.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_xei9um.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hp0xxmz.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp0hp0xxmz.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0hp0xxmz.jl:16\ntest set: Test Failed at /tmp/tmp0hp0xxmz.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp0hp0xxmz.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0hp0xxmz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hp0xxmz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4hcwxinf.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4hcwxinf.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4hcwxinf.jl:16\\ntest set: Test Failed at /tmp/tmp4hcwxinf.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4hcwxinf.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4hcwxinf.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd81eny0h.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd81eny0h.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd81eny0h.jl:16\\ntest set: Test Failed at /tmp/tmpd81eny0h.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd81eny0h.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd81eny0h.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpisds71mk.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpisds71mk.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpisds71mk.jl:16\\ntest set: Test Failed at /tmp/tmpisds71mk.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpisds71mk.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpisds71mk.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpulsvv39q.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpulsvv39q.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpulsvv39q.jl:16\ntest set: Test Failed at /tmp/tmpulsvv39q.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpulsvv39q.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpulsvv39q.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpulsvv39q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppaioti0d.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmppaioti0d.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppaioti0d.jl:16\\ntest set: Test Failed at /tmp/tmppaioti0d.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmppaioti0d.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppaioti0d.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl2cd6boh.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpl2cd6boh.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl2cd6boh.jl:16\ntest set: Test Failed at /tmp/tmpl2cd6boh.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpl2cd6boh.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl2cd6boh.jl:16\ntest set: Test Failed at /tmp/tmpl2cd6boh.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpl2cd6boh.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl2cd6boh.jl:16\ntest set: Test Failed at /tmp/tmpl2cd6boh.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpl2cd6boh.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl2cd6boh.jl:16\ntest set: Test Failed at /tmp/tmpl2cd6boh.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl2cd6boh.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl2cd6boh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2cd6boh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2eez1553.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2eez1553.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2eez1553.jl:16\\ntest set: Test Failed at /tmp/tmp2eez1553.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2eez1553.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2eez1553.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkok794_l.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkok794_l.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkok794_l.jl:16\\ntest set: Test Failed at /tmp/tmpkok794_l.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkok794_l.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkok794_l.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpc23acwdb.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc23acwdb.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc23acwdb.jl:16\\ntest set: Test Failed at /tmp/tmpc23acwdb.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc23acwdb.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc23acwdb.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo87gas6h.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpo87gas6h.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\ntest set: Test Failed at /tmp/tmpo87gas6h.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpo87gas6h.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\ntest set: Test Failed at /tmp/tmpo87gas6h.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo87gas6h.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\ntest set: Test Failed at /tmp/tmpo87gas6h.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo87gas6h.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\ntest set: Test Failed at /tmp/tmpo87gas6h.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpo87gas6h.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\ntest set: Test Failed at /tmp/tmpo87gas6h.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpo87gas6h.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo87gas6h.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo87gas6h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt7c55bcy.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpt7c55bcy.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7c55bcy.jl:16\ntest set: Test Failed at /tmp/tmpt7c55bcy.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpt7c55bcy.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7c55bcy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7c55bcy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwml177lf.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwml177lf.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwml177lf.jl:16\ntest set: Test Failed at /tmp/tmpwml177lf.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpwml177lf.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwml177lf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwml177lf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8dp74j91.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp8dp74j91.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8dp74j91.jl:16\ntest set: Test Failed at /tmp/tmp8dp74j91.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp8dp74j91.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8dp74j91.jl:16\ntest set: Test Failed at /tmp/tmp8dp74j91.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp8dp74j91.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8dp74j91.jl:16\ntest set: Test Failed at /tmp/tmp8dp74j91.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp8dp74j91.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8dp74j91.jl:16\ntest set: Test Failed at /tmp/tmp8dp74j91.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8dp74j91.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8dp74j91.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8dp74j91.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0pd4p_u3.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp0pd4p_u3.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0pd4p_u3.jl:16\ntest set: Test Failed at /tmp/tmp0pd4p_u3.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp0pd4p_u3.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0pd4p_u3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0pd4p_u3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxlh1ut59.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpxlh1ut59.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxlh1ut59.jl:16\ntest set: Test Failed at /tmp/tmpxlh1ut59.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpxlh1ut59.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxlh1ut59.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxlh1ut59.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqayo9gso.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqayo9gso.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqayo9gso.jl:16\\ntest set: Test Failed at /tmp/tmpqayo9gso.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqayo9gso.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqayo9gso.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa71qi1ta.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpa71qi1ta.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa71qi1ta.jl:16\ntest set: Test Failed at /tmp/tmpa71qi1ta.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpa71qi1ta.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa71qi1ta.jl:16\ntest set: Test Failed at /tmp/tmpa71qi1ta.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpa71qi1ta.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa71qi1ta.jl:16\ntest set: Test Failed at /tmp/tmpa71qi1ta.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpa71qi1ta.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa71qi1ta.jl:16\ntest set: Test Failed at /tmp/tmpa71qi1ta.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa71qi1ta.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa71qi1ta.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa71qi1ta.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7npowlcp.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7npowlcp.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7npowlcp.jl:16\\ntest set: Test Failed at /tmp/tmp7npowlcp.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7npowlcp.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7npowlcp.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp7npowlcp.jl:14\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4rfgq_s.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpr4rfgq_s.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4rfgq_s.jl:16\ntest set: Test Failed at /tmp/tmpr4rfgq_s.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpr4rfgq_s.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4rfgq_s.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4rfgq_s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4a_qvakk.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4a_qvakk.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4a_qvakk.jl:16\\ntest set: Test Failed at /tmp/tmp4a_qvakk.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4a_qvakk.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4a_qvakk.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp4a_qvakk.jl:14\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaqu64_jx.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpaqu64_jx.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqu64_jx.jl:16\ntest set: Test Failed at /tmp/tmpaqu64_jx.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpaqu64_jx.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqu64_jx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaqu64_jx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvrkjh78_.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvrkjh78_.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrkjh78_.jl:16\ntest set: Test Failed at /tmp/tmpvrkjh78_.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvrkjh78_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrkjh78_.jl:16\ntest set: Test Failed at /tmp/tmpvrkjh78_.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvrkjh78_.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrkjh78_.jl:16\ntest set: Test Failed at /tmp/tmpvrkjh78_.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpvrkjh78_.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrkjh78_.jl:16\ntest set: Test Failed at /tmp/tmpvrkjh78_.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvrkjh78_.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrkjh78_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrkjh78_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwdfesdxv.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwdfesdxv.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\ntest set: Test Failed at /tmp/tmpwdfesdxv.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwdfesdxv.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\ntest set: Test Failed at /tmp/tmpwdfesdxv.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpwdfesdxv.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\ntest set: Test Failed at /tmp/tmpwdfesdxv.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwdfesdxv.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\ntest set: Test Failed at /tmp/tmpwdfesdxv.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpwdfesdxv.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\ntest set: Test Failed at /tmp/tmpwdfesdxv.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \",\", \"gamal\"] == [\"ahmed\"\
    , \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwdfesdxv.jl:22\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwdfesdxv.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdfesdxv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprkiax_71.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmprkiax_71.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprkiax_71.jl:16\ntest set: Test Failed at /tmp/tmprkiax_71.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmprkiax_71.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprkiax_71.jl:16\ntest set: Test Failed at /tmp/tmprkiax_71.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmprkiax_71.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprkiax_71.jl:16\ntest set: Test Failed at /tmp/tmprkiax_71.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmprkiax_71.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprkiax_71.jl:16\ntest set: Test Failed at /tmp/tmprkiax_71.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprkiax_71.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprkiax_71.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkiax_71.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5fdmlu33.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5fdmlu33.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5fdmlu33.jl:16\\ntest set: Test Failed at /tmp/tmp5fdmlu33.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5fdmlu33.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5fdmlu33.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqyzlxdxk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqyzlxdxk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyzlxdxk.jl:16\ntest set: Test Failed at /tmp/tmpqyzlxdxk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpqyzlxdxk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyzlxdxk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqyzlxdxk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6clvfowj.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6clvfowj.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6clvfowj.jl:16\\ntest set: Test Failed at /tmp/tmp6clvfowj.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6clvfowj.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6clvfowj.jl:16\\ntest set: Test Failed at /tmp/tmp6clvfowj.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp6clvfowj.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6clvfowj.jl:16\\ntest set: Test Failed at /tmp/tmp6clvfowj.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp6clvfowj.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6clvfowj.jl:16\\ntest set: Test Failed at /tmp/tmp6clvfowj.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp6clvfowj.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6clvfowj.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoi7kxadm.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpoi7kxadm.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoi7kxadm.jl:16\ntest set: Test Failed at /tmp/tmpoi7kxadm.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpoi7kxadm.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoi7kxadm.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoi7kxadm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4vtphijv.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp4vtphijv.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4vtphijv.jl:16\ntest set: Test Failed at /tmp/tmp4vtphijv.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp4vtphijv.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4vtphijv.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vtphijv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmxm61hb8.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpmxm61hb8.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmxm61hb8.jl:16\ntest set: Test Failed at /tmp/tmpmxm61hb8.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpmxm61hb8.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmxm61hb8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxm61hb8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9tpta0an.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9tpta0an.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tpta0an.jl:16\ntest set: Test Failed at /tmp/tmp9tpta0an.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp9tpta0an.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tpta0an.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9tpta0an.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi8ypk0fk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpi8ypk0fk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8ypk0fk.jl:16\ntest set: Test Failed at /tmp/tmpi8ypk0fk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpi8ypk0fk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8ypk0fk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8ypk0fk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy81zzfku.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpy81zzfku.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy81zzfku.jl:16\ntest set: Test Failed at /tmp/tmpy81zzfku.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpy81zzfku.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy81zzfku.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy81zzfku.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgbaq0pf_.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgbaq0pf_.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgbaq0pf_.jl:16\\ntest set: Test Failed at /tmp/tmpgbaq0pf_.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgbaq0pf_.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgbaq0pf_.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6j6hofdk.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp6j6hofdk.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6j6hofdk.jl:16\ntest set: Test Failed at /tmp/tmp6j6hofdk.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp6j6hofdk.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6j6hofdk.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6j6hofdk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7xqowo_l.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7xqowo_l.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7xqowo_l.jl:16\ntest set: Test Failed at /tmp/tmp7xqowo_l.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7xqowo_l.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7xqowo_l.jl:16\ntest set: Test Failed at /tmp/tmp7xqowo_l.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7xqowo_l.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7xqowo_l.jl:16\ntest set: Test Failed at /tmp/tmp7xqowo_l.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp7xqowo_l.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7xqowo_l.jl:16\ntest set: Test Failed at /tmp/tmp7xqowo_l.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7xqowo_l.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7xqowo_l.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xqowo_l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp_02c8mc.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpp_02c8mc.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp_02c8mc.jl:16\ntest set: Test Failed at /tmp/tmpp_02c8mc.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpp_02c8mc.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp_02c8mc.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_02c8mc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9qi22otq.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9qi22otq.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9qi22otq.jl:16\\ntest set: Test Failed at /tmp/tmp9qi22otq.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9qi22otq.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9qi22otq.jl:16\\ntest set: Test Failed at /tmp/tmp9qi22otq.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp9qi22otq.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9qi22otq.jl:16\\ntest set: Test Failed at /tmp/tmp9qi22otq.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp9qi22otq.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9qi22otq.jl:16\\ntest set: Test Failed at /tmp/tmp9qi22otq.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9qi22otq.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9qi22otq.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpljpb5g7l.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpljpb5g7l.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\ntest set: Test Failed at /tmp/tmpljpb5g7l.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpljpb5g7l.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\ntest set: Test Failed at /tmp/tmpljpb5g7l.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpljpb5g7l.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\ntest set: Test Failed at /tmp/tmpljpb5g7l.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpljpb5g7l.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\ntest set: Test Failed at /tmp/tmpljpb5g7l.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpljpb5g7l.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\ntest set: Test Failed at /tmp/tmpljpb5g7l.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpljpb5g7l.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpljpb5g7l.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljpb5g7l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8aqqy7g5.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8aqqy7g5.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8aqqy7g5.jl:16\\ntest set: Test Failed at /tmp/tmp8aqqy7g5.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8aqqy7g5.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8aqqy7g5.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     2      6\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzc0igc_z.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpzc0igc_z.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzc0igc_z.jl:16\ntest set: Test Failed at /tmp/tmpzc0igc_z.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpzc0igc_z.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzc0igc_z.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzc0igc_z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52nd7tsj.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp52nd7tsj.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52nd7tsj.jl:16\ntest set: Test Failed at /tmp/tmp52nd7tsj.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp52nd7tsj.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52nd7tsj.jl:16\ntest set: Test Failed at /tmp/tmp52nd7tsj.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp52nd7tsj.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52nd7tsj.jl:16\ntest set: Test Failed at /tmp/tmp52nd7tsj.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp52nd7tsj.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52nd7tsj.jl:16\ntest set: Test Failed at /tmp/tmp52nd7tsj.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp52nd7tsj.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52nd7tsj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52nd7tsj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphsgluan2.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmphsgluan2.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsgluan2.jl:16\ntest set: Test Failed at /tmp/tmphsgluan2.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmphsgluan2.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsgluan2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphsgluan2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwjnrbyeo.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwjnrbyeo.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwjnrbyeo.jl:16\ntest set: Test Failed at /tmp/tmpwjnrbyeo.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpwjnrbyeo.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwjnrbyeo.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwjnrbyeo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkriothtg.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpkriothtg.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkriothtg.jl:16\ntest set: Test Failed at /tmp/tmpkriothtg.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpkriothtg.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkriothtg.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkriothtg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn_7_5ty1.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpn_7_5ty1.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_7_5ty1.jl:16\ntest set: Test Failed at /tmp/tmpn_7_5ty1.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpn_7_5ty1.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_7_5ty1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_7_5ty1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphu47x3z_.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmphu47x3z_.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu47x3z_.jl:16\\ntest set: Test Failed at /tmp/tmphu47x3z_.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmphu47x3z_.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu47x3z_.jl:16\\ntest set: Test Failed at /tmp/tmphu47x3z_.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmphu47x3z_.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu47x3z_.jl:16\\ntest set: Test Failed at /tmp/tmphu47x3z_.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmphu47x3z_.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu47x3z_.jl:16\\ntest set: Test Failed at /tmp/tmphu47x3z_.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmphu47x3z_.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu47x3z_.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcl3jedbv.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcl3jedbv.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcl3jedbv.jl:16\\ntest set: Test Failed at /tmp/tmpcl3jedbv.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcl3jedbv.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcl3jedbv.jl:16\\ntest set: Test Failed at /tmp/tmpcl3jedbv.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpcl3jedbv.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcl3jedbv.jl:16\\ntest set: Test Failed at /tmp/tmpcl3jedbv.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpcl3jedbv.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcl3jedbv.jl:16\\ntest set: Test Failed at /tmp/tmpcl3jedbv.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcl3jedbv.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcl3jedbv.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmposllatf4.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmposllatf4.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmposllatf4.jl:16\ntest set: Test Failed at /tmp/tmposllatf4.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmposllatf4.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmposllatf4.jl:16\ntest set: Test Failed at /tmp/tmposllatf4.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmposllatf4.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmposllatf4.jl:16\ntest set: Test Failed at /tmp/tmposllatf4.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmposllatf4.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmposllatf4.jl:16\ntest set: Test Failed at /tmp/tmposllatf4.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmposllatf4.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmposllatf4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmposllatf4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfx50ptiw.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpfx50ptiw.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfx50ptiw.jl:16\ntest set: Test Failed at /tmp/tmpfx50ptiw.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpfx50ptiw.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfx50ptiw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfx50ptiw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq5qi4evh.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpq5qi4evh.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq5qi4evh.jl:16\ntest set: Test Failed at /tmp/tmpq5qi4evh.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpq5qi4evh.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq5qi4evh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq5qi4evh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv_02jpt2.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpv_02jpt2.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv_02jpt2.jl:16\ntest set: Test Failed at /tmp/tmpv_02jpt2.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpv_02jpt2.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv_02jpt2.jl:16\ntest set: Test Failed at /tmp/tmpv_02jpt2.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpv_02jpt2.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv_02jpt2.jl:16\ntest set: Test Failed at /tmp/tmpv_02jpt2.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpv_02jpt2.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv_02jpt2.jl:16\ntest set: Test Failed at /tmp/tmpv_02jpt2.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv_02jpt2.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv_02jpt2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_02jpt2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg8udh5ga.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpg8udh5ga.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8udh5ga.jl:16\ntest set: Test Failed at /tmp/tmpg8udh5ga.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpg8udh5ga.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg8udh5ga.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8udh5ga.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprutzyl21.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmprutzyl21.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprutzyl21.jl:16\ntest set: Test Failed at /tmp/tmprutzyl21.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmprutzyl21.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprutzyl21.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprutzyl21.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbgh50ee1.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpbgh50ee1.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgh50ee1.jl:16\ntest set: Test Failed at /tmp/tmpbgh50ee1.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpbgh50ee1.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgh50ee1.jl:16\ntest set: Test Failed at /tmp/tmpbgh50ee1.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbgh50ee1.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgh50ee1.jl:16\ntest set: Test Failed at /tmp/tmpbgh50ee1.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpbgh50ee1.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgh50ee1.jl:16\ntest set: Test Failed at /tmp/tmpbgh50ee1.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbgh50ee1.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgh50ee1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbgh50ee1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqhmmrlyd.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqhmmrlyd.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqhmmrlyd.jl:16\ntest set: Test Failed at /tmp/tmpqhmmrlyd.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpqhmmrlyd.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqhmmrlyd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqhmmrlyd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpox1zd7m9.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpox1zd7m9.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox1zd7m9.jl:16\ntest set: Test Failed at /tmp/tmpox1zd7m9.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpox1zd7m9.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox1zd7m9.jl:16\ntest set: Test Failed at /tmp/tmpox1zd7m9.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpox1zd7m9.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox1zd7m9.jl:16\ntest set: Test Failed at /tmp/tmpox1zd7m9.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpox1zd7m9.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox1zd7m9.jl:16\ntest set: Test Failed at /tmp/tmpox1zd7m9.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpox1zd7m9.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox1zd7m9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpox1zd7m9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdercqnia.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdercqnia.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdercqnia.jl:16\\ntest set: Test Failed at /tmp/tmpdercqnia.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdercqnia.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdercqnia.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkymi1ma5.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkymi1ma5.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkymi1ma5.jl:16\\ntest set: Test Failed at /tmp/tmpkymi1ma5.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkymi1ma5.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkymi1ma5.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpj1l88w8x.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpj1l88w8x.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpj1l88w8x.jl:16\\ntest set: Test Failed at /tmp/tmpj1l88w8x.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpj1l88w8x.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpj1l88w8x.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqx9ctjh6.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqx9ctjh6.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx9ctjh6.jl:16\\ntest set: Test Failed at /tmp/tmpqx9ctjh6.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqx9ctjh6.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqx9ctjh6.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9a2jas9.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpe9a2jas9.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9a2jas9.jl:16\ntest set: Test Failed at /tmp/tmpe9a2jas9.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpe9a2jas9.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9a2jas9.jl:16\ntest set: Test Failed at /tmp/tmpe9a2jas9.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpe9a2jas9.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9a2jas9.jl:16\ntest set: Test Failed at /tmp/tmpe9a2jas9.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpe9a2jas9.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9a2jas9.jl:16\ntest set: Test Failed at /tmp/tmpe9a2jas9.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe9a2jas9.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9a2jas9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9a2jas9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi4n77dsq.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpi4n77dsq.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4n77dsq.jl:16\ntest set: Test Failed at /tmp/tmpi4n77dsq.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpi4n77dsq.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4n77dsq.jl:16\ntest set: Test Failed at /tmp/tmpi4n77dsq.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpi4n77dsq.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4n77dsq.jl:16\ntest set: Test Failed at /tmp/tmpi4n77dsq.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpi4n77dsq.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4n77dsq.jl:16\ntest set: Test Failed at /tmp/tmpi4n77dsq.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi4n77dsq.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi4n77dsq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi4n77dsq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphs9r2e9r.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmphs9r2e9r.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs9r2e9r.jl:16\ntest set: Test Failed at /tmp/tmphs9r2e9r.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmphs9r2e9r.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs9r2e9r.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphs9r2e9r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2uxspt0a.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp2uxspt0a.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2uxspt0a.jl:16\ntest set: Test Failed at /tmp/tmp2uxspt0a.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp2uxspt0a.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2uxspt0a.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2uxspt0a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpez2v_2ns.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpez2v_2ns.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpez2v_2ns.jl:16\\ntest set: Test Failed at /tmp/tmpez2v_2ns.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpez2v_2ns.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpez2v_2ns.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1zghol6n.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp1zghol6n.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1zghol6n.jl:16\ntest set: Test Failed at /tmp/tmp1zghol6n.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp1zghol6n.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1zghol6n.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1zghol6n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpof46wv_3.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpof46wv_3.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\ntest set: Test Failed at /tmp/tmpof46wv_3.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\"\
    , \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpof46wv_3.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\ntest set: Test Failed at /tmp/tmpof46wv_3.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpof46wv_3.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\ntest set: Test Failed at /tmp/tmpof46wv_3.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpof46wv_3.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\ntest set: Test Failed at /tmp/tmpof46wv_3.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpof46wv_3.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\ntest set: Test Failed at /tmp/tmpof46wv_3.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpof46wv_3.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpof46wv_3.jl:16\\nTest Summary: | Fail  Total\\\
    ntest set      |    6      6\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9iwocnd.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc9iwocnd.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\ntest set: Test Failed at /tmp/tmpc9iwocnd.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpc9iwocnd.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\ntest set: Test Failed at /tmp/tmpc9iwocnd.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc9iwocnd.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\ntest set: Test Failed at /tmp/tmpc9iwocnd.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc9iwocnd.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\ntest set: Test Failed at /tmp/tmpc9iwocnd.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpc9iwocnd.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\ntest set: Test Failed at /tmp/tmpc9iwocnd.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc9iwocnd.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9iwocnd.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9iwocnd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwuryfm9j.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwuryfm9j.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwuryfm9j.jl:16\ntest set: Test Failed at /tmp/tmpwuryfm9j.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpwuryfm9j.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwuryfm9j.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwuryfm9j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsyq9syg_.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpsyq9syg_.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsyq9syg_.jl:16\ntest set: Test Failed at /tmp/tmpsyq9syg_.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpsyq9syg_.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsyq9syg_.jl:16\ntest set: Test Failed at /tmp/tmpsyq9syg_.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpsyq9syg_.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsyq9syg_.jl:16\ntest set: Test Failed at /tmp/tmpsyq9syg_.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpsyq9syg_.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsyq9syg_.jl:16\ntest set: Test Failed at /tmp/tmpsyq9syg_.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsyq9syg_.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsyq9syg_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsyq9syg_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzwsrj513.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpzwsrj513.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzwsrj513.jl:16\ntest set: Test Failed at /tmp/tmpzwsrj513.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpzwsrj513.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzwsrj513.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwsrj513.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_d7ekj64.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp_d7ekj64.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_d7ekj64.jl:16\ntest set: Test Failed at /tmp/tmp_d7ekj64.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp_d7ekj64.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_d7ekj64.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d7ekj64.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj1kc_6_t.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpj1kc_6_t.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj1kc_6_t.jl:16\ntest set: Test Failed at /tmp/tmpj1kc_6_t.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpj1kc_6_t.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj1kc_6_t.jl:16\ntest set: Test Failed at /tmp/tmpj1kc_6_t.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpj1kc_6_t.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj1kc_6_t.jl:16\ntest set: Test Failed at /tmp/tmpj1kc_6_t.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpj1kc_6_t.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj1kc_6_t.jl:16\ntest set: Test Failed at /tmp/tmpj1kc_6_t.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj1kc_6_t.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj1kc_6_t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj1kc_6_t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpayn1i2dj.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpayn1i2dj.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpayn1i2dj.jl:16\ntest set: Test Failed at /tmp/tmpayn1i2dj.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpayn1i2dj.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpayn1i2dj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpayn1i2dj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ts4vnf4.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7ts4vnf4.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ts4vnf4.jl:16\ntest set: Test Failed at /tmp/tmp7ts4vnf4.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7ts4vnf4.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ts4vnf4.jl:16\ntest set: Test Failed at /tmp/tmp7ts4vnf4.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7ts4vnf4.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ts4vnf4.jl:16\ntest set: Test Failed at /tmp/tmp7ts4vnf4.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp7ts4vnf4.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ts4vnf4.jl:16\ntest set: Test Failed at /tmp/tmp7ts4vnf4.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ts4vnf4.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ts4vnf4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ts4vnf4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpafdmau_y.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpafdmau_y.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpafdmau_y.jl:16\ntest set: Test Failed at /tmp/tmpafdmau_y.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpafdmau_y.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpafdmau_y.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpafdmau_y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnniuafg8.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnniuafg8.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnniuafg8.jl:16\ntest set: Test Failed at /tmp/tmpnniuafg8.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnniuafg8.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnniuafg8.jl:16\ntest set: Test Failed at /tmp/tmpnniuafg8.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpnniuafg8.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnniuafg8.jl:16\ntest set: Test Failed at /tmp/tmpnniuafg8.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpnniuafg8.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnniuafg8.jl:16\ntest set: Test Failed at /tmp/tmpnniuafg8.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnniuafg8.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnniuafg8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnniuafg8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8c7t3yzu.jl:20\\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8c7t3yzu.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c7t3yzu.jl:16\\ntest set: Test Failed at /tmp/tmp8c7t3yzu.jl:21\\\
    n  Expression: candidate(\"\") == Vector{String}([])\\n   Evaluated: [\"\"] ==\
    \ String[]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8c7t3yzu.jl:21\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c7t3yzu.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7rmaam6z.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7rmaam6z.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rmaam6z.jl:16\ntest set: Test Failed at /tmp/tmp7rmaam6z.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp7rmaam6z.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rmaam6z.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rmaam6z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3la8m41o.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp3la8m41o.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3la8m41o.jl:16\ntest set: Test Failed at /tmp/tmp3la8m41o.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp3la8m41o.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3la8m41o.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3la8m41o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnlhy67di.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpnlhy67di.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlhy67di.jl:16\ntest set: Test Failed at /tmp/tmpnlhy67di.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpnlhy67di.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlhy67di.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlhy67di.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg4za1bee.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpg4za1bee.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4za1bee.jl:16\ntest set: Test Failed at /tmp/tmpg4za1bee.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpg4za1bee.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4za1bee.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg4za1bee.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptboc4s_j.jl:17\\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptboc4s_j.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptboc4s_j.jl:16\\ntest set: Test Failed at /tmp/tmptboc4s_j.jl:18\\\
    n  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptboc4s_j.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptboc4s_j.jl:16\\ntest set: Test Failed at /tmp/tmptboc4s_j.jl:19\\\
    n  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmptboc4s_j.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptboc4s_j.jl:16\\ntest set: Test Failed at /tmp/tmptboc4s_j.jl:20\\\
    n  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\\n   Evaluated: [\"One,,\"\
    , \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmptboc4s_j.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptboc4s_j.jl:16\\ntest set: Test Failed at /tmp/tmptboc4s_j.jl:22\\\
    n  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\\n \
    \  Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptboc4s_j.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptboc4s_j.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     5      6\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp7c64h_d.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpp7c64h_d.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp7c64h_d.jl:16\ntest set: Test Failed at /tmp/tmpp7c64h_d.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpp7c64h_d.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp7c64h_d.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp7c64h_d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa4ivqw_g.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpa4ivqw_g.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa4ivqw_g.jl:16\ntest set: Test Failed at /tmp/tmpa4ivqw_g.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpa4ivqw_g.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa4ivqw_g.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4ivqw_g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpful6hbin.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpful6hbin.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpful6hbin.jl:16\ntest set: Test Failed at /tmp/tmpful6hbin.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpful6hbin.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpful6hbin.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpful6hbin.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgml7lqe6.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpgml7lqe6.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\ntest set: Test Failed at /tmp/tmpgml7lqe6.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\",\
    \ \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgml7lqe6.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\ntest set: Test Failed at /tmp/tmpgml7lqe6.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgml7lqe6.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\ntest set: Test Failed at /tmp/tmpgml7lqe6.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One\", \"\
    \", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\", \"five\", \"\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgml7lqe6.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\ntest set: Test Failed at /tmp/tmpgml7lqe6.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpgml7lqe6.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\ntest set: Test Failed at /tmp/tmpgml7lqe6.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\", \"\", \"\", \"gamal\"] == [\"\
    ahmed\", \"gamal\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpgml7lqe6.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgml7lqe6.jl:16\nTest Summary: | Fail  Total\n\
    test set      |    6      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgml7lqe6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeksd6ity.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpeksd6ity.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeksd6ity.jl:16\ntest set: Test Failed at /tmp/tmpeksd6ity.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpeksd6ity.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeksd6ity.jl:16\ntest set: Test Failed at /tmp/tmpeksd6ity.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpeksd6ity.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeksd6ity.jl:16\ntest set: Test Failed at /tmp/tmpeksd6ity.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpeksd6ity.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeksd6ity.jl:16\ntest set: Test Failed at /tmp/tmpeksd6ity.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeksd6ity.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeksd6ity.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeksd6ity.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcwcwndlq.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpcwcwndlq.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcwcwndlq.jl:16\ntest set: Test Failed at /tmp/tmpcwcwndlq.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpcwcwndlq.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcwcwndlq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcwcwndlq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkrj4b6nw.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpkrj4b6nw.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkrj4b6nw.jl:16\ntest set: Test Failed at /tmp/tmpkrj4b6nw.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpkrj4b6nw.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkrj4b6nw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrj4b6nw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu9zn0ves.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpu9zn0ves.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu9zn0ves.jl:16\ntest set: Test Failed at /tmp/tmpu9zn0ves.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpu9zn0ves.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu9zn0ves.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9zn0ves.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuofw8t6y.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpuofw8t6y.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuofw8t6y.jl:16\ntest set: Test Failed at /tmp/tmpuofw8t6y.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpuofw8t6y.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuofw8t6y.jl:16\ntest set: Test Failed at /tmp/tmpuofw8t6y.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpuofw8t6y.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuofw8t6y.jl:16\ntest set: Test Failed at /tmp/tmpuofw8t6y.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpuofw8t6y.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuofw8t6y.jl:16\ntest set: Test Failed at /tmp/tmpuofw8t6y.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuofw8t6y.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuofw8t6y.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuofw8t6y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_rx1eja2.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp_rx1eja2.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_rx1eja2.jl:16\ntest set: Test Failed at /tmp/tmp_rx1eja2.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp_rx1eja2.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_rx1eja2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_rx1eja2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0aioyknh.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp0aioyknh.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0aioyknh.jl:16\ntest set: Test Failed at /tmp/tmp0aioyknh.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp0aioyknh.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0aioyknh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0aioyknh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp590x8954.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp590x8954.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp590x8954.jl:16\ntest set: Test Failed at /tmp/tmp590x8954.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp590x8954.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp590x8954.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp590x8954.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5hw2n51m.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp5hw2n51m.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5hw2n51m.jl:16\ntest set: Test Failed at /tmp/tmp5hw2n51m.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmp5hw2n51m.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5hw2n51m.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hw2n51m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphag_fyi4.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmphag_fyi4.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphag_fyi4.jl:16\ntest set: Test Failed at /tmp/tmphag_fyi4.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmphag_fyi4.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphag_fyi4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphag_fyi4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5wx_p8j.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpn5wx_p8j.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn5wx_p8j.jl:16\ntest set: Test Failed at /tmp/tmpn5wx_p8j.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpn5wx_p8j.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn5wx_p8j.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5wx_p8j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzq39mjus.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpzq39mjus.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzq39mjus.jl:16\ntest set: Test Failed at /tmp/tmpzq39mjus.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpzq39mjus.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzq39mjus.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzq39mjus.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo2q_3_8c.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpo2q_3_8c.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo2q_3_8c.jl:16\ntest set: Test Failed at /tmp/tmpo2q_3_8c.jl:21\n\
    \  Expression: candidate(\"\") == Vector{String}([])\n   Evaluated: [\"\"] ==\
    \ String[]\nStacktrace:\n [1] top-level scope at /tmp/tmpo2q_3_8c.jl:21\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo2q_3_8c.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     2      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo2q_3_8c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n  \
    \  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97w610pz.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp97w610pz.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97w610pz.jl:16\ntest set: Test Failed at /tmp/tmp97w610pz.jl:18\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp97w610pz.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97w610pz.jl:16\ntest set: Test Failed at /tmp/tmp97w610pz.jl:19\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp97w610pz.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97w610pz.jl:16\ntest set: Test Failed at /tmp/tmp97w610pz.jl:20\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp97w610pz.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97w610pz.jl:16\ntest set: Test Failed at /tmp/tmp97w610pz.jl:22\n\
    \  Expression: candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"]\n  \
    \ Evaluated: [\"ahmed\", \",\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp97w610pz.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97w610pz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     5      6\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97w610pz.jl:14\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_88_sort_array
language: julia
prompt: "\"\"\"\n    Given an array of non-negative integers, return a copy of the\
  \ given array after sorting,\n    you will sort the given array in ascending order\
  \ if the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n\
  \    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2,\
  \ 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n \
  \   \"\"\"\nfunction sort_array(array::Vector{Int64})::Vector{Int64} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate(Vector{Int64}([]))\
  \ == Vector{Int64}([]))\n\t@test(candidate([5]) == [5])\n\t@test(candidate([2, 4,\
  \ 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5])\n\t@test(candidate([2, 4, 3, 0, 1, 5, 6])\
  \ == [6, 5, 4, 3, 2, 1, 0])\n\t@test(candidate([2, 1]) == [1, 2])\n\t@test(candidate([15,\
  \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87])\n\t@test(candidate([21, 14, 23,\
  \ 11]) == [23, 21, 14, 11])\nend\n"
completions: ["    if length(array) == 0\n        return array\n    end\n    if length(array)\
    \ == 1\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if sum(array[1], array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if sum(array[1], array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if length(array) == 2\n        if sum(array) % 2 == 0\n\
    \            return reverse(array)\n        else\n            return array\n \
    \       end\n    end\n    if sum(array[1], array[end]) % 2 == 0\n        return\
    \ sort(reverse(array), rev=true)\n    else\n        return sort(array)\n    end\n\
    end", "    if length(array) == 0\n        return []\n    end\n    if length(array)\
    \ == 1\n        return array\n    end\n    if length(array) == 2\n        if sum(array)\
    \ % 2 == 0\n            return reverse(array)\n        else\n            return\
    \ array\n        end\n    end\n    if sum(array[1], array[end]) % 2 == 0\n   \
    \     return reverse(sort(array))\n    else\n        return sort(array)\n    end\n\
    end", "    if length(array) == 0\n        return array\n    end\n    if length(array)\
    \ == 1\n        return array\n    end\n    if length(array) == 2\n        if array[1]\
    \ > array[2]\n            return array\n        else\n            return [array[2],\
    \ array[1]]\n        end\n    end\n    if (array[1] + array[end]) % 2 == 0\n \
    \       return sort(array, rev=true)\n    else\n        return sort(array)\n \
    \   end\nend", "    if length(array) == 0\n        return array\n    end\n   \
    \ if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if sum(first(array), last(array)) % 2 == 0\n        return\
    \ sort(array, rev=true)\n    else\n        return sort(array)\n    end\nend",
  "    if length(array) == 0\n        return array\n    end\n    if length(array)\
    \ == 1\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if sum(array[1], array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if length(array) ==\
    \ 0\n        return []\n    end\n    if length(array) == 1\n        return array\n\
    \    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if length(array) == 2\n        if array[1] > array[2]\n\
    \            return array\n        else\n            return [array[2], array[1]]\n\
    \        end\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return\
    \ sort(array, rev=true)\n    else\n        return sort(array)\n    end\nend",
  "    if length(array) == 0\n        return []\n    end\n    if length(array) ==\
    \ 1\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if sum(array[1], array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if sum(array[1], array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if length(array) ==\
    \ 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if sum(first(array),\
    \ last(array)) % 2 == 0\n        sort(array, rev=true)\n    else\n        sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if sum(array[1], array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if sum(array[1], array[end]) % 2 == 0\n        sort(array,\
    \ rev=true)\n    else\n        sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0 || length(array) == 1\n        return array\n    end\n    if (array[1]\
    \ + array[end]) % 2 == 0\n        return sort(array, rev=true)\n    else\n   \
    \     return sort(array)\n    end\nend", "    if length(array) == 0\n        return\
    \ []\n    end\n    if length(array) == 1\n        return array\n    end\n    if\
    \ (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n   \
    \ else\n        return sort(array)\n    end\nend", "    if length(array) == 0\n\
    \        return array\n    end\n    if length(array) == 1\n        return array\n\
    \    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if sum(array[1],\
    \ array[end]) % 2 == 0\n        sort(array, rev=true)\n    else\n        sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if isodd(array[1] + array[end])\n        return sort(array)\n    else\n   \
    \     return sort(array, rev=true)\n    end\nend", "    if length(array) == 0\n\
    \        return array\n    end\n    if length(array) == 1\n        return array\n\
    \    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if sum(array[1],\
    \ array[end]) % 2 == 0\n        return sort(array, rev=true)\n    else\n     \
    \   return sort(array)\n    end\nend", "    if length(array) == 0\n        return\
    \ []\n    end\n    if length(array) == 1\n        return array\n    end\n    if\
    \ (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n   \
    \ else\n        return sort(array)\n    end\nend", "    if length(array) == 0\n\
    \        return array\n    end\n    if length(array) == 1\n        return array\n\
    \    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if sum(array[1], array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if sum(array[1],\
    \ array[end]) % 2 == 0\n        sort(array, rev=true)\n    else\n        sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if sum(array[1], array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if length(array) ==\
    \ 0\n        return array\n    end\n    if sum(array[1], array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if isempty(array)\n        return array\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if sum(array[1], array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if length(array) == 2\n\
    \        if (array[1] + array[end]) % 2 == 0\n            return reverse(array)\n\
    \        else\n            return array\n        end\n    end\n    if (array[1]\
    \ + array[end]) % 2 == 0\n        return reverse(sort(array))\n    else\n    \
    \    return sort(array)\n    end\nend", "    if length(array) == 0\n        return\
    \ array\n    end\n    if length(array) == 1\n        return array\n    end\n \
    \   if (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if sum(array[1], array[end])\
    \ % 2 == 0\n        sort(array, rev=true)\n    else\n        sort(array)\n   \
    \ end\nend", "    if length(array) == 0\n        return array\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if isempty(array)\n        return array\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if length(array) ==\
    \ 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if sum(array[1], array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    # your\
    \ code here\nend", "    if length(array) == 0\n        return array\n    end\n\
    \    if length(array) == 1\n        return array\n    end\n    if (array[1] +\
    \ array[end]) % 2 == 0\n        return sort(array, rev=true)\n    else\n     \
    \   return sort(array)\n    end\nend", "    if length(array) == 0\n        return\
    \ array\n    end\n    if length(array) == 1\n        return array\n    end\n \
    \   if (array[1] + array[end]) % 2 == 0\n        return sort(array, rev=true)\n\
    \    else\n        return sort(array)\n    end\nend", "    if length(array) ==\
    \ 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if (array[1] + array[end]) % 2 == 0\n\
    \        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return array\n    end\n  \
    \  if length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if (array[1] + array[end])\
    \ % 2 == 0\n        return sort(array, rev=true)\n    else\n        return sort(array)\n\
    \    end\nend", "    if length(array) == 0\n        return []\n    end\n    if\
    \ length(array) == 1\n        return array\n    end\n    if length(array) == 2\n\
    \        if array[1] > array[2]\n            return [array[2], array[1]]\n   \
    \     else\n            return array\n        end\n    end\n    if (array[1] +\
    \ array[end]) % 2 == 0\n        return sort(array, rev=true)\n    else\n     \
    \   return sort(array)\n    end\nend", "    if length(array) == 0\n        return\
    \ array\n    end\n    if sum(array[1], array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return []\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend", "    if length(array)\
    \ == 0\n        return array\n    end\n    if length(array) == 1\n        return\
    \ array\n    end\n    if (array[1] + array[end]) % 2 == 0\n        return sort(array,\
    \ rev=true)\n    else\n        return sort(array)\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

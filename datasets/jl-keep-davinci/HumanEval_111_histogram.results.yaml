name: HumanEval_111_histogram
language: julia
results:
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpch_tgg6x.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpch_tgg6x.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpch_tgg6x.jl:28\ntest set: Test Failed at /tmp/tmpch_tgg6x.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpch_tgg6x.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpch_tgg6x.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpch_tgg6x.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ letter in keys(hist)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdjwxhq5x.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdjwxhq5x.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdjwxhq5x.jl:28\ntest set: Test Failed at /tmp/tmpdjwxhq5x.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpdjwxhq5x.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdjwxhq5x.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdjwxhq5x.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnefgzg3i.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\\
    n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:30\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\\
    n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:32\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\\
    n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\\
    n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:34\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnefgzg3i.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpnefgzg3i.jl:22\\\
    n   [5] top-level scope at /tmp/tmpnefgzg3i.jl:36\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpnefgzg3i.jl:28\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4r5znb2_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp4r5znb2_.jl:13\n   [2] top-level scope at /tmp/tmp4r5znb2_.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp4r5znb2_.jl:13\n\
    \   [2] top-level scope at /tmp/tmp4r5znb2_.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp4r5znb2_.jl:13\n   [2] top-level scope at /tmp/tmp4r5znb2_.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp4r5znb2_.jl:13\n\
    \   [2] top-level scope at /tmp/tmp4r5znb2_.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmp4r5znb2_.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp4r5znb2_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp4r5znb2_.jl:13\n\
    \   [2] top-level scope at /tmp/tmp4r5znb2_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp4r5znb2_.jl:13\n   [2] top-level scope at /tmp/tmp4r5znb2_.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4r5znb2_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp4r5znb2_.jl:13\n   [2] top-level scope at /tmp/tmp4r5znb2_.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4r5znb2_.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4r5znb2_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        hist[letter]\
    \ = get(hist, letter, 0) + 1\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp12177q3d.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp12177q3d.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12177q3d.jl:24\ntest set: Test Failed at /tmp/tmp12177q3d.jl:29\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp12177q3d.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12177q3d.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12177q3d.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict{String, Int64}()\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnlzxdzw9.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmpnlzxdzw9.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnlzxdzw9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnlzxdzw9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnlzxdzw9.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmpnlzxdzw9.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnlzxdzw9.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\ntest set: Test Failed at /tmp/tmpnlzxdzw9.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmpnlzxdzw9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnlzxdzw9.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlzxdzw9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in test\n        if letter\
    \ in keys(hist)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzzzpc15b.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\\
    n   [3] top-level scope at /tmp/tmpzzzpc15b.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpzzzpc15b.jl:30\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\\
    n   [3] top-level scope at /tmp/tmpzzzpc15b.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpzzzpc15b.jl:32\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpzzzpc15b.jl:33\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpzzzpc15b.jl:34\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzzzpc15b.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpzzzpc15b.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpzzzpc15b.jl:36\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpzzzpc15b.jl:28\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in test\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        else\n            hist[letter] = 1\n \
    \       end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkq0gpocf.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n   [5] top-level scope at /tmp/tmpkq0gpocf.jl:29\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n\
    \   [5] top-level scope at /tmp/tmpkq0gpocf.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n   [5] top-level scope at /tmp/tmpkq0gpocf.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n\
    \   [5] top-level scope at /tmp/tmpkq0gpocf.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n\
    \   [5] top-level scope at /tmp/tmpkq0gpocf.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n\
    \   [5] top-level scope at /tmp/tmpkq0gpocf.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkq0gpocf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpkq0gpocf.jl:22\n\
    \   [5] top-level scope at /tmp/tmpkq0gpocf.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpkq0gpocf.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkq0gpocf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary to store the letters and their counts\n    hist\
    \ = Dict{String, Int64}()\n    # Loop through the string\n    for letter in test\n\
    \        # If the letter is already in the dictionary, increment the count\n \
    \       if letter in keys(hist)\n            hist[letter] += 1\n        # If the\
    \ letter is not in the dictionary, add it with a count of 1\n        else\n  \
    \          hist[letter] = 1\n        end\n    end\n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0r6atq5y.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\\
    n   [3] top-level scope at /tmp/tmp0r6atq5y.jl:34\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmp0r6atq5y.jl:35\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\\
    n   [3] top-level scope at /tmp/tmp0r6atq5y.jl:36\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmp0r6atq5y.jl:37\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmp0r6atq5y.jl:38\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmp0r6atq5y.jl:39\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0r6atq5y.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp0r6atq5y.jl:23\\n   [3] top-level scope\
    \ at /tmp/tmp0r6atq5y.jl:41\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp0r6atq5y.jl:33\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_lxo34uq.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp_lxo34uq.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_lxo34uq.jl:28\\ntest set: Test Failed at /tmp/tmp_lxo34uq.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp_lxo34uq.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_lxo34uq.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1f7w7yk7.jl:22\\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1f7w7yk7.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:23\\\
    n  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1f7w7yk7.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:24\\\
    n  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1f7w7yk7.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:25\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1f7w7yk7.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:26\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1f7w7yk7.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:27\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1f7w7yk7.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\ntest set: Test Failed at /tmp/tmp1f7w7yk7.jl:29\\\
    n  Expression: candidate(\"a\") == Dict(\"a\" => 1)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1f7w7yk7.jl:29\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f7w7yk7.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjnaffrq4.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjnaffrq4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnaffrq4.jl:28\ntest set: Test Failed at /tmp/tmpjnaffrq4.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpjnaffrq4.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnaffrq4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnaffrq4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into array of letters\n    letters = split(test)\n    # Iterate through\
    \ array of letters\n    for letter in letters\n        # If letter is not in dictionary,\
    \ add it with value 1\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # If letter is in dictionary, increment value by 1\n        else\n\
    \            hist[letter] += 1\n        end\n    end\n    # Return dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm7eoi0hd.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm7eoi0hd.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7eoi0hd.jl:35\ntest set: Test Failed at /tmp/tmpm7eoi0hd.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpm7eoi0hd.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7eoi0hd.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7eoi0hd.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqd9ar_e_.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqd9ar_e_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqd9ar_e_.jl:28\ntest set: Test Failed at /tmp/tmpqd9ar_e_.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpqd9ar_e_.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqd9ar_e_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqd9ar_e_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3o4yzlnn.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3o4yzlnn.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3o4yzlnn.jl:28\ntest set: Test Failed at /tmp/tmp3o4yzlnn.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp3o4yzlnn.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3o4yzlnn.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3o4yzlnn.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Split the string into a vector of strings\n    words = split(test)\n    # Iterate\
    \ over the vector of strings\n    for word in words\n        # If the word is\
    \ not in the dictionary, add it with a count of 1\n        if !haskey(hist, word)\n\
    \            hist[word] = 1\n        # If the word is in the dictionary, increment\
    \ the count\n        else\n            hist[word] += 1\n        end\n    end\n\
    \    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0f_ahfmv.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0f_ahfmv.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0f_ahfmv.jl:35\ntest set: Test Failed at /tmp/tmp0f_ahfmv.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp0f_ahfmv.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0f_ahfmv.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0f_ahfmv.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    return Dict(test[i] => count(test, test[i]) for i in 1:length(test))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qyurrth.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ objects of type String are not callable\n  Stacktrace:\n   [1] count(::String,\
    \ ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64) at ./none:0\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _all at ./reduce.jl:819\
    \ [inlined]\n   [5] all at ./reduce.jl:815 [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n\
    \   [8] top-level scope at /tmp/tmp8qyurrth.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:21\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] count(::String, ::Char) at ./reduce.jl:855\n\
    \   [2] (::var\"#3#4\"{String})(::Int64) at ./none:0\n   [3] iterate at ./generator.jl:47\
    \ [inlined]\n   [4] _all at ./reduce.jl:819 [inlined]\n   [5] all at ./reduce.jl:815\
    \ [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}})\
    \ at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [8]\
    \ top-level scope at /tmp/tmp8qyurrth.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:22\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: objects of type String are not callable\n  Stacktrace:\n\
    \   [1] count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _all at ./reduce.jl:819\
    \ [inlined]\n   [5] all at ./reduce.jl:815 [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n\
    \   [8] top-level scope at /tmp/tmp8qyurrth.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:23\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: objects of\
    \ type String are not callable\n  Stacktrace:\n   [1] count(::String, ::Char)\
    \ at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64) at ./none:0\n  \
    \ [3] iterate at ./generator.jl:47 [inlined]\n   [4] _all at ./reduce.jl:819 [inlined]\n\
    \   [5] all at ./reduce.jl:815 [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n\
    \   [8] top-level scope at /tmp/tmp8qyurrth.jl:24\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:24\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] count(::String, ::Char) at ./reduce.jl:855\n\
    \   [2] (::var\"#3#4\"{String})(::Int64) at ./none:0\n   [3] iterate at ./generator.jl:47\
    \ [inlined]\n   [4] _all at ./reduce.jl:819 [inlined]\n   [5] all at ./reduce.jl:815\
    \ [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}})\
    \ at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [8]\
    \ top-level scope at /tmp/tmp8qyurrth.jl:25\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:25\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: objects of\
    \ type String are not callable\n  Stacktrace:\n   [1] count(::String, ::Char)\
    \ at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64) at ./none:0\n  \
    \ [3] iterate at ./generator.jl:47 [inlined]\n   [4] _all at ./reduce.jl:819 [inlined]\n\
    \   [5] all at ./reduce.jl:815 [inlined]\n   [6] Dict(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:130\n   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n\
    \   [8] top-level scope at /tmp/tmp8qyurrth.jl:26\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:26\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qyurrth.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"\
    #3#4\"{String})(::Int64) at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n\
    \   [4] _all at ./reduce.jl:819 [inlined]\n   [5] all at ./reduce.jl:815 [inlined]\n\
    \   [6] Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:130\n\
    \   [7] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [8] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:28\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8qyurrth.jl:20\n  caused by [exception 1]\n\
    \  MethodError: objects of type String are not callable\n  Stacktrace:\n   [1]\
    \ count(::String, ::Char) at ./reduce.jl:855\n   [2] (::var\"#3#4\"{String})(::Int64)\
    \ at ./none:0\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] Dict{Char,Int64}(::Base.Generator{UnitRange{Int64},var\"\
    #3#4\"{String}}) at ./dict.jl:102\n   [5] dict_with_eltype at ./abstractdict.jl:540\
    \ [inlined]\n   [6] dict_with_eltype at ./abstractdict.jl:547 [inlined]\n   [7]\
    \ Dict(::Base.Generator{UnitRange{Int64},var\"#3#4\"{String}}) at ./dict.jl:128\n\
    \   [8] histogram(::String) at /tmp/tmp8qyurrth.jl:14\n   [9] top-level scope\
    \ at /tmp/tmp8qyurrth.jl:28\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp8qyurrth.jl:20\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qyurrth.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Split the string into a vector of strings\n    words = split(test)\n    # Iterate\
    \ over the vector of strings\n    for word in words\n        # If the word is\
    \ not in the dictionary, add it with a count of 1\n        if !haskey(hist, word)\n\
    \            hist[word] = 1\n        # If the word is in the dictionary, increment\
    \ the count\n        else\n            hist[word] += 1\n        end\n    end\n\
    \    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpypuuw_7y.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpypuuw_7y.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpypuuw_7y.jl:35\ntest set: Test Failed at /tmp/tmpypuuw_7y.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpypuuw_7y.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpypuuw_7y.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpypuuw_7y.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if c != ' '\n\
    \            if haskey(hist, c)\n                hist[c] += 1\n            else\n\
    \                hist[c] = 1\n            end\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9sdl2e2o.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n\
    \   [3] top-level scope at /tmp/tmp9sdl2e2o.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp9sdl2e2o.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n\
    \   [3] top-level scope at /tmp/tmp9sdl2e2o.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp9sdl2e2o.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp9sdl2e2o.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp9sdl2e2o.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sdl2e2o.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9sdl2e2o.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp9sdl2e2o.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9sdl2e2o.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sdl2e2o.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphewdsa_z.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphewdsa_z.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphewdsa_z.jl:28\ntest set: Test Failed at /tmp/tmphewdsa_z.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmphewdsa_z.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphewdsa_z.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphewdsa_z.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgnk0anlx.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgnk0anlx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgnk0anlx.jl:28\ntest set: Test Failed at /tmp/tmpgnk0anlx.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgnk0anlx.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgnk0anlx.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnk0anlx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplzxoiacj.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplzxoiacj.jl:13\n   [2] top-level scope at /tmp/tmplzxoiacj.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplzxoiacj.jl:13\n\
    \   [2] top-level scope at /tmp/tmplzxoiacj.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplzxoiacj.jl:13\n   [2] top-level scope at /tmp/tmplzxoiacj.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplzxoiacj.jl:13\n\
    \   [2] top-level scope at /tmp/tmplzxoiacj.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmplzxoiacj.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplzxoiacj.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplzxoiacj.jl:13\n\
    \   [2] top-level scope at /tmp/tmplzxoiacj.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplzxoiacj.jl:13\n   [2] top-level scope at /tmp/tmplzxoiacj.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplzxoiacj.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplzxoiacj.jl:13\n   [2] top-level scope at /tmp/tmplzxoiacj.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplzxoiacj.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzxoiacj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Split the string into an array of characters\n    letters = split(test,\
    \ \" \")\n    # Create a dictionary of the characters and their counts\n    counts\
    \ = Dict{String, Int64}()\n    for letter in letters\n        counts[letter] =\
    \ get(counts, letter, 0) + 1\n    end\n    # Create a dictionary of the maximum\
    \ counts and their corresponding characters\n    max_counts = Dict{Int64, Array{String,\
    \ 1}}()\n    for (letter, count) in counts\n        max_counts[count] = get(max_counts,\
    \ count, [])\n        push!(max_counts[count], letter)\n    end\n    # Return\
    \ the dictionary of the maximum counts and their corresponding characters\n  \
    \  return max_counts[maximum(keys(max_counts))]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn75xl5ws.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Array{String,1} to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Array{String,1} to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Array{String,1} to an\
    \ object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Array{String,1} to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Array{String,1} to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level\
    \ scope at /tmp/tmpn75xl5ws.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Array{String,1} to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type Array{String,1}\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn75xl5ws.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Array{String,1}\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpn75xl5ws.jl:28\n   [2] top-level scope at /tmp/tmpn75xl5ws.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn75xl5ws.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn75xl5ws.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ iterate through the string\n    for letter in test\n        # if the letter\
    \ is already in the dictionary, increment the count\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        # if the letter is not in the dictionary,\
    \ add it and set the count to 1\n        else\n            hist[letter] = 1\n\
    \        end\n    end\n    # return the dictionary\n    return hist\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b\
    \ a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm3ai0waf.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n\
    \   [3] top-level scope at /tmp/tmpm3ai0waf.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n   [3] top-level scope at\
    \ /tmp/tmpm3ai0waf.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n\
    \   [3] top-level scope at /tmp/tmpm3ai0waf.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n   [3] top-level scope at\
    \ /tmp/tmpm3ai0waf.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n   [3] top-level scope at\
    \ /tmp/tmpm3ai0waf.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n   [3] top-level scope at\
    \ /tmp/tmpm3ai0waf.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3ai0waf.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpm3ai0waf.jl:23\n   [3] top-level scope at\
    \ /tmp/tmpm3ai0waf.jl:41\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm3ai0waf.jl:33\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3ai0waf.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    test = split(test)\n    hist = Dict{String, Int64}()\n    for i in test\n\
    \        if i in keys(hist)\n            hist[i] += 1\n        else\n        \
    \    hist[i] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpslishhhb.jl:31\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpslishhhb.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpslishhhb.jl:29\\ntest set: Test Failed at /tmp/tmpslishhhb.jl:34\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpslishhhb.jl:34\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpslishhhb.jl:29\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if c in keys(hist)\n\
    \            hist[c] += 1\n        else\n            hist[c] = 1\n        end\n\
    \    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnwibcvyq.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n\
    \   [3] top-level scope at /tmp/tmpnwibcvyq.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpnwibcvyq.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n\
    \   [3] top-level scope at /tmp/tmpnwibcvyq.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpnwibcvyq.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpnwibcvyq.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpnwibcvyq.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwibcvyq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpnwibcvyq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpnwibcvyq.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpnwibcvyq.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnwibcvyq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if letter in keys(letters)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmuk2to_i.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpmuk2to_i.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmuk2to_i.jl:28\\ntest set: Test Failed at /tmp/tmpmuk2to_i.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpmuk2to_i.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmuk2to_i.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Split the string into a vector of words\n    words = split(test)\n    # Iterate\
    \ over the vector of words\n    for word in words\n        # If the word is not\
    \ in the dictionary, add it\n        if !haskey(hist, word)\n            hist[word]\
    \ = 1\n        # If the word is in the dictionary, increment the count\n     \
    \   else\n            hist[word] += 1\n        end\n    end\n    # Return the\
    \ dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp75rpyqrw.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp75rpyqrw.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp75rpyqrw.jl:35\ntest set: Test Failed at /tmp/tmp75rpyqrw.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp75rpyqrw.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp75rpyqrw.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75rpyqrw.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxqaevg5m.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxqaevg5m.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxqaevg5m.jl:28\ntest set: Test Failed at /tmp/tmpxqaevg5m.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpxqaevg5m.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxqaevg5m.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqaevg5m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    if test == \"\"\n        return Dict{String, Int64}()\n    end\n    hist\
    \ = Dict{String, Int64}()\n    for c in test\n        if haskey(hist, c)\n   \
    \         hist[c] += 1\n        else\n            hist[c] = 1\n        end\n \
    \   end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl11fjugx.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n\
    \   [3] top-level scope at /tmp/tmpl11fjugx.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n   [3] top-level scope at\
    \ /tmp/tmpl11fjugx.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n\
    \   [3] top-level scope at /tmp/tmpl11fjugx.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n   [3] top-level scope at\
    \ /tmp/tmpl11fjugx.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n   [3] top-level scope at\
    \ /tmp/tmpl11fjugx.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n   [3] top-level scope at\
    \ /tmp/tmpl11fjugx.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpl11fjugx.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpl11fjugx.jl:22\n   [3] top-level scope at\
    \ /tmp/tmpl11fjugx.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpl11fjugx.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl11fjugx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if c in keys(hist)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaznjz2z_.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\\
    n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:30\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\\
    n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:32\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\\
    n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\\
    n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:34\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaznjz2z_.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpaznjz2z_.jl:22\\\
    n   [5] top-level scope at /tmp/tmpaznjz2z_.jl:36\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpaznjz2z_.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    histogram = Dict()\n    for letter in split(test)\n        if haskey(histogram,\
    \ letter)\n            histogram[letter] += 1\n        else\n            histogram[letter]\
    \ = 1\n        end\n    end\n    return histogram\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx_g4wlvv.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx_g4wlvv.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx_g4wlvv.jl:28\ntest set: Test Failed at /tmp/tmpx_g4wlvv.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpx_g4wlvv.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx_g4wlvv.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_g4wlvv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxq_g2e4n.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxq_g2e4n.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxq_g2e4n.jl:28\ntest set: Test Failed at /tmp/tmpxq_g2e4n.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpxq_g2e4n.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxq_g2e4n.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq_g2e4n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5n1kyyfv.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5n1kyyfv.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5n1kyyfv.jl:28\\ntest set: Test Failed at /tmp/tmp5n1kyyfv.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp5n1kyyfv.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5n1kyyfv.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # initialize an empty dictionary\n    hist = Dict{String, Int64}()\n \
    \   # split the string into a vector of characters\n    chars = split(test)\n\
    \    # loop over the characters\n    for c in chars\n        # if the character\
    \ is not in the dictionary, add it\n        if !haskey(hist, c)\n            hist[c]\
    \ = 1\n        # otherwise, increment the count\n        else\n            hist[c]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptz6goxz4.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptz6goxz4.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptz6goxz4.jl:35\ntest set: Test Failed at /tmp/tmptz6goxz4.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmptz6goxz4.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptz6goxz4.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptz6goxz4.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbk0i11js.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpbk0i11js.jl:22\n   [5] top-level scope at /tmp/tmpbk0i11js.jl:29\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpbk0i11js.jl:22\n\
    \   [5] top-level scope at /tmp/tmpbk0i11js.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpbk0i11js.jl:22\n   [5] top-level scope at /tmp/tmpbk0i11js.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpbk0i11js.jl:22\n\
    \   [5] top-level scope at /tmp/tmpbk0i11js.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpbk0i11js.jl:22\n\
    \   [5] top-level scope at /tmp/tmpbk0i11js.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpbk0i11js.jl:22\n\
    \   [5] top-level scope at /tmp/tmpbk0i11js.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpbk0i11js.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpbk0i11js.jl:22\n\
    \   [5] top-level scope at /tmp/tmpbk0i11js.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpbk0i11js.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbk0i11js.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in test\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        else\n            hist[letter] = 1\n \
    \       end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmgi2mnxe.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:29\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n\
    \   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n\
    \   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n\
    \   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n\
    \   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmgi2mnxe.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpmgi2mnxe.jl:22\n\
    \   [5] top-level scope at /tmp/tmpmgi2mnxe.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpmgi2mnxe.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmgi2mnxe.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7y_kxlwb.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7y_kxlwb.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7y_kxlwb.jl:28\ntest set: Test Failed at /tmp/tmp7y_kxlwb.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp7y_kxlwb.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7y_kxlwb.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7y_kxlwb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a vector of strings\n    words = split(test)\n    # loop over the\
    \ vector\n    for word in words\n        # if the word is not in the dictionary,\
    \ add it\n        if !haskey(hist, word)\n            hist[word] = 1\n       \
    \ # if the word is in the dictionary, increment the count\n        else\n    \
    \        hist[word] += 1\n        end\n    end\n    # return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsujvhrfr.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsujvhrfr.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsujvhrfr.jl:35\ntest set: Test Failed at /tmp/tmpsujvhrfr.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpsujvhrfr.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsujvhrfr.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsujvhrfr.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw6dod7ta.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpw6dod7ta.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6dod7ta.jl:28\\ntest set: Test Failed at /tmp/tmpw6dod7ta.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpw6dod7ta.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw6dod7ta.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpikx01gjr.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\\
    n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n    ...\\\
    n  Stacktrace:\\n   [1] histogram(::String) at /tmp/tmpikx01gjr.jl:13\\n   [2]\
    \ top-level scope at /tmp/tmpikx01gjr.jl:25\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == Dict()\\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpikx01gjr.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpikx01gjr.jl:13\\n   [2] top-level scope at /tmp/tmpikx01gjr.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpikx01gjr.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     8      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpikx01gjr.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu3ichfjt.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu3ichfjt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3ichfjt.jl:28\ntest set: Test Failed at /tmp/tmpu3ichfjt.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu3ichfjt.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3ichfjt.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3ichfjt.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqwy78mzw.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqwy78mzw.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqwy78mzw.jl:28\\ntest set: Test Failed at /tmp/tmpqwy78mzw.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpqwy78mzw.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqwy78mzw.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpewud9v9r.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpewud9v9r.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpewud9v9r.jl:28\ntest set: Test Failed at /tmp/tmpewud9v9r.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpewud9v9r.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpewud9v9r.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpewud9v9r.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfy2abmme.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpfy2abmme.jl:22\n   [5] top-level scope at /tmp/tmpfy2abmme.jl:29\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpfy2abmme.jl:22\n\
    \   [5] top-level scope at /tmp/tmpfy2abmme.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpfy2abmme.jl:22\n   [5] top-level scope at /tmp/tmpfy2abmme.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpfy2abmme.jl:22\n\
    \   [5] top-level scope at /tmp/tmpfy2abmme.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpfy2abmme.jl:22\n\
    \   [5] top-level scope at /tmp/tmpfy2abmme.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpfy2abmme.jl:22\n\
    \   [5] top-level scope at /tmp/tmpfy2abmme.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpfy2abmme.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpfy2abmme.jl:22\n\
    \   [5] top-level scope at /tmp/tmpfy2abmme.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpfy2abmme.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfy2abmme.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary with the letters as keys and the count as values\n\
    \    hist = Dict()\n    for letter in test\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        else\n            hist[letter] = 1\n \
    \       end\n    end\n    # find the maximum value\n    max_value = maximum(values(hist))\n\
    \    # create a dictionary with the letters that have the maximum value as keys\
    \ and the maximum value as values\n    hist_max = Dict()\n    for key in keys(hist)\n\
    \        if hist[key] == max_value\n            hist_max[key] = max_value\n  \
    \      end\n    end\n    return hist_max\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoodc3kxs.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:39\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\\
    n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:40\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:41\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\\
    n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:42\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\\
    n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:43\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:44\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\\
    n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:44\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:45\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == Dict()\\n  ArgumentError: reducing over an empty collection is not allowed\\\
    n  Stacktrace:\\n   [1] _empty_reduce_error() at ./reduce.jl:295\\n   [2] reduce_empty(::Function,\
    \ ::Type{T} where T) at ./reduce.jl:305\\n   [3] reduce_empty(::Base.BottomRF{typeof(max)},\
    \ ::Type{T} where T) at ./reduce.jl:320\\n   [4] reduce_empty_iter at ./reduce.jl:347\
    \ [inlined]\\n   [5] reduce_empty_iter at ./reduce.jl:346 [inlined]\\n   [6] foldl_impl\
    \ at ./reduce.jl:46 [inlined]\\n   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\\\
    n   [8] #mapfoldl#189 at ./reduce.jl:157 [inlined]\\n   [9] mapfoldl at ./reduce.jl:157\
    \ [inlined]\\n   [10] #mapreduce#193 at ./reduce.jl:283 [inlined]\\n   [11] mapreduce\
    \ at ./reduce.jl:283 [inlined]\\n   [12] maximum at ./reduce.jl:644 [inlined]\\\
    n   [13] histogram(::String) at /tmp/tmpoodc3kxs.jl:24\\n   [14] top-level scope\
    \ at /tmp/tmpoodc3kxs.jl:45\\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [16] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoodc3kxs.jl:46\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpoodc3kxs.jl:32\\\
    n   [5] top-level scope at /tmp/tmpoodc3kxs.jl:46\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpoodc3kxs.jl:38\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     8      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpoodc3kxs.jl:36\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary\n    hist = Dict{String, Int64}()\n    # Split the\
    \ string into an array of words\n    words = split(test)\n    # For each word\
    \ in the array\n    for word in words\n        # If the word is already in the\
    \ dictionary\n        if haskey(hist, word)\n            # Increment the count\n\
    \            hist[word] += 1\n        else\n            # Add the word to the\
    \ dictionary with a count of 1\n            hist[word] = 1\n        end\n    end\n\
    \    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpct0shklx.jl:38\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpct0shklx.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpct0shklx.jl:36\ntest set: Test Failed at /tmp/tmpct0shklx.jl:41\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpct0shklx.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpct0shklx.jl:36\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpct0shklx.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1qtfsr7o.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1qtfsr7o.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qtfsr7o.jl:28\ntest set: Test Failed at /tmp/tmp1qtfsr7o.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp1qtfsr7o.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qtfsr7o.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1qtfsr7o.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # initialize dictionary\n    hist = Dict{String, Int64}()\n    # iterate\
    \ through each letter\n    for letter in test\n        # if the letter is not\
    \ in the dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # if the letter is in the dictionary, increment the count\n   \
    \     else\n            hist[letter] += 1\n        end\n    end\n    # return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3t9vjerv.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n\
    \   [3] top-level scope at /tmp/tmp3t9vjerv.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp3t9vjerv.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n\
    \   [3] top-level scope at /tmp/tmp3t9vjerv.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp3t9vjerv.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp3t9vjerv.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp3t9vjerv.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp3t9vjerv.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp3t9vjerv.jl:20\n   [3] top-level scope at\
    \ /tmp/tmp3t9vjerv.jl:41\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3t9vjerv.jl:33\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3t9vjerv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in test\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1ab0eedl.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\\
    n   [3] top-level scope at /tmp/tmp1ab0eedl.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp1ab0eedl.jl:30\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\\
    n   [3] top-level scope at /tmp/tmp1ab0eedl.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp1ab0eedl.jl:32\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp1ab0eedl.jl:33\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp1ab0eedl.jl:34\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1ab0eedl.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp1ab0eedl.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp1ab0eedl.jl:36\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp1ab0eedl.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppkft1sgk.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmppkft1sgk.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppkft1sgk.jl:28\\ntest set: Test Failed at /tmp/tmppkft1sgk.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmppkft1sgk.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppkft1sgk.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary with the letters as keys and the number of occurrences\
    \ as values\n    hist = Dict{String, Int64}()\n    for letter in split(test)\n\
    \        hist[letter] = get(hist, letter, 0) + 1\n    end\n    \n    # Find the\
    \ maximum value in the dictionary\n    max_value = maximum(values(hist))\n   \
    \ \n    # Create a dictionary with the letters as keys and the number of occurrences\
    \ as values\n    hist_max = Dict{String, Int64}()\n    for (key, value) in hist\n\
    \        if value == max_value\n            hist_max[key] = value\n        end\n\
    \    end\n    \n    return hist_max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpga4xkgz9.jl:44\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmpga4xkgz9.jl:21\n   [14] top-level scope at /tmp/tmpga4xkgz9.jl:44\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpga4xkgz9.jl:37\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpga4xkgz9.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu3ynz_vc.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu3ynz_vc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3ynz_vc.jl:28\ntest set: Test Failed at /tmp/tmpu3ynz_vc.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu3ynz_vc.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3ynz_vc.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3ynz_vc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwr5kglm0.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwr5kglm0.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwr5kglm0.jl:28\ntest set: Test Failed at /tmp/tmpwr5kglm0.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwr5kglm0.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwr5kglm0.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwr5kglm0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnxyr0w1_.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnxyr0w1_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnxyr0w1_.jl:28\ntest set: Test Failed at /tmp/tmpnxyr0w1_.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpnxyr0w1_.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnxyr0w1_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnxyr0w1_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfpgylwt.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyfpgylwt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfpgylwt.jl:28\ntest set: Test Failed at /tmp/tmpyfpgylwt.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpyfpgylwt.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfpgylwt.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfpgylwt.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary to store the letters and their counts\n    histogram\
    \ = Dict{String, Int64}()\n    # Split the string into a vector of letters\n \
    \   letters = split(test)\n    # Loop through the letters\n    for letter in letters\n\
    \        # If the letter is already in the dictionary, increment the count\n \
    \       if haskey(histogram, letter)\n            histogram[letter] += 1\n   \
    \     # If the letter is not in the dictionary, add it with a count of 1\n   \
    \     else\n            histogram[letter] = 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return histogram\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfwb53dt4.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpfwb53dt4.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfwb53dt4.jl:35\\ntest set: Test Failed at /tmp/tmpfwb53dt4.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpfwb53dt4.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfwb53dt4.jl:35\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    #initialize empty dictionary\n    hist = Dict()\n    #split string into\
    \ array of characters\n    test = split(test)\n    #iterate through array\n  \
    \  for i in test\n        #if character is not in dictionary, add it with value\
    \ 1\n        if !haskey(hist, i)\n            hist[i] = 1\n        #if character\
    \ is in dictionary, increment value by 1\n        else\n            hist[i] +=\
    \ 1\n        end\n    end\n    #return dictionary\n    return hist\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b\
    \ a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz_bd1pyy.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpz_bd1pyy.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_bd1pyy.jl:35\ntest set: Test Failed at /tmp/tmpz_bd1pyy.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpz_bd1pyy.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_bd1pyy.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_bd1pyy.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        hist[letter]\
    \ = get(hist, letter, 0) + 1\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgv4_q95p.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgv4_q95p.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgv4_q95p.jl:24\ntest set: Test Failed at /tmp/tmpgv4_q95p.jl:29\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgv4_q95p.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgv4_q95p.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgv4_q95p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary with the letters as keys and the count as values\n\
    \    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    # create a dictionary with the count as keys\
    \ and the letters as values\n    hist_count = Dict{Int64, String}()\n    for (letter,\
    \ count) in hist\n        if haskey(hist_count, count)\n            hist_count[count]\
    \ = \"$(hist_count[count]) $letter\"\n        else\n            hist_count[count]\
    \ = \"$letter\"\n        end\n    end\n    # find the maximum count\n    max_count\
    \ = maximum(collect(keys(hist_count)))\n    # create a dictionary with the letters\
    \ as keys and the count as values\n    hist_max = Dict{String, Int64}()\n    for\
    \ letter in split(hist_count[max_count])\n        hist_max[letter] = max_count\n\
    \    end\n    return hist_max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvnekchq9.jl:52\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ mapreduce_empty(::typeof(identity), ::Function, ::Type{T} where T) at ./reduce.jl:335\n\
    \   [4] _mapreduce at ./reduce.jl:392 [inlined]\n   [5] _mapreduce_dim at ./reducedim.jl:312\
    \ [inlined]\n   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]\n   [7] mapreduce\
    \ at ./reducedim.jl:307 [inlined]\n   [8] _maximum at ./reducedim.jl:657 [inlined]\n\
    \   [9] _maximum at ./reducedim.jl:656 [inlined]\n   [10] #maximum#587 at ./reducedim.jl:652\
    \ [inlined]\n   [11] maximum at ./reducedim.jl:652 [inlined]\n   [12] histogram(::String)\
    \ at /tmp/tmpvnekchq9.jl:33\n   [13] top-level scope at /tmp/tmpvnekchq9.jl:52\n\
    \   [14] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [15] top-level scope at /tmp/tmpvnekchq9.jl:45\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvnekchq9.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcxewkvw.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfcxewkvw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcxewkvw.jl:28\ntest set: Test Failed at /tmp/tmpfcxewkvw.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpfcxewkvw.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcxewkvw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcxewkvw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuus4uy9f.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpuus4uy9f.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuus4uy9f.jl:28\ntest set: Test Failed at /tmp/tmpuus4uy9f.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpuus4uy9f.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuus4uy9f.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuus4uy9f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9xaf5681.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n\
    \   [3] top-level scope at /tmp/tmp9xaf5681.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp9xaf5681.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n\
    \   [3] top-level scope at /tmp/tmp9xaf5681.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp9xaf5681.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp9xaf5681.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp9xaf5681.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9xaf5681.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp9xaf5681.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp9xaf5681.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9xaf5681.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9xaf5681.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize the dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ the string into a vector of strings\n    test_vec = split(test)\n    # Iterate\
    \ over the vector\n    for i in test_vec\n        # If the letter is already in\
    \ the dictionary, increment the count\n        if haskey(hist, i)\n          \
    \  hist[i] += 1\n        # If the letter is not in the dictionary, add it with\
    \ a count of 1\n        else\n            hist[i] = 1\n        end\n    end\n\
    \    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt9693_hq.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt9693_hq.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt9693_hq.jl:35\ntest set: Test Failed at /tmp/tmpt9693_hq.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpt9693_hq.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt9693_hq.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt9693_hq.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqil2d8l3.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqil2d8l3.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqil2d8l3.jl:28\\ntest set: Test Failed at /tmp/tmpqil2d8l3.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpqil2d8l3.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqil2d8l3.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc89p3aw0.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n\
    \   [3] top-level scope at /tmp/tmpc89p3aw0.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpc89p3aw0.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n\
    \   [3] top-level scope at /tmp/tmpc89p3aw0.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpc89p3aw0.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpc89p3aw0.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpc89p3aw0.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpc89p3aw0.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpc89p3aw0.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpc89p3aw0.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc89p3aw0.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc89p3aw0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8jbjatka.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp8jbjatka.jl:13\n   [2] top-level scope at /tmp/tmp8jbjatka.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp8jbjatka.jl:13\n\
    \   [2] top-level scope at /tmp/tmp8jbjatka.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp8jbjatka.jl:13\n   [2] top-level scope at /tmp/tmp8jbjatka.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp8jbjatka.jl:13\n\
    \   [2] top-level scope at /tmp/tmp8jbjatka.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmp8jbjatka.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp8jbjatka.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp8jbjatka.jl:13\n\
    \   [2] top-level scope at /tmp/tmp8jbjatka.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp8jbjatka.jl:13\n   [2] top-level scope at /tmp/tmp8jbjatka.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8jbjatka.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp8jbjatka.jl:13\n   [2] top-level scope at /tmp/tmp8jbjatka.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8jbjatka.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8jbjatka.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary to store the letters and their counts\n    hist\
    \ = Dict{String, Int64}()\n    # iterate over the letters in the string\n    for\
    \ letter in split(test)\n        # if the letter is not in the dictionary, add\
    \ it with a count of 1\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # if the letter is in the dictionary, increment the count\n   \
    \     else\n            hist[letter] += 1\n        end\n    end\n    # return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmp_u7935.jl:35\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmp_u7935.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmp_u7935.jl:33\ntest set: Test Failed at /tmp/tmpmp_u7935.jl:38\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpmp_u7935.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmp_u7935.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmp_u7935.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = split(test)\n    hist = Dict{String, Int64}()\n    for letter\
    \ in letters\n        if haskey(hist, letter)\n            hist[letter] += 1\n\
    \        else\n            hist[letter] = 1\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfnaeiuqi.jl:31\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfnaeiuqi.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfnaeiuqi.jl:29\ntest set: Test Failed at /tmp/tmpfnaeiuqi.jl:34\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpfnaeiuqi.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfnaeiuqi.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnaeiuqi.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize the dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ the string into an array of letters\n    letters = split(test)\n    # Iterate\
    \ over the array\n    for letter in letters\n        # If the letter is not in\
    \ the dictionary, initialize it with a count of 1\n        if !haskey(hist, letter)\n\
    \            hist[letter] = 1\n        # Otherwise, increment the count\n    \
    \    else\n            hist[letter] += 1\n        end\n    end\n    # Return the\
    \ dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsl9lrtxw.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsl9lrtxw.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsl9lrtxw.jl:35\ntest set: Test Failed at /tmp/tmpsl9lrtxw.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpsl9lrtxw.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsl9lrtxw.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsl9lrtxw.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplswegkj6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplswegkj6.jl:13\n   [2] top-level scope at /tmp/tmplswegkj6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplswegkj6.jl:13\n\
    \   [2] top-level scope at /tmp/tmplswegkj6.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplswegkj6.jl:13\n   [2] top-level scope at /tmp/tmplswegkj6.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplswegkj6.jl:13\n\
    \   [2] top-level scope at /tmp/tmplswegkj6.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmplswegkj6.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplswegkj6.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplswegkj6.jl:13\n\
    \   [2] top-level scope at /tmp/tmplswegkj6.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplswegkj6.jl:13\n   [2] top-level scope at /tmp/tmplswegkj6.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplswegkj6.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplswegkj6.jl:13\n   [2] top-level scope at /tmp/tmplswegkj6.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplswegkj6.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplswegkj6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split the string into a vector of characters\n    letters = split(test)\n\
    \    # create a dictionary of the letters\n    letter_dict = Dict{String, Int64}()\n\
    \    for letter in letters\n        if letter in keys(letter_dict)\n         \
    \   letter_dict[letter] += 1\n        else\n            letter_dict[letter] =\
    \ 1\n        end\n    end\n    # find the maximum value in the dictionary\n  \
    \  max_value = maximum(values(letter_dict))\n    # create a new dictionary with\
    \ the letters that have the maximum value\n    max_dict = Dict{String, Int64}()\n\
    \    for (key, value) in letter_dict\n        if value == max_value\n        \
    \    max_dict[key] = value\n        end\n    end\n    return max_dict\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b\
    \ a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpryy6f1lt.jl:47\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmpryy6f1lt.jl:26\n   [14] top-level scope at /tmp/tmpryy6f1lt.jl:47\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpryy6f1lt.jl:40\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpryy6f1lt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Split the string into an array of characters\n    letters = split(test)\n\
    \    # Initialize the dictionary\n    hist = Dict{String, Int64}()\n    # Iterate\
    \ over the array of characters\n    for letter in letters\n        # If the letter\
    \ is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # If the letter is in the dictionary,\
    \ increment the count\n        else\n            hist[letter] += 1\n        end\n\
    \    end\n    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqh5j4xac.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqh5j4xac.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqh5j4xac.jl:35\ntest set: Test Failed at /tmp/tmpqh5j4xac.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpqh5j4xac.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqh5j4xac.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh5j4xac.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Your code here\n    return Dict{String, Int64}()\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpio0agrsx.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmpio0agrsx.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpio0agrsx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpio0agrsx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpio0agrsx.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmpio0agrsx.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpio0agrsx.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\ntest set: Test Failed at /tmp/tmpio0agrsx.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmpio0agrsx.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpio0agrsx.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpio0agrsx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_qlpejr.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph_qlpejr.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_qlpejr.jl:28\ntest set: Test Failed at /tmp/tmph_qlpejr.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmph_qlpejr.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_qlpejr.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_qlpejr.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyrvglvy0.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpyrvglvy0.jl:13\n   [2] top-level scope at /tmp/tmpyrvglvy0.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpyrvglvy0.jl:13\n\
    \   [2] top-level scope at /tmp/tmpyrvglvy0.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpyrvglvy0.jl:13\n   [2] top-level scope at /tmp/tmpyrvglvy0.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpyrvglvy0.jl:13\n\
    \   [2] top-level scope at /tmp/tmpyrvglvy0.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmpyrvglvy0.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpyrvglvy0.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpyrvglvy0.jl:13\n\
    \   [2] top-level scope at /tmp/tmpyrvglvy0.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpyrvglvy0.jl:13\n   [2] top-level scope at /tmp/tmpyrvglvy0.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrvglvy0.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpyrvglvy0.jl:13\n   [2] top-level scope at /tmp/tmpyrvglvy0.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrvglvy0.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyrvglvy0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a vector of strings\n    words = split(test)\n    # iterate over\
    \ the vector\n    for word in words\n        # if the word is not in the dictionary,\
    \ add it with a count of 1\n        if !haskey(hist, word)\n            hist[word]\
    \ = 1\n        # otherwise, increment the count\n        else\n            hist[word]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20ezvo7u.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp20ezvo7u.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp20ezvo7u.jl:35\ntest set: Test Failed at /tmp/tmp20ezvo7u.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp20ezvo7u.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp20ezvo7u.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20ezvo7u.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Split the string into an array of characters\n    test_array = split(test)\n\
    \    # Iterate through the array\n    for i in test_array\n        # If the character\
    \ is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ i)\n            hist[i] = 1\n        # If the character is in the dictionary,\
    \ increment the count by 1\n        else\n            hist[i] += 1\n        end\n\
    \    end\n    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpout69oes.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpout69oes.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpout69oes.jl:35\\ntest set: Test Failed at /tmp/tmpout69oes.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpout69oes.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpout69oes.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw8nu9ca4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpw8nu9ca4.jl:13\n   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpw8nu9ca4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpw8nu9ca4.jl:13\n   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpw8nu9ca4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmpw8nu9ca4.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpw8nu9ca4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpw8nu9ca4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpw8nu9ca4.jl:13\n   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpw8nu9ca4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpw8nu9ca4.jl:13\n   [2] top-level scope at /tmp/tmpw8nu9ca4.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw8nu9ca4.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw8nu9ca4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp86smtvj_.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp86smtvj_.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp86smtvj_.jl:28\\ntest set: Test Failed at /tmp/tmp86smtvj_.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp86smtvj_.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp86smtvj_.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpldvas6w2.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpldvas6w2.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpldvas6w2.jl:28\ntest set: Test Failed at /tmp/tmpldvas6w2.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpldvas6w2.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpldvas6w2.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpldvas6w2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdq_s0z_n.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdq_s0z_n.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdq_s0z_n.jl:28\ntest set: Test Failed at /tmp/tmpdq_s0z_n.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpdq_s0z_n.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdq_s0z_n.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdq_s0z_n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgui8g0_3.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n\
    \   [3] top-level scope at /tmp/tmpgui8g0_3.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgui8g0_3.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n\
    \   [3] top-level scope at /tmp/tmpgui8g0_3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgui8g0_3.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgui8g0_3.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgui8g0_3.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgui8g0_3.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgui8g0_3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgui8g0_3.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgui8g0_3.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgui8g0_3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into array of letters\n    letters = split(test)\n    # Loop through\
    \ letters\n    for letter in letters\n        # If letter is not in dictionary,\
    \ add it\n        if !haskey(hist, letter)\n            hist[letter] = 1\n   \
    \     # If letter is in dictionary, increment count\n        else\n          \
    \  hist[letter] += 1\n        end\n    end\n    # Return dictionary\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgjavf3su.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgjavf3su.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgjavf3su.jl:35\ntest set: Test Failed at /tmp/tmpgjavf3su.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgjavf3su.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgjavf3su.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjavf3su.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwa_p0tu1.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:29\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n\
    \   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\n   [3] convert at ./abstractdict.jl:489 [inlined]\n   [4]\
    \ histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n\
    \   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n\
    \   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n\
    \   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpwa_p0tu1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\n   [4] histogram(::String) at /tmp/tmpwa_p0tu1.jl:22\n\
    \   [5] top-level scope at /tmp/tmpwa_p0tu1.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpwa_p0tu1.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwa_p0tu1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp66yudv9m.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp66yudv9m.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp66yudv9m.jl:28\ntest set: Test Failed at /tmp/tmp66yudv9m.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp66yudv9m.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp66yudv9m.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66yudv9m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ split the string into an array of words\n    words = split(test)\n    # loop\
    \ through the words\n    for word in words\n        # if the word is not in the\
    \ dictionary, add it\n        if !haskey(hist, word)\n            hist[word] =\
    \ 1\n        # otherwise, increment the count\n        else\n            hist[word]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppgyrru_h.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmppgyrru_h.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgyrru_h.jl:35\\ntest set: Test Failed at /tmp/tmppgyrru_h.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmppgyrru_h.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgyrru_h.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    histogram = Dict()\n    for letter in split(test)\n        if haskey(histogram,\
    \ letter)\n            histogram[letter] += 1\n        else\n            histogram[letter]\
    \ = 1\n        end\n    end\n    return histogram\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq06bnlnx.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpq06bnlnx.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq06bnlnx.jl:28\\ntest set: Test Failed at /tmp/tmpq06bnlnx.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpq06bnlnx.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq06bnlnx.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary to store the letters and their count\n    hist =\
    \ Dict{String, Int64}()\n    # iterate over the string\n    for letter in test\n\
    \        # if the letter is not in the dictionary, add it\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # if the letter is in the dictionary,\
    \ increment the count\n        else\n            hist[letter] += 1\n        end\n\
    \    end\n    # return the dictionary\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6xb1d1lw.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\\
    n   [3] top-level scope at /tmp/tmp6xb1d1lw.jl:34\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\n   [3] top-level scope\
    \ at /tmp/tmp6xb1d1lw.jl:35\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\\
    n   [3] top-level scope at /tmp/tmp6xb1d1lw.jl:36\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\n   [3] top-level scope\
    \ at /tmp/tmp6xb1d1lw.jl:37\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\n   [3] top-level scope\
    \ at /tmp/tmp6xb1d1lw.jl:38\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\n   [3] top-level scope\
    \ at /tmp/tmp6xb1d1lw.jl:39\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xb1d1lw.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp6xb1d1lw.jl:20\\n   [3] top-level scope\
    \ at /tmp/tmp6xb1d1lw.jl:41\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xb1d1lw.jl:33\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm_834fau.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmpm_834fau.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm_834fau.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm_834fau.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm_834fau.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmpm_834fau.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm_834fau.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\ntest set: Test Failed at /tmp/tmpm_834fau.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmpm_834fau.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_834fau.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm_834fau.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    histogram = Dict{String, Int64}()\n    for letter in split(test)\n   \
    \     if haskey(histogram, letter)\n            histogram[letter] += 1\n     \
    \   else\n            histogram[letter] = 1\n        end\n    end\n    return\
    \ histogram\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjr9nbh_g.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpjr9nbh_g.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjr9nbh_g.jl:28\\ntest set: Test Failed at /tmp/tmpjr9nbh_g.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpjr9nbh_g.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjr9nbh_g.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in split(test)\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjinm3vmy.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjinm3vmy.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjinm3vmy.jl:28\ntest set: Test Failed at /tmp/tmpjinm3vmy.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpjinm3vmy.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjinm3vmy.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjinm3vmy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9tswnbja.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmp9tswnbja.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9tswnbja.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9tswnbja.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9tswnbja.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmp9tswnbja.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9tswnbja.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\ntest set: Test Failed at /tmp/tmp9tswnbja.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmp9tswnbja.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9tswnbja.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9tswnbja.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdy93843m.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpdy93843m.jl:13\n   [2] top-level scope at /tmp/tmpdy93843m.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpdy93843m.jl:13\n\
    \   [2] top-level scope at /tmp/tmpdy93843m.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpdy93843m.jl:13\n   [2] top-level scope at /tmp/tmpdy93843m.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpdy93843m.jl:13\n\
    \   [2] top-level scope at /tmp/tmpdy93843m.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmpdy93843m.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpdy93843m.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpdy93843m.jl:13\n\
    \   [2] top-level scope at /tmp/tmpdy93843m.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpdy93843m.jl:13\n   [2] top-level scope at /tmp/tmpdy93843m.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy93843m.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpdy93843m.jl:13\n   [2] top-level scope at /tmp/tmpdy93843m.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy93843m.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdy93843m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpf49tajze.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpf49tajze.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf49tajze.jl:28\\ntest set: Test Failed at /tmp/tmpf49tajze.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpf49tajze.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf49tajze.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp68zx8o1g.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp68zx8o1g.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp68zx8o1g.jl:28\ntest set: Test Failed at /tmp/tmp68zx8o1g.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp68zx8o1g.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp68zx8o1g.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68zx8o1g.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpif9ana0v.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpif9ana0v.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpif9ana0v.jl:28\ntest set: Test Failed at /tmp/tmpif9ana0v.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpif9ana0v.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpif9ana0v.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpif9ana0v.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        hist[letter]\
    \ = get(hist, letter, 0) + 1\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo09voidn.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpo09voidn.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo09voidn.jl:24\ntest set: Test Failed at /tmp/tmpo09voidn.jl:29\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpo09voidn.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo09voidn.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo09voidn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp623ztc9j.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp623ztc9j.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp623ztc9j.jl:28\ntest set: Test Failed at /tmp/tmp623ztc9j.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp623ztc9j.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp623ztc9j.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp623ztc9j.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a vector of strings\n    split_test = split(test)\n    # iterate\
    \ through the vector of strings\n    for i in split_test\n        # if the key\
    \ is not in the dictionary, add it\n        if !haskey(hist, i)\n            hist[i]\
    \ = 1\n        # if the key is in the dictionary, increment the value\n      \
    \  else\n            hist[i] += 1\n        end\n    end\n    # return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wisj4v4.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9wisj4v4.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wisj4v4.jl:35\ntest set: Test Failed at /tmp/tmp9wisj4v4.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp9wisj4v4.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wisj4v4.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wisj4v4.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ letter in keys(hist)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr8y7g4gq.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr8y7g4gq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8y7g4gq.jl:28\ntest set: Test Failed at /tmp/tmpr8y7g4gq.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpr8y7g4gq.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8y7g4gq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr8y7g4gq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Split the string into a vector of characters\n    letters = split(test)\n\
    \    # Create a dictionary to store the results\n    hist = Dict{String, Int64}()\n\
    \    # Loop over the vector of characters\n    for letter in letters\n       \
    \ # If the letter is already in the dictionary, increment the count\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        # Otherwise, initialize\
    \ the count to 1\n        else\n            hist[letter] = 1\n        end\n  \
    \  end\n    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu8pvz3e_.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu8pvz3e_.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8pvz3e_.jl:35\ntest set: Test Failed at /tmp/tmpu8pvz3e_.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu8pvz3e_.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8pvz3e_.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8pvz3e_.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into array of characters\n    test_array = split(test)\n    # Loop through\
    \ array of characters\n    for letter in test_array\n        # If letter is not\
    \ in dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # If letter is in dictionary, increment count\n        else\n \
    \           hist[letter] += 1\n        end\n    end\n    # Return dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbzeubpyb.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbzeubpyb.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbzeubpyb.jl:35\ntest set: Test Failed at /tmp/tmpbzeubpyb.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpbzeubpyb.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbzeubpyb.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbzeubpyb.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize a dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ the string into a vector of strings\n    test_vec = split(test)\n    # Iterate\
    \ through the vector\n    for i in test_vec\n        # If the letter is not in\
    \ the dictionary, add it\n        if !haskey(hist, i)\n            hist[i] = 1\n\
    \        # If the letter is in the dictionary, increment the count\n        else\n\
    \            hist[i] += 1\n        end\n    end\n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn31pxhlv.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn31pxhlv.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn31pxhlv.jl:35\ntest set: Test Failed at /tmp/tmpn31pxhlv.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpn31pxhlv.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn31pxhlv.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn31pxhlv.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuggmso_n.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpuggmso_n.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuggmso_n.jl:28\ntest set: Test Failed at /tmp/tmpuggmso_n.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpuggmso_n.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuggmso_n.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuggmso_n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary with all letters and their count\n    hist = Dict{String,\
    \ Int64}()\n    for letter in test\n        if letter in keys(hist)\n        \
    \    hist[letter] += 1\n        else\n            hist[letter] = 1\n        end\n\
    \    end\n    \n    # find the maximum count\n    max_count = 0\n    for count\
    \ in values(hist)\n        if count > max_count\n            max_count = count\n\
    \        end\n    end\n    \n    # create a dictionary with the letters that have\
    \ the maximum count\n    max_hist = Dict{String, Int64}()\n    for (letter, count)\
    \ in hist\n        if count == max_count\n            max_hist[letter] = count\n\
    \        end\n    end\n    \n    return max_hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpacgajy_j.jl:47\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n\
    \   [3] top-level scope at /tmp/tmpacgajy_j.jl:47\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:48\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpacgajy_j.jl:48\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n\
    \   [3] top-level scope at /tmp/tmpacgajy_j.jl:49\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpacgajy_j.jl:50\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:51\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpacgajy_j.jl:51\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:52\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpacgajy_j.jl:52\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \ntest set: Error During\
    \ Test at /tmp/tmpacgajy_j.jl:54\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpacgajy_j.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpacgajy_j.jl:54\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpacgajy_j.jl:46\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpacgajy_j.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkn792mr4.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkn792mr4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkn792mr4.jl:28\ntest set: Test Failed at /tmp/tmpkn792mr4.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpkn792mr4.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkn792mr4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkn792mr4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # TODO: implement the function\n    return Dict{String, Int64}()\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_eg4clkt.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmp_eg4clkt.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_eg4clkt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_eg4clkt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_eg4clkt.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmp_eg4clkt.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_eg4clkt.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\ntest set: Test Failed at /tmp/tmp_eg4clkt.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmp_eg4clkt.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eg4clkt.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_eg4clkt.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplc1eveal.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmplc1eveal.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplc1eveal.jl:28\\ntest set: Test Failed at /tmp/tmplc1eveal.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmplc1eveal.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplc1eveal.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw82co4yc.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpw82co4yc.jl:22\\n   [5] top-level scope at /tmp/tmpw82co4yc.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpw82co4yc.jl:22\\\
    n   [5] top-level scope at /tmp/tmpw82co4yc.jl:30\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpw82co4yc.jl:22\\n   [5] top-level scope at /tmp/tmpw82co4yc.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpw82co4yc.jl:22\\\
    n   [5] top-level scope at /tmp/tmpw82co4yc.jl:32\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpw82co4yc.jl:22\\\
    n   [5] top-level scope at /tmp/tmpw82co4yc.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpw82co4yc.jl:22\\\
    n   [5] top-level scope at /tmp/tmpw82co4yc.jl:34\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw82co4yc.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpw82co4yc.jl:22\\\
    n   [5] top-level scope at /tmp/tmpw82co4yc.jl:36\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpw82co4yc.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5cbpxdqn.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5cbpxdqn.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5cbpxdqn.jl:28\ntest set: Test Failed at /tmp/tmp5cbpxdqn.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp5cbpxdqn.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5cbpxdqn.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5cbpxdqn.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9gb_bwln.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9gb_bwln.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9gb_bwln.jl:28\ntest set: Test Failed at /tmp/tmp9gb_bwln.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp9gb_bwln.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9gb_bwln.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gb_bwln.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9z_tv6uh.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\\
    n   [3] top-level scope at /tmp/tmp9z_tv6uh.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp9z_tv6uh.jl:30\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\\
    n   [3] top-level scope at /tmp/tmp9z_tv6uh.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp9z_tv6uh.jl:32\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp9z_tv6uh.jl:33\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp9z_tv6uh.jl:34\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9z_tv6uh.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmp9z_tv6uh.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmp9z_tv6uh.jl:36\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9z_tv6uh.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into array of letters\n    letters = split(test)\n    # Loop over letters\n\
    \    for letter in letters\n        # If letter is not in dictionary, add it with\
    \ value 1\n        if !haskey(hist, letter)\n            hist[letter] = 1\n  \
    \      # If letter is in dictionary, increment value by 1\n        else\n    \
    \        hist[letter] += 1\n        end\n    end\n    # Return dictionary\n  \
    \  return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8_76nr1.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_8_76nr1.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8_76nr1.jl:35\ntest set: Test Failed at /tmp/tmp_8_76nr1.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp_8_76nr1.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8_76nr1.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8_76nr1.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpadw4f7az.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpadw4f7az.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadw4f7az.jl:28\ntest set: Test Failed at /tmp/tmpadw4f7az.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpadw4f7az.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadw4f7az.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpadw4f7az.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvfr1w1l_.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvfr1w1l_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfr1w1l_.jl:28\ntest set: Test Failed at /tmp/tmpvfr1w1l_.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpvfr1w1l_.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvfr1w1l_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfr1w1l_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into array of characters\n    test_array = split(test)\n    # Loop through\
    \ array\n    for i in test_array\n        # If character is not in dictionary,\
    \ add it with value 1\n        if !haskey(hist, i)\n            hist[i] = 1\n\
    \        # If character is in dictionary, increment value by 1\n        else\n\
    \            hist[i] += 1\n        end\n    end\n    # Return dictionary\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2h5xn6u9.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2h5xn6u9.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2h5xn6u9.jl:35\ntest set: Test Failed at /tmp/tmp2h5xn6u9.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp2h5xn6u9.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2h5xn6u9.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2h5xn6u9.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6g4aev4e.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp6g4aev4e.jl:13\n   [2] top-level scope at /tmp/tmp6g4aev4e.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp6g4aev4e.jl:13\n\
    \   [2] top-level scope at /tmp/tmp6g4aev4e.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp6g4aev4e.jl:13\n   [2] top-level scope at /tmp/tmp6g4aev4e.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp6g4aev4e.jl:13\n\
    \   [2] top-level scope at /tmp/tmp6g4aev4e.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmp6g4aev4e.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp6g4aev4e.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp6g4aev4e.jl:13\n\
    \   [2] top-level scope at /tmp/tmp6g4aev4e.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp6g4aev4e.jl:13\n   [2] top-level scope at /tmp/tmp6g4aev4e.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp6g4aev4e.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp6g4aev4e.jl:13\n   [2] top-level scope at /tmp/tmp6g4aev4e.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6g4aev4e.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6g4aev4e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpddtc7_w_.jl:22\\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpddtc7_w_.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:23\\\
    n  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpddtc7_w_.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:24\\\
    n  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpddtc7_w_.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:25\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpddtc7_w_.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:26\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpddtc7_w_.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:27\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpddtc7_w_.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\ntest set: Test Failed at /tmp/tmpddtc7_w_.jl:29\\\
    n  Expression: candidate(\"a\") == Dict(\"a\" => 1)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpddtc7_w_.jl:29\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpddtc7_w_.jl:21\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpukryziae.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\\
    n   [3] top-level scope at /tmp/tmpukryziae.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpukryziae.jl:30\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\\
    n   [3] top-level scope at /tmp/tmpukryziae.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpukryziae.jl:32\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpukryziae.jl:33\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpukryziae.jl:34\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpukryziae.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] histogram(::String) at /tmp/tmpukryziae.jl:19\\n   [3] top-level scope\
    \ at /tmp/tmpukryziae.jl:36\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpukryziae.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpukryziae.jl:26\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppn7mfbol.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\\
    n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n    ...\\\
    n  Stacktrace:\\n   [1] histogram(::String) at /tmp/tmppn7mfbol.jl:13\\n   [2]\
    \ top-level scope at /tmp/tmppn7mfbol.jl:25\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == Dict()\\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn7mfbol.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmppn7mfbol.jl:13\\n   [2] top-level scope at /tmp/tmppn7mfbol.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppn7mfbol.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     8      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into an array of words\n    words = split(test)\n    # loop over the\
    \ words\n    for word in words\n        # if the word is not in the dictionary,\
    \ add it with a count of 1\n        if !haskey(hist, word)\n            hist[word]\
    \ = 1\n        # otherwise, increment the count\n        else\n            hist[word]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgnasprf5.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpgnasprf5.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgnasprf5.jl:35\\ntest set: Test Failed at /tmp/tmpgnasprf5.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpgnasprf5.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgnasprf5.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split string into array of characters\n    test_array = split(test,\
    \ \" \")\n    # create empty dictionary\n    hist = Dict{String, Int64}()\n  \
    \  # loop through array of characters\n    for i in test_array\n        # if character\
    \ is in dictionary, increment count by 1\n        if haskey(hist, i)\n       \
    \     hist[i] += 1\n        # if character is not in dictionary, add it with count\
    \ of 1\n        else\n            hist[i] = 1\n        end\n    end\n    # return\
    \ dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkbzqr0jx.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpkbzqr0jx.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkbzqr0jx.jl:35\\ntest set: Test Failed at /tmp/tmpkbzqr0jx.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpkbzqr0jx.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkbzqr0jx.jl:35\\ntest set: Test Failed at /tmp/tmpkbzqr0jx.jl:42\\\
    n  Expression: candidate(\"\") == Dict()\\n   Evaluated: Dict(\"\" => 1) == Dict{Any,Any}()\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpkbzqr0jx.jl:42\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkbzqr0jx.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     3      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppip9ee3u.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppip9ee3u.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppip9ee3u.jl:28\ntest set: Test Failed at /tmp/tmppip9ee3u.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmppip9ee3u.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppip9ee3u.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppip9ee3u.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0p6gg1_8.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0p6gg1_8.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p6gg1_8.jl:28\ntest set: Test Failed at /tmp/tmp0p6gg1_8.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp0p6gg1_8.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p6gg1_8.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0p6gg1_8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2rpo1ukc.jl:22\\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2rpo1ukc.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:23\\\
    n  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp2rpo1ukc.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:24\\\
    n  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp2rpo1ukc.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:25\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2rpo1ukc.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:26\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2rpo1ukc.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:27\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2rpo1ukc.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\ntest set: Test Failed at /tmp/tmp2rpo1ukc.jl:29\\\
    n  Expression: candidate(\"a\") == Dict(\"a\" => 1)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2rpo1ukc.jl:29\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2rpo1ukc.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     7      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpknjalevy.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpknjalevy.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknjalevy.jl:28\\ntest set: Test Failed at /tmp/tmpknjalevy.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpknjalevy.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknjalevy.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    d = Dict{String, Int64}()\n    # Split string\
    \ into array of letters\n    letters = split(test, \" \")\n    # Iterate through\
    \ each letter\n    for letter in letters\n        # If letter is already in dictionary,\
    \ increment count\n        if haskey(d, letter)\n            d[letter] += 1\n\
    \        # If letter is not in dictionary, add it with count of 1\n        else\n\
    \            d[letter] = 1\n        end\n    end\n    # Return dictionary\n  \
    \  return d\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa7750m8j.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpa7750m8j.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7750m8j.jl:35\ntest set: Test Failed at /tmp/tmpa7750m8j.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpa7750m8j.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7750m8j.jl:35\ntest set: Test Failed at /tmp/tmpa7750m8j.jl:42\n\
    \  Expression: candidate(\"\") == Dict()\n   Evaluated: Dict(\"\" => 1) == Dict{Any,Any}()\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa7750m8j.jl:42\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7750m8j.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa7750m8j.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6j7jiii3.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n\
    \   [3] top-level scope at /tmp/tmp6j7jiii3.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp6j7jiii3.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n\
    \   [3] top-level scope at /tmp/tmp6j7jiii3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp6j7jiii3.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp6j7jiii3.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp6j7jiii3.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7jiii3.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp6j7jiii3.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp6j7jiii3.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6j7jiii3.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6j7jiii3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp08af_u2c.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp08af_u2c.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp08af_u2c.jl:28\ntest set: Test Failed at /tmp/tmp08af_u2c.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp08af_u2c.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp08af_u2c.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp08af_u2c.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphpa45b7_.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n\
    \   [3] top-level scope at /tmp/tmphpa45b7_.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n   [3] top-level scope at\
    \ /tmp/tmphpa45b7_.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n\
    \   [3] top-level scope at /tmp/tmphpa45b7_.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n   [3] top-level scope at\
    \ /tmp/tmphpa45b7_.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n   [3] top-level scope at\
    \ /tmp/tmphpa45b7_.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n   [3] top-level scope at\
    \ /tmp/tmphpa45b7_.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmphpa45b7_.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmphpa45b7_.jl:19\n   [3] top-level scope at\
    \ /tmp/tmphpa45b7_.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphpa45b7_.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpa45b7_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split the string into a vector of words\n    words = split(test)\n \
    \   # create a dictionary of words and their counts\n    word_counts = Dict{String,\
    \ Int64}()\n    for word in words\n        word_counts[word] = get(word_counts,\
    \ word, 0) + 1\n    end\n    # create a dictionary of words with the highest count\n\
    \    max_count = maximum(values(word_counts))\n    max_words = Dict{String, Int64}()\n\
    \    for (word, count) in word_counts\n        if count == max_count\n       \
    \     max_words[word] = count\n        end\n    end\n    return max_words\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpajkxql66.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmpajkxql66.jl:22\n   [14] top-level scope at /tmp/tmpajkxql66.jl:42\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpajkxql66.jl:35\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpajkxql66.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2rmgpvoh.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2rmgpvoh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rmgpvoh.jl:28\ntest set: Test Failed at /tmp/tmp2rmgpvoh.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp2rmgpvoh.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rmgpvoh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2rmgpvoh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu9qfen6a.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu9qfen6a.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu9qfen6a.jl:28\ntest set: Test Failed at /tmp/tmpu9qfen6a.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu9qfen6a.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu9qfen6a.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9qfen6a.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbqm89t_4.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbqm89t_4.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm89t_4.jl:28\\ntest set: Test Failed at /tmp/tmpbqm89t_4.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpbqm89t_4.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm89t_4.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary to store the letter and its count\n    hist = Dict()\n\
    \    # split the string into a list of letters\n    letters = split(test)\n  \
    \  # loop through the list of letters\n    for letter in letters\n        # if\
    \ the letter is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # if the letter is already in\
    \ the dictionary, increment the count by 1\n        else\n            hist[letter]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqm7w43pp.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary to store the letter and its count\n    hist = Dict{String,\
    \ Int64}()\n    # Split the string by space\n    test_split = split(test)\n  \
    \  # Iterate through the split string\n    for i in test_split\n        # If the\
    \ letter is not in the dictionary, add it and set the count to 1\n        if !haskey(hist,\
    \ i)\n            hist[i] = 1\n        # If the letter is in the dictionary, increment\
    \ the count\n        else\n            hist[i] += 1\n        end\n    end\n  \
    \  # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2o8wnvob.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2o8wnvob.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o8wnvob.jl:35\ntest set: Test Failed at /tmp/tmp2o8wnvob.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp2o8wnvob.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o8wnvob.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o8wnvob.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoaoi5ove.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\\
    n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n    ...\\\
    n  Stacktrace:\\n   [1] histogram(::String) at /tmp/tmpoaoi5ove.jl:13\\n   [2]\
    \ top-level scope at /tmp/tmpoaoi5ove.jl:25\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1] histogram(::String)\
    \ at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == Dict()\\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:27\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpoaoi5ove.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\\n    ...\\n  Stacktrace:\\n   [1]\
    \ histogram(::String) at /tmp/tmpoaoi5ove.jl:13\\n   [2] top-level scope at /tmp/tmpoaoi5ove.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpoaoi5ove.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     8      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a vector of letters\n    letters = split(test)\n    # loop over\
    \ the vector of letters\n    for letter in letters\n        # if the letter is\
    \ not in the dictionary, add it\n        if !haskey(hist, letter)\n          \
    \  hist[letter] = 1\n        # if the letter is in the dictionary, increment the\
    \ count\n        else\n            hist[letter] += 1\n        end\n    end\n \
    \   return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmls11y6u.jl:36\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmls11y6u.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmls11y6u.jl:34\ntest set: Test Failed at /tmp/tmpmls11y6u.jl:39\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpmls11y6u.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmls11y6u.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmls11y6u.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a vector of letters\n    letters = split(test)\n    # loop through\
    \ the vector of letters\n    for letter in letters\n        # if the letter is\
    \ not in the dictionary, add it\n        if !haskey(hist, letter)\n          \
    \  hist[letter] = 1\n        # if the letter is in the dictionary, increase the\
    \ count by 1\n        else\n            hist[letter] += 1\n        end\n    end\n\
    \    # return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgquokl1a.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgquokl1a.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgquokl1a.jl:35\ntest set: Test Failed at /tmp/tmpgquokl1a.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgquokl1a.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgquokl1a.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgquokl1a.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for c in test\n        if haskey(hist, c)\n       \
    \     hist[c] += 1\n        else\n            hist[c] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp21cn8j6p.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\\
    n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:30\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\\
    n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:32\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\\
    n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\\
    n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:34\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp21cn8j6p.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmp21cn8j6p.jl:22\\\
    n   [5] top-level scope at /tmp/tmp21cn8j6p.jl:36\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp21cn8j6p.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split the string into a vector of letters\n    letters = split(test)\n\
    \    # create a dictionary of letters and their counts\n    counts = Dict(i =>\
    \ count(x -> x == i, letters) for i in letters)\n    # find the maximum count\n\
    \    max_count = maximum(values(counts))\n    # return a dictionary of letters\
    \ with the maximum count\n    return Dict(i => counts[i] for i in keys(counts)\
    \ if counts[i] == max_count)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsvamrxdo.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmpsvamrxdo.jl:19\n   [14] top-level scope at /tmp/tmpsvamrxdo.jl:34\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpsvamrxdo.jl:27\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsvamrxdo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj6viuv8m.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj6viuv8m.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj6viuv8m.jl:28\ntest set: Test Failed at /tmp/tmpj6viuv8m.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpj6viuv8m.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj6viuv8m.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj6viuv8m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplf3z06hx.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplf3z06hx.jl:13\n   [2] top-level scope at /tmp/tmplf3z06hx.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplf3z06hx.jl:13\n\
    \   [2] top-level scope at /tmp/tmplf3z06hx.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplf3z06hx.jl:13\n   [2] top-level scope at /tmp/tmplf3z06hx.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplf3z06hx.jl:13\n\
    \   [2] top-level scope at /tmp/tmplf3z06hx.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmplf3z06hx.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplf3z06hx.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmplf3z06hx.jl:13\n\
    \   [2] top-level scope at /tmp/tmplf3z06hx.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplf3z06hx.jl:13\n   [2] top-level scope at /tmp/tmplf3z06hx.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplf3z06hx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmplf3z06hx.jl:13\n   [2] top-level scope at /tmp/tmplf3z06hx.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplf3z06hx.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplf3z06hx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeijk7uop.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeijk7uop.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeijk7uop.jl:28\ntest set: Test Failed at /tmp/tmpeijk7uop.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpeijk7uop.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeijk7uop.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeijk7uop.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in split(test)\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplj4sprdg.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplj4sprdg.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplj4sprdg.jl:28\ntest set: Test Failed at /tmp/tmplj4sprdg.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmplj4sprdg.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplj4sprdg.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplj4sprdg.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfi3x0lw2.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmpfi3x0lw2.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfi3x0lw2.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfi3x0lw2.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfi3x0lw2.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmpfi3x0lw2.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfi3x0lw2.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\ntest set: Test Failed at /tmp/tmpfi3x0lw2.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmpfi3x0lw2.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfi3x0lw2.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfi3x0lw2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ string into words\n    words = split(test)\n    # Iterate over words\n    for\
    \ word in words\n        # If word is not in dictionary, add it\n        if !haskey(hist,\
    \ word)\n            hist[word] = 1\n        # If word is in dictionary, increment\
    \ count\n        else\n            hist[word] += 1\n        end\n    end\n   \
    \ # Return dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_9sq3t9d.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp_9sq3t9d.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_9sq3t9d.jl:35\\ntest set: Test Failed at /tmp/tmp_9sq3t9d.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp_9sq3t9d.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_9sq3t9d.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpamth1pov.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpamth1pov.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpamth1pov.jl:28\ntest set: Test Failed at /tmp/tmpamth1pov.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpamth1pov.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpamth1pov.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamth1pov.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create empty dictionary\n    hist = Dict{String, Int64}()\n    # split\
    \ string into array of letters\n    letters = split(test)\n    # iterate through\
    \ array of letters\n    for letter in letters\n        # if letter is not in dictionary,\
    \ add it\n        if !haskey(hist, letter)\n            hist[letter] = 1\n   \
    \     # if letter is in dictionary, increment count\n        else\n          \
    \  hist[letter] += 1\n        end\n    end\n    # return dictionary\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfydwlfpj.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfydwlfpj.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfydwlfpj.jl:35\ntest set: Test Failed at /tmp/tmpfydwlfpj.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpfydwlfpj.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfydwlfpj.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfydwlfpj.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict()\n    # split the string into\
    \ a vector of characters\n    test_vec = split(test)\n    # loop through the vector\n\
    \    for i in test_vec\n        # if the character is not in the dictionary, add\
    \ it\n        if !haskey(hist, i)\n            hist[i] = 1\n        # if the character\
    \ is in the dictionary, increment its value\n        else\n            hist[i]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0z49h35u.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0z49h35u.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z49h35u.jl:35\ntest set: Test Failed at /tmp/tmp0z49h35u.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp0z49h35u.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z49h35u.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0z49h35u.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcfzyr1sp.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n\
    \   [3] top-level scope at /tmp/tmpcfzyr1sp.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpcfzyr1sp.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n\
    \   [3] top-level scope at /tmp/tmpcfzyr1sp.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpcfzyr1sp.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpcfzyr1sp.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpcfzyr1sp.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpcfzyr1sp.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpcfzyr1sp.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpcfzyr1sp.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcfzyr1sp.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcfzyr1sp.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Split the string into a vector of characters\n    letters = split(test)\n\
    \    # Initialize a dictionary to store the results\n    hist = Dict{String, Int64}()\n\
    \    # Loop over the characters\n    for letter in letters\n        # If the letter\
    \ is already in the dictionary, increment the count\n        if haskey(hist, letter)\n\
    \            hist[letter] += 1\n        # Otherwise, initialize the count to 1\n\
    \        else\n            hist[letter] = 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwqcjr3gr.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwqcjr3gr.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwqcjr3gr.jl:35\ntest set: Test Failed at /tmp/tmpwqcjr3gr.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwqcjr3gr.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwqcjr3gr.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwqcjr3gr.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeit0f8k4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpeit0f8k4.jl:13\n   [2] top-level scope at /tmp/tmpeit0f8k4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpeit0f8k4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpeit0f8k4.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpeit0f8k4.jl:13\n   [2] top-level scope at /tmp/tmpeit0f8k4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpeit0f8k4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpeit0f8k4.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmpeit0f8k4.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpeit0f8k4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmpeit0f8k4.jl:13\n\
    \   [2] top-level scope at /tmp/tmpeit0f8k4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpeit0f8k4.jl:13\n   [2] top-level scope at /tmp/tmpeit0f8k4.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpeit0f8k4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmpeit0f8k4.jl:13\n   [2] top-level scope at /tmp/tmpeit0f8k4.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeit0f8k4.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeit0f8k4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg1cae97l.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmpg1cae97l.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg1cae97l.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg1cae97l.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg1cae97l.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmpg1cae97l.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg1cae97l.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\ntest set: Test Failed at /tmp/tmpg1cae97l.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmpg1cae97l.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1cae97l.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1cae97l.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpegrleevo.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpegrleevo.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpegrleevo.jl:28\\ntest set: Test Failed at /tmp/tmpegrleevo.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpegrleevo.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpegrleevo.jl:28\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphnv7g23f.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphnv7g23f.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnv7g23f.jl:28\ntest set: Test Failed at /tmp/tmphnv7g23f.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmphnv7g23f.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnv7g23f.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphnv7g23f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Split the string into an array of strings\n    test_array = split(test)\n  \
    \  # Loop through the array of strings\n    for i in test_array\n        # If\
    \ the string is not in the dictionary, add it\n        if !haskey(hist, i)\n \
    \           hist[i] = 1\n        # If the string is in the dictionary, increment\
    \ the count\n        else\n            hist[i] += 1\n        end\n    end\n  \
    \  # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxe3uqgai.jl:37\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxe3uqgai.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxe3uqgai.jl:35\\ntest set: Test Failed at /tmp/tmpxe3uqgai.jl:40\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpxe3uqgai.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxe3uqgai.jl:35\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary to store the results\n    hist = Dict{String, Int64}()\n\
    \    # Split the string into a vector of strings\n    letters = split(test)\n\
    \    # Iterate over the vector of strings\n    for letter in letters\n       \
    \ # If the letter is already in the dictionary, increment its value\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        # Otherwise, add\
    \ it to the dictionary with a value of 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    # Return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnutksjh5.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnutksjh5.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnutksjh5.jl:35\ntest set: Test Failed at /tmp/tmpnutksjh5.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpnutksjh5.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnutksjh5.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnutksjh5.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw_fr7ooe.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n\
    \   [3] top-level scope at /tmp/tmpw_fr7ooe.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpw_fr7ooe.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n\
    \   [3] top-level scope at /tmp/tmpw_fr7ooe.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpw_fr7ooe.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpw_fr7ooe.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpw_fr7ooe.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpw_fr7ooe.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpw_fr7ooe.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpw_fr7ooe.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw_fr7ooe.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_fr7ooe.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgi8wotgw.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n\
    \   [3] top-level scope at /tmp/tmpgi8wotgw.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgi8wotgw.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n\
    \   [3] top-level scope at /tmp/tmpgi8wotgw.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgi8wotgw.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgi8wotgw.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgi8wotgw.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpgi8wotgw.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpgi8wotgw.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpgi8wotgw.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgi8wotgw.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgi8wotgw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split string into a vector of characters\n    test_vec = split(test)\n\
    \    # initialize dictionary\n    hist = Dict{String, Int64}()\n    # loop through\
    \ vector\n    for i = 1:length(test_vec)\n        # if the character is not in\
    \ the dictionary, add it\n        if !haskey(hist, test_vec[i])\n            hist[test_vec[i]]\
    \ = 1\n        # if the character is in the dictionary, increment the count\n\
    \        else\n            hist[test_vec[i]] += 1\n        end\n    end\n    #\
    \ return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr7ii63hp.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr7ii63hp.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7ii63hp.jl:35\ntest set: Test Failed at /tmp/tmpr7ii63hp.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpr7ii63hp.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr7ii63hp.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7ii63hp.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = split(test)\n    counts = Dict()\n    for letter in letters\n\
    \        if haskey(counts, letter)\n            counts[letter] += 1\n        else\n\
    \            counts[letter] = 1\n        end\n    end\n    return counts\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi_fcknq_.jl:31\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi_fcknq_.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi_fcknq_.jl:29\ntest set: Test Failed at /tmp/tmpi_fcknq_.jl:34\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpi_fcknq_.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi_fcknq_.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi_fcknq_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict()\n    for letter in test\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        else\n            hist[letter] = 1\n \
    \       end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpubu2arhe.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" =>\
    \ 2)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpubu2arhe.jl:22\\n   [5] top-level scope at /tmp/tmpubu2arhe.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpubu2arhe.jl:22\\\
    n   [5] top-level scope at /tmp/tmpubu2arhe.jl:30\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\\n  MethodError: Cannot `convert` an object of type Char to an object of\
    \ type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\\n   [2] Dict{String,Int64}(::Dict{Any,Any})\
    \ at ./dict.jl:103\\n   [3] convert at ./abstractdict.jl:489 [inlined]\\n   [4]\
    \ histogram(::String) at /tmp/tmpubu2arhe.jl:22\\n   [5] top-level scope at /tmp/tmpubu2arhe.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpubu2arhe.jl:22\\\
    n   [5] top-level scope at /tmp/tmpubu2arhe.jl:32\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpubu2arhe.jl:22\\\
    n   [5] top-level scope at /tmp/tmpubu2arhe.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpubu2arhe.jl:22\\\
    n   [5] top-level scope at /tmp/tmpubu2arhe.jl:34\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpubu2arhe.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\\n \
    \  [2] Dict{String,Int64}(::Dict{Any,Any}) at ./dict.jl:103\\n   [3] convert at\
    \ ./abstractdict.jl:489 [inlined]\\n   [4] histogram(::String) at /tmp/tmpubu2arhe.jl:22\\\
    n   [5] top-level scope at /tmp/tmpubu2arhe.jl:36\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpubu2arhe.jl:28\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary to store the letters and their counts\n    hist\
    \ = Dict{String, Int64}()\n    # split the string into a vector of letters\n \
    \   letters = split(test)\n    # loop through the vector of letters\n    for letter\
    \ in letters\n        # if the letter is not in the dictionary, add it and set\
    \ the count to 1\n        if !haskey(hist, letter)\n            hist[letter] =\
    \ 1\n        # if the letter is in the dictionary, increment the count\n     \
    \   else\n            hist[letter] += 1\n        end\n    end\n    # return the\
    \ dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg_74xp15.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg_74xp15.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg_74xp15.jl:35\ntest set: Test Failed at /tmp/tmpg_74xp15.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpg_74xp15.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg_74xp15.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg_74xp15.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # split the string into a vector of letters\n    letters = split(test)\n\
    \    # create a dictionary of the letters and the number of times they appear\n\
    \    hist = Dict{String, Int64}()\n    for letter in letters\n        if letter\
    \ in keys(hist)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    # find the maximum number of times a letter appears\n\
    \    max_count = maximum(values(hist))\n    # create a dictionary of the letters\
    \ that appear the maximum number of times\n    max_hist = Dict{String, Int64}()\n\
    \    for (letter, count) in hist\n        if count == max_count\n            max_hist[letter]\
    \ = count\n        end\n    end\n    return max_hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv8bo80nr.jl:47\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmpv8bo80nr.jl:26\n   [14] top-level scope at /tmp/tmpv8bo80nr.jl:47\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpv8bo80nr.jl:40\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv8bo80nr.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into a list of words\n    words = split(test)\n    # loop over the words\n\
    \    for word in words\n        # if the word is not in the dictionary, add it\
    \ with a count of 1\n        if !haskey(hist, word)\n            hist[word] =\
    \ 1\n        # if the word is in the dictionary, increment the count\n       \
    \ else\n            hist[word] += 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpckgqmxau.jl:36\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpckgqmxau.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpckgqmxau.jl:34\\ntest set: Test Failed at /tmp/tmpckgqmxau.jl:39\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpckgqmxau.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpckgqmxau.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    test = split(test)\n    hist = Dict{String, Int64}()\n    for i in test\n\
    \        if haskey(hist, i)\n            hist[i] += 1\n        else\n        \
    \    hist[i] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzvaq02rd.jl:31\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpzvaq02rd.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzvaq02rd.jl:29\\ntest set: Test Failed at /tmp/tmpzvaq02rd.jl:34\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpzvaq02rd.jl:34\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzvaq02rd.jl:29\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2znlj_xw.jl:22\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level scope at /tmp/tmp2znlj_xw.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:23\n\
    \  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2znlj_xw.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:24\n\
    \  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2znlj_xw.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:25\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2znlj_xw.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:26\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at /tmp/tmp2znlj_xw.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:27\n\
    \  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n\
    \   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2znlj_xw.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\ntest set: Test Failed at /tmp/tmp2znlj_xw.jl:29\n\
    \  Expression: candidate(\"a\") == Dict(\"a\" => 1)\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\nStacktrace:\n [1] top-level scope at /tmp/tmp2znlj_xw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2znlj_xw.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2znlj_xw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = Dict{String, Int64}()\n    for letter in split(test)\n     \
    \   if haskey(letters, letter)\n            letters[letter] += 1\n        else\n\
    \            letters[letter] = 1\n        end\n    end\n    return letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2on4c7_.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu2on4c7_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2on4c7_.jl:28\ntest set: Test Failed at /tmp/tmpu2on4c7_.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu2on4c7_.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2on4c7_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2on4c7_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt614s0qh.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt614s0qh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt614s0qh.jl:28\ntest set: Test Failed at /tmp/tmpt614s0qh.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpt614s0qh.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt614s0qh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt614s0qh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ split the string into a vector of characters\n    for c in split(test)\n   \
    \     # if the character is already in the dictionary, increment the count\n \
    \       if haskey(hist, c)\n            hist[c] += 1\n        # if the character\
    \ is not in the dictionary, add it with a count of 1\n        else\n         \
    \   hist[c] = 1\n        end\n    end\n    # return the dictionary\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ruj7ji4.jl:35\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ruj7ji4.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ruj7ji4.jl:33\ntest set: Test Failed at /tmp/tmp4ruj7ji4.jl:38\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp4ruj7ji4.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ruj7ji4.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ruj7ji4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize the dictionary\n    hist = Dict{String, Int64}()\n    # Split\
    \ the string into an array of words\n    words = split(test)\n    # Iterate over\
    \ each word in the array\n    for word in words\n        # If the word is not\
    \ in the dictionary, add it with a count of 1\n        if !haskey(hist, word)\n\
    \            hist[word] = 1\n        # Otherwise, increment the count\n      \
    \  else\n            hist[word] += 1\n        end\n    end\n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoeehfw1x.jl:37\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpoeehfw1x.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoeehfw1x.jl:35\ntest set: Test Failed at /tmp/tmpoeehfw1x.jl:40\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpoeehfw1x.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoeehfw1x.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoeehfw1x.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkmkvsr3n.jl:22\\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\n    return Dict()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpv8_yzfp0.jl:22\\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv8_yzfp0.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:23\\\
    n  Expression: candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated:\
    \ Dict{String,Int64}() == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpv8_yzfp0.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:24\\\
    n  Expression: candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)\\n   Evaluated: Dict{String,Int64}() == Dict(\"\
    g\" => 1,\"c\" => 1,\"b\" => 1,\"a\" => 1,\"d\" => 1)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpv8_yzfp0.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:25\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv8_yzfp0.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:26\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv8_yzfp0.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:27\\\
    n  Expression: candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\\\
    n   Evaluated: Dict{String,Int64}() == Dict(\"g\" => 1,\"t\" => 1,\"r\" => 1)\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv8_yzfp0.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\ntest set: Test Failed at /tmp/tmpv8_yzfp0.jl:29\\\
    n  Expression: candidate(\"a\") == Dict(\"a\" => 1)\\n   Evaluated: Dict{String,Int64}()\
    \ == Dict(\"a\" => 1)\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv8_yzfp0.jl:29\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv8_yzfp0.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        hist[letter]\
    \ = get(hist, letter, 0) + 1\n    end\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwootuif3.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwootuif3.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwootuif3.jl:24\ntest set: Test Failed at /tmp/tmpwootuif3.jl:29\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwootuif3.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwootuif3.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwootuif3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq0yh8mnv.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq0yh8mnv.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq0yh8mnv.jl:28\ntest set: Test Failed at /tmp/tmpq0yh8mnv.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpq0yh8mnv.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq0yh8mnv.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0yh8mnv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    test_dict = Dict{String, Int64}()\n    for letter in test\n        if\
    \ letter in keys(test_dict)\n            test_dict[letter] += 1\n        else\n\
    \            test_dict[letter] = 1\n        end\n    end\n    return test_dict\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsv3rbm9e.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n\
    \   [3] top-level scope at /tmp/tmpsv3rbm9e.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpsv3rbm9e.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n\
    \   [3] top-level scope at /tmp/tmpsv3rbm9e.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpsv3rbm9e.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpsv3rbm9e.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpsv3rbm9e.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3rbm9e.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsv3rbm9e.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpsv3rbm9e.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsv3rbm9e.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv3rbm9e.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Initialize a dictionary to store the letter and its count\n    hist\
    \ = Dict{String, Int64}()\n    # Loop through the string\n    for letter in test\n\
    \        # Check if the letter is already in the dictionary\n        if letter\
    \ in keys(hist)\n            # If it is, increment the count by 1\n          \
    \  hist[letter] += 1\n        else\n            # If it isn't, initialize the\
    \ count to 1\n            hist[letter] = 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmhjjdw_p.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n\
    \   [3] top-level scope at /tmp/tmpmhjjdw_p.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n   [3] top-level scope at\
    \ /tmp/tmpmhjjdw_p.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n\
    \   [3] top-level scope at /tmp/tmpmhjjdw_p.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n   [3] top-level scope at\
    \ /tmp/tmpmhjjdw_p.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n   [3] top-level scope at\
    \ /tmp/tmpmhjjdw_p.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n   [3] top-level scope at\
    \ /tmp/tmpmhjjdw_p.jl:40\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmhjjdw_p.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpmhjjdw_p.jl:24\n   [3] top-level scope at\
    \ /tmp/tmpmhjjdw_p.jl:42\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmhjjdw_p.jl:34\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmhjjdw_p.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5afgs7gl.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type typeof(>) to an object of type Dict{String,Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where\
    \ T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp5afgs7gl.jl:13\n   [2] top-level scope at /tmp/tmp5afgs7gl.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp5afgs7gl.jl:13\n\
    \   [2] top-level scope at /tmp/tmp5afgs7gl.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type typeof(>) to an object\
    \ of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp5afgs7gl.jl:13\n   [2] top-level scope at /tmp/tmp5afgs7gl.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp5afgs7gl.jl:13\n\
    \   [2] top-level scope at /tmp/tmp5afgs7gl.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type typeof(>) to an object of type Dict{String,Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n    ...\n \
    \ Stacktrace:\n   [1] histogram(::String) at /tmp/tmp5afgs7gl.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp5afgs7gl.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type typeof(>) to an object of type Dict{String,Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at\
    \ abstractdict.jl:486\n    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict\
    \ at abstractdict.jl:489\n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n\
    \    ...\n  Stacktrace:\n   [1] histogram(::String) at /tmp/tmp5afgs7gl.jl:13\n\
    \   [2] top-level scope at /tmp/tmp5afgs7gl.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    \") == Dict()\n  MethodError: Cannot `convert` an object of type typeof(>) to\
    \ an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp5afgs7gl.jl:13\n   [2] top-level scope at /tmp/tmp5afgs7gl.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp5afgs7gl.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type typeof(>)\
    \ to an object of type Dict{String,Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractDict at abstractdict.jl:486\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at abstractdict.jl:489\n    convert(::Type{T},\
    \ !Matched::T) where T at essentials.jl:171\n    ...\n  Stacktrace:\n   [1] histogram(::String)\
    \ at /tmp/tmp5afgs7gl.jl:13\n   [2] top-level scope at /tmp/tmp5afgs7gl.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5afgs7gl.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     8      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5afgs7gl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create an empty dictionary\n    hist = Dict{String, Int64}()\n    #\
    \ Iterate over the string\n    for letter in test\n        # If the letter is\
    \ not in the dictionary, add it with a count of 1\n        if !haskey(hist, letter)\n\
    \            hist[letter] = 1\n        # If the letter is in the dictionary, increment\
    \ the count by 1\n        else\n            hist[letter] += 1\n        end\n \
    \   end\n    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsr7zym35.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n\
    \   [3] top-level scope at /tmp/tmpsr7zym35.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpsr7zym35.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n\
    \   [3] top-level scope at /tmp/tmpsr7zym35.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpsr7zym35.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpsr7zym35.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpsr7zym35.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpsr7zym35.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpsr7zym35.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpsr7zym35.jl:41\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsr7zym35.jl:33\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsr7zym35.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeiie34y4.jl:30\\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpeiie34y4.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeiie34y4.jl:28\\ntest set: Test Failed at /tmp/tmpeiie34y4.jl:33\\\
    n  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpeiie34y4.jl:33\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeiie34y4.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     2      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    histogram = Dict{String, Int64}()\n    for letter in split(test)\n   \
    \     if haskey(histogram, letter)\n            histogram[letter] += 1\n     \
    \   else\n            histogram[letter] = 1\n        end\n    end\n    return\
    \ histogram\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppwmbb332.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppwmbb332.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppwmbb332.jl:28\ntest set: Test Failed at /tmp/tmppwmbb332.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmppwmbb332.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppwmbb332.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwmbb332.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvzd6z5k3.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvzd6z5k3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvzd6z5k3.jl:28\ntest set: Test Failed at /tmp/tmpvzd6z5k3.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpvzd6z5k3.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvzd6z5k3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzd6z5k3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaqlxnra_.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaqlxnra_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqlxnra_.jl:28\ntest set: Test Failed at /tmp/tmpaqlxnra_.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpaqlxnra_.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqlxnra_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaqlxnra_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary to store the letter and the count\n    hist = Dict{String,\
    \ Int64}()\n    # Split the string into a vector of letters\n    letters = split(test)\n\
    \    # Iterate over the vector of letters\n    for letter in letters\n       \
    \ # Check if the letter is already in the dictionary\n        if haskey(hist,\
    \ letter)\n            # If it is, increment the count\n            hist[letter]\
    \ += 1\n        else\n            # If it is not, add it to the dictionary with\
    \ a count of 1\n            hist[letter] = 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2w5yg37u.jl:38\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2w5yg37u.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w5yg37u.jl:36\ntest set: Test Failed at /tmp/tmp2w5yg37u.jl:41\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp2w5yg37u.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w5yg37u.jl:36\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2w5yg37u.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp60cm8xv8.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n\
    \   [3] top-level scope at /tmp/tmp60cm8xv8.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp60cm8xv8.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n\
    \   [3] top-level scope at /tmp/tmp60cm8xv8.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp60cm8xv8.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp60cm8xv8.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp60cm8xv8.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp60cm8xv8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp60cm8xv8.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp60cm8xv8.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp60cm8xv8.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp60cm8xv8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rrdvqb4.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8rrdvqb4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rrdvqb4.jl:28\ntest set: Test Failed at /tmp/tmp8rrdvqb4.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp8rrdvqb4.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rrdvqb4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rrdvqb4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgy2a0wvd.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgy2a0wvd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy2a0wvd.jl:28\ntest set: Test Failed at /tmp/tmpgy2a0wvd.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpgy2a0wvd.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy2a0wvd.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgy2a0wvd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary with the letters as keys and the count as values\n\
    \    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if letter\
    \ in keys(hist)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    \n    # Find the maximum value in the dictionary\n\
    \    max_val = maximum(values(hist))\n    \n    # Create a dictionary with the\
    \ letters as keys and the count as values\n    # where the count is the maximum\
    \ value\n    max_hist = Dict{String, Int64}()\n    for (key, value) in hist\n\
    \        if value == max_val\n            max_hist[key] = value\n        end\n\
    \    end\n    \n    return max_hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5v4xkp1k.jl:49\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmp5v4xkp1k.jl:25\n   [14] top-level scope at /tmp/tmp5v4xkp1k.jl:49\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmp5v4xkp1k.jl:42\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5v4xkp1k.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuuez4y2g.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n\
    \   [3] top-level scope at /tmp/tmpuuez4y2g.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpuuez4y2g.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n\
    \   [3] top-level scope at /tmp/tmpuuez4y2g.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpuuez4y2g.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpuuez4y2g.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpuuez4y2g.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuez4y2g.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpuuez4y2g.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpuuez4y2g.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpuuez4y2g.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuez4y2g.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary with the letters as keys and the count as values\n\
    \    histogram = Dict{String, Int64}()\n    for letter in split(test)\n      \
    \  if haskey(histogram, letter)\n            histogram[letter] += 1\n        else\n\
    \            histogram[letter] = 1\n        end\n    end\n    \n    # Find the\
    \ maximum value\n    max_value = maximum(values(histogram))\n    \n    # Create\
    \ a new dictionary with the letters with the maximum count as keys and the count\
    \ as values\n    max_histogram = Dict{String, Int64}()\n    for (key, value) in\
    \ histogram\n        if value == max_value\n            max_histogram[key] = value\n\
    \        end\n    end\n    \n    return max_histogram\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5rx6ofnr.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmp5rx6ofnr.jl:25\n   [14] top-level scope at /tmp/tmp5rx6ofnr.jl:48\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmp5rx6ofnr.jl:41\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5rx6ofnr.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in test\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpodd55o2u.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n\
    \   [3] top-level scope at /tmp/tmpodd55o2u.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpodd55o2u.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n\
    \   [3] top-level scope at /tmp/tmpodd55o2u.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpodd55o2u.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpodd55o2u.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpodd55o2u.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpodd55o2u.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpodd55o2u.jl:19\n   [3] top-level scope at\
    \ /tmp/tmpodd55o2u.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpodd55o2u.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpodd55o2u.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    letters = split(test)\n    hist = Dict{String, Int64}()\n    for letter\
    \ in letters\n        if haskey(hist, letter)\n            hist[letter] += 1\n\
    \        else\n            hist[letter] = 1\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpivm6yeoh.jl:31\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpivm6yeoh.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivm6yeoh.jl:29\ntest set: Test Failed at /tmp/tmpivm6yeoh.jl:34\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpivm6yeoh.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivm6yeoh.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpivm6yeoh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for letter in split(test)\n        if\
    \ haskey(hist, letter)\n            hist[letter] += 1\n        else\n        \
    \    hist[letter] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0m8y1v_y.jl:30\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0m8y1v_y.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0m8y1v_y.jl:28\ntest set: Test Failed at /tmp/tmp0m8y1v_y.jl:33\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp0m8y1v_y.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0m8y1v_y.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0m8y1v_y.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for c in test\n        if haskey(hist,\
    \ c)\n            hist[c] += 1\n        else\n            hist[c] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7e4ltdze.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n\
    \   [3] top-level scope at /tmp/tmp7e4ltdze.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp7e4ltdze.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n\
    \   [3] top-level scope at /tmp/tmp7e4ltdze.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp7e4ltdze.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp7e4ltdze.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp7e4ltdze.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp7e4ltdze.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp7e4ltdze.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp7e4ltdze.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7e4ltdze.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7e4ltdze.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # Create a dictionary of the letters in the string\n    hist = Dict{String,\
    \ Int64}()\n    for letter in split(test)\n        if haskey(hist, letter)\n \
    \           hist[letter] += 1\n        else\n            hist[letter] = 1\n  \
    \      end\n    end\n    \n    # Find the maximum value in the dictionary\n  \
    \  max_value = maximum(values(hist))\n    \n    # Create a new dictionary with\
    \ the letters that have the maximum value\n    max_hist = Dict{String, Int64}()\n\
    \    for (key, value) in hist\n        if value == max_value\n            max_hist[key]\
    \ = value\n        end\n    end\n    \n    return max_hist\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_byabpf7.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"\") == Dict()\n  ArgumentError: reducing over an empty\
    \ collection is not allowed\n  Stacktrace:\n   [1] _empty_reduce_error() at ./reduce.jl:295\n\
    \   [2] reduce_empty(::Function, ::Type{T} where T) at ./reduce.jl:305\n   [3]\
    \ reduce_empty(::Base.BottomRF{typeof(max)}, ::Type{T} where T) at ./reduce.jl:320\n\
    \   [4] reduce_empty_iter at ./reduce.jl:347 [inlined]\n   [5] reduce_empty_iter\
    \ at ./reduce.jl:346 [inlined]\n   [6] foldl_impl at ./reduce.jl:46 [inlined]\n\
    \   [7] mapfoldl_impl at ./reduce.jl:41 [inlined]\n   [8] #mapfoldl#189 at ./reduce.jl:157\
    \ [inlined]\n   [9] mapfoldl at ./reduce.jl:157 [inlined]\n   [10] #mapreduce#193\
    \ at ./reduce.jl:283 [inlined]\n   [11] mapreduce at ./reduce.jl:283 [inlined]\n\
    \   [12] maximum at ./reduce.jl:644 [inlined]\n   [13] histogram(::String) at\
    \ /tmp/tmp_byabpf7.jl:25\n   [14] top-level scope at /tmp/tmp_byabpf7.jl:48\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmp_byabpf7.jl:41\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    7      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_byabpf7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    hist = Dict{String, Int64}()\n    for i in test\n        if i in keys(hist)\n\
    \            hist[i] += 1\n        else\n            hist[i] = 1\n        end\n\
    \    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_1dmlvdq.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n\
    \   [3] top-level scope at /tmp/tmp_1dmlvdq.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp_1dmlvdq.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n\
    \   [3] top-level scope at /tmp/tmp_1dmlvdq.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp_1dmlvdq.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp_1dmlvdq.jl:33\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp_1dmlvdq.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp_1dmlvdq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmp_1dmlvdq.jl:19\n   [3] top-level scope at\
    \ /tmp/tmp_1dmlvdq.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_1dmlvdq.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_1dmlvdq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary with empty values\n    hist = Dict{String, Int64}()\n\
    \    # loop through the string\n    for letter in test\n        # if the letter\
    \ is not in the dictionary, add it with a value of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # if the letter is in the dictionary,\
    \ increment the value by 1\n        else\n            hist[letter] += 1\n    \
    \    end\n    end\n    # return the dictionary\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpswhpsj78.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n\
    \   [3] top-level scope at /tmp/tmpswhpsj78.jl:34\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpswhpsj78.jl:35\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1)\n  MethodError: Cannot `convert` an object of type Char to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Dict{String,Int64},\
    \ ::Int64, ::Char) at ./dict.jl:372\n   [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n\
    \   [3] top-level scope at /tmp/tmpswhpsj78.jl:36\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpswhpsj78.jl:37\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    b b b b a\") == Dict(\"b\" => 4)\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpswhpsj78.jl:38\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1)\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpswhpsj78.jl:39\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpswhpsj78.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    a\") == Dict(\"a\" => 1)\n  MethodError: Cannot `convert` an object of type Char\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Dict{String,Int64}, ::Int64, ::Char) at ./dict.jl:372\n  \
    \ [2] histogram(::String) at /tmp/tmpswhpsj78.jl:20\n   [3] top-level scope at\
    \ /tmp/tmpswhpsj78.jl:41\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpswhpsj78.jl:33\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswhpsj78.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1,\
    \ 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c\
    \ a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('')\
    \ == {}\n\n    \"\"\"\nfunction histogram(test::String)::Dict{String, Int64}>\
    \ \n    # create a dictionary\n    hist = Dict{String, Int64}()\n    # split the\
    \ string into an array\n    test_array = split(test)\n    # loop through the array\n\
    \    for i in test_array\n        # if the letter is not in the dictionary, add\
    \ it\n        if !haskey(hist, i)\n            hist[i] = 1\n        # if the letter\
    \ is in the dictionary, add 1 to the count\n        else\n            hist[i]\
    \ += 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwgos7kvd.jl:36\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1,\"\
    b\" => 2,\"a\" => 2) == Dict(\"b\" => 2,\"a\" => 2)\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwgos7kvd.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgos7kvd.jl:34\ntest set: Test Failed at /tmp/tmpwgos7kvd.jl:39\n\
    \  Expression: candidate(\"b b b b a\") == Dict(\"b\" => 4)\n   Evaluated: Dict(\"\
    b\" => 4,\"a\" => 1) == Dict(\"b\" => 4)\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwgos7kvd.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwgos7kvd.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgos7kvd.jl:32\n"
  exit_code: 1
  status: SyntaxError
